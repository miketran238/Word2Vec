URLPermission::getActions return normal list request header list form where name list separ comma header name list permit header separ comma white space return String::String header name empti colon separ
URLPermission::hashCode return hashcod calcul hashcod action String::String url string
SecureCacheResponse::getLocalCertificateChain return certif chain sent server handshak origin connect retriev network resourc note use use certif base cipher suit immut List::List Certificate::Certificate repres certif chain sent server certif chain sent null return
SecureCacheResponse::getServerCertificateChain return server certif chain establish part defin session origin connect retriev network resourc cach note use certif base cipher suit use non certif base cipher suit kerbero throw sslpeerunverifiedexcept immut List::List Certificate::Certificate repres server certif chain
SocketImpl::connect connect socket specifi port number specifi host timeout zero interpret infinit timeout connect block establish error occur address Socket::Socket address remot host timeout timeout valu millisecond zero timeout
SocketImpl::toString return address port socket String::String string represent socket
Authenticator::requestPasswordAuthentication ask authent regist system password first secur manag checkpermiss call netpermiss requestpasswordauthent permiss result lang securityexcept addr InetAddress::InetAddress site request author null known port port request connect protocol protocol request connect prompt prompt string user scheme authent scheme usernam password null gotten
Authenticator::requestPasswordAuthentication ask authent regist system password prefer request password hostnam case where InetAddress::InetAddress avail first secur manag checkpermiss call netpermiss requestpasswordauthent permiss result lang securityexcept host hostnam site request authent addr InetAddress::InetAddress site request authent null known port port request connect protocol protocol request connect prompt prompt string user identifi authent realm scheme authent scheme usernam password null gotten
Authenticator::requestPasswordAuthentication ask authent regist system password first secur manag checkpermiss call netpermiss requestpasswordauthent permiss result lang securityexcept host hostnam site request authent addr InetAddress::InetAddress site request author null known port port request connect protocol protocol request connect prompt prompt string user scheme authent scheme url request url caus authent reqtyp type server proxi entiti request authent usernam password null gotten
Authenticator::getRequestingSite get InetAddress::InetAddress site request author null avail InetAddress::InetAddress site request author null avail
CacheResponse::CacheResponse repres channel retriev resourc ResponseCache::ResponseCache instanc provid InputStream::InputStream return entiti bodi CacheResponse::getHeaders return associ respons header
CacheResponse::getHeaders return respons header Map::Map immut Map::Map respons header field name list field valu status line null field name
CacheResponse::getBody return respons bodi InputStream::InputStream InputStream::InputStream respons bodi access
SocketException::SocketException thrown indic error creat access Socket::Socket
DatagramSocket::getLocalAddress get local address socket bound secur manag SecurityManager::checkConnect first call host address argument see oper allow local address socket bound null socket close InetAddress::InetAddress repres address socket bound secur manag SecurityManager::checkConnect allow oper
SocketPermission::SocketPermission creat SocketPermission::SocketPermission object specifi action host express dns name numer ip address option port portrang suppli separ dns name ip address colon specifi local machin use localhost host note empti host String::String equival localhost action paramet contain comma separ list action grant specifi host port action connect listen accept resolv combin resolv automat ad specifi exampl SocketPermission::SocketPermission instanti follow host hostnam ipaddress comput option includ colon follow port port rang action action string
SocketPermissionCollection::writeObject permiss field Vector::Vector contain socketpermiss
ProxySelector::select select applic proxi base protocol access resourc destin address access resourc format uri defin follow http uri http connect https uri https connect socket hostport tcp client socket connect uri uri connect requir List::List proxi element List::List type proxi avail list contain element type repres direct connect
MulticastSocket::MulticastSocket multicast datagram socket use send receiv ip multicast packet MulticastSocket::MulticastSocket udp DatagramSocket::DatagramSocket addit capabl join group multicast host internet multicast group specifi ip address standard udp port number Class::Class ip address rang 224 239 255 255 255 inclus address 224 reserv join multicast group first creat MulticastSocket::MulticastSocket desir port invok joingroup inetaddress groupaddr join multicast group send group salut String::String msg hello InetAddress::InetAddress group inetaddress getbynam 228 MulticastSocket::MulticastSocket multicastsocket 6789 joingroup group DatagramPacket::DatagramPacket datagrampacket msg getbyt msg length group 6789 send get respons byte buf byte 1000 DatagramPacket::DatagramPacket recv datagrampacket buf buf length receiv recv ok talk leav group leavegroup group send messag multicast group subscrib recipi host port receiv messag time live rang packet see socket needn member multicast group send messag socket subscrib multicast group port receiv datagram sent host group port member group port socket relinquish membership group leavegroup inetaddress addr multipl multicastsocket subscrib multicast group port concurr receiv group datagram current applet allow use multicast socket
MulticastSocket::MulticastSocket creat MulticastSocket::MulticastSocket bound specifi socket address address null creat unbound socket secur manag SecurityManager::checkListen first call SocketAddress::SocketAddress port argument ensur oper allow result SecurityException::SecurityException socket creat call enabl reuseaddr socket option bindaddr Socket::Socket address bind null unbound socket
MulticastSocket::setTTL Set::Set default time live multicast packet sent MulticastSocket::MulticastSocket order control scope multicast ttl unsign bit quantiti rang ttl 0xff ttl time live
MulticastSocket::setTimeToLive Set::Set default time live multicast packet sent MulticastSocket::MulticastSocket order control scope multicast ttl rang ttl 255 IllegalArgumentException::IllegalArgumentException thrown multicast packet sent ttl transmit network deliv local ttl time live
MulticastSocket::setInterface Set::Set multicast network interfac behavior affect valu network interfac use multihom host inf InetAddress::InetAddress
MulticastSocket::getInterface retriev address network interfac multicast packet InetAddress::InetAddress repres address network interfac multicast packet
MulticastSocket::getNetworkInterface get multicast network interfac set multicast NetworkInterface::NetworkInterface current set
URLClassLoader::URLClassLoader construct urlclassload specifi url use default deleg parent ClassLoader::ClassLoader url search order specifi resourc first search parent loader url end assum refer directori url assum refer jar file download open secur manag first call secur manag SecurityManager::checkCreateClassLoader ensur creation loader allow url url load resourc
URLClassLoader::definePackage defin packag name ClassLoader::ClassLoader attribut contain specifi Manifest::Manifest obtain packag version seal seal packag addit url specifi sourc url packag load name packag name man Manifest::Manifest contain packag version seal url sourc url packag null newli defin Package::Package object
SocketInputStream::SocketInputStream stream extend FileInputStream::FileInputStream implement SocketInputStream::SocketInputStream note
SocketInputStream::SocketInputStream creat SocketInputStream::SocketInputStream call Socket::Socket hang owner Socket::Socket fd close impl implement socket input stream
SocketInputStream::finalize overrid final fd close Socket::Socket
DatagramSocketImpl::connect connect datagram socket remot destin associ remot address local socket datagram sent destin receiv destin overridden call nativ system connect remot destin socket connect exist unreach icmp destin unreach packet receiv address subsequ call send receiv throw PortUnreachableException::PortUnreachableException note guarante thrown address remot InetAddress::InetAddress connect port remot port number
DatagramSocketImpl::peek peek packet see updat specifi InetAddress::InetAddress address packet came InetAddress::InetAddress object port number packet came
DatagramSocketImpl::setTTL Set::Set ttl time live option ttl byte specifi ttl valu
DatagramSocketImpl::setTimeToLive Set::Set ttl time live option ttl int specifi time live valu
NoRouteToHostException::NoRouteToHostException construct NoRouteToHostException::NoRouteToHostException specifi detail messag whi remot host reach detail messag String::String give specif descript error msg detail messag
AbstractPlainDatagramSocketImpl::connect connect datagram socket remot destin associ remot address local socket datagram sent destin receiv destin address remot InetAddress::InetAddress connect port remot port number
AbstractPlainDatagramSocketImpl::setTimeToLive Set::Set ttl time live option ttl ttl set
AbstractPlainDatagramSocketImpl::setTTL Set::Set ttl time live option ttl ttl set
AbstractPlainDatagramSocketImpl::setOption set valu support set binari option Boolean::Boolean
Socket::Socket implement client socket call socket socket endpoint communic machin actual work socket perform instanc SocketImpl::SocketImpl chang socket factori creat socket implement configur creat socket appropri local firewal
Socket::Socket creat unconnect socket system default type SocketImpl::SocketImpl
Socket::Socket creat unconnect socket specifi type proxi regardless set secur manag SecurityManager::checkConnect call proxi host address port number argument result SecurityException::SecurityException exampl Socket::Socket socket proxi proxi creat plain socket ignor proxi configur Socket::Socket socket proxi proxi type sock inetsocketaddress sock mydom com 1080 creat socket connect specifi sock proxi server proxi object specifi kind proxi
Socket::Socket creat unconnect Socket::Socket user specifi SocketImpl::SocketImpl impl instanc socketimpl subclass wish use Socket::Socket
Socket::Socket creat stream socket connect specifi port number name host specifi host null equival specifi address null word equival specifi address loopback interfac specifi server socket factori factori SocketImplFactory::createSocketImpl call creat actual socket implement plain socket creat secur manag SecurityManager::checkConnect call host address port argument result SecurityException::SecurityException host host name null loopback address port port number
Socket::Socket creat stream socket connect specifi port number specifi ip address specifi socket factori factori SocketImplFactory::createSocketImpl call creat actual socket implement plain socket creat secur manag SecurityManager::checkConnect call host address port argument result SecurityException::SecurityException address ip address port port number
Socket::Socket creat socket connect specifi remot host specifi remot port Socket::Socket bind local address port suppli specifi host null equival specifi address null word equival specifi address loopback interfac local port number zero let system pick free port bind oper secur manag SecurityManager::checkConnect call host address port argument result SecurityException::SecurityException host name remot host null loopback address port remot port localaddr local address socket bound null anyloc address localport local port socket bound zero system select free port
Socket::Socket creat socket connect specifi remot address specifi remot port Socket::Socket bind local address port suppli specifi local address null equival specifi address anyloc address see local port number zero let system pick free port bind oper secur manag SecurityManager::checkConnect call host address port argument result SecurityException::SecurityException address remot address port remot port localaddr local address socket bound null anyloc address localport local port socket bound zero system select free port
Socket::Socket creat stream socket connect specifi port number name host specifi host null equival specifi address null word equival specifi address loopback interfac stream argument creat stream socket stream argument fals creat datagram socket specifi server socket factori factori SocketImplFactory::createSocketImpl call creat actual socket implement plain socket creat secur manag SecurityManager::checkConnect call host address port argument result SecurityException::SecurityException udp socket tcp ip relat socket option appli host host name null loopback address port port number stream boolean indic stream socket datagram socket
Socket::Socket creat socket connect specifi port number specifi ip address stream argument creat stream socket stream argument fals creat datagram socket specifi server socket factori factori SocketImplFactory::createSocketImpl call creat actual socket implement plain socket creat secur manag SecurityManager::checkConnect call host gethostaddress port argument result SecurityException::SecurityException udp socket tcp ip relat socket option appli host ip address port port number stream creat stream socket creat datagram socket
Socket::setSoTimeout enabl disabl specifi timeout millisecond option set non zero timeout read call InputStream::InputStream associ Socket::Socket block amount time timeout expir sockettimeoutexcept rais Socket::Socket valid option enabl prior enter block oper effect timeout timeout zero interpret infinit timeout timeout specifi timeout millisecond
Socket::setSendBufferSize set option specifi valu Socket::Socket option platform network hint size set network buffer hint applic want verifi size buffer set call size size set send buffer size valu greater
Socket::getSendBufferSize get valu option Socket::Socket buffer size platform output Socket::Socket valu option Socket::Socket
Socket::setReceiveBufferSize set option specifi valu Socket::Socket option platform network hint size set network buffer increas receiv buffer size increas perform network volum connect decreas reduc backlog incom data hint applic want verifi size buffer set call valu set tcp receiv window advert remot peer general window size modifi time socket connect receiv window larger 64k requir request socket connect remot peer case awar socket accept ServerSocket::ServerSocket call ServerSocket::ServerSocket bound local address client socket setreceivebuffers call connect socket remot peer size size set receiv buffer size valu greater
Socket::getReceiveBufferSize get valu option Socket::Socket buffer size platform input Socket::Socket valu option Socket::Socket
Socket::setTrafficClass set traffic type servic octet ip header packet sent Socket::Socket network implement ignor valu applic consid hint tc rang note internet protocol v4 valu consist integ signific bit repres valu tos octet ip packet sent socket rfc 1349 defin tos valu follow ipto lowcost 0x02 ipto reliabl 0x04 ipto throughput 0x08 ipto lowdelay 0x10 last low order bit ignor correspond mbz zero bit set bit preced field result SocketException::SocketException indic oper permit rfc 1122 section indic compliant tcp implement requir let chang tos field lifetim connect type servic field chang tcp connect establish depend implement platform applic assum chang tos field connect internet protocol v6 tc valu place sin6 flowinfo field ip header tc int valu bitset
Socket::getTrafficClass get traffic type servic ip header packet sent Socket::Socket network implement ignor traffic type servic set use return valu previous set use Socket::Socket traffic type servic set
Socket::setReuseAddress enabl disabl socket option tcp connect close connect remain timeout state period time connect close typic known time wait state 2msl wait state applic use known socket address port bind socket requir SocketAddress::SocketAddress connect timeout state involv socket address port enabl prior bind socket use allow socket bound previous connect timeout state Socket::Socket creat initi set disabl behaviour enabl disabl socket bound see defin enabl disabl socket option
Socket::close close socket thread current block oper socket throw socket close avail further network use reconnect rebound socket creat close socket close socket socket associ channel channel close jsr 51
Socket::toString convert socket String::String string represent socket
IDN::toASCII translat string unicod ascii compat encod ace defin toascii oper toascii oper fail toascii fail step fail toascii oper fail IllegalArgumentException::IllegalArgumentException thrown case input string internation domain name label individu part domain name origin toascii oper defin rfc 3490 oper singl label handl label entir domain name assum label domain name separ dot charact recogn dot 0092 u002 full stop 0092 u3002 ideograph full stop 0092 uff0 fullwidth full stop 0092 uff61 halfwidth ideograph full stop dot label separ chang 0092 u002 full stop output translat string input string process flag process flag logic flag translat String::String
IDN::toASCII translat string unicod ascii compat encod ace defin toascii oper conveni work invok argument counterpart follow input nbsp input string process translat String::String
IDN::toUnicode translat string ascii compat encod ace unicod defin tounicod oper tounicod fail case error input string return unmodifi label individu part domain name origin tounicod oper defin rfc 3490 oper singl label handl label entir domain name assum label domain name separ dot charact recogn dot 0092 u002 full stop 0092 u3002 ideograph full stop 0092 uff0 fullwidth full stop 0092 uff61 halfwidth ideograph full stop input string process flag process flag logic flag translat String::String
IDN::toUnicode translat string ascii compat encod ace unicod defin tounicod oper conveni work invok argument counterpart follow input nbsp input string process translat String::String
SocketOutputStream::SocketOutputStream stream extend FileOutputStream::FileOutputStream implement SocketOutputStream::SocketOutputStream note
SocketOutputStream::SocketOutputStream creat SocketOutputStream::SocketOutputStream call Socket::Socket hang owner Socket::Socket fd close impl socket output stream inplement
SocketOutputStream::finalize overrid final fd close Socket::Socket
ConnectException::ConnectException construct ConnectException::ConnectException specifi detail messag whi connect error occur detail messag String::String give specif descript error msg detail messag
InetSocketAddress::InetSocketAddress implement ip Socket::Socket address ip address port number pair hostnam port number case attempt made resolv hostnam resolut fail address said unresolv circumst connect proxi provid immut object socket bind connect return valu wildcard local ip address mean bind oper
InetSocketAddress::InetSocketAddress creat socket address hostnam port number attempt made resolv hostnam InetAddress::InetAddress attempt fail address flag unresolv secur manag SecurityManager::checkConnect call host name argument check permiss resolv result SecurityException::SecurityException valid port valu 65535 port number zero let system pick ephemer port bind oper hostnam host name port port number
InetSocketAddress::createUnresolved creat unresolv socket address hostnam port number attempt made resolv hostnam InetAddress::InetAddress address flag unresolv valid port valu 65535 port number zero let system pick ephemer port bind oper host host name port port number InetSocketAddress::InetSocketAddress repres unresolv socket address
InetSocketAddress::getAddress get InetAddress::InetAddress inetadress null unresolv
InetSocketAddress::getHostString return hostnam String::String form address doesn hostnam creat use liter benefit attempt revers lookup hostnam String::String represent address
InetSocketAddress::isUnresolved check address resolv hostnam couldn resolv InetAddress::InetAddress
InetSocketAddress::toString construct string represent InetSocketAddress::InetSocketAddress String::String construct call tostr InetAddress::InetAddress concaten port number colon address unresolv part colon contain hostnam string represent object
SocketImplFactory::SocketImplFactory interfac defin factori socket implement Socket::Socket ServerSocket::ServerSocket creat actual socket implement
SocketOptions::SocketOptions interfac get set socket option interfac implement socketimpl datagramsocketimpl subclass overrid interfac order support option constant specifi option interfac implement subclass SocketImpl::SocketImpl DatagramSocketImpl::DatagramSocketImpl won use type safe get set option Socket::Socket ServerSocket::ServerSocket DatagramSocket::DatagramSocket MulticastSocket::MulticastSocket
SocketOptions::getOption fetch valu option binari option return lang boolean enabl lang boolean fals disabl SocketImpl::SocketImpl Boolean::Boolean nodelay boolean getopt tcp nodelay nodelay booleanvalu tcp nodelay enabl option take particular type paramet getopt int return paramet valu els return lang boolean fals Object::Object getopt linger instanceof Integer::Integer system print linger time integ intvalu els type lang boolean fals optid int identifi option fetch valu option
SocketOptions::SO bindaddr fetch local address bind socket option set gotten socket bound creation time local bound address chang default local address socket inaddr mean local address multi host multi host use option accept connect address case ServerSocket::ServerSocket DatagramSocket::DatagramSocket specifi return address peer Socket::Socket DatagramSocket::DatagramSocket paramet option InetAddress::InetAddress option specifi constructor valid SocketImpl::SocketImpl DatagramSocketImpl::DatagramSocketImpl
SocketOptions::IP multicast Set::Set outgo interfac send multicast packet use host multipl network interfac where applic want use system default take return InetAddress::InetAddress valid multicast DatagramSocketImpl::DatagramSocketImpl
SocketOptions::SO linger specifi linger close timeout option disabl enabl immedi return close tcp Socket::Socket enabl option non zero Integer::Integer timeout mean close block transmiss acknowledg data written peer point socket close grace reach linger timeout socket close forc tcp rst enabl option timeout zero forc close specifi timeout valu exceed 65 535 reduc 65 535 valid tcp SocketImpl::SocketImpl
SocketOptions::SO timeout Set::Set timeout block Socket::Socket oper serversocket accept socketinputstream read datagramsocket receiv option set prior enter block oper take effect timeout expir oper continu block io interruptedioexcept rais Socket::Socket close case valid socket SocketImpl::SocketImpl DatagramSocketImpl::DatagramSocketImpl
SocketOptions::SO sndbuf Set::Set hint size buffer platform outgo network set suggest kernel size buffer use data sent socket get return size buffer actual platform send data socket valid socket SocketImpl::SocketImpl DatagramSocketImpl::DatagramSocketImpl
SocketOptions::SO rcvbuf Set::Set hint size buffer platform incom network set suggest kernel size buffer use data receiv socket get return size buffer actual platform receiv data socket valid socket SocketImpl::SocketImpl DatagramSocketImpl::DatagramSocketImpl
ServerSocket::ServerSocket creat server specifi port listen backlog local ip address bind bindaddr argument multi host ServerSocket::ServerSocket accept connect request address bindaddr null default accept connect local address port 65535 inclus port number mean port number automat alloc typic ephemer port rang port number retriev call secur manag call SecurityManager::checkListen port argument argument ensur oper allow result SecurityException::SecurityException backlog argument request maximum number connect socket exact semant implement specif particular implement impos maximum length choos ignor paramet altogth valu greater equal implement specif default port port number use port number automat alloc backlog request maximum length queue incom connect bindaddr local InetAddress::InetAddress server bind
ServerSocket::accept listen connect made socket accept block connect made Socket::Socket creat secur manag secur manag SecurityManager::checkAccept call getinetaddress gethostaddress getport argument ensur oper allow result SecurityException::SecurityException Socket::Socket jsr 51
ServerSocket::implAccept subclass ServerSocket::ServerSocket use overrid accept return subclass socket fooserversocket typic hand empti foosocket return ServerSocket::implAccept foosocket connect client Socket::Socket jsr 51
ServerSocket::toString return implement address implement port socket String::String secur manag set SecurityManager::checkConnect call local address argument see oper allow oper allow InetAddress::InetAddress repres address return implement address string represent socket
ServerSocket::getReceiveBufferSize get valu option ServerSocket::ServerSocket propos buffer size socket accept ServerSocket::ServerSocket note valu actual set accept socket determin call valu option Socket::Socket
NetPermission::NetPermission creat NetPermission::NetPermission object specifi name name symbol name NetPermission::NetPermission action String::String current unus null name name NetPermission::NetPermission action null
JarURLConnection::JarURLConnection url Connection::Connection archiv jar file entri jar file syntax jar url exampl jarhttp www foo com baz jar com foo quux jar url refer jar file entri jar file exampl jar url refer jar entri entri name omit url refer jar file jarhttp www foo com baz jar user cast generic urlconnect jarurlconnect know url creat jar url jar specif function exampl jarurlconnect instanc read jar file get modifi write jar file use exampl jar entri jarhttp www foo com baz jar com foo quux jar file jarhttp www foo com baz jar jar directori jarhttp www foo com baz jar com foo refer separ construct jar url url context spec rule appli context url specif pass url constructor doesn contain separ url consid refer JarFile::JarFile context url context url assum refer jar file jar directori specif begin jar directori ignor spec consid root jar file exampl context jarhttp www foo com jar jar spec baz entri txt url jarhttp www foo com jar jar baz entri txt context jarhttp www foo com jar jar baz spec entri txt url jarhttp www foo com jar jar baz entri txt context jarhttp www foo com jar jar baz spec entri txt url jarhttp www foo com jar jar entri txt
InetAddress::InetAddress repres internet protocol ip address ip address 32 bit 128 bit unsign number ip lower level protocol protocol udp tcp built ip address architectur defin instanc InetAddress::InetAddress consist ip address possibl correspond host name depend construct host name revers host name resolut address type ip address scope link local address design address singl link purpos auto address configur neighbor discoveri router site local address design address site global prefix global address uniqu internet textual represent ip address textual represent ip address address famili specif ipv4 address format pleas refer inet4address format ipv6 address format pleas refer inet6address format affect ipv4 ipv6 address host Attributes::Name resolut host name ip address resolut accomplish use combin local machin configur network name servic domain Attributes::Name System::System dns network servic nis particular name servic default local machin configur host name correspond ip address return revers name resolut mean ip address host associ ip address return InetAddress::InetAddress provid resolv host name ip address versa InetAddress::InetAddress cach InetAddress::InetAddress cach store success unsuccess host name resolut default secur manag instal order protect dns spoof attack result posit host name resolut cach forev secur manag instal default behavior cach entri finit implement depend period time result unsuccess host name resolut cach period time 10 improv perform default behavior desir secur properti set time live ttl valu posit cach system admin configur negat cach ttl valu secur properti control ttl valu posit negat host name resolut cach networkaddress cach ttl indic cach polici success name lookup name servic valu specifi integ indic number cach success lookup default set cach implement specif period time valu indic cach forev networkaddress cach negat ttl default 10 indic cach polici un success name lookup name servic valu specifi integ indic number cach failur un success lookup valu indic cach valu indic cach forev
InetAddress::InetAddress Constructor::Constructor socket accept creat empti InetAddress::InetAddress fill accept InetAddress::InetAddress put address cach creat name
InetAddress::isMulticastAddress util routin check InetAddress::InetAddress ip multicast address boolean indic InetAddress::InetAddress ip multicast address
InetAddress::isAnyLocalAddress util routin check InetAddress::InetAddress wildcard address boolean indic inetaddress wildcard address
InetAddress::isLoopbackAddress util routin check InetAddress::InetAddress loopback address boolean indic InetAddress::InetAddress loopback address fals
InetAddress::isLinkLocalAddress util routin check InetAddress::InetAddress link local address boolean indic InetAddress::InetAddress link local address fals address link local unicast address
InetAddress::isSiteLocalAddress util routin check InetAddress::InetAddress site local address boolean indic InetAddress::InetAddress site local address fals address site local unicast address
InetAddress::isReachable test address reachabl effort made implement reach host firewal server configur block request result unreach status specif port access typic implement use icmp echo request privileg obtain establish tcp connect port echo destin host timeout valu millisecond indic maximum amount time take oper time get answer host deem unreach negat valu result IllegalArgumentException::IllegalArgumentException thrown timeout time millisecond call abort boolean indic address reachabl
InetAddress::isReachable test address reachabl effort made implement reach host firewal server configur block request result unreach status specif port access typic implement use icmp echo request privileg obtain establish tcp connect port echo destin host network interfac ttl paramet let caller specifi network interfac test go maximum number hop packet go negat valu ttl result IllegalArgumentException::IllegalArgumentException thrown timeout valu millisecond indic maximum amount time take oper time get answer host deem unreach negat valu result IllegalArgumentException::IllegalArgumentException thrown netif NetworkInterface::NetworkInterface test null interfac ttl maximum number hop default timeout time millisecond call abort boolean indic address reachabl
InetAddress::getHostName get host name ip address InetAddress::InetAddress creat host name host name rememb return revers name lookup perform result return base system configur name lookup servic lookup name servic requir call secur manag SecurityManager::checkConnect first call hostnam argument see oper allow oper allow return textual represent ip address host name ip address oper allow secur check textual represent ip address
InetAddress::getHostName return hostnam address host equal null address refer local machin avail network address packag privat SocketPermission::SocketPermission make call secur check secur manag first call SecurityManager::checkConnect hostnam argument see call allow know hostnam ip address connect host oper allow return textual represent ip address host name ip address oper allow secur check textual represent ip address check make secur check
InetAddress::getAddress return raw ip address InetAddress::InetAddress object result network byte order highest order byte address getaddress raw ip address object
InetAddress::getHostAddress return ip address string textual raw ip address string format
InetAddress::equals compar object specifi object result argument null repres ip address object instanc InetAddress::InetAddress repres ip address length byte array return getaddress array compon byte array obj object compar object fals
InetAddress::toString convert ip address String::String string return form hostnam liter ip address host name unresolv revers name servic lookup perform hostnam part repres empti string string represent ip address
InetAddress::getByAddress creat InetAddress::InetAddress base host name ip address name servic check valid address host name machin name sun com textual represent ip address valid check host name addr specifi ipv4 address instanc Inet4Address::Inet4Address return instanc Inet6Address::Inet6Address return ipv4 address byte array byte ipv6 byte array 16 byte host specifi host addr raw ip address network byte order InetAddress::InetAddress object creat raw ip address
InetAddress::getByName determin ip address host given host name host name machin name sun com textual represent ip address liter ip address suppli valid address format check host specifi liter ipv6 address form defin rfc 2732 liter ipv6 address format defin rfc 2373 accept ipv6 scope address support see descript ipv6 scope address host null InetAddress::InetAddress repres address loopback interfac return see section nbsp section nbsp host specifi host null ip address given host name
InetAddress::getAllByName given name host return array ip address base configur name servic system host name machin name sun com textual represent ip address liter ip address suppli valid address format check host specifi liter ipv6 address form defin rfc 2732 liter ipv6 address format defin rfc 2373 accept liter ipv6 address qualifi append scope zone identifi scope syntax usag scope describ host null InetAddress::InetAddress repres address loopback interfac return see section nbsp section nbsp secur manag host null host length equal zero secur manag SecurityManager::checkConnect call hostnam argument see oper allow host name host null array ip address given host name
InetAddress::getLoopbackAddress return loopback address InetAddress::InetAddress return repres ipv4 loopback address 127 ipv6 loopback address ::1 ipv4 loopback address return form 127 InetAddress::InetAddress loopback instanc
InetAddress::checkNumericZone check liter address string nn append return numer valu nn string repres Charset::displayName current avail NetworkInterface::NetworkInterface
InetAddress::getByAddress return InetAddress::InetAddress object given raw ip address argument network byte order highest order byte address getaddress doesn block revers name servic lookup perform ipv4 address byte array byte ipv6 byte array 16 byte addr raw ip address network byte order InetAddress::InetAddress object creat raw ip address
InetAddress::getLocalHost return address local host achiev retriev name host system resolv name InetAddress::InetAddress note resolv address cach period time secur manag SecurityManager::checkConnect call local host name argument see oper allow oper allow InetAddress::InetAddress repres loopback address return address local host
StandardSocketOptions::SO broadcast allow transmiss broadcast datagram valu socket option Boolean::Boolean repres option enabl disabl option specif datagram orient socket send broadcast address socket option enabl socket send broadcast datagram initi valu socket option fals socket option enabl disabl time oper system requir virtual machin start implement specif privileg enabl option send broadcast datagram
StandardSocketOptions::SO keepal keep connect aliv valu socket option Boolean::Boolean repres option enabl disabl keepal option enabl oper system use keep aliv mechan period probe end connect connect idl exact semant keep aliv mechan system depend therefor unspecifi initi valu socket option fals socket option enabl disabl time
StandardSocketOptions::SO sndbuf size socket send buffer valu socket option Integer::Integer size socket send buffer byte socket send buffer output buffer network implement increas volum connect valu socket option hint implement size buffer actual size differ socket option queri retriev actual size datagram orient socket size send buffer limit size datagram sent socket datagram larger buffer size sent discard system depend initi default size socket send buffer rang allow valu system depend negat size allow attempt set socket send buffer larger maximum size caus set maximum size implement allow socket option set socket bound connect implement allow socket send buffer chang socket bound system depend
StandardSocketOptions::SO rcvbuf size socket receiv buffer valu socket option Integer::Integer size socket receiv buffer byte socket receiv buffer input buffer network implement increas volum connect decreas limit backlog incom data valu socket option hint implement size buffer actual size differ datagram orient socket size receiv buffer limit size datagram receiv datagram larger buffer size receiv system depend increas socket receiv buffer case where datagram arriv burst faster process case stream orient socket tcp ip protocol size socket receiv buffer advertis size tcp receiv window remot peer initi default size socket receiv buffer rang allow valu system depend negat size allow attempt set socket receiv buffer larger maximum size caus set maximum size implement allow socket option set socket bound connect implement allow socket receiv buffer chang socket bound system depend
StandardSocketOptions::SO reuseaddr use address valu socket option Boolean::Boolean repres option enabl disabl exact semant socket option socket type system depend case stream orient socket socket option determin socket bound socket address previous connect involv socket address time wait state implement where semant differ socket option requir enabl order bind socket previous connect state implement choos ignor option datagram orient socket socket option allow multipl program bind address option enabl socket internet protocol ip multicast implement allow socket option set socket bound connect chang valu socket option socket bound effect default valu socket option system depend
StandardSocketOptions::SO linger linger close data valu socket option Integer::Integer control action taken unsent data queu socket close socket invok valu socket option zero greater repres timeout valu known linger interv linger interv timeout close block oper system attempt transmit unsent data decid unabl transmit data valu socket option zero option disabl case close wait unsent data transmit oper system transmit unsent data connect close socket option intend use socket configur mode behavior close option enabl non block socket defin initi valu socket option negat valu mean option disabl option enabl linger interv chang time maximum valu linger interv system depend set linger interv valu greater maximum valu caus linger interv set maximum valu
StandardSocketOptions::IP tos Window::Type Provider::Service tos octet internet protocol ip header valu socket option Integer::Integer repres valu tos octet ip packet sent socket socket interpret tos octet network specif defin further tos octet found valu socket option hint implement ignor valu ignor specif valu initi default valu tos field tos octet implement specif typic datagram orient socket option configur time socket bound valu octet send subsequ datagram system depend option queri chang prior bind socket behavior socket option stream orient socket socket defin releas
StandardSocketOptions::IP multicast ttl time live internet protocol ip multicast datagram valu socket option Integer::Integer rang hop limit number hop datagram pass expir network ipv6 socket system depend option set time live multicast datagram sent ipv4 address initi default valu time live set typic implement allow socket option set socket bound socket option queri chang prior bind socket system depend
StandardSocketOptions::IP multicast loop loopback internet protocol ip multicast datagram valu socket option Boolean::Boolean control loopback multicast datagram valu socket option repres option enabl disabl exact semant socket option system depend particular system depend loopback appli multicast datagram sent socket receiv socket socket system depend option appli multicast datagram sent ipv4 address initi default valu socket option implement allow socket option set socket bound socket option queri chang prior bind socket system depend
StandardSocketOptions::TCP nodelay disabl nagl algorithm valu socket option Boolean::Boolean repres option enabl disabl socket option specif stream orient socket use tcp ip protocol tcp ip use algorithm known nagl algorithm coalesc segment improv network effici default valu socket option fals socket option enabl case where known coalesc impact perform socket option enabl time word nagl algorithm disabl option enabl system depend subsequ disabl invok setopt disabl option effect
AbstractPlainSocketImpl::AbstractPlainSocketImpl default Socket::Socket implement implement implement secur check note
AbstractPlainSocketImpl::getInputStream get InputStream::InputStream socket
DatagramPacket::setData Set::Set data buffer packet set data length offset packet buf buffer set packet offset offset data length length data length buffer receiv data
DatagramPacket::setAddress set ip address machin datagram sent iaddr InetAddress::InetAddress
DatagramPacket::setData Set::Set data buffer packet offset DatagramPacket::DatagramPacket set length set length buf buf buffer set packet
DatagramPacket::setLength Set::Set length packet length packet number byte packet data buffer sent number byte packet data buffer receiv data length lesser equal offset length packet buffer length length set packet
Inet4Address::Inet4Address repres internet protocol version ipv4 address defin textual represent ip address textual represent ipv4 address input take form part specifi interpret byte data assign byte ipv4 address part address specifi last part interpret 16 bit quantiti place byte network address make part address format conveni specifi Class::Class work address 128 host part address suppli last part interpret 24 bit quantiti place byte network address make part address format conveni specifi Class::Class network address host part given valu store network address byte rearrang return textual represent output valu first form dot quad string scope multicast address histor ipv4 ttl field ip header doubl multicast scope field ttl mean node local mean link local 32 mean site local 64 mean region local 128 mean contin local 255 global administr scope prefer pleas refer
Inet4Address::writeReplace replac object serial InetAddress::InetAddress object altern object serial
Inet4Address::isMulticastAddress util routin check InetAddress::InetAddress ip multicast address ip multicast address Class::Class address first bit address 1110 boolean indic InetAddress::InetAddress ip multicast address
Inet4Address::isAnyLocalAddress util routin check InetAddress::InetAddress wildcard address boolean indic inetaddress wildcard address
Inet4Address::isLoopbackAddress util routin check InetAddress::InetAddress loopback address boolean indic InetAddress::InetAddress loopback address fals
Inet4Address::isLinkLocalAddress util routin check InetAddress::InetAddress link local address boolean indic InetAddress::InetAddress link local address fals address link local unicast address
Inet4Address::isSiteLocalAddress util routin check InetAddress::InetAddress site local address boolean indic InetAddress::InetAddress site local address fals address site local unicast address
Inet4Address::getAddress return raw ip address InetAddress::InetAddress object result network byte order highest order byte address getaddress raw ip address object
Inet4Address::equals compar object specifi object result argument null repres ip address object instanc InetAddress::InetAddress repres ip address length byte array return getaddress array compon byte array obj object compar object fals
HttpURLConnection::HttpURLConnection urlconnect support http specif featur see spec detail httpurlconnect instanc make singl request network connect http server transpar share instanc call close InputStream::InputStream OutputStream::OutputStream httpurlconnect request free network resourc associ instanc effect share persist connect call disconnect close socket persist connect idl time http protocol handler set access System::System Properties::Properties cover secur permiss secur manag instal call result attempt open connect caller possess connect host port combin destin url permit request automat redirect enabl request redirect destin caller permiss connect redirect host url
HttpURLConnection::HttpURLConnection Constructor::Constructor httpurlconnect url
HttpURLConnection::setRequestMethod Set::Set url request get post head option put delet trace legal subject protocol restrict default get http
HttpURLConnection::getErrorStream return error stream connect fail server sent use data nonetheless typic exampl http server respond 404 caus FileNotFoundException::FileNotFoundException thrown connect server sent html page suggest caus connect initi connect connect server error connect server error error data sent return null default error stream null error connect connect server sent use data
HttpURLConnection::HTTP bad http status 405 Method::Method allow
NetworkInterface::NetworkInterface repres network interfac made name list ip address assign interfac identifi local interfac multicast group join interfac normal known name le0
NetworkInterface::NetworkInterface return NetworkInterface::NetworkInterface object index set name null set interfac MulticastSocket::MulticastSocket caus kernel choos interfac send multicast packet
NetworkInterface::getInterfaceAddresses get List::List subset interfaceaddress network interfac secur manag SecurityManager::checkConnect call InetAddress::InetAddress InterfaceAddress::InterfaceAddress interfaceaddress where SecurityManager::checkConnect doesn throw SecurityException::SecurityException return List::List List::List object subset interfaceaddresss network interfac
NetworkInterface::getParent return parent NetworkInterface::NetworkInterface interfac subinterfac null physic non virtual interfac parent NetworkInterface::NetworkInterface interfac attach
NetworkInterface::getDisplayName get display name network interfac display name human readabl String::String describ network devic non empti string repres display name network interfac null display name avail
NetworkInterface::getByName search network interfac specifi name name name network interfac NetworkInterface::NetworkInterface specifi name null network interfac specifi name
NetworkInterface::getByIndex get network interfac given index index integ index interfac NetworkInterface::NetworkInterface obtain index null interfac index system
NetworkInterface::getByInetAddress conveni search network interfac specifi internet protocol ip address bound specifi ip address bound multipl network interfac defin network interfac return addr InetAddress::InetAddress search NetworkInterface::NetworkInterface null network interfac specifi ip address
NetworkInterface::getHardwareAddress return hardwar address mac interfac access given current privileg secur manag set caller permiss getnetworkinform byte array contain address null address doesn exist access secur manag set caller permiss netpermiss getnetworkinform
NetworkInterface::equals compar object specifi object result argument null repres NetworkInterface::NetworkInterface object instanc NetworkInterface::NetworkInterface repres NetworkInterface::NetworkInterface name addr obj object compar object fals
ContentHandler::ContentHandler abstract ContentHandler::ContentHandler superclass read Object::Object urlconnect general call getcont instead call getcont url urlconnect content handler factori instanc implement interfac ContentHandlerFactory::ContentHandlerFactory set call setcontenthandl call String::String give mime type object receiv socket factori return instanc subclass ContentHandler::ContentHandler getcont call creat object content handler found urlconnect look content handler user defin set place default look sun www content user defin vertic delimit set prefix search addit defin content handler pkgs properti name form load content handler perform classload deleg chain caller jvm RuntimePermission::RuntimePermission getclassload
URLDecoder::URLDecoder util html form decod contain static decod String::String www form urlencod mime format convers process revers urlencod assum charact encod string follow quot quot quot quot quot quot quot quot quot quot quot quot quot quot quot quot quot quot quot quot charact quot quot allow interpret start escap sequenc rule appli convers alphanumer charact quot quot quot quot quot quot quot quot quot quot quot quot remain charact quot quot quot quot quot quot quot quot remain sign quot quot convert space charact quot nbsp quot sequenc form xy treat repres byte where xy digit hexadecim represent bit substr contain byte sequenc consecut replac charact encod result consecut byte encod scheme decod charact specifi unspecifi default encod platform decod deal illeg string leav illeg charact throw approach decod take implement
URLDecoder::decode decod www form urlencod string platform default encod determin charact repres consecut sequenc form xy String::String decod newli decod String::String
URLDecoder::decode decod www form urlencod string use specif encod scheme suppli encod determin charact repres consecut sequenc form xy note state utf introduc incompat String::String decod enc name support newli decod String::String
URL::URL Class::Class url repres uniform resourc locat pointer resourc world wide web resourc file directori refer complic object queri databas search engin type url format found general url broken part consid exampl url indic protocol use http hypertext transfer protocol resid host machin name www exampl com host machin name doc resource1 html exact mean name host machin protocol depend host depend normal resid file generat fli compon url call path compon url option specifi port port number tcp connect made remot host machin port specifi default port protocol instead exampl default port http 80 altern port specifi syntax url defin amend liter ipv6 address format support scope syntax usag scope describ url append fragment known ref refer fragment indic sharp sign charact follow charact exampl fragment technic part url indic specifi resourc retriev specif interest part document tag chapter1 attach mean tag resourc specif specifi relat url contain reach resourc relat url relat url frequent html page exampl content url contain relat url shorthand relat url specifi compon url protocol host name port number miss valu inherit fulli specifi url file compon specifi option fragment inherit url encod decod url compon accord escap mechan defin rfc2396 respons caller encod field escap prior call url decod escap field return url furthermor url knowledg url escap recognis equival encod decod form url exampl url consid equal note perform escap compon field circumst recommend manag encod decod url use convert use html form encod encod scheme defin rfc2396
URL::URL creat url object String::String represent constructor equival call argument constructor null first argument spec String::String pars url
URL::URL creat url pars given spec specifi context url creat given context url spec argument describ rfc2396 quot uniform resourc identifi generic syntax quot refer pars scheme author path queri fragment part path compon empti scheme author queri compon undefin url refer current document fragment queri part spec url scheme compon defin given spec match scheme context url creat absolut url base spec scheme compon inherit context url author compon spec spec treat absolut spec author path replac context author path author compon absent spec author url inherit context spec path compon begin slash charact quot quot path treat absolut spec path replac context path path treat relat path append context path describ rfc2396 case path canonic remov directori chang made occurr quot quot quot quot detail descript url pars refer rfc2396 context context pars specif spec String::String pars url
URL::URL creat url pars given spec specifi handler specifi context handler null pars occur argument constructor context context pars specif spec String::String pars url handler stream handler url
URL::getFile get file name url return file portion getpath concaten valu getqueri queri portion getpath return ident result file name url empti string exist
URL::openConnection return instanc repres connect remot object refer url instanc creat time invok protocol handler url note urlconnect instanc establish actual network connect creation happen call url protocol http jar exist urlconnect subclass belong packag subpackag lang io util connect return subclass exampl http httpurlconnect return jar jarurlconnect return link url
URL::openConnection connect made specifi proxi protocol handler support prox ignor proxi paramet make normal connect invok preempt system default ProxySelector::ProxySelector set proxi Proxy::Proxy connect made direct connect desir proxi proxi specifi urlconnect url
URL::openStream open connect url return InputStream::InputStream read connect shorthand input stream read url connect
InterfaceAddress::getAddress return InetAddress::InetAddress address InetAddress::InetAddress address
InterfaceAddress::getBroadcast return InetAddress::InetAddress broadcast address InterfaceAddress::InterfaceAddress ipv4 network broadcast address therefor case ipv6 network null return InetAddress::InetAddress repres broadcast address null broadcast address
InterfaceAddress::equals compar object specifi object result argument null repres interfac address object instanc InterfaceAddress::InterfaceAddress repres address InetAddress::InetAddress prefix length broadcast obj object compar object fals
InterfaceAddress::toString convert interfac address String::String string return form InetAddress::InetAddress prefix length broadcast address string represent interfac address
HttpCookie::HttpCookie construct cooki specifi name valu name conform rfc 2965 mean contain ascii alphanumer charact contain comma semicolon white space begin charact cooki name chang creation valu server choos send valu interest server cooki valu chang creation setvalu default cooki creat accord rfc 2965 cooki specif version chang HttpCookie::setVersion name String::String specifi name cooki valu String::String specifi valu cooki
HttpCookie::parse construct cooki set cooki set cookie2 header string rfc 2965 section set cookie2 syntax indic header line contain cooki definit static util instead constructor header String::String specifi set cooki header header start set cooki set cookie2 token lead token List::List cooki pars header line string
HttpCookie::setComment specifi comment describ cooki purpos comment use browser cooki user comment support netscap version cooki purpos String::String specifi comment display user
HttpCookie::getComment return comment describ purpos cooki null cooki comment String::String contain comment null
HttpCookie::setCommentURL specifi comment url describ cooki purpos comment url use browser cooki user comment url rfc 2965 purpos String::String specifi comment url display user
HttpCookie::getCommentURL return comment url describ purpos cooki null cooki comment url String::String contain comment url null
HttpCookie::setPortlist specifi portlist cooki restrict port cooki sent cooki header port String::String specifi port list comma separ seri digit
HttpCookie::getPortlist return port list attribut cooki String::String contain port list null
HttpCookie::setDomain specifi domain cooki form domain name specifi rfc 2965 domain name begin dot foo com mean cooki visibl server specifi domain Attributes::Name System::System dns zone exampl www foo com foo com default cooki return server sent pattern String::String contain domain name cooki visibl form accord rfc 2965
HttpCookie::getDomain return domain name set cooki form domain name set rfc 2965 String::String contain domain name
HttpCookie::setPath specifi path cooki client return cooki cooki visibl page directori specifi page directori subdirectori cooki path includ servlet set cooki exampl catalog make cooki visibl directori server catalog consult rfc 2965 avail internet set path name cooki uri String::String specifi path
HttpCookie::getPath return path server browser return cooki cooki visibl subpath server String::String specifi path contain servlet name exampl catalog
HttpCookie::getName return name cooki name chang creation String::String specifi cooki name
HttpCookie::setValue assign valu cooki cooki creat use binari valu want use base64 encod version cooki valu contain white space bracket parenthes equal sign comma doubl quot slash question mark sign colon semicolon empti valu behav browser newvalu String::String specifi valu
HttpCookie::getValue return valu cooki String::String contain cooki valu
Proxy::NO proxi proxi set repres direct connect basic tell protocol handler use proxi instanc creat socket bypass global proxi set sock Socket::Socket socket proxi proxi
Proxy::toString construct string represent Proxy::Proxy String::String construct call tostr type concaten tostr result address type direct string represent object
URLConnection::URLConnection abstract urlconnect superclass repres communic link url instanc read write resourc referenc url general creat connect url multistep process gt time connect object creat invok openconnect url setup paramet general request properti manipul actual connect remot object made use connect remot object becom avail header field content remot object access setup paramet modifi use URLConnection::setAllowUserInteraction setdoinput setdooutput setifmodifiedsinc URLConnection::setUseCaches general request properti modifi use URLConnection::setRequestProperty default valu allowuserinteract usecach paramet set use URLConnection::setDefaultAllowUserInteraction URLConnection::setDefaultUseCaches set correspond get retriev valu paramet general request properti specif paramet general request properti applic protocol specif access header field content connect made remot object getcont getheaderfield getinputstream getoutputstream header field access frequent URLConnection::getContentEncoding URLConnection::getContentLength URLConnection::getContentType getdat URLConnection::getExpiration getlastmodif provid conveni access field URLConnection::getContentType getcont determin type remot object subclass find conveni overrid URLConnection::getContentType common case pre connect paramet general request properti ignor pre connect paramet request properti default sensibl valu client interfac interest getinputstream getcont mirror url conveni request properti header field http connect found invok close InputStream::InputStream OutputStream::OutputStream urlconnect request free network resourc associ instanc particular protocol specif specifi behaviour
URLConnection::URLConnection construct url connect specifi url connect object referenc url creat url specifi url
URLConnection::getHeaderFields return unmodifi Map::Map header field Map::Map key string repres respons header field name Map::Map valu unmodifi List::List string repres correspond field valu Map::Map header field
URLConnection::getContent retriev content url connect Class::Class array indic request type object fetch first match type specifi array null request type support instanceof oper determin specif kind object return
URLConnection::toString return String::String represent url connect string represent urlconnect
URLConnection::setDoInput set valu doinput field urlconnect specifi valu url connect input output Set::Set doinput flag intend use url connect input fals default doinput valu
URLConnection::setDoOutput set valu dooutput field urlconnect specifi valu url connect input output Set::Set dooutput flag intend use url connect output fals default fals dooutput valu
URLConnection::setAllowUserInteraction Set::Set valu allowuserinteract field urlconnect allowuserinteract valu
URLConnection::getRequestProperties return unmodifi Map::Map general request properti connect Map::Map key string repres request header field name Map::Map valu unmodifi List::List string repres correspond field valu Map::Map general request properti connect
URLConnection::checkfpx check flashpix imag data InputStream::InputStream return stream flashpix data fals call stream check contain microsoft structur storag data
URLEncoder::URLEncoder util html form encod contain static convert String::String www form urlencod mime format html form encod consult html specif encod String::String rule appli alphanumer charact quot quot quot quot quot quot quot quot quot quot quot quot remain charact quot quot quot quot quot quot quot quot remain space charact quot nbsp quot convert sign quot quot charact unsaf first convert byte use encod scheme byte repres charact string quot xy quot where xy digit hexadecim represent byte recommend encod scheme use utf compat reason encod specifi default encod platform exampl use utf encod scheme string quot string 252 foo quot get convert quot string c3 bc 40foo quot utf charact 252 encod byte PageAttributes::C3 hex bc hex charact encod byte 40 hex
URLEncoder::encode translat string www form urlencod format use platform default encod encod scheme obtain byte unsaf charact String::String translat translat String::String
URLEncoder::encode translat string www form urlencod format use specif encod scheme use suppli encod scheme obtain byte unsaf charact note state utf introduc incompat String::String translat enc name support translat String::String
URI::URI construct hierarch uri given compon scheme given path given empti begin slash charact compon uri undefin pass null correspond paramet case port paramet pass constructor first build uri string given compon accord rule specifi section nbsp step nbsp 7 initi result string empti scheme given append result follow colon charact user host port given string append user given append follow commerci charact charact unreserv punct escap categori host given append host liter ipv6 address enclos squar bracket squar bracket ad port number given colon charact append follow port number decim path given append charact unreserv punct escap categori equal slash charact commerci charact quot queri given question mark charact append follow queri charact quot final fragment given hash charact append follow fragment charact legal uri charact quot result uri string pars invok constructor invok result caus thrown scheme scheme name userinfo user name author host host name port port number path Path::Path queri queri fragment fragment
URI::URI construct hierarch uri given compon scheme given path given empti begin slash charact compon uri undefin pass null correspond paramet constructor first build uri string given compon accord rule specifi section nbsp step nbsp 7 initi result string empti scheme given append result follow colon charact author given string append follow author author contain liter ipv6 address address enclos squar bracket charact unreserv punct escap categori equal commerci charact path given append charact unreserv punct escap categori equal slash charact commerci charact quot queri given question mark charact append follow queri charact quot final fragment given hash charact append follow fragment charact legal uri charact quot result uri string pars invok constructor invok result caus thrown scheme scheme name author author path Path::Path queri queri fragment fragment
URI::URI construct hierarch uri given compon compon undefin pass null conveni constructor work invok seven argument constructor follow scheme null host path null fragment scheme scheme name host host name path Path::Path fragment fragment
URI::create creat uri pars given string conveni factori work invok constructor thrown constructor caught wrap object thrown use situat where known given string legal uri exampl uri constant declar program consid program error string pars constructor throw situat where uri construct user input sourc prone error str string pars uri uri
URI::compareTo compar uri object uri compar correspond compon uri compon undefin defin first consid note string compon order accord natur case sensit order defin String::String compon subject encod compar compar raw form encod form order uri defin follow uri scheme order accord order scheme regard case hierarch uri consid opaqu uri ident scheme opaqu uri ident scheme order accord order scheme specif part opaqu uri ident scheme scheme specif part order accord order fragment hierarch uri ident scheme order accord order author compon author compon server base uri order accord user compon compon ident uri order accord order host regard case host ident uri order accord order port author compon registri base uri order accord order author compon final hierarch uri ident scheme author compon order accord order path path ident order accord order queri queri ident order accord order fragment satisfi general contract object uri compar negat integ zero posit integ uri equal greater given uri
URLStreamHandler::parseURL pars string represent url url object inherit context copi url argument parseurl urlstreamhandl pars string represent http specif url protocol famili similar pars stream protocol handler protocol syntax overrid routin url receiv result pars spec spec String::String repres url pars start charact index begin pars specifi determin protocol name limit charact posit stop pars end string posit charact sharp sign indic anchor
URLStreamHandler::getHostAddress get ip address host empti host field dns failur result null return url object InetAddress::InetAddress repres host ip address
URLStreamHandler::toExternalForm convert url specif protocol String::String url string represent url argument
SocketAddress::SocketAddress repres Socket::Socket address protocol attach abstract meant subclass specif protocol depend implement provid immut object socket bind connect return valu
Inet6Address::Inet6Address repres internet protocol version ipv6 address defin textual represent ip address textual represent ipv6 address input take form prefer form xxxxxxxx where hexadecim valu eight 16 bit piec address full form exampl note necessari write lead zero individu field numer field describ due alloc style ipv6 address common address contain string zero bit order make write address contain zero bit easier syntax avail compress zero use :: indic multipl group 16 bit zero :: appear address :: compress lead trail zero address exampl altern form conveni deal mix environ ipv4 ipv6 node xxxxxxd where hexadecim valu order 16 bit piec address decim valu low order bit piec standard ipv4 represent address exampl where ::FFFF:d ::d respect general form ipv4 map ipv6 address ipv4 compat ipv6 address note ipv4 portion form form invalid form valid unconvent represent ipv4 compat ipv6 address ::d correspond general ipv6 address 0000000d return textual represent output valu full form Inet6Address::Inet6Address return full form unambigu combin textual data ipv6 address textual represent ipv6 scope address textual represent ipv6 address describ extend specifi ipv6 scope address extens basic address architectur describ draft ietf ipngwg scope arch 04 txt link local site local address non global host destin address reachabl interfac origin system case origin system said connect multipl zone scope order disambigu intend destin zone append zone identifi scope ipv6 address general format specifi scope follow ipv6 address scope ipv6 address liter ipv6 address describ scope refer interfac local system specifi numer identifi posit integ identifi particular interfac scope understood system numer valu determin administr tool system interfac multipl valu scope scope unspecifi default valu zero string exact string return particular interfac question Inet6Address::Inet6Address creat numer scope determin time object creat queri relev networkinterfac note numer scope retriev Inet6Address::Inet6Address instanc return NetworkInterface::NetworkInterface find current scope configur system
Inet6Address::writeObject default behavior overridden order write scope ifnam field String::String NetworkInterface::NetworkInterface serializ
Inet6Address::isMulticastAddress util routin check InetAddress::InetAddress ip multicast address 11111111 start address identifi address multicast address boolean indic InetAddress::InetAddress ip multicast address
Inet6Address::isAnyLocalAddress util routin check InetAddress::InetAddress wildcard address boolean indic inetaddress wildcard address
Inet6Address::isLoopbackAddress util routin check InetAddress::InetAddress loopback address boolean indic InetAddress::InetAddress loopback address fals
Inet6Address::isLinkLocalAddress util routin check InetAddress::InetAddress link local address boolean indic InetAddress::InetAddress link local address fals address link local unicast address
Inet6Address::isSiteLocalAddress util routin check InetAddress::InetAddress site local address boolean indic InetAddress::InetAddress site local address fals address site local unicast address
Inet6Address::getAddress return raw ip address InetAddress::InetAddress object result network byte order highest order byte address getaddress raw ip address object
Inet6Address::equals compar object specifi object result argument null repres ip address object instanc InetAddress::InetAddress repres ip address length byte array return getaddress array compon byte array obj object compar object fals
Inet6Address::isIPv4CompatibleAddress util routin check InetAddress::InetAddress ipv4 compat ipv6 address boolean indic InetAddress::InetAddress ipv4 compat ipv6 address fals address ipv4 address
ResponseCache::get retriev cach respons base request uri request request header typic call protocol handler send request get network resourc cach respons return resourc instead uri uri refer request network resourc rqstmethod String::String repres request rqstheader Map::Map request header field name list field valu repres current request header CacheResponse::CacheResponse instanc avail cach null
BindException::BindException construct BindException::BindException specifi detail messag whi bind error occur detail messag String::String give specif descript error msg detail messag
CookieHandler::get get applic cooki cooki cach specifi uri request header uri pass argument specifi intend use cooki particular scheme reflect cooki sent http https context javascript host part reflect destin cooki origin case javascript implement take account uri cooki attribut secur set determin return http protocol implement make call request header relat choos cooki ad request sent uri uri repres intend use cooki requesthead Map::Map request header field name list field valu repres current request header immut map state manag header field name cooki cookie2 list cooki contain state
FileNameMap::getContentTypeFor get mime type specifi file name filenam specifi file name String::String indic mime type specifi file name
Clob::Clob map trade program languag sql clob type sql clob built type store Character::Character Object::Object column valu row databas tabl default driver implement Clob::Clob object use sql locat clob mean Clob::Clob object contain logic pointer sql clob data data Clob::Clob object valid durat transact creat Clob::Clob interfac provid get length sql clob Character::Character Object::Object valu materi clob valu client search substr clob object clob valu interfac getclob setclob allow programm access sql clob valu addit interfac updat clob valu Clob::Clob interfac fulli implement jdbc driver support data type
Clob::getSubString retriev copi specifi substr clob valu design Clob::Clob object substr begin posit pos length consecut charact pos first charact substr extract first charact posit length number consecut charact copi valu length greater String::String specifi substr clob valu design Clob::Clob object
Clob::setString write given String::String clob valu Clob::Clob object design posit pos string overwrit exist charact Clob::Clob object start posit pos end Clob::Clob valu reach write given string length Clob::Clob valu increas accommod extra charact note valu specifi pos greater length clob valu behavior undefin jdbc driver throw SQLException::SQLException driver support oper pos posit start write clob valu Clob::Clob object repres first posit str string written clob valu Clob::Clob design number charact written
SQLNonTransientConnectionException::SQLNonTransientConnectionException subclass thrown sqlstate valu 08 vendor specifi condit indic connect oper fail succeed oper retri caus failur correct pleas consult driver vendor document vendor specifi condit Exception::Exception thrown
Statement::Statement object execut static sql statement return result produc default ResultSet::ResultSet object Statement::Statement object open time therefor read ResultSet::ResultSet object interleav read generat Statement::Statement object execut Statement::Statement interfac implicit close current ResultSet::ResultSet object statement open exist
Statement::executeQuery execut given sql statement return singl ResultSet::ResultSet object note call PreparedStatement::PreparedStatement CallableStatement::CallableStatement sql sql statement sent databas typic static sql select statement ResultSet::ResultSet object contain data produc given queri null
Statement::executeUpdate execut given sql statement Event::INSERT PaintEvent::UPDATE delet statement sql statement return sql ddl statement note call PreparedStatement::PreparedStatement CallableStatement::CallableStatement sql sql data manipul languag dml statement Event::INSERT PaintEvent::UPDATE delet sql statement return ddl statement row count sql data manipul languag dml statement sql statement return
Statement::close releas Statement::Statement object databas jdbc resourc instead wait happen automat close general practic releas resourc finish avoid tie databas resourc call close Statement::Statement object close effect note Statement::Statement object close current ResultSet::ResultSet object exist close
Statement::getMaxFieldSize retriev maximum number byte return charact binari column valu ResultSet::ResultSet object produc Statement::Statement object limit appli binari varbinari longvarbinari char varchar nchar nvarchar longnvarchar longvarchar column limit exceed excess data silent discard current column size limit column store charact binari valu zero mean limit
Statement::setMaxFieldSize set limit maximum number byte return charact binari column valu ResultSet::ResultSet object produc Statement::Statement object limit appli binari varbinari longvarbinari char varchar nchar nvarchar longnvarchar longvarchar field limit exceed excess data silent discard maximum portabl use valu greater 256 max column size limit byte zero mean limit
Statement::getMaxRows retriev maximum number row ResultSet::ResultSet object produc Statement::Statement object contain limit exceed excess row silent drop current maximum number row ResultSet::ResultSet object produc Statement::Statement object zero mean limit
Statement::setMaxRows set limit maximum number row ResultSet::ResultSet object generat Statement::Statement object contain given number limit exceed excess row silent drop max max row limit zero mean limit
Statement::setEscapeProcessing set escap process escap scan default driver escap substitut send sql statement databas Connection::Connection datasourc properti escapeprocess chang default escap process behavior valu default enabl escap process Statement::Statement object valu fals disabl escap process Statement::Statement object Statement::setEscapeProcessing specifi escap process behavior individu Statement::Statement object note prepar statement pars prior make call disabl escap process preparedstat object effect enabl enabl escap process fals disabl
Statement::getQueryTimeout retriev number driver wait Statement::Statement object execut limit exceed SQLException::SQLException thrown current queri timeout limit zero mean limit
Statement::setQueryTimeout set number driver wait Statement::Statement object execut given number default limit amount time allow run statement complet limit exceed SQLTimeoutException::SQLTimeoutException thrown jdbc driver appli limit execut executequeri executeupd note jdbc driver implement appli limit ResultSet::ResultSet consult driver vendor document detail note case Statement::Statement batch implement defin time appli individu sql command ad addbatch entir batch sql command invok Statement::executeBatch consult driver vendor document detail queri timeout limit zero mean limit
Statement::cancel cancel Statement::Statement object dbms driver support abort sql statement thread cancel statement execut thread
Statement::getWarnings retriev first warn report call Statement::Statement object subsequ Statement::Statement object warn chain SQLWarning::SQLWarning object warn chain automat clear time statement execut call close Statement::Statement object caus SQLException::SQLException thrown note process ResultSet::ResultSet object warn associ read ResultSet::ResultSet object chain Statement::Statement object produc first SQLWarning::SQLWarning object null warn
Statement::clearWarnings clear warn report Statement::Statement object call getwarn return null warn report Statement::Statement object
Statement::setCursorName set sql cursor name given String::String subsequ Statement::Statement object execut name sql posit updat delet statement identifi current row ResultSet::ResultSet object generat statement databas support posit updat delet noop insur cursor proper isol level support updat cursor select statement form select updat updat posit updat fail note definit execut posit updat delet Statement::Statement object generat ResultSet::ResultSet object posit cursor name uniqu connect name cursor name uniqu connect
Statement::execute execut given sql statement return multipl result uncommon situat singl sql statement return multipl result set updat count normal ignor execut store procedur know return multipl result dynam execut unknown sql string execut execut sql statement indic form first result use getresultset Statement::getUpdateCount retriev result Statement::getMoreResults move subsequ result note call PreparedStatement::PreparedStatement CallableStatement::CallableStatement sql sql statement first result ResultSet::ResultSet object fals updat count result
Statement::getResultSet retriev current result ResultSet::ResultSet object call result current result ResultSet::ResultSet object null result updat count result
Statement::getUpdateCount retriev current result updat count result ResultSet::ResultSet object result return call result current result updat count current result ResultSet::ResultSet object result
Statement::getMoreResults move Statement::Statement object result return ResultSet::ResultSet object implicit close current ResultSet::ResultSet object obtain getresultset result stmt Statement::Statement object stmt getmoreresult fals stmt getupdatecount result ResultSet::ResultSet object fals updat count result
Statement::setFetchDirection give driver hint direct row process ResultSet::ResultSet object creat use Statement::Statement object default valu resultset fetch forward note set default fetch direct result set generat Statement::Statement object result set get set fetch direct direct initi direct process row
Statement::getFetchDirection retriev direct fetch row databas tabl default result set generat Statement::Statement object Statement::Statement object set fetch direct call setfetchdirect return valu implement specif default fetch direct result set generat Statement::Statement object
Statement::setFetchSize give jdbc driver hint number row fetch databas row ResultSet::ResultSet object generat Statement::Statement valu specifi zero hint ignor default valu zero row number row fetch
Statement::getFetchSize retriev number result set row default fetch size ResultSet::ResultSet object generat Statement::Statement object Statement::Statement object set fetch size call setfetchs return valu implement specif default fetch size result set generat Statement::Statement object
Statement::getResultSetConcurrency retriev result set concurr ResultSet::ResultSet object generat Statement::Statement object resultset concur read resultset concur updat
Statement::getResultSetType retriev result set type ResultSet::ResultSet object generat Statement::Statement object resultset type forward resultset type scroll insensit resultset type scroll sensit
Statement::addBatch add given sql command current list command Statement::Statement object command list execut batch call Statement::executeBatch note call PreparedStatement::PreparedStatement CallableStatement::CallableStatement sql typic sql Event::INSERT PaintEvent::UPDATE statement
Statement::clearBatch empti Statement::Statement object current list sql command
Statement::executeBatch submit batch command databas execut command execut success return array updat count int element array return order correspond command batch order accord order ad batch element array return Statement::executeBatch follow number greater equal zero indic command process success updat count give number row databas affect command execut valu success info indic command process success number row affect unknown command batch updat fail execut proper throw BatchUpdateException::BatchUpdateException jdbc driver continu process remain command batch driver behavior consist particular dbms continu process command continu process command driver continu process failur array return batchupdateexcept getupdatecount contain element command batch element follow valu execut fail indic command fail execut success occur driver continu process command command fail implement return valu modifi sdk standard edit version accommod option continu process command batch updat BatchUpdateException::BatchUpdateException object thrown array updat count contain element command batch element array order accord order command ad batch
Statement::getConnection retriev Connection::Connection object produc Statement::Statement object connect produc statement
Statement::getMoreResults move Statement::Statement object result deal current ResultSet::ResultSet object accord instruct specifi given flag return result ResultSet::ResultSet object result stmt Statement::Statement object stmt getmoreresult current fals stmt getupdatecount current Statement::Statement constant indic happen current ResultSet::ResultSet object obtain use getresultset statement close current result statement keep current result statement close result result ResultSet::ResultSet object fals updat count result
Statement::getGeneratedKeys retriev auto generat key creat result execut Statement::Statement object Statement::Statement object generat key empti ResultSet::ResultSet object return note column repres auto generat key specifi jdbc driver implement determin column repres auto generat key ResultSet::ResultSet object contain auto generat key generat execut Statement::Statement object
Statement::executeUpdate execut given sql statement signal driver given flag auto generat key produc Statement::Statement object made avail retriev driver ignor flag sql statement Event::INSERT statement sql statement abl return auto generat key list statement vendor specif note call PreparedStatement::PreparedStatement CallableStatement::CallableStatement sql sql data manipul languag dml statement Event::INSERT PaintEvent::UPDATE delet sql statement return ddl statement autogeneratedkey flag indic auto generat key made avail retriev constant statement return generat key statement generat key row count sql data manipul languag dml statement sql statement return
Statement::executeUpdate execut given sql statement signal driver auto generat key indic given array made avail retriev array contain index column target tabl contain auto generat key made avail driver ignor array sql statement Event::INSERT statement sql statement abl return auto generat key list statement vendor specif note call PreparedStatement::PreparedStatement CallableStatement::CallableStatement sql sql data manipul languag dml statement Event::INSERT PaintEvent::UPDATE delet sql statement return ddl statement columnindex array column index indic column return insert row row count sql data manipul languag dml statement sql statement return
Statement::executeUpdate execut given sql statement signal driver auto generat key indic given array made avail retriev array contain name column target tabl contain auto generat key made avail driver ignor array sql statement Event::INSERT statement sql statement abl return auto generat key list statement vendor specif note call PreparedStatement::PreparedStatement CallableStatement::CallableStatement sql sql data manipul languag dml statement Event::INSERT PaintEvent::UPDATE delet sql statement return ddl statement columnnam array name column return insert row row count Event::INSERT PaintEvent::UPDATE delet statement sql statement return
Statement::execute execut given sql statement return multipl result signal driver auto generat key made avail retriev driver ignor signal sql statement Event::INSERT statement sql statement abl return auto generat key list statement vendor specif uncommon situat singl sql statement return multipl result set updat count normal ignor execut store procedur know return multipl result dynam execut unknown sql string execut execut sql statement indic form first result use getresultset Statement::getUpdateCount retriev result Statement::getMoreResults move subsequ result note call PreparedStatement::PreparedStatement CallableStatement::CallableStatement sql sql statement autogeneratedkey constant indic auto generat key made avail retriev use Statement::getGeneratedKeys constant statement return generat key statement generat key first result ResultSet::ResultSet object fals updat count result
Statement::execute execut given sql statement return multipl result signal driver auto generat key indic given array made avail retriev array contain index column target tabl contain auto generat key made avail driver ignor array sql statement Event::INSERT statement sql statement abl return auto generat key list statement vendor specif uncommon situat singl sql statement return multipl result set updat count normal ignor execut store procedur know return multipl result dynam execut unknown sql string execut execut sql statement indic form first result use getresultset Statement::getUpdateCount retriev result Statement::getMoreResults move subsequ result note call PreparedStatement::PreparedStatement CallableStatement::CallableStatement sql sql statement columnindex array index column insert row made avail retriev call Statement::getGeneratedKeys first result ResultSet::ResultSet object fals updat count result
Statement::execute execut given sql statement return multipl result signal driver auto generat key indic given array made avail retriev array contain name column target tabl contain auto generat key made avail driver ignor array sql statement Event::INSERT statement sql statement abl return auto generat key list statement vendor specif uncommon situat singl sql statement return multipl result set updat count normal ignor execut store procedur know return multipl result dynam execut unknown sql string execut execut sql statement indic form first result use getresultset Statement::getUpdateCount retriev result Statement::getMoreResults move subsequ result note call PreparedStatement::PreparedStatement CallableStatement::CallableStatement sql sql statement columnnam array name column insert row made avail retriev call Statement::getGeneratedKeys result ResultSet::ResultSet object fals updat count result
Statement::getResultSetHoldability retriev result set holdabl ResultSet::ResultSet object generat Statement::Statement object resultset hold cursor commit resultset close cursor commit
Statement::isClosed retriev Statement::Statement object close Statement::Statement close close call automat close Statement::Statement object close fals open
Statement::setPoolable request Statement::Statement pool pool valu specifi hint statement pool implement indic want statement pool statement pool manag hint poolabl valu statement applic intern statement cach implement driver extern statement cach implement server applic default Statement::Statement poolabl creat PreparedStatement::PreparedStatement CallableStatement::CallableStatement poolabl creat poolabl request statement pool statement pool fals
Statement::isPoolable return valu indic Statement::Statement poolabl Statement::Statement poolabl fals
Statement::closeOnCompletion specifi Statement::Statement close depend result set close execut Statement::Statement produc result set effect note multipl call closeoncomplet toggl effect Statement::Statement call closeoncomplet effect subsequ execut statement statement current open depend result set
Statement::isCloseOnCompletion return valu indic Statement::Statement close depend result set close Statement::Statement close depend result set close fals
Statement::getLargeUpdateCount retriev current result updat count result ResultSet::ResultSet object result return call result return row count exceed default implement throw UnsupportedOperationException::UnsupportedOperationException current result updat count current result ResultSet::ResultSet object result
Statement::setLargeMaxRows set limit maximum number row ResultSet::ResultSet object generat Statement::Statement object contain given number limit exceed excess row silent drop row limit exceed default implement throw UnsupportedOperationException::UnsupportedOperationException max max row limit zero mean limit
Statement::getLargeMaxRows retriev maximum number row ResultSet::ResultSet object produc Statement::Statement object contain limit exceed excess row silent drop return row limit exceed default implement return current maximum number row ResultSet::ResultSet object produc Statement::Statement object zero mean limit
Statement::executeLargeUpdate execut given sql statement Event::INSERT PaintEvent::UPDATE delet statement sql statement return sql ddl statement return row count exceed note call PreparedStatement::PreparedStatement CallableStatement::CallableStatement default implement throw UnsupportedOperationException::UnsupportedOperationException sql sql data manipul languag dml statement Event::INSERT PaintEvent::UPDATE delet sql statement return ddl statement row count sql data manipul languag dml statement sql statement return
Statement::executeLargeUpdate execut given sql statement signal driver given flag auto generat key produc Statement::Statement object made avail retriev driver ignor flag sql statement Event::INSERT statement sql statement abl return auto generat key list statement vendor specif return row count exceed note call PreparedStatement::PreparedStatement CallableStatement::CallableStatement default implement throw sqlfeaturenotsupportedexcept sql sql data manipul languag dml statement Event::INSERT PaintEvent::UPDATE delet sql statement return ddl statement autogeneratedkey flag indic auto generat key made avail retriev constant statement return generat key statement generat key row count sql data manipul languag dml statement sql statement return
Statement::executeLargeUpdate execut given sql statement signal driver auto generat key indic given array made avail retriev array contain index column target tabl contain auto generat key made avail driver ignor array sql statement Event::INSERT statement sql statement abl return auto generat key list statement vendor specif return row count exceed note call PreparedStatement::PreparedStatement CallableStatement::CallableStatement default implement throw sqlfeaturenotsupportedexcept sql sql data manipul languag dml statement Event::INSERT PaintEvent::UPDATE delet sql statement return ddl statement columnindex array column index indic column return insert row row count sql data manipul languag dml statement sql statement return
Statement::executeLargeUpdate execut given sql statement signal driver auto generat key indic given array made avail retriev array contain name column target tabl contain auto generat key made avail driver ignor array sql statement Event::INSERT statement sql statement abl return auto generat key list statement vendor specif return row count exceed note call PreparedStatement::PreparedStatement CallableStatement::CallableStatement default implement throw sqlfeaturenotsupportedexcept sql sql data manipul languag dml statement Event::INSERT PaintEvent::UPDATE delet sql statement return ddl statement columnnam array name column return insert row row count Event::INSERT PaintEvent::UPDATE delet statement sql statement return
SQLIntegrityConstraintViolationException::SQLIntegrityConstraintViolationException subclass thrown sqlstate valu 23 vendor specifi condit indic integr constraint foreign key primari key uniqu key violat pleas consult driver vendor document vendor specifi condit Exception::Exception thrown
Blob::Blob represent map trade program languag sql blob valu sql blob built type store binari Object::Object column valu row databas tabl default driver implement Blob::Blob use sql locat blob mean Blob::Blob object contain logic pointer sql blob data data Blob::Blob object valid durat transact creat interfac getblob setblob allow programm access sql blob valu Blob::Blob interfac provid get length sql blob binari Object::Object valu materi blob valu client determin posit pattern byte blob valu addit interfac updat blob valu Blob::Blob interfac fulli implement jdbc driver support data type
Blob::getBinaryStream return InputStream::InputStream object contain partial Blob::Blob valu start byte specifi pos length byte length pos offset first byte partial valu retriev first byte Blob::Blob posit length length byte partial valu retriev InputStream::InputStream partial Blob::Blob valu read
BatchUpdateException::BatchUpdateException subclass thrown error occur batch updat oper addit BatchUpdateException::BatchUpdateException provid updat count command execut success batch updat command execut error occur order element array updat count correspond order command ad batch command batch updat fail execut proper BatchUpdateException::BatchUpdateException thrown driver continu process remain command batch driver continu process failur array return batchupdateexcept getupdatecount element command batch element command execut success error case where driver continu process command array element command fail statement execut fail jdbc driver implement use constructor batchupdateexcept string reason String::String sqlstate int vendorcod updatecount throwabl caus instead constructor take int updat count avoid possibl overflow statement executelargebatch invok recommend BatchUpdateException::getLargeUpdateCounts call instead BatchUpdateException::getUpdateCounts order avoid overflow integ updat count
BatchUpdateException::BatchUpdateException construct BatchUpdateException::BatchUpdateException object initi given reason sqlstate vendorcod updatecount caus initi subsequ initi call note valid updatecount overflow recommend use constructor batchupdateexcept string reason String::String sqlstate int vendorcod updatecount throwabl caus reason descript error sqlstate xopen sql2003 identifi vendorcod particular databas vendor updatecount array int element indic updat count statement success info statement execut fail sql command batch jdbc driver continu process command failur updat count statement success info sql command batch prior failur jdbc driver stop process command failur
BatchUpdateException::BatchUpdateException construct BatchUpdateException::BatchUpdateException object initi given reason sqlstate updatecount caus initi subsequ initi call vendor initi note valid updatecount overflow recommend use constructor batchupdateexcept string reason String::String sqlstate int vendorcod updatecount throwabl caus reason descript sqlstate xopen sql2003 identifi updatecount array int element indic updat count statement success info statement execut fail sql command batch jdbc driver continu process command failur updat count statement success info sql command batch prior failur jdbc driver stop process command failur
BatchUpdateException::BatchUpdateException construct BatchUpdateException::BatchUpdateException object initi given reason updatecount caus initi subsequ initi call sqlstate initi null vendor initi note valid updatecount overflow recommend use constructor batchupdateexcept string reason String::String sqlstate int vendorcod updatecount throwabl caus reason descript updatecount array int element indic updat count statement success info statement execut fail sql command batch jdbc driver continu process command failur updat count statement success info sql command batch prior failur jdbc driver stop process command failur
BatchUpdateException::BatchUpdateException construct BatchUpdateException::BatchUpdateException object initi given updatecount initi call reason sqlstate initi null vendor initi note valid updatecount overflow recommend use constructor batchupdateexcept string reason String::String sqlstate int vendorcod updatecount throwabl caus updatecount array int element indic updat count statement success info statement execut fail sql command batch jdbc driver continu process command failur updat count statement success info sql command batch prior failur jdbc driver stop process command failur
BatchUpdateException::BatchUpdateException construct BatchUpdateException::BatchUpdateException object initi given caus updatecount sqlstate initi null vendor initi reason initi null caus null caus tostr caus null note valid updatecount overflow recommend use constructor batchupdateexcept string reason String::String sqlstate int vendorcod updatecount throwabl caus updatecount array int element indic updat count statement success info statement execut fail sql command batch jdbc driver continu process command failur updat count statement success info sql command batch prior failur jdbc driver stop process command failur caus reason SQLException::SQLException save retriev getcaus null indic caus non exist unknown
BatchUpdateException::BatchUpdateException construct BatchUpdateException::BatchUpdateException object initi given reason caus updatecount sqlstate initi null vendor initi note valid updatecount overflow recommend use constructor batchupdateexcept string reason String::String sqlstate int vendorcod updatecount throwabl caus reason descript updatecount array int element indic updat count statement success info statement execut fail sql command batch jdbc driver continu process command failur updat count statement success info sql command batch prior failur jdbc driver stop process command failur caus reason SQLException::SQLException save retriev getcaus null indic caus non exist unknown
BatchUpdateException::BatchUpdateException construct BatchUpdateException::BatchUpdateException object initi given reason caus updatecount vendor initi reason descript sqlstate xopen sql2003 identifi updatecount array int element indic updat count statement success info statement execut fail sql command batch jdbc driver continu process command failur updat count statement success info sql command batch prior failur jdbc driver stop process command failur note valid updatecount overflow recommend use constructor batchupdateexcept string reason String::String sqlstate int vendorcod updatecount throwabl caus caus reason SQLException::SQLException save retriev getcaus null indic caus non exist unknown
BatchUpdateException::BatchUpdateException construct BatchUpdateException::BatchUpdateException object initi given reason sqlstate vendorcod caus updatecount reason descript error sqlstate xopen sql2003 identifi vendorcod particular databas vendor updatecount array int element indic updat count statement success info statement execut fail sql command batch jdbc driver continu process command failur updat count statement success info sql command batch prior failur jdbc driver stop process command failur note valid updatecount overflow recommend use constructor batchupdateexcept string reason String::String sqlstate int vendorcod updatecount throwabl caus caus reason SQLException::SQLException save retriev getcaus null indic caus non exist unknown
DriverPropertyInfo::DriverPropertyInfo driver properti make connect DriverPropertyInfo::DriverPropertyInfo interest advanc programm interact Driver::Driver getdriverproperti discov suppli properti connect
DriverPropertyInfo::DriverPropertyInfo construct DriverPropertyInfo::DriverPropertyInfo object given name valu DriverPropertyInfo::description DriverPropertyInfo::choices initi null DriverPropertyInfo::required initi fals name name properti valu current valu null
DriverPropertyInfo::value valu field specifi current valu properti base combin suppli Driver::getPropertyInfo environ driver suppli default valu field null valu known
Driver::Driver interfac driver implement sql framework allow multipl databas driver driver suppli implement Driver::Driver interfac DriverManager::DriverManager load driver find given connect request ask driver turn connect target url strong recommend Driver::Driver standalon Driver::Driver load queri bring vast quantiti support Driver::Driver load creat instanc regist DriverManager::DriverManager mean user load regist driver call fornam foo bah driver jdbc driver creat implement order receiv notif call
Driver::connect attempt make databas connect given url driver return null realiz wrong kind driver connect given url common jdbc driver manag ask connect given url pass url load driver turn driver throw SQLException::SQLException driver connect given url troubl connect databas Properties::Properties argument pass arbitrari string tag valu pair connect argument normal user password properti includ Properties::Properties object note properti specifi part url specifi Properties::Properties object implement defin valu take preced maximum portabl specifi properti url url databas connect info list arbitrari string tag valu pair connect argument normal user password properti includ Connection::Connection object repres connect url
Driver::getPropertyInfo get properti driver Driver::getPropertyInfo intend allow generic gui tool discov properti prompt human order get connect databas note depend valu human suppli addit valu becom necessari necessari iter call Driver::getPropertyInfo url url databas connect info propos list tag valu pair sent connect open array DriverPropertyInfo::DriverPropertyInfo object describ properti array empti array properti requir
Driver::jdbcCompliant report driver genuin jdbc compliant trade driver driver report pass jdbc complianc test requir return fals jdbc complianc requir full support jdbc full support sql 92 TreeMap::Entry Level::Level expect jdbc compliant driver avail major commerci databas intend encourag develop non jdbc compliant driver recognit fact vendor interest use jdbc framework lightweight databas support full databas function databas document retriev where sql implement feasibl driver jdbc compliant fals
Driver::getParentLogger return parent Logger::Logger logger driver Logger::Logger farthest root Logger::Logger ancestor logger driver configur Logger::Logger affect log messag generat driver worst case root Logger::Logger parent Logger::Logger driver
SQLType::getVendorTypeNumber return vendor specif type number data type Integer::Integer repres vendor specif data type
SQLTransactionRollbackException::SQLTransactionRollbackException subclass thrown sqlstate valu 40 vendor specifi condit indic current statement automat roll databas deadlock transact serial failur pleas consult driver vendor document vendor specifi condit Exception::Exception thrown
JDBCType::JDBCType Constructor::Constructor specifi data type valu Types::Types data type type valu Types::Types data type
JDBCType::getVendorTypeNumber return vendor specif type number data type Integer::Integer repres data type jdbctype valu valu Types::Types data type
DriverManager::setLogWriter set log trace PrintWriter::PrintWriter object DriverManager::DriverManager driver minor version creat introduct DriverManager::setLogWriter DriverManager::setLogWriter creat PrintStream::PrintStream object return DriverManager::getLogStream platform provid backward convers result use DriverManager::setLogWriter use jdbc driver use DriverManager::getLogStream see debug written driver start sdk standard edit version releas check see SQLPermission::SQLPermission object set log stream SecurityManager::SecurityManager exist checkpermiss deni set log writer throw lang securityexcept log trace PrintStream::PrintStream object null disabl log trace
DriverManager::getConnection attempt establish connect given databas url DriverManager::DriverManager attempt select appropri driver set regist jdbc driver note properti specifi part url specifi Properties::Properties object implement defin valu take preced maximum portabl specifi properti url databas url form jdbc subprotocol subnam info list arbitrari string tag valu pair connect argument normal user password properti includ Connection::Connection url
DriverManager::getConnection attempt establish connect given databas url DriverManager::DriverManager attempt select appropri driver set regist jdbc driver note user password properti specifi part url implement defin valu take preced maximum portabl specifi properti url databas url form jdbc subprotocol subnam user databas user behalf connect made password user password connect url
DriverManager::getConnection attempt establish connect given databas url DriverManager::DriverManager attempt select appropri driver set regist jdbc driver url databas url form jdbc subprotocol subnam connect url
DriverManager::getDriver attempt locat driver understand given url DriverManager::DriverManager attempt select appropri driver set regist jdbc driver url databas url form jdbc subprotocol subnam Driver::Driver object repres driver connect given url
DriverManager::registerDriver regist given driver DriverManager::DriverManager newli load driver call DriverManager::registerDriver make known DriverManager::DriverManager driver current regist action taken driver jdbc Driver::Driver regist DriverManager::DriverManager
DriverManager::registerDriver regist given driver DriverManager::DriverManager newli load driver call DriverManager::registerDriver make known DriverManager::DriverManager driver current regist action taken driver jdbc Driver::Driver regist DriverManager::DriverManager da DriverAction::DriverAction implement drivermanag deregisterdriv call
DriverManager::deregisterDriver remov specifi driver DriverManager::DriverManager list regist driver null valu specifi driver remov action taken secur manag exist checkpermiss deni permiss SecurityException::SecurityException thrown specifi driver found list regist driver action taken driver found remov list regist driver DriverAction::DriverAction instanc specifi jdbc driver regist deregist call prior driver remov list regist driver driver jdbc Driver::Driver remov
DriverManager::getDrivers retriev Enumeration::Enumeration current load jdbc driver current caller access note classnam driver found use getclass getnam list jdbc driver load caller loader
CallableStatement::CallableStatement interfac execut sql store procedur jdbc provid store procedur sql escap syntax allow store procedur call standard rdbmss escap syntax form includ result paramet result paramet regist paramet paramet input output paramet refer sequenti number first paramet call lt procedur name gt lt arg1 gt lt arg2 gt call lt procedur name gt lt arg1 gt lt arg2 gt paramet valu set use set inherit type paramet regist prior execut store procedur valu retriev execut get CallableStatement::CallableStatement return object multipl ResultSet::ResultSet object multipl ResultSet::ResultSet object handl use oper inherit maximum portabl call ResultSet::ResultSet object updat count process prior get valu output paramet
CallableStatement::registerOutParameter regist paramet ordin posit parameterindex jdbc type sqltype paramet regist store procedur execut jdbc type specifi sqltype paramet determin type get read valu paramet jdbc type expect return output paramet specif particular databas sqltype sql type retriev valu parameterindex first paramet sqltype jdbc type defin sql type paramet jdbc type numer decim version CallableStatement::registerOutParameter accept scale valu
CallableStatement::registerOutParameter regist paramet ordin posit parameterindex jdbc type sqltype paramet regist store procedur execut jdbc type specifi sqltype paramet determin type get read valu paramet version CallableStatement::registerOutParameter paramet jdbc type numer decim parameterindex first paramet sqltype sql type defin sql type scale desir number digit decim point greater equal zero
CallableStatement::wasNull retriev last paramet read valu sql null note call call getter valu use determin null last paramet read sql null fals
CallableStatement::getString retriev valu design jdbc char varchar longvarchar paramet String::String program languag fix length type jdbc char String::String object return exact valu sql char valu databas includ pad ad databas parameterindex first paramet paramet valu valu sql null result null
CallableStatement::getInt retriev valu design jdbc integ paramet int program languag parameterindex first paramet paramet valu valu sql null result
CallableStatement::getBigDecimal retriev valu design jdbc numer paramet math bigdecim object scale digit decim point parameterindex first paramet scale number digit decim point paramet valu valu sql null result null
CallableStatement::getObject retriev valu design paramet Object::Object program languag valu sql null driver return null return object type correspond jdbc type regist paramet use CallableStatement::registerOutParameter regist target jdbc type sql type read databas specif abstract data type parameterindex first paramet lang object hold paramet valu
CallableStatement::getBigDecimal retriev valu design jdbc numer paramet math bigdecim object digit decim point valu contain parameterindex first paramet paramet valu full precis valu sql null result null
CallableStatement::getObject return object repres valu paramet parameterindex use map custom map paramet valu return object type correspond jdbc type regist paramet use CallableStatement::registerOutParameter regist target jdbc type sql type read databas specif abstract data type parameterindex first paramet map map sql type name lang object hold paramet valu
CallableStatement::getDate retriev valu design jdbc date paramet sql date object use given Calendar::Calendar object construct date Calendar::Calendar object driver calcul date take account custom timezon local Calendar::Calendar object specifi driver use default timezon local parameterindex first paramet cal Calendar::Calendar object driver use construct date paramet valu valu sql null result null
CallableStatement::getTime retriev valu design jdbc time paramet sql time object use given Calendar::Calendar object construct time Calendar::Calendar object driver calcul time take account custom timezon local Calendar::Calendar object specifi driver use default timezon local parameterindex first paramet cal Calendar::Calendar object driver use construct time paramet valu valu sql null result null
CallableStatement::getTimestamp retriev valu design jdbc timestamp paramet sql timestamp object use given Calendar::Calendar object construct Timestamp::Timestamp object Calendar::Calendar object driver calcul timestamp take account custom timezon local Calendar::Calendar object specifi driver use default timezon local parameterindex first paramet cal Calendar::Calendar object driver use construct timestamp paramet valu valu sql null result null
CallableStatement::registerOutParameter regist design output paramet version CallableStatement::registerOutParameter user defin ref output paramet exampl user defin type includ struct distinct object name array type paramet regist store procedur execut user defin paramet fulli qualifi sql type name paramet given ref paramet requir fulli qualifi type name referenc type given jdbc driver type type name ignor portabl applic provid valu user defin ref paramet intend user defin ref paramet regist paramet jdbc type paramet user defin ref type typenam paramet ignor note read valu paramet use getter type correspond paramet regist sql type parameterindex first paramet sqltype valu TypeNotPresentException::typeName fulli qualifi name sql structur type
CallableStatement::registerOutParameter regist paramet name parameternam jdbc type sqltype paramet regist store procedur execut jdbc type specifi sqltype paramet determin type get read valu paramet jdbc type expect return output paramet specif particular databas sqltype sql type retriev valu parameternam name paramet sqltype jdbc type defin sql type paramet jdbc type numer decim version CallableStatement::registerOutParameter accept scale valu
CallableStatement::registerOutParameter regist paramet name parameternam jdbc type sqltype paramet regist store procedur execut jdbc type specifi sqltype paramet determin type get read valu paramet version CallableStatement::registerOutParameter paramet jdbc type numer decim parameternam name paramet sqltype sql type defin sql type scale desir number digit decim point greater equal zero
CallableStatement::registerOutParameter regist design output paramet version CallableStatement::registerOutParameter user name ref output paramet exampl user name type includ struct distinct object name array type paramet regist store procedur execut user name paramet fulli qualifi sql type name paramet given ref paramet requir fulli qualifi type name referenc type given jdbc driver type type name ignor portabl applic provid valu user name ref paramet intend user name ref paramet regist paramet jdbc type paramet user name ref type TypeNotPresentException::typeName paramet ignor note read valu paramet use getxxx type xxx correspond paramet regist sql type parameternam name paramet sqltype valu TypeNotPresentException::typeName fulli qualifi name sql structur type
CallableStatement::setDouble set design paramet given doubl valu driver convert sql doubl valu send databas parameternam name paramet paramet valu
CallableStatement::setString set design paramet given String::String valu driver convert sql varchar longvarchar valu depend argument size relat driver limit varchar valu send databas parameternam name paramet paramet valu
CallableStatement::setObject set valu design paramet given object jdbc specif specifi standard map Object::Object type sql type given argument convert correspond sql type sent databas note pass datatabas specif abstract data type use driver specif type object implement interfac SQLData::SQLData jdbc driver call sqldata writesql write sql data stream hand object implement Ref::Ref Blob::Blob Clob::Clob NClob::NClob Struct::Struct url Array::Array driver pass databas valu correspond sql type throw ambigu exampl object implement interfac name note databas allow non type null sent backend maximum portabl setnul setobject string parameternam Object::Object int sqltype instead setobject string parameternam Object::Object parameternam name paramet object contain input paramet valu
CallableStatement::setDate set design paramet given sql date valu use given Calendar::Calendar object driver use Calendar::Calendar object construct sql date valu driver send databas Calendar::Calendar object driver calcul date take account custom timezon Calendar::Calendar object specifi driver use default timezon virtual machin run parameternam name paramet paramet valu cal Calendar::Calendar object driver use construct date
CallableStatement::setTime set design paramet given sql time valu use given Calendar::Calendar object driver use Calendar::Calendar object construct sql time valu driver send databas Calendar::Calendar object driver calcul time take account custom timezon Calendar::Calendar object specifi driver use default timezon virtual machin run parameternam name paramet paramet valu cal Calendar::Calendar object driver use construct time
CallableStatement::setTimestamp set design paramet given sql timestamp valu use given Calendar::Calendar object driver use Calendar::Calendar object construct sql timestamp valu driver send databas Calendar::Calendar object driver calcul timestamp take account custom timezon Calendar::Calendar object specifi driver use default timezon virtual machin run parameternam name paramet paramet valu cal Calendar::Calendar object driver use construct timestamp
CallableStatement::getString retriev valu jdbc char varchar longvarchar paramet String::String program languag fix length type jdbc char String::String object return exact valu sql char valu databas includ pad ad databas parameternam name paramet paramet valu valu sql null result null
CallableStatement::getInt retriev valu jdbc integ paramet int program languag parameternam name paramet paramet valu valu sql null result
CallableStatement::getObject retriev valu paramet Object::Object program languag valu sql null driver return null return object type correspond jdbc type regist paramet use CallableStatement::registerOutParameter regist target jdbc type sql type read databas specif abstract data type parameternam name paramet lang object hold paramet valu
CallableStatement::getBigDecimal retriev valu jdbc numer paramet math bigdecim object digit decim point valu contain parameternam name paramet paramet valu full precis valu sql null result null
CallableStatement::getObject return object repres valu paramet parameternam use map custom map paramet valu return object type correspond jdbc type regist paramet use CallableStatement::registerOutParameter regist target jdbc type sql type read databas specif abstract data type parameternam name paramet map map sql type name lang object hold paramet valu
CallableStatement::getDate retriev valu jdbc date paramet sql date object use given Calendar::Calendar object construct date Calendar::Calendar object driver calcul date take account custom timezon local Calendar::Calendar object specifi driver use default timezon local parameternam name paramet cal Calendar::Calendar object driver use construct date paramet valu valu sql null result null
CallableStatement::getTime retriev valu jdbc time paramet sql time object use given Calendar::Calendar object construct time Calendar::Calendar object driver calcul time take account custom timezon local Calendar::Calendar object specifi driver use default timezon local parameternam name paramet cal Calendar::Calendar object driver use construct time paramet valu valu sql null result null
CallableStatement::getTimestamp retriev valu jdbc timestamp paramet sql timestamp object use given Calendar::Calendar object construct Timestamp::Timestamp object Calendar::Calendar object driver calcul timestamp take account custom timezon local Calendar::Calendar object specifi driver use default timezon local parameternam name paramet cal Calendar::Calendar object driver use construct timestamp paramet valu valu sql null result null
CallableStatement::setNString set design paramet given String::String object driver convert sql nchar nvarchar longnvarchar parameternam name paramet set valu paramet valu
CallableStatement::setClob set design paramet Reader::Reader object reader contain number charact specifi length SQLException::SQLException generat CallableStatement::CallableStatement execut differ setcharacterstream int Reader::Reader int inform driver paramet valu sent server clob setcharacterstream driver extra work determin paramet data send server longvarchar clob parameternam name paramet set reader object contain data set paramet valu length number charact paramet data
CallableStatement::setBlob set design paramet InputStream::InputStream object inputstream contain number charact specifi length SQLException::SQLException generat CallableStatement::CallableStatement execut differ setbinarystream int InputStream::InputStream int inform driver paramet valu sent server blob setbinarystream driver extra work determin paramet data sent server longvarbinari blob parameternam name paramet set inputstream object contain data set paramet valu length number byte paramet data
CallableStatement::setNClob set design paramet Reader::Reader object reader contain number charact specifi length SQLException::SQLException generat CallableStatement::CallableStatement execut differ setcharacterstream int Reader::Reader int inform driver paramet valu sent server nclob setcharacterstream driver extra work determin paramet data send server longnvarchar nclob parameternam name paramet set reader object contain data set paramet valu length number charact paramet data
CallableStatement::getNString retriev valu design nchar nvarchar longnvarchar paramet String::String program languag fix length type jdbc nchar String::String object return exact valu sql nchar valu databas includ pad ad databas parameterindex index first paramet String::String object map nchar nvarchar longnvarchar valu
CallableStatement::getNString retriev valu design nchar nvarchar longnvarchar paramet String::String program languag fix length type jdbc nchar String::String object return exact valu sql nchar valu databas includ pad ad databas parameternam name paramet String::String object map nchar nvarchar longnvarchar valu
CallableStatement::setBlob set design paramet InputStream::InputStream object differ setbinarystream int inputstream inform driver paramet valu sent server blob setbinarystream driver extra work determin paramet data send server longvarbinari blob note consult jdbc driver document determin effici use version setblob take length paramet parameternam name paramet inputstream object contain data set paramet valu
CallableStatement::getObject return object repres valu paramet parameterindex convert sql type paramet request data type convers support convers support null specifi type SQLException::SQLException thrown minimum implement support convers defin appendix tabl PageAttributes::B3 convers appropri user defin sql type type implement sqldata Struct::Struct addit convers support vendor defin parameterindex first paramet type Class::Class repres data type convert design paramet type model Class::Class object instanc type hold paramet valu
CallableStatement::getObject return object repres valu paramet parameternam convert sql type paramet request data type convers support convers support null specifi type SQLException::SQLException thrown minimum implement support convers defin appendix tabl PageAttributes::B3 convers appropri user defin sql type type implement sqldata Struct::Struct addit convers support vendor defin parameternam name paramet type Class::Class repres data type convert design paramet type model Class::Class object instanc type hold paramet valu
CallableStatement::setObject set valu design paramet given object argument InputStream::InputStream stream contain number byte specifi scaleorlength argument Reader::Reader reader contain number charact specifi scaleorlength condit driver generat sqlexcept prepar statement execut given object convert given targetsqltyp sent databas object custom map implement interfac sqldata jdbc driver call sqldata writesql write sql data stream hand object implement Ref::Ref Blob::Blob Clob::Clob nclob Struct::Struct url Array::Array driver pass databas valu correspond sql type note pass databas specif abstract data type default implement throw sqlfeaturenotsupportedexcept parameternam name paramet object contain input paramet valu targetsqltyp sql type sent databas scale argument further qualifi type scaleorlength sql jdbctype decim sql jdbctype numer type number digit decim point Object::Object type InputStream::InputStream Reader::Reader length data stream reader type valu ignor
CallableStatement::registerOutParameter regist paramet ordin posit parameterindex jdbc type sqltype paramet regist store procedur execut jdbc type specifi sqltype paramet determin type get read valu paramet jdbc type expect return output paramet specif particular databas sqltype jdbctype sqltype support jdbc driver retriev valu default implement throw sqlfeaturenotsupportedexcept parameterindex first paramet sqltype jdbc type defin sqltype use regist Parameter::Parameter paramet jdbc type jdbctype numer jdbctype decim version CallableStatement::registerOutParameter accept scale valu
CallableStatement::registerOutParameter regist paramet ordin posit parameterindex jdbc type sqltype paramet regist store procedur execut jdbc type specifi sqltype paramet determin type get read valu paramet version CallableStatement::registerOutParameter paramet jdbc type jdbctype numer jdbctype decim default implement throw sqlfeaturenotsupportedexcept parameterindex first paramet sqltype jdbc type defin sqltype use regist Parameter::Parameter scale desir number digit decim point greater equal zero
CallableStatement::registerOutParameter regist design output paramet version CallableStatement::registerOutParameter user defin ref output paramet exampl user defin type includ struct distinct object name array type paramet regist store procedur execut user defin paramet fulli qualifi sql type name paramet given ref paramet requir fulli qualifi type name referenc type given jdbc driver type type name ignor portabl applic provid valu user defin ref paramet intend user defin ref paramet regist paramet jdbc type paramet user defin ref type typenam paramet ignor note read valu paramet use getter type correspond paramet regist sql type default implement throw sqlfeaturenotsupportedexcept parameterindex first paramet sqltype jdbc type defin sqltype use regist Parameter::Parameter TypeNotPresentException::typeName fulli qualifi name sql structur type
CallableStatement::registerOutParameter regist paramet name parameternam jdbc type sqltype paramet regist store procedur execut jdbc type specifi sqltype paramet determin type get read valu paramet jdbc type expect return output paramet specif particular databas sqltype jdbctype sqltype support jdbc driver retriev valu default implement throw sqlfeaturenotsupportedexcept parameternam name paramet sqltype jdbc type defin sqltype use regist Parameter::Parameter paramet jdbc type jdbctype numer jdbctype decim version CallableStatement::registerOutParameter accept scale valu
CallableStatement::registerOutParameter regist paramet name parameternam jdbc type sqltype paramet regist store procedur execut jdbc type specifi sqltype paramet determin type get read valu paramet version CallableStatement::registerOutParameter paramet jdbc type jdbctype numer jdbctype decim default implement throw sqlfeaturenotsupportedexcept parameternam name paramet sqltype jdbc type defin sqltype use regist Parameter::Parameter scale desir number digit decim point greater equal zero
CallableStatement::registerOutParameter regist design output paramet version CallableStatement::registerOutParameter user name ref output paramet exampl user name type includ struct distinct object name array type paramet regist store procedur execut user name paramet fulli qualifi sql type name paramet given ref paramet requir fulli qualifi type name referenc type given jdbc driver type type name ignor portabl applic provid valu user name ref paramet intend user name ref paramet regist paramet jdbc type paramet user name ref type TypeNotPresentException::typeName paramet ignor note read valu paramet use getxxx type xxx correspond paramet regist sql type default implement throw sqlfeaturenotsupportedexcept parameternam name paramet sqltype jdbc type defin sqltype use regist Parameter::Parameter TypeNotPresentException::typeName fulli qualifi name sql structur type
SQLException::SQLException provid databas access error error SQLException::SQLException provid kind inform string describ error Exception::Exception messag avail getmesasg sqlstate string follow xopen sqlstate convent sql2003 convent valu sqlstate string describ appropri spec DatabaseMetaData::DatabaseMetaData DatabaseMetaData::getSQLStateType discov driver return xopen type sql2003 type integ error specif vendor normal actual error return databas chain Exception::Exception provid addit error causal relationship SQLException::SQLException
SQLXML::SQLXML map javatm program languag sql xml type xml built type store xml valu column valu row databas tabl default driver implement sqlxml object logic pointer xml data data sqlxml object valid durat transact creat sqlxml interfac provid access xml valu String::String Reader::Reader Writer::Writer Stream::Stream xml valu access sourc set result xml parser dom sax stax xslt transform xpath evalu interfac ResultSet::ResultSet CallableStatement::CallableStatement PreparedStatement::PreparedStatement getsqlxml allow programm access xml valu addit interfac updat xml valu xml valu sqlxml instanc obtain binarystream use exampl pars xml valu dom parser pars xml valu sax parser handler pars xml valu stax parser databas use optim represent xml access valu getsourc SQLXML::setResult lead improv process perform serial stream represent pars xml exampl obtain dom document node set valu dom document ConcurrentSkipListMap::Node mynod send sax event handler set result valu sax event obtain stax event set result valu stax event perform xslt transform xml valu use xslt xsltfile output file resultfil evalu xpath express xml valu set xml valu result xslt transform sourc transform result use ident transform specifi call newtransform write content sourc standard output creat domsourc domresult incomplet invalid xml valu caus sqlexcept set occur execut occur stream close execut occur sqlexcept thrown read write xml valu sqlxml object happen conceptu state readabl readabl determin read return valu throw conceptu state writabl writabl determin write set valu throw state move readabl readabl free read call getbinarystream getcharacterstream getsourc getstr implement chang state writabl occur state move writabl writeabl free write call setbinarystream setcharacterstream SQLXML::setResult setstr implement chang state readabl occur sqlxml interfac fulli implement jdbc driver support data type
SQLXML::getBinaryStream retriev xml valu design sqlxml instanc stream byte input stream interpret accord appendix xml specif behavior resultset getbinarystream design column ResultSet::ResultSet type sql type sqlxml sql xml object becom readabl call becom writabl depend implement stream contain xml data
SQLXML::setBinaryStream retriev stream write xml valu sqlxml instanc repres stream begin posit byte stream interpret accord appendix xml specif behavior resultset updatebinarystream design column ResultSet::ResultSet type sql type sqlxml sql xml object becom writeabl call becom readabl depend implement stream data written
SQLXML::getCharacterStream retriev xml valu design sqlxml instanc io reader object format stream defin org xml sax inputsourc where charact stream repres unicod point xml accord section appendix xml specif encod declar unicod encod stream unicod behavior resultset getcharacterstream design column ResultSet::ResultSet type sql type sqlxml sql xml object becom readabl call becom writabl depend implement stream contain xml data
SQLXML::setCharacterStream retriev stream write xml valu sqlxml instanc repres format stream defin org xml sax inputsourc where charact stream repres unicod point xml accord section appendix xml specif encod declar unicod encod stream unicod behavior resultset updatecharacterstream design column ResultSet::ResultSet type sql type sqlxml sql xml object becom writeabl call becom readabl depend implement stream data written
SQLXML::getString return string represent xml valu design sqlxml instanc format String::String defin org xml sax inputsourc where charact stream repres unicod point xml accord section appendix xml specif encod declar unicod encod String::String unicod behavior resultset getstr design column ResultSet::ResultSet type sql type sqlxml sql xml object becom readabl call becom writabl depend implement string represent xml valu design sqlxml instanc
SQLXML::setString set xml valu design sqlxml instanc given String::String represent format String::String defin org xml sax inputsourc where charact stream repres unicod point xml accord section appendix xml specif encod declar unicod encod String::String unicod behavior resultset updatestr design column ResultSet::ResultSet type sql type sqlxml sql xml object becom writeabl call becom readabl depend implement valu xml valu
SQLXML::getSource return sourc read xml valu design sqlxml instanc sourc input xml parser xslt transform sourc xml parser namespac process default systemid sourc implement depend sql xml object becom readabl call becom writabl depend implement note sax callback architectur return saxsourc set content handler receiv sax event pars content handler receiv callback base content xml type model Class::Class object sourceclass sourc null null vendor specif sourc implement return support minimum sourc read xml valu
SQLXML::setResult return result set xml valu design sqlxml instanc systemid result implement depend sql xml object becom writeabl call becom readabl depend implement note sax callback architectur return saxresult content handler assign receiv sax event base content xml call content handler content xml document assign valu type model Class::Class object resultclass result null resultclass null vendor specif result implement return support minimum return result set xml valu
Wrapper::unwrap return object implement given interfac allow access non standard standard expos proxi receiv implement interfac result receiv proxi receiv receiv wrapper wrap object implement interfac result wrap object proxi wrap object return result call unwrap recurs wrap object proxi result receiv wrapper implement interfac SQLException::SQLException thrown type model Class::Class object ifac Class::Class defin interfac result implement object implement interfac proxi actual implement object
Wrapper::isWrapperFor return implement interfac argument indirect wrapper object return fals implement interfac return els wrapper return result recurs call Wrapper::isWrapperFor wrap object implement interfac wrapper return fals implement low cost oper compar unwrap caller use avoid expens unwrap call fail return call unwrap argument succeed ifac Class::Class defin interfac implement interfac indirect wrap object
Timestamp::valueOf convert String::String object jdbc timestamp escap format Timestamp::Timestamp valu timestamp format yyyi hhmmss fraction omit lead zero mm dd omit correspond Timestamp::Timestamp valu
Timestamp::toString format timestamp jdbc timestamp escap format yyyi mm dd hhmmss fffffffff where ffffffffff indic nanosecond String::String object yyyi mm dd hhmmss fffffffff format
Timestamp::equals test see Timestamp::Timestamp object equal given object version equal ad fix incorrect signatur timestamp equal timestamp preserv backward compat exist file note symmetr respect equal object base ts Object::Object valu compar given Object::Object instanc Timestamp::Timestamp equal Timestamp::Timestamp object fals
Timestamp::compareTo compar Timestamp::Timestamp object given Date::Date object Date::Date compar Timestamp::Timestamp object valu Timestamp::Timestamp object given object equal valu Timestamp::Timestamp object given argument valu greater Timestamp::Timestamp object given argument
Timestamp::valueOf obtain instanc Timestamp::Timestamp LocalDateTime::LocalDateTime object year month day month hour minut nano date time valu LocalDateTime::LocalDateTime LocalDateTime::LocalDateTime interpret local date time local time zone datetim LocalDateTime::LocalDateTime convert Timestamp::Timestamp object
Timestamp::toLocalDateTime convert Timestamp::Timestamp object LocalDateTime::LocalDateTime convers creat LocalDateTime::LocalDateTime repres year month day month hour minut nano date time valu Timestamp::Timestamp local time zone LocalDateTime::LocalDateTime object repres date time valu
Timestamp::from obtain instanc Timestamp::Timestamp object Instant::Instant store point time line further futur further Date::Date scenario throw instant instant convert Timestamp::Timestamp repres point time line instant
Timestamp::toInstant convert Timestamp::Timestamp object Instant::Instant convers creat Instant::Instant repres point time line Timestamp::Timestamp instant repres point time line
DatabaseMetaData::DatabaseMetaData comprehens databas interfac implement driver vendor let user know capabl databas manag System::System dbms combin driver base jdbc trade technolog jdbc driver relat dbmss support featur implement featur use data type addit driver implement featur top dbms offer return interfac appli capabl particular driver particular dbms work note document term databas generic refer driver dbms user interfac common tool discov deal dbms especi applic intend dbms exampl tool use DatabaseMetaData::getTypeInfo find data type creat tabl statement user call DatabaseMetaData::supportsCorrelatedSubqueries see use correl subqueri DatabaseMetaData::supportsBatchUpdates see use batch updat DatabaseMetaData::DatabaseMetaData return list form ResultSet::ResultSet object regular ResultSet::ResultSet getstr getint retriev data ResultSet::ResultSet object given form metadata avail empti ResultSet::ResultSet return addit column column defin return ResultSet::ResultSet object given defin jdbc driver vendor access column label DatabaseMetaData::DatabaseMetaData take argument String::String pattern argument name foopattern pattern String::String mean match substr charact mean match charact metadata entri match search pattern return search pattern argument set null argument criterion drop search
DatabaseMetaData::allProceduresAreCallable retriev current user call procedur return DatabaseMetaData::getProcedures fals
DatabaseMetaData::getDatabaseProductName retriev name databas product databas product name
DatabaseMetaData::getDatabaseProductVersion retriev version number databas product databas version number
DatabaseMetaData::getDriverName retriev name jdbc driver jdbc driver name
DatabaseMetaData::getDriverVersion retriev version number jdbc driver String::String jdbc driver version
DatabaseMetaData::getDriverMajorVersion retriev jdbc driver major version number jdbc driver major version
DatabaseMetaData::getDriverMinorVersion retriev jdbc driver minor version number jdbc driver minor version number
DatabaseMetaData::supportsMultipleResultSets retriev databas support get multipl ResultSet::ResultSet object singl call execut fals
DatabaseMetaData::getCatalogSeparator retriev String::String databas use separ catalog tabl name separ string
DatabaseMetaData::getMaxConnections retriev maximum number concurr connect databas maximum number activ connect time result zero mean limit limit known
DatabaseMetaData::getMaxTableNameLength retriev maximum number charact databas allow tabl name maximum number charact allow tabl name result zero mean limit limit known
DatabaseMetaData::supportsTransactions retriev databas support transact invok commit noop isol level transact transact support fals
DatabaseMetaData::getProcedures retriev descript store procedur avail given catalog procedur descript match schema procedur name criteria return order procedur cat procedur schem procedur name specif name procedur descript column procedur cat String::String procedur catalog null procedur schem String::String procedur schema null procedur name String::String procedur name reserv futur use reserv futur use reserv futur use remark String::String explanatori comment procedur procedur type kind procedur procedureresultunknown determin return valu return procedurenoresult return return valu procedurereturnsresult return return valu specif name String::String name uniqu identifi procedur schema user permiss execut procedur return DatabaseMetaData::getProcedures catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schemapattern schema name pattern match schema name store databas retriev schema null mean schema name narrow search procedurenamepattern procedur name pattern match procedur name store databas ResultSet::ResultSet row procedur descript
DatabaseMetaData::getProcedureColumns retriev descript given catalog store procedur paramet result column descript match schema procedur paramet name criteria return order procedur cat procedur schem procedur name specif name return valu first paramet descript call order column descript follow column number order row ResultSet::ResultSet paramet descript column descript field procedur cat String::String procedur catalog null procedur schem String::String procedur schema null procedur name String::String procedur name column name String::String column paramet name column type Short::Short kind column paramet procedurecolumnunknown know procedurecolumnin paramet procedurecolumninout inout paramet procedurecolumnout paramet procedurecolumnreturn procedur return valu procedurecolumnresult result column ResultSet::ResultSet data type int sql type sql type type name String::String sql type name udt type type name fulli qualifi precis int precis length int length byte data scale scale null return data type where scale applic radix radix nullabl contain null procedurenonul allow null valu procedurenul allow null valu procedurenullableunknown nullabl unknown remark String::String comment describ paramet column column def String::String default valu column interpret string valu enclos singl quot null string null enclos quot null specifi default valu truncat enclos quot specifi default valu repres truncat null default valu specifi sql data type int reserv futur use sql datetim sub int reserv futur use char octet length int maximum length binari charact base column datatyp return valu null ordin posit int ordin posit start input output paramet procedur valu return row describ procedur return valu result set column ordin posit column result set start multipl result set column ordin posit implement defin nullabl String::String iso rule determin nullabl column yes column includ null column includ null empti string nullabl column unknown specif name String::String name uniqu identifi procedur schema note databas return column descript procedur precis column repres specifi column size given column numer data maximum precis charact data length charact datetim datatyp length charact String::String represent assum maximum allow precis fraction compon binari data length byte rowid datatyp length byte null return data type where column size applic catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schemapattern schema name pattern match schema name store databas retriev schema null mean schema name narrow search procedurenamepattern procedur name pattern match procedur name store databas columnnamepattern column name pattern match column name store databas ResultSet::ResultSet row describ store procedur paramet column
DatabaseMetaData::getTables retriev descript tabl avail given catalog tabl descript match catalog schema tabl name type criteria return order tabl type tabl cat tabl schem tabl name tabl descript column tabl cat String::String tabl catalog null tabl schem String::String tabl schema null tabl name String::String tabl name tabl type String::String tabl type typic type tabl view system tabl global temporari local temporari alia synonym remark String::String explanatori comment tabl type cat String::String type catalog null type schem String::String type schema null type name String::String type name null self referenc col name String::String name design identifi column type tabl null ref generat String::String specifi valu self referenc col name creat valu system user deriv null note databas return tabl catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schemapattern schema name pattern match schema name store databas retriev schema null mean schema name narrow search tablenamepattern tabl name pattern match tabl name store databas type list tabl type list tabl type return includ null return type ResultSet::ResultSet row tabl descript
DatabaseMetaData::getSchemas retriev schema name avail databas result order tabl catalog tabl schem schema column tabl schem String::String schema name tabl catalog String::String catalog name null ResultSet::ResultSet object row schema descript
DatabaseMetaData::getCatalogs retriev catalog name avail databas result order catalog name catalog column tabl cat String::String catalog name ResultSet::ResultSet object row singl String::String column catalog name
DatabaseMetaData::getTableTypes retriev tabl type avail databas result order tabl type tabl type tabl type String::String tabl type typic type tabl view system tabl global temporari local temporari alia synonym ResultSet::ResultSet object row singl String::String column tabl type
DatabaseMetaData::getColumns retriev descript tabl column avail specifi catalog column descript match catalog schema tabl column name criteria return order tabl schem tabl name ordin posit column descript column tabl cat String::String tabl catalog null tabl schem String::String tabl schema null tabl name String::String tabl name column name String::String column name data type int sql type sql type type name String::String data sourc depend type name udt type name fulli qualifi column size int column size buffer length decim digit int number fraction digit null return data type where decim digit applic num prec radix int radix typic 10 nullabl int null allow columnnonul allow null valu columnnul definit allow null valu columnnullableunknown nullabl unknown remark String::String comment describ column null column def String::String default valu column interpret string valu enclos singl quot null sql data type int unus sql datetim sub int unus char octet length int char type maximum number byte column ordin posit int index column tabl start nullabl String::String iso rule determin nullabl column yes column includ null column includ null empti string nullabl column unknown scope catalog String::String catalog tabl scope refer attribut null data type isn ref scope schema String::String schema tabl scope refer attribut null data type isn ref scope tabl String::String tabl name scope refer attribut null data type isn ref sourc data type sourc type distinct type user generat Ref::Ref type sql type sql type null data type isn distinct user generat ref autoincr String::String indic column auto increment yes column auto increment column auto increment empti string determin column auto increment generatedcolumn String::String indic generat column yes generat column generat column empti string determin generat column column size column specifi column size given column numer data maximum precis charact data length charact datetim datatyp length charact String::String represent assum maximum allow precis fraction compon binari data length byte rowid datatyp length byte null return data type where column size applic catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schemapattern schema name pattern match schema name store databas retriev schema null mean schema name narrow search tablenamepattern tabl name pattern match tabl name store databas columnnamepattern column name pattern match column name store databas ResultSet::ResultSet row column descript
DatabaseMetaData::getColumnPrivileges retriev descript access tabl column privileg match column name criteria return order column name privileg privileg descript column tabl cat String::String tabl catalog null tabl schem String::String tabl schema null tabl name String::String tabl name column name String::String column name grantor String::String grantor access null grante String::String grante access privileg String::String name access select insert updat refrenc grantabl String::String yes grante permit grant null unknown catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schema schema name match schema name store databas retriev schema null mean schema name narrow search tabl tabl name match tabl name store databas columnnamepattern column name pattern match column name store databas ResultSet::ResultSet row column privileg descript
DatabaseMetaData::getTablePrivileges retriev descript access tabl avail catalog note tabl privileg appli column tabl wrong assum privileg appli column system privileg match schema tabl name criteria return order tabl cat tabl schem tabl name privileg privileg descript column tabl cat String::String tabl catalog null tabl schem String::String tabl schema null tabl name String::String tabl name grantor String::String grantor access null grante String::String grante access privileg String::String name access select insert updat refrenc grantabl String::String yes grante permit grant null unknown catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schemapattern schema name pattern match schema name store databas retriev schema null mean schema name narrow search tablenamepattern tabl name pattern match tabl name store databas ResultSet::ResultSet row tabl privileg descript
DatabaseMetaData::getBestRowIdentifier retriev descript tabl optim set column uniqu identifi row order scope column descript column scope actual scope result bestrowtemporari temporari use row bestrowtransact valid remaind current transact bestrowsess valid remaind current session column name String::String column name data type int sql data type sql type type name String::String data sourc depend type name udt type name fulli qualifi column size int precis buffer length int decim digit scale null return data type where decim digit applic pseudo column pseudo column oracl rowid bestrowunknown pseudo column bestrownotpseudo pseudo column bestrowpseudo pseudo column column size column repres specifi column size given column numer data maximum precis charact data length charact datetim datatyp length charact String::String represent assum maximum allow precis fraction compon binari data length byte rowid datatyp length byte null return data type where column size applic catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schema schema name match schema name store databas retriev schema null mean schema name narrow search tabl tabl name match tabl name store databas scope scope interest use valu scope nullabl includ column nullabl ResultSet::ResultSet row column descript
DatabaseMetaData::getVersionColumns retriev descript tabl column automat updat valu row updat unord column descript column scope column name String::String column name data type int sql data type sql type type name String::String data sourc depend type name column size int precis buffer length int length column valu byte decim digit scale null return data type where decim digit applic pseudo column pseudo column oracl rowid versioncolumnunknown pseudo column versioncolumnnotpseudo pseudo column versioncolumnpseudo pseudo column column size column repres specifi column size given column numer data maximum precis charact data length charact datetim datatyp length charact String::String represent assum maximum allow precis fraction compon binari data length byte rowid datatyp length byte null return data type where column size applic catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schema schema name match schema name store databas retriev schema null mean schema name narrow search tabl tabl name match tabl name store databas ResultSet::ResultSet object row column descript
DatabaseMetaData::getPrimaryKeys retriev descript given tabl primari key column order column name primari key column descript column tabl cat String::String tabl catalog null tabl schem String::String tabl schema null tabl name String::String tabl name column name String::String column name key seq sequenc number primari key valu repres first column primari key valu repres column primari key pk name String::String primari key name null catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schema schema name match schema name store databas retriev schema null mean schema name narrow search tabl tabl name match tabl name store databas ResultSet::ResultSet row primari key column descript
DatabaseMetaData::getImportedKeys retriev descript primari key column referenc given tabl foreign key column primari key import tabl order pktabl cat pktabl schem pktabl name key seq primari key column descript column pktabl cat String::String primari key tabl catalog import null pktabl schem String::String primari key tabl schema import null pktabl name String::String primari key tabl name import pkcolumn name String::String primari key column name import fktabl cat String::String foreign key tabl catalog null fktabl schem String::String foreign key tabl schema null fktabl name String::String foreign key tabl name fkcolumn name String::String foreign key column name key seq sequenc number foreign key valu repres first column foreign key valu repres column foreign key updat rule happen foreign key primari key updat importednoact allow updat primari key import importedkeycascad chang import key agre primari key updat importedkeysetnul chang import key null primari key updat importedkeysetdefault chang import key default valu primari key updat importedkeyrestrict importedkeynoact odbc compat delet rule happen foreign key primari delet importedkeynoact allow delet primari key import importedkeycascad delet row import delet key importedkeysetnul chang import key null primari key delet importedkeyrestrict importedkeynoact odbc compat importedkeysetdefault chang import key default primari key delet fk name String::String foreign key name null pk name String::String primari key name null deferr evalu foreign key constraint defer commit importedkeyinitiallydef see sql92 definit importedkeyinitiallyimmedi see sql92 definit importedkeynotdeferr see sql92 definit catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schema schema name match schema name store databas retriev schema null mean schema name narrow search tabl tabl name match tabl name store databas ResultSet::ResultSet row primari key column descript
DatabaseMetaData::getExportedKeys retriev descript foreign key column refer given tabl primari key column foreign key export tabl order fktabl cat fktabl schem fktabl name key seq foreign key column descript column pktabl cat String::String primari key tabl catalog null pktabl schem String::String primari key tabl schema null pktabl name String::String primari key tabl name pkcolumn name String::String primari key column name fktabl cat String::String foreign key tabl catalog null export null fktabl schem String::String foreign key tabl schema null export null fktabl name String::String foreign key tabl name export fkcolumn name String::String foreign key column name export key seq sequenc number foreign key valu repres first column foreign key valu repres column foreign key updat rule happen foreign key primari updat importednoact allow updat primari key import importedkeycascad chang import key agre primari key updat importedkeysetnul chang import key null primari key updat importedkeysetdefault chang import key default valu primari key updat importedkeyrestrict importedkeynoact odbc compat delet rule happen foreign key primari delet importedkeynoact allow delet primari key import importedkeycascad delet row import delet key importedkeysetnul chang import key null primari key delet importedkeyrestrict importedkeynoact odbc compat importedkeysetdefault chang import key default primari key delet fk name String::String foreign key name null pk name String::String primari key name null deferr evalu foreign key constraint defer commit importedkeyinitiallydef see sql92 definit importedkeyinitiallyimmedi see sql92 definit importedkeynotdeferr see sql92 definit catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schema schema name match schema name store databas retriev schema null mean schema name narrow search tabl tabl name match tabl name store databas ResultSet::ResultSet object row foreign key column descript
DatabaseMetaData::getCrossReference retriev descript foreign key column given foreign key tabl refer primari key column repres uniqu constraint parent tabl tabl number column return parent tabl match number column make foreign key order fktabl cat fktabl schem fktabl name key seq foreign key column descript column pktabl cat String::String parent key tabl catalog null pktabl schem String::String parent key tabl schema null pktabl name String::String parent key tabl name pkcolumn name String::String parent key column name fktabl cat String::String foreign key tabl catalog null export null fktabl schem String::String foreign key tabl schema null export null fktabl name String::String foreign key tabl name export fkcolumn name String::String foreign key column name export key seq sequenc number foreign key valu repres first column foreign key valu repres column foreign key updat rule happen foreign key parent key updat importednoact allow updat parent key import importedkeycascad chang import key agre parent key updat importedkeysetnul chang import key null parent key updat importedkeysetdefault chang import key default valu parent key updat importedkeyrestrict importedkeynoact odbc compat delet rule happen foreign key parent key delet importedkeynoact allow delet parent key import importedkeycascad delet row import delet key importedkeysetnul chang import key null primari key delet importedkeyrestrict importedkeynoact odbc compat importedkeysetdefault chang import key default parent key delet fk name String::String foreign key name null pk name String::String parent key name null deferr evalu foreign key constraint defer commit importedkeyinitiallydef see sql92 definit importedkeyinitiallyimmedi see sql92 definit importedkeynotdeferr see sql92 definit parentcatalog catalog name match catalog name store databas retriev catalog null mean drop catalog name select criteria parentschema schema name match schema name store databas retriev schema null mean drop schema name select criteria parentt name tabl export key match tabl name store databas foreigncatalog catalog name match catalog name store databas retriev catalog null mean drop catalog name select criteria foreignschema schema name match schema name store databas retriev schema null mean drop schema name select criteria foreignt name tabl import key match tabl name store databas ResultSet::ResultSet row foreign key column descript
DatabaseMetaData::getTypeInfo retriev descript data type support databas order data type close data type map correspond jdbc sql type databas support sql distinct type DatabaseMetaData::getTypeInfo return singl row type name distinct data type type distinct databas support sql structur type DatabaseMetaData::getTypeInfo return singl row type name struct data type type struct sql distinct structur type support individu type obtain DatabaseMetaData::getUDTs type descript column type name String::String Window::Type name data type int sql data type sql type precis int maximum precis liter prefix String::String prefix quot liter null liter suffix String::String suffix quot liter null creat param String::String paramet creat type null nullabl use null type typenonul allow null valu typenul allow null valu typenullableunknown nullabl unknown case sensit boolean case sensit searchabl use where base type typeprednon support typepredchar support where typepredbas support where typesearch support where unsign attribut boolean unsign fix prec scale boolean money valu auto increment boolean auto increment valu local type name String::String local version type name null minimum scale minimum scale support maximum scale maximum scale support sql data type int unus sql datetim sub int unus num prec radix int 10 precis column repres maximum column size server support given datatyp numer data maximum precis charact data length charact datetim datatyp length charact String::String represent assum maximum allow precis fraction compon binari data length byte rowid datatyp length byte null return data type where column size applic ResultSet::ResultSet object row sql type descript
DatabaseMetaData::getIndexInfo retriev descript given tabl indic statist order non uniqu type index name ordin posit index column descript column tabl cat String::String tabl catalog null tabl schem String::String tabl schema null tabl name String::String tabl name non uniqu boolean index valu non uniqu fals type tableindexstatist index qualifi String::String index catalog null null type tableindexstatist index name String::String index name null type tableindexstatist type index type tableindexstatist identifi tabl statist return conjuct tabl index descript tableindexclust cluster index tableindexhash hash index tableindexoth style index ordin posit column sequenc number index zero type tableindexstatist column name String::String column name null type tableindexstatist asc desc String::String column sort sequenc ascend descend null sort sequenc support null type tableindexstatist cardin type tableindexstatist number row tabl number uniqu valu index page type tableindexstatis number page tabl number page current index filter condit String::String Filter::Filter condit null catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schema schema name match schema name store databas retriev schema null mean schema name narrow search tabl tabl name match tabl name store databas uniqu return indic uniqu valu fals return indic regardless uniqu approxim result allow reflect approxim data valu fals result request accur ResultSet::ResultSet row index column descript
DatabaseMetaData::ownUpdatesAreVisible retriev given type ResultSet::ResultSet object result set updat visibl type ResultSet::ResultSet type resultset type forward resultset type scroll insensit resultset type scroll sensit updat visibl given result set type fals
DatabaseMetaData::ownDeletesAreVisible retriev result set delet visibl type ResultSet::ResultSet type resultset type forward resultset type scroll insensit resultset type scroll sensit delet visibl given result set type fals
DatabaseMetaData::ownInsertsAreVisible retriev result set insert visibl type ResultSet::ResultSet type resultset type forward resultset type scroll insensit resultset type scroll sensit insert visibl given result set type fals
DatabaseMetaData::othersUpdatesAreVisible retriev updat made visibl type ResultSet::ResultSet type resultset type forward resultset type scroll insensit resultset type scroll sensit updat made visibl given result set type fals
DatabaseMetaData::othersDeletesAreVisible retriev delet made visibl type ResultSet::ResultSet type resultset type forward resultset type scroll insensit resultset type scroll sensit delet made visibl given result set type fals
DatabaseMetaData::othersInsertsAreVisible retriev insert made visibl type ResultSet::ResultSet type resultset type forward resultset type scroll insensit resultset type scroll sensit insert made visibl given result set type fals
DatabaseMetaData::updatesAreDetected retriev visibl row updat detect call resultset rowupd type ResultSet::ResultSet type resultset type forward resultset type scroll insensit resultset type scroll sensit chang detect result set type fals
DatabaseMetaData::deletesAreDetected retriev visibl row delet detect call resultset rowdelet DatabaseMetaData::deletesAreDetected return fals mean delet row remov result set type ResultSet::ResultSet type resultset type forward resultset type scroll insensit resultset type scroll sensit delet detect given result set type fals
DatabaseMetaData::insertsAreDetected retriev visibl row insert detect call resultset rowinsert type ResultSet::ResultSet type resultset type forward resultset type scroll insensit resultset type scroll sensit chang detect specifi result set type fals
DatabaseMetaData::supportsBatchUpdates retriev databas support batch updat databas support batch updat fals
DatabaseMetaData::getUDTs retriev descript user defin type udt defin particular schema schema specif udt type object struct distinct type match catalog schema type name type criteria return order data type type cat type schem type name type name paramet fulli qualifi name case catalog schemapattern paramet ignor type descript column type cat String::String type catalog null type schem String::String type schema null type name String::String type name name String::String name data type int type valu defin sql type object struct distinct remark String::String explanatori comment type base type type sourc type distinct type type implement user generat refer type self referenc column structur type defin sql type null data type distinct struct refer generat user defin note driver support udt empti result set return catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schemapattern schema pattern name match schema name store databas retriev schema null mean schema name narrow search typenamepattern type name pattern match type name store databas fulli qualifi name type list user defin type object struct distinct includ null return type ResultSet::ResultSet object row describ udt
DatabaseMetaData::supportsMultipleOpenResults retriev multipl ResultSet::ResultSet object return CallableStatement::CallableStatement object simultan CallableStatement::CallableStatement object return multipl ResultSet::ResultSet object simultan fals
DatabaseMetaData::getSuperTypes retriev descript user defin type udt hierarchi defin particular schema databas immedi super type sub type relationship model supertyp udt match catalog schema type name return type name paramet fulli qualifi name udt name suppli fulli qualifi name catalog schemapattern paramet ignor udt direct super type list row ResultSet::ResultSet object return describ design udt direct supertyp row column type cat String::String udt catalog null type schem String::String udt schema null type name String::String type name udt supertyp cat String::String direct super type catalog null supertyp schem String::String direct super type schema null supertyp name String::String direct super type name note driver support type hierarchi empti result set return catalog catalog name retriev catalog null mean drop catalog name select criteria schemapattern schema name pattern retriev schema typenamepattern udt name pattern fulli qualifi name ResultSet::ResultSet object row give design udt
DatabaseMetaData::getSuperTables retriev descript tabl hierarchi defin particular schema databas supert tabl match catalog schema tabl name return tabl name paramet fulli qualifi name case catalog schemapattern paramet ignor tabl super tabl list supert defin catalog schema sub tabl therefor type descript includ supert type descript column tabl cat String::String type catalog null tabl schem String::String type schema null tabl name String::String type name supert name String::String direct super type name note driver support type hierarchi empti result set return catalog catalog name retriev catalog null mean drop catalog name select criteria schemapattern schema name pattern retriev schema tablenamepattern tabl name pattern fulli qualifi name ResultSet::ResultSet object row type descript
DatabaseMetaData::getAttributes retriev descript given attribut given type user defin type udt avail given schema catalog descript return attribut udt match catalog schema type attribut name criteria order type cat type schem type name ordin posit descript contain inherit attribut ResultSet::ResultSet object return column type cat String::String type catalog null type schem String::String type schema null type name String::String type name attr name String::String attribut name data type int attribut type sql type sql type attr type name String::String data sourc depend type name udt type name fulli qualifi ref type name fulli qualifi repres target type refer type attr size int column size char date type maximum number charact numer decim type precis decim digit int number fraction digit null return data type where decim digit applic num prec radix int radix typic 10 nullabl int null allow attributenonul allow null valu attributenul definit allow null valu attributenullableunknown nullabl unknown remark String::String comment describ column null attr def String::String default valu null sql data type int unus sql datetim sub int unus char octet length int char type maximum number byte column ordin posit int index attribut udt start nullabl String::String iso rule determin nullabl attribut yes attribut includ null attribut includ null empti string nullabl attribut unknown scope catalog String::String catalog tabl scope refer attribut null data type isn ref scope schema String::String schema tabl scope refer attribut null data type isn ref scope tabl String::String tabl name scope refer attribut null data type isn ref sourc data type sourc type distinct type user generat Ref::Ref type sql type sql type null data type isn distinct user generat ref catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schemapattern schema name pattern match schema name store databas retriev schema null mean schema name narrow search typenamepattern type name pattern match type name store databas attributenamepattern attribut name pattern match attribut name declar databas ResultSet::ResultSet object row attribut descript
DatabaseMetaData::getResultSetHoldability retriev databas default holdabl ResultSet::ResultSet object default holdabl resultset hold cursor commit resultset close cursor commit
DatabaseMetaData::getDatabaseMajorVersion retriev major version number databas databas major version
DatabaseMetaData::getDatabaseMinorVersion retriev minor version number databas databas minor version
DatabaseMetaData::getSchemas retriev schema name avail databas result order tabl catalog tabl schem schema column tabl schem String::String schema name tabl catalog String::String catalog name null catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schemapattern schema name match schema name store databas null mean schema name narrow search ResultSet::ResultSet object row schema descript
DatabaseMetaData::getClientInfoProperties retriev list client info properti driver support result set contain column name String::String name client info properti max len int maximum length valu properti default valu String::String default valu properti descript String::String descript properti typic contain where properti store databas ResultSet::ResultSet sort name column ResultSet::ResultSet object row support client info properti
DatabaseMetaData::getFunctions retriev descript system user function avail given catalog system user function descript match schema function name criteria return order function cat function schem function name specif name function descript column function cat String::String function catalog null function schem String::String function schema null function name String::String function name name invok function remark String::String explanatori comment function function type kind function functionresultunknown determin return valu tabl return functionnot return tabl functionreturnst return tabl specif name String::String name uniqu identifi function schema user specifi dbms generat name function name exampl overload function user permiss execut function return DatabaseMetaData::getFunctions catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schemapattern schema name pattern match schema name store databas retriev schema null mean schema name narrow search functionnamepattern function name pattern match function name store databas ResultSet::ResultSet row function descript
DatabaseMetaData::getFunctionColumns retriev descript given catalog system user function paramet return type descript match schema function paramet name criteria return order function cat function schem function name specif name return valu first paramet descript call order column descript follow column number order row ResultSet::ResultSet paramet descript column descript return type descript field function cat String::String function catalog null function schem String::String function schema null function name String::String function name name invok function column name String::String column paramet name column type Short::Short kind column paramet functioncolumnunknown know functioncolumnin paramet functioncolumninout inout paramet functioncolumnout paramet functioncolumnreturn function return valu functioncolumnresult indic paramet column column ResultSet::ResultSet data type int sql type sql type type name String::String sql type name udt type type name fulli qualifi precis int precis length int length byte data scale scale null return data type where scale applic radix radix nullabl contain null functionnonul allow null valu functionnul allow null valu functionnullableunknown nullabl unknown remark String::String comment describ column paramet char octet length int maximum length binari charact base paramet column datatyp return valu null ordin posit int ordin posit start input output paramet valu return row describ function return valu result set column ordin posit column result set start nullabl String::String iso rule determin nullabl paramet column yes paramet column includ null paramet column includ null empti string nullabl paramet column unknown specif name String::String name uniqu identifi function schema user specifi dbms generat name function name exampl overload function precis column repres specifi column size given paramet column numer data maximum precis charact data length charact datetim datatyp length charact String::String represent assum maximum allow precis fraction compon binari data length byte rowid datatyp length byte null return data type where column size applic catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schemapattern schema name pattern match schema name store databas retriev schema null mean schema name narrow search functionnamepattern procedur name pattern match function name store databas columnnamepattern paramet name pattern match paramet column name store databas ResultSet::ResultSet row describ user function paramet column return type
DatabaseMetaData::getPseudoColumns retriev descript pseudo hidden column avail given tabl specifi catalog schema pseudo hidden column store tabl visibl ResultSet::ResultSet specifi queri outermost select list pseudo hidden column necessarili abl modifi pseudo hidden column empti ResultSet::ResultSet return column descript match catalog schema tabl column name criteria return order tabl schem tabl name column name column descript column tabl cat String::String tabl catalog null tabl schem String::String tabl schema null tabl name String::String tabl name column name String::String column name data type int sql type sql type column size int column size decim digit int number fraction digit null return data type where decim digit applic num prec radix int radix typic 10 column usag String::String allow usag column valu return correspond enum name return remark String::String comment describ column null char octet length int char type maximum number byte column nullabl String::String iso rule determin nullabl column yes column includ null column includ null empti string nullabl column unknown column size column specifi column size given column numer data maximum precis charact data length charact datetim datatyp length charact String::String represent assum maximum allow precis fraction compon binari data length byte rowid datatyp length byte null return data type where column size applic catalog catalog name match catalog name store databas retriev catalog null mean catalog name narrow search schemapattern schema name pattern match schema name store databas retriev schema null mean schema name narrow search tablenamepattern tabl name pattern match tabl name store databas columnnamepattern column name pattern match column name store databas ResultSet::ResultSet row column descript
PseudoColumnUsage::PseudoColumnUsage Enumeration::Enumeration pseudo hidden column usag
ClientInfoStatus::ClientInfoStatus Enumeration::Enumeration status reason properti set call connect setclientinfo
RowId::RowId represent map program languag sql rowid valu sql rowid built type valu thought address identifi row databas tabl address logic respect physic determin origin data sourc interfac ResultSet::ResultSet CallableStatement::CallableStatement PreparedStatement::PreparedStatement getrowid setrowid allow programm access sql rowid valu RowId::RowId interfac provid repres valu rowid byte array String::String DatabaseMetaData::getRowIdLifetime interfac DatabaseMetaData::DatabaseMetaData determin RowId::RowId object remain valid durat transact RowId::RowId creat durat session RowId::RowId creat effect identifi row delet addit specifi durat valid lifetim origin data sourc DatabaseMetaData::getRowIdLifetime specifi durat rowid valu valid lifetim origin data sourc differ object limit valid lifetim object origin data sourc RowId::RowId interfac fulli implement jdbc driver support data type
RowId::equals compar RowId::RowId specifi object result argument null RowId::RowId object repres rowid object consid origin valid lifetim RowId::RowId compar RowId::RowId valid tabl data sourc equal identifi row longer guarante valid origin data sourc tabl data sourc equal identifi row obj Object::Object compar RowId::RowId object RowId::RowId equal fals
RowId::toString return String::String repres valu sql rowid design sql rowid object sql date tostr return content date String::String 2004 03 17 date liter sql String::String date 2004 03 17 tostr return content rowid form specif driver suppli connect possibl rowid liter String::String format determin driver suppli connect repres valu rowid design sql rowid object
SQLInvalidAuthorizationSpecException::SQLInvalidAuthorizationSpecException subclass thrown sqlstate valu 28 vendor specifi condit indic author credenti connect establish valid pleas consult driver vendor document vendor specifi condit Exception::Exception thrown
Time::toString format time jdbc time escap format String::String hhmmss format
Time::valueOf obtain instanc Time::Time object hour minut time valu given LocalTime::LocalTime time LocalTime::LocalTime convert Time::Time object
Time::toLocalTime convert Time::Time object LocalTime::LocalTime convers creat LocalTime::LocalTime repres hour minut time valu Time::Time LocalTime::LocalTime object repres time valu
Ref::getObject retriev referenc object map type use given type map map util map object contain map use fulli qualifi name sql structur type referenc object SQLData::SQLData implement sql structur type map Object::Object custom map sql structur type Ref::Ref object refer
Ref::getObject retriev sql structur type instanc referenc Ref::Ref object connect type map entri structur type instanc custom map indic type map structur type instanc map Struct::Struct object Object::Object map sql structur type Ref::Ref object refer
Ref::setObject set structur type valu Ref::Ref object refer given instanc Object::Object driver convert sql structur type send databas valu Object::Object repres sql structur type instanc Ref::Ref object refer
SQLOutput::writeString write attribut stream String::String program languag valu pass databas
SQLOutput::writeBoolean write attribut stream boolean write attribut stream String::String program languag valu pass databas
SQLOutput::writeByte write attribut stream byte write attribut stream String::String program languag valu pass databas
SQLOutput::writeShort write attribut stream write attribut stream String::String program languag valu pass databas
SQLOutput::writeInt write attribut stream int write attribut stream String::String program languag valu pass databas
SQLOutput::writeLong write attribut stream write attribut stream String::String program languag valu pass databas
SQLOutput::writeFloat write attribut stream float write attribut stream String::String program languag valu pass databas
SQLOutput::writeDouble write attribut stream doubl write attribut stream String::String program languag valu pass databas
SQLOutput::writeBigDecimal write attribut stream math bigdecim object write attribut stream String::String program languag valu pass databas
SQLOutput::writeBytes write attribut stream array byte write attribut stream String::String program languag valu pass databas
SQLOutput::writeNString write attribut stream String::String program languag driver convert sql nchar nvarchar longnvarchar valu depend argument size relat driver limit nvarchar valu send stream valu pass databas
SQLClientInfoException::SQLClientInfoException subclass thrown client info properti set Connection::Connection addit SQLException::SQLException SQLClientInfoException::SQLClientInfoException provid list client info properti set databas allow multipl client info properti set atom databas client info properti set connect setclientinfo threw use getfailedproperti retriev list client info properti set properti identifi pass map lt string clientinfostatus gt appropri SQLClientInfoException::SQLClientInfoException constructor
SQLClientInfoException::SQLClientInfoException construct SQLClientInfoException::SQLClientInfoException Object::Object reason sqlstate failedproperti list initi null vendor initi caus initi subsequ initi call
SQLClientInfoException::SQLClientInfoException construct SQLClientInfoException::SQLClientInfoException object initi given failedproperti reason sqlstate initi null vendor initi caus initi subsequ initi call failedproperti Map::Map contain properti valu set key Map::Map contain name client info properti set valu contain reason defin ClientInfoStatus::ClientInfoStatus
SQLClientInfoException::SQLClientInfoException construct SQLClientInfoException::SQLClientInfoException object initi given caus failedproperti reason initi null caus null caus tostr caus null vendor initi failedproperti Map::Map contain properti valu set key Map::Map contain name client info properti set valu contain reason defin ClientInfoStatus::ClientInfoStatus caus save retriev getcaus null indic caus non exist unknown
SQLClientInfoException::SQLClientInfoException construct SQLClientInfoException::SQLClientInfoException object initi given reason failedproperti sqlstate initi null vendor initi caus initi subsequ initi call reason descript failedproperti Map::Map contain properti valu set key Map::Map contain name client info properti set valu contain reason defin ClientInfoStatus::ClientInfoStatus
SQLClientInfoException::SQLClientInfoException construct SQLClientInfoException::SQLClientInfoException object initi given reason caus failedproperti sqlstate initi null vendor initi reason descript failedproperti Map::Map contain properti valu set key Map::Map contain name client info properti set valu contain reason defin ClientInfoStatus::ClientInfoStatus caus reason SQLException::SQLException save retriev getcaus null indic caus non exist unknown
SQLClientInfoException::SQLClientInfoException construct SQLClientInfoException::SQLClientInfoException object initi given reason sqlstate failedproperti caus initi subsequ initi call vendor initi reason descript sqlstate xopen sql2003 identifi failedproperti Map::Map contain properti valu set key Map::Map contain name client info properti set valu contain reason defin ClientInfoStatus::ClientInfoStatus
SQLClientInfoException::SQLClientInfoException construct SQLClientInfoException::SQLClientInfoException object initi given reason sqlstate caus failedproperti vendor initi reason descript sqlstate xopen sql2003 identifi failedproperti Map::Map contain properti valu set key Map::Map contain name client info properti set valu contain reason defin ClientInfoStatus::ClientInfoStatus caus reason SQLException::SQLException save retriev getcaus null indic caus non exist unknown
SQLClientInfoException::SQLClientInfoException construct SQLClientInfoException::SQLClientInfoException object initi given reason sqlstate vendorcod failedproperti caus initi subsequ initi call reason descript sqlstate xopen sql2003 identifi vendorcod databas vendor specif failedproperti Map::Map contain properti valu set key Map::Map contain name client info properti set valu contain reason defin ClientInfoStatus::ClientInfoStatus
SQLClientInfoException::SQLClientInfoException construct SQLClientInfoException::SQLClientInfoException object initi given reason sqlstate caus vendorcod failedproperti reason descript sqlstate xopen sql2003 identifi vendorcod databas vendor specif failedproperti Map::Map contain properti valu set key Map::Map contain name client info properti set valu contain reason defin ClientInfoStatus::ClientInfoStatus caus reason SQLException::SQLException save retriev getcaus null indic caus non exist unknown
SQLClientInfoException::getFailedProperties return list client info properti set key Map::Map contain name client info properti set valu contain reason defin ClientInfoStatus::ClientInfoStatus Map::Map list contain client info properti set
ResultSet::ResultSet tabl data repres databas result set generat execut statement queri databas ResultSet::ResultSet object maintain cursor point current row data initi cursor posit first row move cursor row return fals row ResultSet::ResultSet object loop iter result set default ResultSet::ResultSet object updat cursor move forward thus iter first row last row produc ResultSet::ResultSet object scrollabl updat fragment con valid Connection::Connection object illustr make result set scrollabl insensit updat updat see ResultSet::ResultSet field option Statement::Statement stmt con createstat resultset type scroll insensit resultset concur updat ResultSet::ResultSet rs stmt executequeri select table2 rs scrollabl show chang made updat ResultSet::ResultSet interfac provid getter getboolean getlong retriev column valu current row valu retriev use index number column name column general use column index effici column number maximum portabl result set column row read order column read getter jdbc driver attempt convert data type specifi getter return suitabl valu jdbc specif tabl show allow map sql type type ResultSet::ResultSet getter column name input getter case insensit getter call column name column name valu first match column return column name option design column name sql queri generat result set column explicit name queri use column number column name programm take care guarante uniqu refer intend column assur sql claus set updat ad interfac jdbc trade sdk standard edit version comment regard paramet getter appli paramet updat updat updat column valu current row scrollabl ResultSet::ResultSet object cursor move backward forward absolut posit posit relat current row fragment updat name column fifth row ResultSet::ResultSet object rs use ResultSet::updateRow updat data sourc tabl rs deriv rs absolut move cursor fifth row rs rs updatestr name ainsworth updat name column row ainsworth rs updaterow updat row data sourc insert column valu insert row updat ResultSet::ResultSet object row associ serv stage area build row insert fragment move cursor insert row build column row insert rs data sourc tabl use ResultSet::insertRow rs movetoinsertrow move cursor insert row rs updatestr ainsworth updat first column insert row ainsworth rs updateint 35 updat column 35 rs updateboolean updat third column rs insertrow rs movetocurrentrow ResultSet::ResultSet object automat close Statement::Statement object generat close execut retriev result sequenc multipl result number type properti ResultSet::ResultSet object column ResultSetMetaData::ResultSetMetaData object return resultset getmetadata
ResultSet::next move cursor forward row current posit ResultSet::ResultSet cursor initi posit first row first call make first row current row call make row current row call return fals cursor posit last row invoc ResultSet::ResultSet requir current row result SQLException::SQLException thrown result set type type forward vendor specifi jdbc driver implement return fals throw SQLException::SQLException subsequ call input stream open current row call implicit close ResultSet::ResultSet object warn chain clear row read current row valid fals row
ResultSet::close releas ResultSet::ResultSet object databas jdbc resourc instead wait happen automat close close ResultSet::ResultSet object close Blob::Blob Clob::Clob NClob::NClob object creat ResultSet::ResultSet Blob::Blob Clob::Clob NClob::NClob object remain valid durat transact creat free invok ResultSet::ResultSet close ResultSetMetaData::ResultSetMetaData instanc creat call getmetadata remain access note ResultSet::ResultSet object automat close Statement::Statement object generat Statement::Statement object close execut retriev result sequenc multipl result call close ResultSet::ResultSet object close op
ResultSet::getString retriev valu design column current row ResultSet::ResultSet object String::String program languag columnindex first column column valu valu sql null valu return null
ResultSet::getBoolean retriev valu design column current row ResultSet::ResultSet object boolean program languag design column datatyp char varchar contain datatyp bit tinyint smallint integ bigint contain valu fals return design column datatyp char varchar contain datatyp bit tinyint smallint integ bigint contain valu return columnindex first column column valu valu sql null valu return fals
ResultSet::getByte retriev valu design column current row ResultSet::ResultSet object byte program languag columnindex first column column valu valu sql null valu return
ResultSet::getShort retriev valu design column current row ResultSet::ResultSet object program languag columnindex first column column valu valu sql null valu return
ResultSet::getInt retriev valu design column current row ResultSet::ResultSet object int program languag columnindex first column column valu valu sql null valu return
ResultSet::getLong retriev valu design column current row ResultSet::ResultSet object program languag columnindex first column column valu valu sql null valu return
ResultSet::getFloat retriev valu design column current row ResultSet::ResultSet object float program languag columnindex first column column valu valu sql null valu return
ResultSet::getDouble retriev valu design column current row ResultSet::ResultSet object doubl program languag columnindex first column column valu valu sql null valu return
ResultSet::getBigDecimal retriev valu design column current row ResultSet::ResultSet object sql bigdecim program languag columnindex first column scale number digit decim point column valu valu sql null valu return null
ResultSet::getBytes retriev valu design column current row ResultSet::ResultSet object byte array program languag byte repres raw valu return driver columnindex first column column valu valu sql null valu return null
ResultSet::getDate retriev valu design column current row ResultSet::ResultSet object sql date object program languag columnindex first column column valu valu sql null valu return null
ResultSet::getTime retriev valu design column current row ResultSet::ResultSet object sql time object program languag columnindex first column column valu valu sql null valu return null
ResultSet::getTimestamp retriev valu design column current row ResultSet::ResultSet object sql timestamp object program languag columnindex first column column valu valu sql null valu return null
ResultSet::getAsciiStream retriev valu design column current row ResultSet::ResultSet object stream ascii charact valu read chunk stream particular suitabl retriev longvarchar valu jdbc driver necessari convers databas format ascii note data return stream read prior get valu column call getter implicit close stream stream return inputstream avail call data avail columnindex first column input stream deliv databas column valu stream byte ascii charact valu sql null valu return null
ResultSet::getUnicodeStream retriev valu design column current row ResultSet::ResultSet object stream byte charact first byte byte byte low byte valu read chunk stream particular suitabl retriev longvarchar jdbc driver necessari convers databas format unicod note data return stream read prior get valu column call getter implicit close stream stream return inputstream avail call data avail columnindex first column input stream deliv databas column valu stream byte unicod charact valu sql null valu return null
ResultSet::getBinaryStream retriev valu design column current row ResultSet::ResultSet object stream uninterpret byte valu read chunk stream particular suitabl retriev longvarbinari valu note data return stream read prior get valu column call getter implicit close stream stream return inputstream avail call data avail columnindex first column input stream deliv databas column valu stream uninterpret byte valu sql null valu return null
ResultSet::getString retriev valu design column current row ResultSet::ResultSet object String::String program languag columnlabel label column specifi sql claus sql claus specifi label name column column valu valu sql null valu return null
ResultSet::getBoolean retriev valu design column current row ResultSet::ResultSet object boolean program languag design column datatyp char varchar contain datatyp bit tinyint smallint integ bigint contain valu fals return design column datatyp char varchar contain datatyp bit tinyint smallint integ bigint contain valu return columnlabel label column specifi sql claus sql claus specifi label name column column valu valu sql null valu return fals
ResultSet::getByte retriev valu design column current row ResultSet::ResultSet object byte program languag columnlabel label column specifi sql claus sql claus specifi label name column column valu valu sql null valu return
ResultSet::getShort retriev valu design column current row ResultSet::ResultSet object program languag columnlabel label column specifi sql claus sql claus specifi label name column column valu valu sql null valu return
ResultSet::getInt retriev valu design column current row ResultSet::ResultSet object int program languag columnlabel label column specifi sql claus sql claus specifi label name column column valu valu sql null valu return
ResultSet::getLong retriev valu design column current row ResultSet::ResultSet object program languag columnlabel label column specifi sql claus sql claus specifi label name column column valu valu sql null valu return
ResultSet::getFloat retriev valu design column current row ResultSet::ResultSet object float program languag columnlabel label column specifi sql claus sql claus specifi label name column column valu valu sql null valu return
ResultSet::getDouble retriev valu design column current row ResultSet::ResultSet object doubl program languag columnlabel label column specifi sql claus sql claus specifi label name column column valu valu sql null valu return
ResultSet::getBigDecimal retriev valu design column current row ResultSet::ResultSet object math bigdecim program languag columnlabel label column specifi sql claus sql claus specifi label name column scale number digit decim point column valu valu sql null valu return null
ResultSet::getBytes retriev valu design column current row ResultSet::ResultSet object byte array program languag byte repres raw valu return driver columnlabel label column specifi sql claus sql claus specifi label name column column valu valu sql null valu return null
ResultSet::getDate retriev valu design column current row ResultSet::ResultSet object sql date object program languag columnlabel label column specifi sql claus sql claus specifi label name column column valu valu sql null valu return null
ResultSet::getTime retriev valu design column current row ResultSet::ResultSet object sql time object program languag columnlabel label column specifi sql claus sql claus specifi label name column column valu valu sql null valu return null
ResultSet::getTimestamp retriev valu design column current row ResultSet::ResultSet object sql timestamp object program languag columnlabel label column specifi sql claus sql claus specifi label name column column valu valu sql null valu return null
ResultSet::getAsciiStream retriev valu design column current row ResultSet::ResultSet object stream ascii charact valu read chunk stream particular suitabl retriev longvarchar valu jdbc driver necessari convers databas format ascii note data return stream read prior get valu column call getter implicit close stream stream return avail call data avail columnlabel label column specifi sql claus sql claus specifi label name column input stream deliv databas column valu stream byte ascii charact valu sql null valu return null
ResultSet::getUnicodeStream retriev valu design column current row ResultSet::ResultSet object stream byte unicod charact first byte byte byte low byte valu read chunk stream particular suitabl retriev longvarchar valu jdbc technolog enabl driver necessari convers databas format unicod note data return stream read prior get valu column call getter implicit close stream stream return inputstream avail call data avail columnlabel label column specifi sql claus sql claus specifi label name column input stream deliv databas column valu stream byte unicod charact valu sql null valu return null
ResultSet::getBinaryStream retriev valu design column current row ResultSet::ResultSet object stream uninterpret byte valu read chunk stream particular suitabl retriev longvarbinari valu note data return stream read prior get valu column call getter implicit close stream stream return avail call data avail columnlabel label column specifi sql claus sql claus specifi label name column input stream deliv databas column valu stream uninterpret byte valu sql null result null
ResultSet::getWarnings retriev first warn report call ResultSet::ResultSet object subsequ warn ResultSet::ResultSet object chain SQLWarning::SQLWarning object return warn chain automat clear time row read call ResultSet::ResultSet object close caus SQLException::SQLException thrown note warn chain cover warn caus ResultSet::ResultSet warn caus Statement::Statement read paramet chain Statement::Statement object first SQLWarning::SQLWarning object report null
ResultSet::clearWarnings clear warn report ResultSet::ResultSet object call getwarn return null warn report ResultSet::ResultSet object
ResultSet::getCursorName retriev name sql cursor ResultSet::ResultSet object sql result tabl retriev cursor name current row result set updat delet use posit updat delet statement refer cursor name insur cursor proper isol level support updat cursor select statement form select updat updat omit posit updat fail jdbc support sql featur name sql cursor ResultSet::ResultSet object current row ResultSet::ResultSet object current row sql cursor sql name ResultSet::ResultSet object cursor
ResultSet::getMetaData retriev number type properti ResultSet::ResultSet object column descript ResultSet::ResultSet object column
ResultSet::getObject get valu design column current row ResultSet::ResultSet object Object::Object program languag return valu given column object type object default object type correspond column sql type map built type specifi jdbc specif valu sql null driver return null read databas specif abstract data type jdbc behavior getobject extend materi data sql user defin type connect gettypemap throw SQLFeatureNotSupportedException::SQLFeatureNotSupportedException column contain structur distinct valu behavior call getobject columnindex getstat getconnect gettypemap connect gettypemap throw SQLFeatureNotSupportedException::SQLFeatureNotSupportedException structur valu support distinct valu map default determin sql type distinct type columnindex first column lang object hold column valu
ResultSet::getObject get valu design column current row ResultSet::ResultSet object Object::Object program languag return valu given column object type object default object type correspond column sql type map built type specifi jdbc specif valu sql null driver return null read databas specif abstract data type jdbc behavior getobject extend materi data sql user defin type column contain structur distinct valu behavior call getobject columnindex getstat getconnect gettypemap columnlabel label column specifi sql claus sql claus specifi label name column lang object hold column valu
ResultSet::findColumn map given ResultSet::ResultSet column label ResultSet::ResultSet column index columnlabel label column specifi sql claus sql claus specifi label name column column index given column name
ResultSet::getCharacterStream retriev valu design column current row ResultSet::ResultSet object io reader object io reader object contain column valu valu sql null valu return null program languag columnindex first column
ResultSet::getCharacterStream retriev valu design column current row ResultSet::ResultSet object io reader object columnlabel label column specifi sql claus sql claus specifi label name column io reader object contain column valu valu sql null valu return null program languag
ResultSet::getBigDecimal retriev valu design column current row ResultSet::ResultSet object math bigdecim full precis columnindex first column column valu full precis valu sql null valu return null program languag
ResultSet::getBigDecimal retriev valu design column current row ResultSet::ResultSet object math bigdecim full precis columnlabel label column specifi sql claus sql claus specifi label name column column valu full precis valu sql null valu return null program languag
ResultSet::isBeforeFirst retriev cursor first row ResultSet::ResultSet object note support ResultSet::isBeforeFirst option ResultSet::ResultSet result set type type forward cursor first row fals cursor posit result set contain row
ResultSet::isAfterLast retriev cursor last row ResultSet::ResultSet object note support ResultSet::isAfterLast option ResultSet::ResultSet result set type type forward cursor last row fals cursor posit result set contain row
ResultSet::isFirst retriev cursor first row ResultSet::ResultSet object note support ResultSet::isFirst option ResultSet::ResultSet result set type type forward cursor first row fals
ResultSet::isLast retriev cursor last row ResultSet::ResultSet object note call ResultSet::isLast expens jdbc driver fetch ahead row order determin current row last row result set note support ResultSet::isLast option ResultSet::ResultSet result set type type forward cursor last row fals
ResultSet::beforeFirst move cursor front ResultSet::ResultSet object first row effect result set contain row
ResultSet::afterLast move cursor end ResultSet::ResultSet object last row effect result set contain row
ResultSet::first move cursor first row ResultSet::ResultSet object cursor valid row fals row result set
ResultSet::last move cursor last row ResultSet::ResultSet object cursor valid row fals row result set
ResultSet::getRow retriev current row number first row number number note support ResultSet::getRow option ResultSet::ResultSet result set type type forward current row number current row
ResultSet::absolute move cursor given row number ResultSet::ResultSet object row number posit cursor move given row number respect begin result set first row row row given row number negat cursor move absolut row posit respect end result set exampl call absolut posit cursor last row call absolut move cursor last row row number specifi zero cursor move first row attempt posit cursor first last row result set leav cursor first row last row note call absolut call first call absolut call last row number row cursor move valu zero indic cursor posit first row posit number indic row number count begin result set negat number indic row number count end result set cursor move posit ResultSet::ResultSet object fals cursor first row last row
ResultSet::previous move cursor previous row ResultSet::ResultSet object call previous return fals cursor posit first row invoc ResultSet::ResultSet requir current row result SQLException::SQLException thrown input stream open current row call previous implicit close ResultSet::ResultSet object warn chang clear row read cursor posit valid row fals cursor posit first row
ResultSet::setFetchDirection give hint direct row ResultSet::ResultSet object process initi valu determin Statement::Statement object produc ResultSet::ResultSet object fetch direct chang time direct int specifi suggest fetch direct resultset fetch forward resultset fetch revers resultset fetch unknown
ResultSet::getFetchDirection retriev fetch direct ResultSet::ResultSet object current fetch direct ResultSet::ResultSet object
ResultSet::setFetchSize give jdbc driver hint number row fetch databas row ResultSet::ResultSet object fetch size specifi zero jdbc driver ignor valu free make guess fetch size default valu set Statement::Statement object creat result set fetch size chang time row number row fetch
ResultSet::getFetchSize retriev fetch size ResultSet::ResultSet object current fetch size ResultSet::ResultSet object
ResultSet::getType retriev type ResultSet::ResultSet object type determin Statement::Statement object creat result set resultset type forward resultset type scroll insensit resultset type scroll sensit
ResultSet::getConcurrency retriev concurr mode ResultSet::ResultSet object concurr determin Statement::Statement object creat result set concurr type resultset concur read resultset concur updat
ResultSet::rowInserted retriev current row insert valu return depend ResultSet::ResultSet object detect visibl insert note support ResultSet::rowInserted option result set concurr concur read current row detect insert fals
ResultSet::rowDeleted retriev row delet delet row leav visibl hole result set detect hole result set valu return depend ResultSet::ResultSet object detect delet note support ResultSet::rowDeleted option result set concurr concur read current row detect delet owner fals
ResultSet::updateString updat design column String::String valu updat updat column valu current row insert row updat updat databas instead ResultSet::updateRow ResultSet::insertRow call updat databas columnindex first column column valu
ResultSet::updateObject updat design column Object::Object valu updat updat column valu current row insert row updat updat databas instead ResultSet::updateRow ResultSet::insertRow call updat databas argument InputStream::InputStream stream contain number byte specifi scaleorlength argument Reader::Reader reader contain number charact specifi scaleorlength condit driver generat SQLException::SQLException statement execut columnindex first column column valu scaleorlength object math bigdecim number digit decim point Object::Object type InputStream::InputStream Reader::Reader length data stream reader type valu ignor
ResultSet::updateObject updat design column Object::Object valu updat updat column valu current row insert row updat updat databas instead ResultSet::updateRow ResultSet::insertRow call updat databas columnindex first column column valu
ResultSet::updateString updat design column String::String valu updat updat column valu current row insert row updat updat databas instead ResultSet::updateRow ResultSet::insertRow call updat databas columnlabel label column specifi sql claus sql claus specifi label name column column valu
ResultSet::updateObject updat design column Object::Object valu updat updat column valu current row insert row updat updat databas instead ResultSet::updateRow ResultSet::insertRow call updat databas argument InputStream::InputStream stream contain number byte specifi scaleorlength argument Reader::Reader reader contain number charact specifi scaleorlength condit driver generat SQLException::SQLException statement execut columnlabel label column specifi sql claus sql claus specifi label name column column valu scaleorlength object math bigdecim number digit decim point Object::Object type InputStream::InputStream Reader::Reader length data stream reader type valu ignor
ResultSet::updateObject updat design column Object::Object valu updat updat column valu current row insert row updat updat databas instead ResultSet::updateRow ResultSet::insertRow call updat databas columnlabel label column specifi sql claus sql claus specifi label name column column valu
ResultSet::insertRow insert content insert row ResultSet::ResultSet object databas cursor insert row call
ResultSet::updateRow updat databas content current row ResultSet::ResultSet object call cursor insert row
ResultSet::deleteRow delet current row ResultSet::ResultSet object databas call cursor insert row
ResultSet::cancelRowUpdates cancel updat made current row ResultSet::ResultSet object call call updat call ResultSet::updateRow roll updat made row updat made ResultSet::updateRow call effect
ResultSet::getStatement retriev Statement::Statement object produc ResultSet::ResultSet object result set generat DatabaseMetaData::DatabaseMetaData return null Statement::Statement object produc ResultSet::ResultSet object null result set produc
ResultSet::getObject retriev valu design column current row ResultSet::ResultSet object Object::Object program languag valu sql null driver return null use given Map::Map object custom map sql structur distinct type retriev columnindex first column map util map object contain map sql type name program languag Object::Object program languag repres sql valu
ResultSet::getRef retriev valu design column current row ResultSet::ResultSet object Ref::Ref object program languag columnindex first column Ref::Ref object repres sql ref valu
ResultSet::getBlob retriev valu design column current row ResultSet::ResultSet object Blob::Blob object program languag columnindex first column Blob::Blob object repres sql blob valu specifi column
ResultSet::getClob retriev valu design column current row ResultSet::ResultSet object Clob::Clob object program languag columnindex first column Clob::Clob object repres sql clob valu specifi column
ResultSet::getArray retriev valu design column current row ResultSet::ResultSet object Array::Array object program languag columnindex first column Array::Array object repres sql array valu specifi column
ResultSet::getObject retriev valu design column current row ResultSet::ResultSet object Object::Object program languag valu sql null driver return null use specifi Map::Map object custom map appropri columnlabel label column specifi sql claus sql claus specifi label name column map util map object contain map sql type name program languag Object::Object repres sql valu specifi column
ResultSet::getRef retriev valu design column current row ResultSet::ResultSet object Ref::Ref object program languag columnlabel label column specifi sql claus sql claus specifi label name column Ref::Ref object repres sql ref valu specifi column
ResultSet::getBlob retriev valu design column current row ResultSet::ResultSet object Blob::Blob object program languag columnlabel label column specifi sql claus sql claus specifi label name column Blob::Blob object repres sql blob valu specifi column
ResultSet::getClob retriev valu design column current row ResultSet::ResultSet object Clob::Clob object program languag columnlabel label column specifi sql claus sql claus specifi label name column Clob::Clob object repres sql clob valu specifi column
ResultSet::getArray retriev valu design column current row ResultSet::ResultSet object Array::Array object program languag columnlabel label column specifi sql claus sql claus specifi label name column Array::Array object repres sql array valu specifi column
ResultSet::getDate retriev valu design column current row ResultSet::ResultSet object sql date object program languag use given calendar construct appropri millisecond valu date databas store timezon columnindex first column cal util calendar object use construct date column valu sql date object valu sql null valu return null program languag
ResultSet::getDate retriev valu design column current row ResultSet::ResultSet object sql date object program languag use given calendar construct appropri millisecond valu date databas store timezon columnlabel label column specifi sql claus sql claus specifi label name column cal util calendar object use construct date column valu sql date object valu sql null valu return null program languag
ResultSet::getTime retriev valu design column current row ResultSet::ResultSet object sql time object program languag use given calendar construct appropri millisecond valu time databas store timezon columnindex first column cal util calendar object use construct time column valu sql time object valu sql null valu return null program languag
ResultSet::getTime retriev valu design column current row ResultSet::ResultSet object sql time object program languag use given calendar construct appropri millisecond valu time databas store timezon columnlabel label column specifi sql claus sql claus specifi label name column cal util calendar object use construct time column valu sql time object valu sql null valu return null program languag
ResultSet::getTimestamp retriev valu design column current row ResultSet::ResultSet object sql timestamp object program languag use given calendar construct appropri millisecond valu timestamp databas store timezon columnindex first column cal util calendar object use construct timestamp column valu sql timestamp object valu sql null valu return null program languag
ResultSet::getTimestamp retriev valu design column current row ResultSet::ResultSet object sql timestamp object program languag use given calendar construct appropri millisecond valu timestamp databas store timezon columnlabel label column specifi sql claus sql claus specifi label name column cal util calendar object use construct date column valu sql timestamp object valu sql null valu return null program languag
ResultSet::getURL retriev valu design column current row ResultSet::ResultSet object url object program languag columnindex index column first column valu url object valu sql null valu return null program languag
ResultSet::getURL retriev valu design column current row ResultSet::ResultSet object url object program languag columnlabel label column specifi sql claus sql claus specifi label name column column valu url object valu sql null valu return null program languag
ResultSet::getRowId retriev valu design column current row ResultSet::ResultSet object sql rowid object program languag columnindex first column column valu valu sql null valu return null
ResultSet::getRowId retriev valu design column current row ResultSet::ResultSet object sql rowid object program languag columnlabel label column specifi sql claus sql claus specifi label name column column valu valu sql null valu return null
ResultSet::getHoldability retriev holdabl ResultSet::ResultSet object resultset hold cursor commit resultset close cursor commit
ResultSet::isClosed retriev ResultSet::ResultSet object close ResultSet::ResultSet close close call automat close ResultSet::ResultSet object close fals open
ResultSet::updateNString updat design column String::String valu intend use updat nvarchar longnvarchar column updat updat column valu current row insert row updat updat databas instead ResultSet::updateRow ResultSet::insertRow call updat databas columnindex first column nstring valu column updat
ResultSet::updateNString updat design column String::String valu intend use updat nvarchar longnvarchar column updat updat column valu current row insert row updat updat databas instead ResultSet::updateRow ResultSet::insertRow call updat databas columnlabel label column specifi sql claus sql claus specifi label name column nstring valu column updat
ResultSet::getNClob retriev valu design column current row ResultSet::ResultSet object NClob::NClob object program languag columnindex first column NClob::NClob object repres sql nclob valu specifi column
ResultSet::getNClob retriev valu design column current row ResultSet::ResultSet object NClob::NClob object program languag columnlabel label column specifi sql claus sql claus specifi label name column NClob::NClob object repres sql nclob valu specifi column
ResultSet::getSQLXML retriev valu design column current row ResultSet::ResultSet sql sqlxml object program languag columnindex first column sqlxml object map sql xml valu
ResultSet::getSQLXML retriev valu design column current row ResultSet::ResultSet sql sqlxml object program languag columnlabel label column specifi sql claus sql claus specifi label name column sqlxml object map sql xml valu
ResultSet::getNString retriev valu design column current row ResultSet::ResultSet object String::String program languag intend use access nvarchar longnvarchar column columnindex first column column valu valu sql null valu return null
ResultSet::getNString retriev valu design column current row ResultSet::ResultSet object String::String program languag intend use access nvarchar longnvarchar column columnlabel label column specifi sql claus sql claus specifi label name column column valu valu sql null valu return null
ResultSet::getNCharacterStream retriev valu design column current row ResultSet::ResultSet object io reader object intend use access nvarchar longnvarchar column io reader object contain column valu valu sql null valu return null program languag columnindex first column
ResultSet::getNCharacterStream retriev valu design column current row ResultSet::ResultSet object io reader object intend use access nvarchar longnvarchar column columnlabel label column specifi sql claus sql claus specifi label name column io reader object contain column valu valu sql null valu return null program languag
ResultSet::getObject retriev valu design column current row ResultSet::ResultSet object convert sql type column request data type convers support convers support null specifi type SQLException::SQLException thrown minimum implement support convers defin appendix tabl PageAttributes::B3 convers appropri user defin sql type type implement sqldata Struct::Struct addit convers support vendor defin type model Class::Class object columnindex first column type Class::Class repres data type convert design column instanc type hold column valu
ResultSet::getObject retriev valu design column current row ResultSet::ResultSet object convert sql type column request data type convers support convers support null specifi type SQLException::SQLException thrown minimum implement support convers defin appendix tabl PageAttributes::B3 convers appropri user defin sql type type implement sqldata Struct::Struct addit convers support vendor defin columnlabel label column specifi sql claus sql claus specifi label name column type Class::Class repres data type convert design column type model Class::Class object instanc type hold column valu
ResultSet::updateObject updat design column Object::Object valu updat updat column valu current row insert row updat updat databas instead ResultSet::updateRow ResultSet::insertRow call updat databas argument InputStream::InputStream stream contain number byte specifi scaleorlength argument Reader::Reader reader contain number charact specifi scaleorlength condit driver generat sqlexcept statement execut default implement throw sqlfeaturenotsupportedexcept columnindex first column column valu targetsqltyp sql type sent databas scaleorlength object math bigdecim number digit decim point Object::Object type InputStream::InputStream Reader::Reader length data stream reader type valu ignor
ResultSet::updateObject updat design column Object::Object valu updat updat column valu current row insert row updat updat databas instead ResultSet::updateRow ResultSet::insertRow call updat databas argument InputStream::InputStream stream contain number byte specifi scaleorlength argument Reader::Reader reader contain number charact specifi scaleorlength condit driver generat sqlexcept statement execut default implement throw sqlfeaturenotsupportedexcept columnlabel label column specifi sql claus sql claus specifi label name column column valu targetsqltyp sql type sent databas scaleorlength object math bigdecim number digit decim point Object::Object type InputStream::InputStream Reader::Reader length data stream reader type valu ignor
ResultSet::updateObject updat design column Object::Object valu updat updat column valu current row insert row updat updat databas instead ResultSet::updateRow ResultSet::insertRow call updat databas default implement throw sqlfeaturenotsupportedexcept columnindex first column column valu targetsqltyp sql type sent databas
ResultSet::updateObject updat design column Object::Object valu updat updat column valu current row insert row updat updat databas instead ResultSet::updateRow ResultSet::insertRow call updat databas default implement throw sqlfeaturenotsupportedexcept columnlabel label column specifi sql claus sql claus specifi label name column column valu targetsqltyp sql type sent databas
Date::Date thin wrapper millisecond valu allow jdbc identifi sql date valu millisecond valu repres number millisecond pass januari 1970 000000 000 gmt conform definit sql date millisecond valu wrap sql date instanc normal set hour minut millisecond zero particular time zone instanc associ
Date::Date construct Date::Date object initi given year month day result undefin given argument bound year year 1900 8099 note 8099 9999 1900 month 11 day 31
Date::Date construct Date::Date object use given millisecond time valu given millisecond valu contain time driver set time compon time default time zone time zone virtual machin run correspond zero gmt date millisecond januari 1970 000000 gmt exceed millisecond represent year 8099 negat number indic number millisecond januari 1970 000000 gmt
Date::setTime set exist Date::Date object use given millisecond time valu given millisecond valu contain time driver set time compon time default time zone time zone virtual machin run correspond zero gmt date millisecond januari 1970 000000 gmt exceed millisecond represent year 8099 negat number indic number millisecond januari 1970 000000 gmt
Date::valueOf convert string jdbc date escap format Date::Date valu String::String object repres date format yyyi lead zero mm dd omit sql date object repres given date
Date::toString format date date escap format yyyi mm dd String::String yyyi mm dd format
Date::getHours deprec sql Date::Date valu time compon
Date::getMinutes deprec sql Date::Date valu time compon
Date::getSeconds deprec sql Date::Date valu time compon
Date::setHours deprec sql Date::Date valu time compon
Date::setMinutes deprec sql Date::Date valu time compon
Date::setSeconds deprec sql Date::Date valu time compon
Date::valueOf obtain instanc Date::Date object year month day month valu given LocalDate::LocalDate LocalDate::LocalDate interpret local date local time zone date LocalDate::LocalDate convert Date::Date object
Date::toLocalDate convert Date::Date object LocalDate::LocalDate convers creat LocalDate::LocalDate repres date valu Date::Date local time zone LocalDate::LocalDate object repres date valu
Date::toInstant throw UnsupportedOperationException::UnsupportedOperationException sql Date::Date valu time compon
PreparedStatement::PreparedStatement object repres precompil sql statement sql statement precompil store PreparedStatement::PreparedStatement object object effici execut statement multipl time note setter setshort setstr set paramet valu specifi type compat defin sql type input paramet instanc paramet sql type integ setint arbitrari paramet type convers requir setobject target sql type exampl set paramet con repres activ connect PreparedStatement::PreparedStatement pstmt con preparestat updat employe set salari where pstmt setbigdecim 153833 00 pstmt setint 110592
PreparedStatement::executeQuery execut sql queri PreparedStatement::PreparedStatement object return ResultSet::ResultSet object generat queri ResultSet::ResultSet object contain data produc queri null
PreparedStatement::executeUpdate execut sql statement PreparedStatement::PreparedStatement object sql data manipul languag dml statement Event::INSERT PaintEvent::UPDATE delet sql statement return ddl statement row count sql data manipul languag dml statement sql statement return
PreparedStatement::setInt set design paramet given int valu driver convert sql integ valu send databas parameterindex first paramet paramet valu
PreparedStatement::setString set design paramet given String::String valu driver convert sql varchar longvarchar valu depend argument size relat driver limit varchar valu send databas parameterindex first paramet paramet valu
PreparedStatement::setObject set valu design paramet use given object jdbc specif specifi standard map Object::Object type sql type given argument convert correspond sql type sent databas note pass datatabas specif abstract data type use driver specif type object implement interfac SQLData::SQLData jdbc driver call sqldata writesql write sql data stream hand object implement Ref::Ref Blob::Blob Clob::Clob NClob::NClob Struct::Struct url RowId::RowId sqlxml Array::Array driver pass databas valu correspond sql type note databas allow non type null sent backend maximum portabl setnul setobject int parameterindex Object::Object int sqltype instead setobject int parameterindex Object::Object note throw ambigu exampl object implement interfac name parameterindex first paramet object contain input paramet valu
PreparedStatement::execute execut sql statement PreparedStatement::PreparedStatement object kind sql statement prepar statement return multipl result execut handl complex statement simpler form statement handl executequeri executeupd execut return boolean indic form first result call getresultset Statement::getUpdateCount retriev result call Statement::getMoreResults move subsequ result first result ResultSet::ResultSet object fals first result updat count result
PreparedStatement::addBatch add set paramet PreparedStatement::PreparedStatement object batch command
PreparedStatement::getMetaData retriev ResultSetMetaData::ResultSetMetaData object contain column ResultSet::ResultSet object return PreparedStatement::PreparedStatement object execut PreparedStatement::PreparedStatement object precompil know ResultSet::ResultSet object return execut consequ invok getmetadata PreparedStatement::PreparedStatement object wait execut invok resultset getmetadata ResultSet::ResultSet object return note use expens driver due lack dbms support descript ResultSet::ResultSet object column null driver return ResultSetMetaData::ResultSetMetaData object
PreparedStatement::setDate set design paramet given sql date valu use given Calendar::Calendar object driver use Calendar::Calendar object construct sql date valu driver send databas Calendar::Calendar object driver calcul date take account custom timezon Calendar::Calendar object specifi driver use default timezon virtual machin run parameterindex first paramet paramet valu cal Calendar::Calendar object driver use construct date
PreparedStatement::setTime set design paramet given sql time valu use given Calendar::Calendar object driver use Calendar::Calendar object construct sql time valu driver send databas Calendar::Calendar object driver calcul time take account custom timezon Calendar::Calendar object specifi driver use default timezon virtual machin run parameterindex first paramet paramet valu cal Calendar::Calendar object driver use construct time
PreparedStatement::setTimestamp set design paramet given sql timestamp valu use given Calendar::Calendar object driver use Calendar::Calendar object construct sql timestamp valu driver send databas Calendar::Calendar object driver calcul timestamp take account custom timezon Calendar::Calendar object specifi driver use default timezon virtual machin run parameterindex first paramet paramet valu cal Calendar::Calendar object driver use construct timestamp
PreparedStatement::getParameterMetaData retriev number type properti PreparedStatement::PreparedStatement object paramet ParameterMetaData::ParameterMetaData object contain number type properti paramet marker PreparedStatement::PreparedStatement object
PreparedStatement::setNString set design paramet given String::String object driver convert sql nchar nvarchar longnvarchar valu depend argument size relat driver limit nvarchar valu send databas parameterindex first paramet valu paramet valu
PreparedStatement::setClob set design paramet Reader::Reader object reader contain number charact specifi length SQLException::SQLException generat PreparedStatement::PreparedStatement execut differ setcharacterstream int Reader::Reader int inform driver paramet valu sent server clob setcharacterstream driver extra work determin paramet data sent server longvarchar clob parameterindex index first paramet reader object contain data set paramet valu length number charact paramet data
PreparedStatement::setBlob set design paramet InputStream::InputStream object inputstream contain number charact specifi length SQLException::SQLException generat PreparedStatement::PreparedStatement execut differ setbinarystream int InputStream::InputStream int inform driver paramet valu sent server blob setbinarystream driver extra work determin paramet data sent server longvarbinari blob parameterindex index first paramet inputstream object contain data set paramet valu length number byte paramet data
PreparedStatement::setNClob set design paramet Reader::Reader object reader contain number charact specifi length SQLException::SQLException generat PreparedStatement::PreparedStatement execut differ setcharacterstream int Reader::Reader int inform driver paramet valu sent server nclob setcharacterstream driver extra work determin paramet data sent server longnvarchar nclob parameterindex index first paramet reader object contain data set paramet valu length number charact paramet data
PreparedStatement::setObject set valu design paramet given object argument InputStream::InputStream stream contain number byte specifi scaleorlength argument Reader::Reader reader contain number charact specifi scaleorlength condit driver generat SQLException::SQLException prepar statement execut given object convert given targetsqltyp sent databas object custom map implement interfac SQLData::SQLData jdbc driver call sqldata writesql write sql data stream hand object implement Ref::Ref Blob::Blob Clob::Clob NClob::NClob Struct::Struct url Array::Array driver pass databas valu correspond sql type note pass databas specif abstract data type parameterindex first paramet object contain input paramet valu targetsqltyp sql type defin sql type sent databas scale argument further qualifi type scaleorlength sql type decim sql type numer type number digit decim point Object::Object type InputStream::InputStream Reader::Reader length data stream reader type valu ignor
PreparedStatement::setBlob set design paramet InputStream::InputStream object differ setbinarystream int inputstream inform driver paramet valu sent server blob setbinarystream driver extra work determin paramet data sent server longvarbinari blob note consult jdbc driver document determin effici use version setblob take length paramet parameterindex index first paramet inputstream object contain data set paramet valu
PreparedStatement::setObject set valu design paramet given object argument InputStream::InputStream stream contain number byte specifi scaleorlength argument Reader::Reader reader contain number charact specifi scaleorlength condit driver generat sqlexcept prepar statement execut given object convert given targetsqltyp sent databas object custom map implement interfac sqldata jdbc driver call sqldata writesql write sql data stream hand object implement Ref::Ref Blob::Blob Clob::Clob nclob Struct::Struct url Array::Array driver pass databas valu correspond sql type note pass databas specif abstract data type default implement throw sqlfeaturenotsupportedexcept parameterindex first paramet object contain input paramet valu targetsqltyp sql type sent databas scale argument further qualifi type scaleorlength sql jdbctype decim sql jdbctype numer type number digit decim point Object::Object type InputStream::InputStream Reader::Reader length data stream reader type valu ignor
PreparedStatement::executeLargeUpdate execut sql statement PreparedStatement::PreparedStatement object sql data manipul languag dml statement Event::INSERT PaintEvent::UPDATE delet sql statement return ddl statement return row count exceed default implement throw UnsupportedOperationException::UnsupportedOperationException row count sql data manipul languag dml statement sql statement return
NClob::NClob map trade program languag sql nclob type sql nclob built type store Character::Character Object::Object use nation Character::Character Set::Set column valu row databas tabl NClob::NClob interfac extend Clob::Clob interfac provid provid get length sql nclob valu materi nclob valu client search substr nclob object nclob valu NClob::NClob object Clob::Clob object valid durat transact creat interfac getnclob setnclob allow programm access sql nclob valu addit interfac updat nclob valu NClob::NClob interfac fulli implement jdbc driver support data type
Array::Array map program languag sql type array default Array::Array valu transact durat refer sql array valu default Array::Array object implement use sql locat array intern mean Array::Array object contain logic pointer data sql array valu contain array valu data Array::Array interfac provid bring sql array valu data client array ResultSet::ResultSet object element sql array udt custom map creat custom map programm creat implement interfac udt custom map make entri type map contain fulli qualifi sql type name udt Class::Class object implement SQLData::SQLData type map entri base type suppli getarray getresultset map contain map element array valu type map suppli typic case connect type map default connect type map type map suppli entri base type element map accord standard map Array::Array interfac fulli implement jdbc driver support data type
Array::getBaseTypeName retriev sql type name element array design Array::Array object element built type return databas specif type name element element user defin type udt return fulli qualifi sql type name String::String databas specif name built base type fulli qualifi sql type name base type udt
Array::getArray retriev content sql array valu design Array::Array object form array program languag version getarray use type map associ connect custom type map note getarray materi base type map primit data type implement defin array return array primit data type array Object::Object array program languag contain order element sql array valu design Array::Array object
Array::getArray retriev content sql array valu design Array::Array object use specifi map type map custom base type array match user defin type map case use standard map version getarray use given type map standard map use type map associ connect note getarray materi base type map primit data type implement defin array return array primit data type array Object::Object map util map object contain map sql type name program languag array program languag contain order element sql array design object
Array::getArray retriev slice sql array valu design Array::Array object begin specifi index contain count success element sql array use type map associ connect custom type map note getarray materi base type map primit data type implement defin array return array primit data type array Object::Object index array index first element retriev first element index count number success sql array element retriev array contain count consecut element sql array begin element index
Array::getArray retreiv slice sql array valu design Array::Array object begin specifi index contain count success element sql array use specifi map type map custom base type array match user defin type map case use standard map version getarray use given type map standard map use type map associ connect note getarray materi base type map primit data type implement defin array return array primit data type array Object::Object index array index first element retriev first element index count number success sql array element retriev map util map object contain sql type name program languag map array contain count consecut element sql array valu design Array::Array object begin element index
Array::getResultSet retriev result set contain element sql array valu design Array::Array object use specifi map type map custom base type array match user defin type map case use standard map version getresultset use given type map standard map use type map associ connect result set contain row array element column row column store element valu first column store index array element first array element index row ascend order correspond order indic map contain map sql user defin type program languag ResultSet::ResultSet object contain row element array design Array::Array object row ascend order base indic
Array::getResultSet retriev result set hold element subarray start index index contain count success element use connect type map map element array map contain entri base type standard map result set row element sql array design object first row contain element index index result set count row ascend order base indic row column column store element valu first column store index array element index array index first element retriev first element index count number success sql array element retriev ResultSet::ResultSet object contain count consecut element sql array design Array::Array object start index index
Array::getResultSet retriev result set hold element subarray start index index contain count success element use specifi map type map custom base type array match user defin type map case use standard map version getresultset use given type map standard map use type map associ connect result set row element sql array design object first row contain element index index result set count row ascend order base indic row column column store element valu first column store index array element index array index first element retriev first element index count number success sql array element retriev map Map::Map object contain map sql type name tm program languag ResultSet::ResultSet object contain count consecut element sql array design Array::Array object start index index
SQLDataException::SQLDataException subclass thrown sqlstate valu 22 vendor specifi condit indic various data error includ limit data convers error divis invalid argument function pleas consult driver vendor document vendor specifi condit Exception::Exception thrown
ResultSetMetaData::ResultSetMetaData object get type properti column ResultSet::ResultSet object fragment creat ResultSet::ResultSet object rs creat ResultSetMetaData::ResultSetMetaData object rsmd use rsmd find column rs first column rs where claus ResultSet::ResultSet rs stmt executequeri select table2 ResultSetMetaData::ResultSetMetaData rsmd rs getmetadata int numberofcolumn rsmd getcolumncount boolean rsmd issearch
ResultSetMetaData::getColumnCount return number column ResultSet::ResultSet object number column
ResultSetMetaData::isAutoIncrement indic design column automat number column first column fals
ResultSetMetaData::getColumnLabel get design column suggest titl use printout display suggest titl specifi sql claus sql specifi valu return ResultSetMetaData::getColumnLabel valu return ResultSetMetaData::getColumnName column first column suggest column titl
ResultSetMetaData::getColumnName get design column name column first column column name
ResultSetMetaData::getPrecision get design column specifi column size numer data maximum precis charact data length charact datetim datatyp length charact String::String represent assum maximum allow precis fraction compon binari data length byte rowid datatyp length byte return data type where column size applic column first column precis
ResultSetMetaData::getScale get design column number digit decim point return data type where scale applic column first column scale
ResultSetMetaData::getTableName get design column tabl name column first column tabl name applic
SQLTransientConnectionException::SQLTransientConnectionException subclass sqlstate valu 08 vendor specifi condit indic connect oper fail abl succeed oper retri level chang pleas consult driver vendor document vendor specifi condit Exception::Exception thrown
ParameterMetaData::ParameterMetaData object get type properti paramet marker PreparedStatement::PreparedStatement object queri driver implement data return ParameterMetaData::ParameterMetaData object avail PreparedStatement::PreparedStatement execut driver implement abl provid type properti paramet marker CallableStatement::CallableStatement object
ParameterMetaData::getParameterCount retriev number paramet PreparedStatement::PreparedStatement object ParameterMetaData::ParameterMetaData object contain number paramet
ParameterMetaData::getPrecision retriev design paramet specifi column size return valu repres maximum column size given paramet numer data maximum precis charact data length charact datetim datatyp length charact String::String represent assum maximum allow precis fraction compon binari data length byte rowid datatyp length byte return data type where column size applic param first paramet precis
SQLPermission::SQLPermission creat SQLPermission::SQLPermission object specifi name name symbol name SQLPermission::SQLPermission action String::String current unus null name name SQLPermission::SQLPermission object RemoteServer::setLog callabort setsyncfactori DriverManager::deregisterDriver Connection::setNetworkTimeout action null
SQLInput::readString read attribut stream return String::String program languag attribut valu sql null return null
SQLInput::readObject read datum head stream return Object::Object program languag actual type object return determin default type map custom stream type map type map regist stream jdbc driver stream pass datum head stream sql null return null datum sql structur distinct type determin sql type datum head stream stream type map entri sql type driver construct object appropri call sqldata readsql object read addit data stream use protocol describ datum head stream Object::Object program null datum sql null
SQLInput::readNString read attribut stream return String::String program languag intend use access nvarchar longnvarchar column attribut valu sql null return null
SQLInput::readObject read attribut stream return Object::Object program languag actual type object return determin specifi data type custom stream type map type map regist stream jdbc driver stream pass attribut head stream sql null return null attribut sql structur distinct type determin sql type attribut head stream stream type map entri sql type driver construct object appropri call sqldata readsql object read addit data stream use protocol describ default implement throw sqlfeaturenotsupportedexcept type model Class::Class object type Class::Class repres data type convert attribut attribut head stream Object::Object program languag null attribut sql null
RowIdLifetime::RowIdLifetime Enumeration::Enumeration RowId::RowId life time valu
SQLData::SQLData interfac custom map sql user defin type udt program languag object implement SQLData::SQLData interfac enter appropri Connection::Connection object type map sql name udt custom map typic SQLData::SQLData implement defin field attribut sql structur type singl field sql distinct type udt retriev data sourc resultset getobject map instanc programm oper instanc object program languag store chang made call preparedstat setobject map sql type expect implement custom map tool typic implement programm simpli suppli name sql udt name map name field attribut udt map tool use implement sqldata readsql sqldata writesql SQLData::readSQL call appropri SQLInput::SQLInput read attribut SQLInput::SQLInput object SQLData::writeSQL call SQLOutput::SQLOutput write attribut data sourc SQLOutput::SQLOutput object programm normal call SQLData::SQLData SQLInput::SQLInput SQLOutput::SQLOutput call intern SQLData::SQLData
SQLSyntaxErrorException::SQLSyntaxErrorException subclass thrown sqlstate valu 42 vendor specifi condit indic progress queri violat sql syntax rule pleas consult driver vendor document vendor specifi condit Exception::Exception thrown
DriverAction::DriverAction interfac implement want notifi DriverManager::DriverManager DriverAction::DriverAction implement intend applic jdbc Driver::Driver choos creat DriverAction::DriverAction implement privat avoid call jdbc driver static initi block call order inform DriverManager::DriverManager DriverAction::DriverAction implement call jdbc driver de regist
DriverAction::deregister Method::Method call notifi jdbc driver de regist deregist intend jdbc driver applic jdbc driver recommend implement DriverAction::DriverAction activ connect databas time deregist call implement specif connect close allow continu call implement specif driver limit abil creat connect databas invok Driver::Driver throw sqlexcept consult jdbc driver document addit behavior
Connection::Connection connect session specif databas sql statement execut result return context connect Connection::Connection object databas abl provid describ tabl support sql grammar store procedur capabl connect obtain getmetadata note configur Connection::Connection jdbc applic use appropri Connection::Connection Connection::setAutoCommit Connection::setTransactionIsolation applic invok sql command chang connect configur jdbc avail default Connection::Connection object auto commit mode mean automat commit chang execut statement auto commit mode disabl commit call explicit order commit chang databas chang save Connection::Connection object creat use jdbc core initi empti type map associ user enter custom map udt type map udt retriev data sourc resultset getobject getobject check connect type map see entri udt getobject map udt indic entri udt map use standard map user creat type map util map object make entri pass sql perform custom map case use given type map instead associ connect exampl fragment specifi sql type athlet map athlet program languag fragment retriev type map connect object con insert entri set type map entri connect type map
Connection::createStatement creat Statement::Statement object send sql statement databas sql statement paramet normal execut use Statement::Statement object sql statement execut time effici use PreparedStatement::PreparedStatement object result set creat use return Statement::Statement object default type type forward concurr level concur read holdabl creat result set determin call default Statement::Statement object
Connection::prepareStatement creat PreparedStatement::PreparedStatement object send parameter sql statement databas sql statement paramet pre compil store PreparedStatement::PreparedStatement object object effici execut statement multipl time note optim handl parametr sql statement benefit precompil driver support precompil Connection::prepareStatement send statement databas precompil driver support precompil case statement sent databas PreparedStatement::PreparedStatement object execut direct effect user affect throw SQLException::SQLException object result set creat use return PreparedStatement::PreparedStatement object default type type forward concurr level concur read holdabl creat result set determin call sql sql statement contain paramet placehold default PreparedStatement::PreparedStatement object contain pre compil sql statement
Connection::prepareCall creat CallableStatement::CallableStatement object call databas store procedur CallableStatement::CallableStatement object provid set paramet execut call store procedur note optim handl store procedur call statement driver send call statement databas Connection::prepareCall wait CallableStatement::CallableStatement object execut direct effect user affect throw sqlexcept result set creat use return CallableStatement::CallableStatement object default type type forward concurr level concur read holdabl creat result set determin call sql sql statement contain paramet placehold typic statement specifi use jdbc call escap syntax default CallableStatement::CallableStatement object contain pre compil sql statement
Connection::setAutoCommit set connect auto commit mode given state connect auto commit mode sql statement execut commit individu transact sql statement group transact termin call commit Connection::rollback default connect auto commit mode commit occur statement complet time statement complet depend type sql statement dml statement insert updat delet ddl statement statement complet finish execut select statement statement complet associ result set close CallableStatement::CallableStatement object statement return multipl result statement complet associ result set close updat count output paramet retriev note call transact auto commit mode chang transact commit Connection::setAutoCommit call auto commit mode chang call op autocommit enabl auto commit mode fals disabl
Connection::getAutoCommit retriev current auto commit mode Connection::Connection object current state Connection::Connection object auto commit mode
Connection::commit make chang made previous commit rollback perman releas databas lock current held Connection::Connection object auto commit mode disabl
Connection::rollback undo chang made current transact releas databas lock current held Connection::Connection object auto commit mode disabl
Connection::close releas Connection::Connection object databas jdbc resourc instead wait automat releas call close Connection::Connection object close op strong recommend explicit commit roll activ transact prior call close close call activ transact result implement defin
Connection::isClosed retriev Connection::Connection object close connect close close call fatal error occur guarante return call connect close call general call determin connect databas valid invalid typic client determin connect invalid catch thrown oper attempt Connection::Connection object close fals open
Connection::getMetaData retriev DatabaseMetaData::DatabaseMetaData object contain metadata databas Connection::Connection object repres connect metadata includ databas tabl support sql grammar store procedur capabl connect DatabaseMetaData::DatabaseMetaData object Connection::Connection object
Connection::isReadOnly retriev Connection::Connection object read mode Connection::Connection object read fals
Connection::setCatalog set given catalog name order select subspac Connection::Connection object databas work driver support catalog silent ignor request call Connection::setCatalog effect previous creat prepar Statement::Statement object implement defin dbms prepar oper take place Connection::Connection Connection::prepareStatement Connection::prepareCall invok maximum portabl Connection::setCatalog call Statement::Statement creat prepar catalog name catalog subspac Connection::Connection object databas work
Connection::getCatalog retriev Connection::Connection object current catalog name current catalog name null
Connection::setTransactionIsolation attempt chang transact isol level Connection::Connection object given constant defin interfac Connection::Connection transact isol level note call transact result implement defin level Connection::Connection constant connect transact read uncommit connect transact read commit connect transact repeat read connect transact serializ note connect transact specifi transact support
Connection::getTransactionIsolation retriev Connection::Connection object current transact isol level current transact isol level constant connect transact read uncommit connect transact read commit connect transact repeat read connect transact serializ connect transact
Connection::getWarnings retriev first warn report call Connection::Connection object warn subsequ warn chain first retriev call sqlwarn getnextwarn warn retriev previous call close connect caus SQLException::SQLException thrown note subsequ warn chain sqlwarn first SQLWarning::SQLWarning object null
Connection::clearWarnings clear warn report Connection::Connection object call getwarn return null warn report Connection::Connection object
Connection::createStatement creat Statement::Statement object generat ResultSet::ResultSet object given type concurr Connection::createStatement allow default result set type concurr overridden holdabl creat result set determin call resultsettyp result set type resultset type forward resultset type scroll insensit resultset type scroll sensit resultsetconcurr concurr type resultset concur read resultset concur updat Statement::Statement object generat ResultSet::ResultSet object given type concurr
Connection::prepareStatement creat PreparedStatement::PreparedStatement object generat ResultSet::ResultSet object given type concurr Connection::prepareStatement allow default result set type concurr overridden holdabl creat result set determin call sql String::String object sql statement sent databas contain paramet resultsettyp result set type resultset type forward resultset type scroll insensit resultset type scroll sensit resultsetconcurr concurr type resultset concur read resultset concur updat PreparedStatement::PreparedStatement object contain pre compil sql statement produc ResultSet::ResultSet object given type concurr
Connection::prepareCall creat CallableStatement::CallableStatement object generat ResultSet::ResultSet object given type concurr Connection::prepareCall allow default result set type concurr overridden holdabl creat result set determin call sql String::String object sql statement sent databas contain paramet resultsettyp result set type resultset type forward resultset type scroll insensit resultset type scroll sensit resultsetconcurr concurr type resultset concur read resultset concur updat CallableStatement::CallableStatement object contain pre compil sql statement produc ResultSet::ResultSet object given type concurr
Connection::getTypeMap retriev Map::Map object associ Connection::Connection object ad entri type map return empti invok Connection::setTypeMap make chang Map::Map object return Connection::getTypeMap jdbc driver creat intern copi Map::Map object pass Connection::setTypeMap util map object associ Connection::Connection object
Connection::setTypeMap instal given typemap object type map Connection::Connection object type map custom map sql structur type distinct type set valu typemap prior callng setmap jdbc driver creat intern copi typemap map util map object instal replac Connection::Connection object default type map
Connection::setHoldability chang default holdabl ResultSet::ResultSet object creat use Connection::Connection object given holdabl default holdabl ResultSet::ResultSet object determin invok holdabl ResultSet::ResultSet holdabl constant resultset hold cursor commit resultset close cursor commit
Connection::getHoldability retriev current holdabl ResultSet::ResultSet object creat use Connection::Connection object holdabl resultset hold cursor commit resultset close cursor commit
Connection::setSavepoint creat savepoint given name current transact return Savepoint::Savepoint object repres Connection::setSavepoint invok activ transact transact start newli creat savepoint name String::String contain name savepoint Savepoint::Savepoint object
Connection::rollback undo chang made given Savepoint::Savepoint object set auto commit disabl savepoint Savepoint::Savepoint object roll
Connection::createStatement creat Statement::Statement object generat ResultSet::ResultSet object given type concurr holdabl Connection::createStatement allow default result set type concurr holdabl overridden resultsettyp ResultSet::ResultSet constant resultset type forward resultset type scroll insensit resultset type scroll sensit resultsetconcurr ResultSet::ResultSet constant resultset concur read resultset concur updat resultsethold ResultSet::ResultSet constant resultset hold cursor commit resultset close cursor commit Statement::Statement object generat ResultSet::ResultSet object given type concurr holdabl
Connection::prepareStatement creat PreparedStatement::PreparedStatement object generat ResultSet::ResultSet object given type concurr holdabl Connection::prepareStatement allow default result set type concurr holdabl overridden sql String::String object sql statement sent databas contain paramet resultsettyp ResultSet::ResultSet constant resultset type forward resultset type scroll insensit resultset type scroll sensit resultsetconcurr ResultSet::ResultSet constant resultset concur read resultset concur updat resultsethold ResultSet::ResultSet constant resultset hold cursor commit resultset close cursor commit PreparedStatement::PreparedStatement object contain pre compil sql statement generat ResultSet::ResultSet object given type concurr holdabl
Connection::prepareCall creat CallableStatement::CallableStatement object generat ResultSet::ResultSet object given type concurr Connection::prepareCall allow default result set type result set concurr type holdabl overridden sql String::String object sql statement sent databas contain paramet resultsettyp ResultSet::ResultSet constant resultset type forward resultset type scroll insensit resultset type scroll sensit resultsetconcurr ResultSet::ResultSet constant resultset concur read resultset concur updat resultsethold ResultSet::ResultSet constant resultset hold cursor commit resultset close cursor commit CallableStatement::CallableStatement object contain pre compil sql statement generat ResultSet::ResultSet object given type concurr holdabl
Connection::prepareStatement creat default PreparedStatement::PreparedStatement object capabl retriev auto generat key given constant tell driver make auto generat key avail retriev paramet ignor sql statement Event::INSERT statement sql statement abl return auto generat key list statement vendor specif note optim handl parametr sql statement benefit precompil driver support precompil Connection::prepareStatement send statement databas precompil driver support precompil case statement sent databas PreparedStatement::PreparedStatement object execut direct effect user affect throw sqlexcept result set creat use return PreparedStatement::PreparedStatement object default type type forward concurr level concur read holdabl creat result set determin call sql sql statement contain paramet placehold autogeneratedkey flag indic auto generat key return statement return generat key statement generat key PreparedStatement::PreparedStatement object contain pre compil sql statement capabl return auto generat key
Connection::prepareStatement creat default PreparedStatement::PreparedStatement object capabl return auto generat key design given array array contain index column target tabl contain auto generat key made avail driver ignor array sql statement Event::INSERT statement sql statement abl return auto generat key list statement vendor specif sql statement paramet pre compil store PreparedStatement::PreparedStatement object object effici execut statement multipl time note optim handl parametr sql statement benefit precompil driver support precompil Connection::prepareStatement send statement databas precompil driver support precompil case statement sent databas PreparedStatement::PreparedStatement object execut direct effect user affect throw sqlexcept result set creat use return PreparedStatement::PreparedStatement object default type type forward concurr level concur read holdabl creat result set determin call sql sql statement contain paramet placehold columnindex array column index indic column return insert row row PreparedStatement::PreparedStatement object contain pre compil statement capabl return auto generat key design given array column index
Connection::prepareStatement creat default PreparedStatement::PreparedStatement object capabl return auto generat key design given array array contain name column target tabl contain auto generat key return driver ignor array sql statement Event::INSERT statement sql statement abl return auto generat key list statement vendor specif sql statement paramet pre compil store PreparedStatement::PreparedStatement object object effici execut statement multipl time note optim handl parametr sql statement benefit precompil driver support precompil Connection::prepareStatement send statement databas precompil driver support precompil case statement sent databas PreparedStatement::PreparedStatement object execut direct effect user affect throw sqlexcept result set creat use return PreparedStatement::PreparedStatement object default type type forward concurr level concur read holdabl creat result set determin call sql sql statement contain paramet placehold columnnam array column name indic column return insert row row PreparedStatement::PreparedStatement object contain pre compil statement capabl return auto generat key design given array column name
Connection::setClientInfo set valu connect client info properti Properties::Properties object contain name valu client info properti set set client info properti contain properti list replac current set client info properti connect properti current set connect properti list properti clear specifi empti properti list clear properti connect see setclientinfo String::String string error occur set client info properti SQLClientInfoException::SQLClientInfoException thrown SQLClientInfoException::SQLClientInfoException contain indic client info properti set state client unknown databas allow multipl client info properti set atom databas properti set error occur properti list client info properti set
Connection::getClientInfo return list contain name current valu client info properti support driver valu client info properti null properti set default valu Properties::Properties object contain name current valu client info properti support driver
Connection::createArrayOf factori creat Array::Array object note Connection::createArrayOf creat array object map primit data type implement defin Array::Array object array primit data type array Object::Object note jdbc driver respons map element Object::Object array default jdbc sql type defin sql type given Object::Object default map specifi appendix jdbc specif result jdbc type appropri type given TypeNotPresentException::typeName implement defin SQLException::SQLException thrown driver support result convers TypeNotPresentException::typeName sql name type element array map TypeNotPresentException::typeName databas specif name name built type user defin type standard sql type support databas valu return array getbasetypenam element element popul return object Array::Array object element map specifi sql type
Connection::setSchema set given schema name access driver support schema silent ignor request call Connection::setSchema effect previous creat prepar Statement::Statement object implement defin dbms prepar oper take place Connection::Connection Connection::prepareStatement Connection::prepareCall invok maximum portabl Connection::setSchema call Statement::Statement creat prepar schema name schema work
Connection::getSchema retriev Connection::Connection object current schema name current schema name null
Connection::setNetworkTimeout set maximum period Connection::Connection object creat Connection::Connection wait databas repli request request remain unansw wait return SQLException::SQLException Connection::Connection object creat Connection::Connection mark close subsequ use object close isclos connect isvalid result SQLException::SQLException note intend address rare serious condit where network partit caus thread issu jdbc call hang uninterrupt socket read os tcp timeout typic 10 minut relat provid administr thread mean free thread case where jdbc connect access administr thread Connection::setNetworkTimeout cover case where administr thread access connect sever effect given valu trigger normal timeout transact timeout jdbc driver implement choos support Connection::setNetworkTimeout impos limit databas respons time environ where network driver intern implement call multipl intern driver databas transmiss driver implement determin limit appli respons call singl request made call invok set limit area jdbc reset default exit area invoc impact outstand request statement setquerytimeout timeout valu independ timeout valu specifi Connection::setNetworkTimeout queri timeout expir network timeout statement execut cancel network activ result statement connect usabl network timeout expir queri timeout statement timeout fail due network connect mark close resourc held connect releas connect statement unus driver determin Connection::setNetworkTimeout timeout valu expir jdbc driver mark connect close releas resourc held connect check see SQLPermission::SQLPermission object allow proceed SecurityManager::SecurityManager exist checkpermiss deni call Connection::setNetworkTimeout throw lang securityexcept executor Executor::Executor implement Connection::setNetworkTimeout millisecond time millisecond wait databas oper complet jdbc driver support millisecond jdbc driver valu nearest timeout period expir oper complet sqlexcept thrown valu indic timeout databas oper
SQLWarning::SQLWarning provid databas access warn warn silent chain object caus report warn retriev Connection::Connection Statement::Statement ResultSet::ResultSet object tri retriev warn connect close caus thrown similar tri retriev warn statement close result set close caus thrown note close statement close result set produc
PreferenceChangeEvent::PreferenceChangeEvent construct PreferenceChangeEvent::PreferenceChangeEvent instanc node Preferences::Preferences node emit event key key prefer chang newvalu valu prefer null prefer remov
NodeChangeEvent::getParent return parent node ad remov parent Preferences::Preferences node child ad remov
PreferencesFactory::PreferencesFactory factori object generat Preferences::Preferences object provid implement provid correspond preferencesfactori implement prefer implement instal place platform specif default implement prefer implement normal user prefer facil consult document
XmlSupport::export export specifi prefer node subtre subnod specifi output stream Preferences::Preferences export xml document conform definit Preferences::Preferences spec
XmlSupport::putPreferencesInXml put prefer specifi Preferences::Preferences node specifi xml element assum repres node specifi xml document assum conform pref dtd subtre creat children specifi xml node conform children specifi Preferences::Preferences node recurs
XmlSupport::importPreferences import prefer specifi input stream assum contain xml document format describ Preferences::Preferences spec
XmlSupport::importMap import Map::Map specifi input stream assum contain map document pref dtd intern undocu format filesystempref key valu pair specifi xml document put specifi Map::Map Map::Map empti contain exact key valu pair int xml document return
Preferences::Preferences node hierarch collect prefer data allow applic store retriev user system prefer configur data data store persist implement depend store typic implement includ flat file os specif registri directori server sql databas user needn concern detail store separ tree prefer node user prefer system prefer user separ user prefer tree user given system share system prefer tree precis descript user system vari implement implement typic store user prefer tree includ font choic color choic prefer window locat size particular typic store system prefer tree includ instal configur data node prefer tree name similar fashion directori hierarch file system node prefer tree node name necessarili uniqu uniqu absolut path name path name relat ancestor includ root node node name empti string node arbitrari node name specifi time creat restrict name empti string contain slash charact root node absolut path name children root node absolut path name lt node name gt node absolut path name lt parent absolut path name gt lt node name gt note absolut path name begin slash charact node path name relat ancestor simpli string append absolut path name order form absolut path name initi slash charact remov note relat path name begin slash charact node path name relat empti string node path name relat parent node name root node parent node path name relat root absolut path name initi slash charact remov note final path name contain multipl consecut slash charact path name root absolut path name end slash charact string conform rule valid path name modifi prefer data permit oper asynchron return chang eventu propag persist store implement depend delay flush synchron forc updat store normal termin virtual machin result loss updat explicit flush invoc requir termin ensur updat made persist read prefer prefer object requir invok provid default valu default valu return valu previous set store unavail intent allow applic oper slight degrad function store becom unavail flush semant prevent oper store unavail ordinari applic invok identifi fact declar throw invok concurr multipl thread singl jvm extern synchron result equival serial execut concurr multipl jvms store prefer data store data store corrupt guarante made consist prefer data contain export import facil allow prefer export xml document xml document repres prefer import system facil part prefer tree subsequ restor backup xml document doctyp declar note system uri http sun com dtd prefer dtd access export import prefer mere serv string uniqu identifi dtd prefer implement associ implement tm se implement provid mean specifi preferencesfactori implement generat root prefer node allow administr replac default prefer implement altern implement implement note sun jre preferencesfactori implement locat follow system properti util pref preferencesfactori defin taken fulli qualifi name implement preferencesfactori interfac load instanti process fail unspecifi error thrown preferencesfactori implement file instal jar file visibl jar file contain provid configur file name util pref preferencesfactori resourc directori meta inf servic first name specifi file taken jar file first found load instanti process fail unspecifi error thrown final mention system properti extens jar file system wide default preferencesfactori implement platform load instanti
Preferences::userRoot return root prefer node call user root prefer node call user
Preferences::systemRoot return root prefer node system root prefer node system
Preferences::Preferences sole constructor invoc subclass constructor typic implicit
Preferences::put associ specifi valu specifi key prefer node key key specifi valu associ valu valu associ specifi key
Preferences::get return valu associ specifi key prefer node return specifi default valu associ key store inaccess implement store default valu store valu associ specifi key store default return prefer specifi default key key associ valu return def valu return event prefer node valu associ key valu associ key def valu associ key store inaccess
Preferences::putByteArray associ string repres specifi byte array specifi key prefer node associ string base64 encod byte array defin section minor chang string consist sole charact base64 alphabet contain newlin charact note maximum length byte array limit quarter max valu length length Base64::Base64 encod String::String exceed max valu length intend use conjunct key key string form valu associ valu valu string form associ key
Random::Random instanc generat stream pseudorandom number use 48 bit seed modifi use linear congruenti formula see donald knuth art comput program volum section instanc Random::Random creat seed sequenc call made generat return ident sequenc number order guarante properti particular algorithm specifi Random::Random implement use algorithm shown Random::Random sake absolut portabl subclass Random::Random permit use algorithm adher general contract algorithm implement Random::Random use protect util invoc suppli 32 pseudorandom generat bit applic find simpler use instanc util random threadsaf concurr use util random instanc thread encount content consequ poor perform consid instead use multithread design instanc util random cryptograph secur consid instead use get cryptograph secur pseudo random number generat use secur sensit applic
Random::Random creat random number generat constructor set seed random number generat valu distinct invoc constructor
Random::Random creat random number generat use singl seed seed initi valu intern state pseudorandom number generat maintain invoc random seed equival seed initi seed
Random::setSeed set seed random number generat use singl seed general contract setse alter state random number generat object exact state creat argument seed seed setse implement Random::Random atom updat seed clear havenextnextgaussian flag implement setse Random::Random happen use 48 bit given seed general overrid use 64 bit argument seed valu seed initi seed
Random::next generat pseudorandom number subclass overrid general contract return int valu argument bit 32 inclus low order bit return valu approxim independ chosen bit valu approxim equal implement Random::Random atom updat seed return linear congruenti pseudorandom number generat defin lehmer describ donald knuth art comput program volum 3 seminumer algorithm section bit random bit pseudorandom valu random number generat sequenc
Random::nextBytes generat random byte place user suppli byte array number random byte produc equal length byte array nextbyt implement Random::Random byte byte array fill random byte
Random::nextInt return pseudorandom uniform distribut int valu random number generat sequenc general contract nextint int valu pseudorandom generat return 32 int valu produc approxim equal probabl nextint implement Random::Random pseudorandom uniform distribut int valu random number generat sequenc
Random::nextInt return pseudorandom uniform distribut int valu inclus specifi valu exclus drawn random number generat sequenc general contract nextint int valu specifi rang pseudorandom generat return bound int valu produc approxim equal probabl nextint int bound implement Random::Random hedg approxim forego descript approxim unbias sourc independ chosen bit perfect sourc random chosen bit algorithm shown choos int valu state rang perfect uniform algorithm slight tricki reject valu result uneven distribut due fact 31 divis probabl valu reject depend worst case 30 probabl reject expect number iter loop termin algorithm treat case where power return correct number order bit pseudo random number generat absenc treatment correct number low order bit return linear congruenti pseudo random number generat implement known period sequenc valu low order bit thus case great increas length sequenc valu return success call power bound upper bound exclus posit pseudorandom uniform distribut int valu zero inclus bound exclus random number generat sequenc
Random::nextLong return pseudorandom uniform distribut valu random number generat sequenc general contract nextlong valu pseudorandom generat return nextlong implement Random::Random Random::Random use seed 48 bit algorithm return valu pseudorandom uniform distribut valu random number generat sequenc
Random::nextBoolean return pseudorandom uniform distribut boolean valu random number generat sequenc general contract nextboolean boolean valu pseudorandom generat return valu fals produc approxim equal probabl nextboolean implement Random::Random pseudorandom uniform distribut boolean valu random number generat sequenc
Random::nextFloat return pseudorandom uniform distribut float valu random number generat sequenc general contract nextfloat float valu chosen approxim uniform rang 0f inclus 0f exclus pseudorandom generat return 24 float valu form nbsp nbsp 24 where posit integ 24 produc approxim equal probabl nextfloat implement Random::Random hedg approxim forego descript approxim unbias sourc independ chosen bit perfect sourc random chosen bit algorithm shown choos float valu state rang perfect uniform version result incorrect calcul seem equival fact introduc slight nonuniform bias float point number slight low order bit significand pseudorandom uniform distribut float valu random number generat sequenc
Random::nextDouble return pseudorandom uniform distribut doubl valu random number generat sequenc general contract nextdoubl doubl valu chosen approxim uniform rang 0d inclus 0d exclus pseudorandom generat return nextdoubl implement Random::Random hedg approxim forego descript approxim unbias sourc independ chosen bit perfect sourc random chosen bit algorithm shown choos doubl valu state rang perfect uniform version result incorrect calcul seem equival fact introduc nonuniform bias float point number time low order bit significand nonuniform doesn matter practic strive perfect pseudorandom uniform distribut doubl valu random number generat sequenc
Random::nextGaussian return pseudorandom gaussian normal distribut doubl valu mean standard deviat random number generat sequenc general contract Random::nextGaussian doubl valu chosen approxim usual normal distribut mean standard deviat pseudorandom generat return Random::nextGaussian implement Random::Random threadsaf version follow use polar box muller marsaglia describ donald knuth art comput program volum 3 seminumer algorithm section subsect algorithm note generat independ valu cost call strictmath log call strictmath sqrt pseudorandom gaussian normal distribut doubl valu mean standard deviat random number generat sequenc
Random::readObject reconstitut Random::Random instanc stream deseri
Random::writeObject save Random::Random instanc stream
Stack::Stack Stack::Stack repres last first lifo stack object extend vector oper allow vector treat stack usual push pop oper peek top item stack test stack empti search stack item discov top stack first creat contain item complet consist set lifo stack oper interfac implement prefer exampl
Stack::Stack creat empti Stack::Stack
Stack::push push item top stack exact effect item item push stack item argument
Stack::pop remov object top stack return object valu function object top stack last item vector object
Stack::peek look object top stack remov stack object top stack last item vector object
Stack::empty test stack empti stack contain item fals
Stack::search return base posit where object stack object occur item stack return distanc top stack occurr nearest top stack topmost item stack consid distanc equal compar item stack desir object base posit top stack where object locat return valu indic object stack
EmptyStackException::EmptyStackException thrown Stack::Stack indic stack empti
Streams::StreamBuilderImpl Constructor::Constructor build stream element
Streams::StreamBuilderImpl Constructor::Constructor singleton stream singl element
Streams::IntStreamBuilderImpl Constructor::Constructor build stream element
Streams::IntStreamBuilderImpl Constructor::Constructor singleton stream singl element
Streams::LongStreamBuilderImpl Constructor::Constructor build stream element
Streams::LongStreamBuilderImpl Constructor::Constructor singleton stream singl element
Streams::DoubleStreamBuilderImpl Constructor::Constructor build stream element
Streams::DoubleStreamBuilderImpl Constructor::Constructor singleton stream singl element
AbstractShortCircuitTask::AbstractShortCircuitTask Constructor::Constructor root task helper PipelineHelper::PipelineHelper describ stream pipelin oper spliter Spliterator::Spliterator describ sourc pipelin
AbstractShortCircuitTask::AbstractShortCircuitTask Constructor::Constructor non root node parent parent task comput tree spliter Spliterator::Spliterator portion comput tree describ task
DoubleStream::collect perform oper element stream mutabl reduct reduc valu mutabl result contain ArrayList::ArrayList element incorpor updat state result replac result produc result equival collect oper parallel requir addit synchron type result supplier function creat result contain parallel execut function call multipl time return fresh valu time accumul function incorpor addit element result combin function combin valu compat accumul function result reduct
IntStream::collect perform oper element stream mutabl reduct reduc valu mutabl result contain ArrayList::ArrayList element incorpor updat state result replac result produc result equival collect oper parallel requir addit synchron type result supplier function creat result contain parallel execut function call multipl time return fresh valu time accumul function incorpor addit element result combin function combin valu compat accumul function result reduct
IntStream::boxed return Stream::Stream consist element stream box Integer::Integer Stream::Stream consist element stream box Integer::Integer
ReferencePipeline::ReferencePipeline Constructor::Constructor head stream pipelin sourc supplier describ stream sourc sourceflag sourc flag stream sourc describ parallel pipelin parallel
ReferencePipeline::ReferencePipeline Constructor::Constructor head stream pipelin sourc Spliterator::Spliterator describ stream sourc sourceflag sourc flag stream sourc describ parallel pipelin parallel
ReferencePipeline::ReferencePipeline Constructor::Constructor append intermedi oper exist pipelin upstream upstream element sourc
ReferencePipeline::Head Constructor::Constructor sourc stage Stream::Stream sourc supplier describ stream sourc sourceflag sourc flag stream sourc describ
ReferencePipeline::Head Constructor::Constructor sourc stage Stream::Stream sourc Spliterator::Spliterator describ stream sourc sourceflag sourc flag stream sourc describ
Collector::Collector accumul input element mutabl result contain option transform accumul result final represent input element process reduct oper perform sequenti parallel exampl mutabl reduct oper includ accumul element Collection::Collection concaten string use StringBuilder::StringBuilder comput summari element sum min max averag comput pivot tabl summari maximum valu transact seller provid implement common mutabl reduct Collector::Collector specifi function work accumul entri mutabl result contain option perform final transform result creation result contain incorpor data element result contain combin result contain perform option final transform contain collector set characterist provid hint reduct implement provid perform sequenti implement reduct use collector creat singl result contain use supplier function invok accumul function input element parallel implement partit input creat result contain partit accumul content partit subresult partit use combin function merg subresult combin result ensur sequenti parallel execut produc equival result collector function satisfi ident constraint ident constraint say partial accumul result combin empti result contain produc equival result partial accumul result result seri accumul combin invoc equival combin appli supplier get associ constraint say split comput produc equival result input element t1 t2 result r1 r2 comput equival collector unord characterist accumul result a1 a2 equival finish appli a1 equal finish appli a2 unord collector equival relax allow non equal relat differ order exampl unord collector accumul element List::List consid list equival contain element ignor order librari implement reduct base Collector::Collector adher constraint first argument pass accumul function argument pass combin function argument pass finish function result previous invoc result supplier accumul combin function implement result result supplier accumul combin function pass accumul combin finish function return caller reduct oper result pass combin finish function object return function result pass combin finish function pass accumul function non concurr collector result return result supplier accumul combin function serial thread confin enabl collect occur parallel Collector::Collector implement addit synchron reduct implement manag input proper partit partit process isol combin happen accumul complet concurr collector implement free requir implement reduct concurr concurr reduct where accumul function call concurr multipl thread use concurr modifi result contain keep result isol accumul concurr reduct appli collector characterist origin data unord addit predefin implement static factori construct collector exampl creat collector accumul widget TreeSet::TreeSet behavior implement predefin collector perform reduct oper Collector::Collector produc result equival librari free partit input perform reduct partit use combin function combin partial result achiev parallel reduct depend specif reduct oper perform wors depend relat cost accumul combin function collector design compos function take collector produc collector exampl given collector comput sum salari stream employe want creat collector tabul sum salari depart reus sum salari logic use type input element reduct oper mutabl accumul type reduct oper hidden implement detail result type reduct oper
Collector::characteristics return Set::Set collector characterist indic characterist Collector::Collector set immut immut set collector characterist
IntPipeline::IntPipeline Constructor::Constructor head stream pipelin sourc supplier describ stream sourc sourceflag sourc flag stream sourc describ parallel pipelin parallel
IntPipeline::IntPipeline Constructor::Constructor head stream pipelin sourc Spliterator::Spliterator describ stream sourc sourceflag sourc flag stream sourc describ parallel pipelin parallel
IntPipeline::IntPipeline Constructor::Constructor append intermedi oper exist pipelin upstream upstream element sourc opflag oper flag oper
IntPipeline::Head Constructor::Constructor sourc stage IntStream::IntStream sourc supplier describ stream sourc sourceflag sourc flag stream sourc describ parallel pipelin parallel
IntPipeline::Head Constructor::Constructor sourc stage IntStream::IntStream sourc Spliterator::Spliterator describ stream sourc sourceflag sourc flag stream sourc describ parallel pipelin parallel
Collectors::toList return Collector::Collector accumul input element List::List guarante type mutabl serializ thread safeti List::List return control return List::List requir use type input element Collector::Collector collect input element List::List encount order
Collectors::toSet return Collector::Collector accumul input element Set::Set guarante type mutabl serializ thread safeti Set::Set return control return Set::Set requir use Collector::Collector type input element Collector::Collector collect input element Set::Set
Collectors::joining return Collector::Collector concaten input element String::String encount order Collector::Collector concaten input element String::String encount order
Collectors::groupingBy return Collector::Collector implement group oper input element type group element accord classif function return result Map::Map classif function map element key type collector produc map key valu result appli classif function input element correspond valu List::List contain input element map associ key classif function guarante type mutabl serializ thread safeti Map::Map List::List object return produc result similar return Collector::Collector concurr parallel stream pipelin combin function oper merg key map expens oper preserv order element appear result Map::Map collector requir use offer parallel perform type input element type key classifi classifi function map input element key Collector::Collector implement group oper
Collectors::groupingBy return Collector::Collector implement cascad group oper input element type group element accord classif function perform reduct oper valu associ given key use specifi downstream Collector::Collector classif function map element key type downstream collector oper element type produc result type result collector produc map guarante type mutabl serializ thread safeti Map::Map return exampl comput set last name peopl citi return Collector::Collector concurr parallel stream pipelin combin function oper merg key map expens oper preserv order element downstream collector requir use offer parallel perform type input element type key intermedi accumul type downstream collector result type downstream reduct classifi classifi function map input element key downstream Collector::Collector implement downstream reduct Collector::Collector implement cascad group oper
Collectors::groupingBy return Collector::Collector implement cascad group oper input element type group element accord classif function perform reduct oper valu associ given key use specifi downstream Collector::Collector Map::Map produc Collector::Collector creat suppli factori function classif function map element key type downstream collector oper element type produc result type result collector produc map exampl comput set last name peopl citi where citi name sort return Collector::Collector concurr parallel stream pipelin combin function oper merg key map expens oper preserv order element downstream collector requir use offer parallel perform type input element type key intermedi accumul type downstream collector result type downstream reduct type result Map::Map classifi classifi function map input element key downstream Collector::Collector implement downstream reduct mapfactori function call produc empti Map::Map desir type Collector::Collector implement cascad group oper
Collectors::groupingByConcurrent return concurr Collector::Collector implement group oper input element type group element accord classif function Collector::Collector classif function map element key type collector produc concurrentmap key valu result appli classif function input element correspond valu List::List contain input element map associ key classif function guarante type mutabl serializ Map::Map List::List object return thread safeti List::List object return produc result similar type input element type key classifi classifi function map input element key concurr unord Collector::Collector implement group oper
Collectors::partitioningBy return Collector::Collector partit input element accord Predicate::Predicate organ map guarante type mutabl serializ thread safeti Map::Map return type input element predic predic classifi input element Collector::Collector implement partit oper
Collectors::partitioningBy return Collector::Collector partit input element accord Predicate::Predicate reduc valu partit accord Collector::Collector organ map valu result downstream reduct guarante type mutabl serializ thread safeti Map::Map return type input element intermedi accumul type downstream collector result type downstream reduct predic predic classifi input element downstream Collector::Collector implement downstream reduct Collector::Collector implement cascad partit oper
Collectors::toMap return Collector::Collector accumul element Map::Map key valu result appli map function input element map key contain duplic accord IllegalStateException::IllegalStateException thrown collect oper perform map key duplic use instead common key valu input element case util exampl produc Map::Map map student grade point averag produc Map::Map map uniqu identifi student return Collector::Collector concurr parallel stream pipelin combin function oper merg key map expens oper requir result insert Map::Map encount order use offer parallel perform type input element output type key map function output type valu map function keymapp map function produc key valuemapp map function produc valu Collector::Collector collect element Map::Map key valu result appli map function input element
Collectors::toMap return Collector::Collector accumul element Map::Map key valu result appli map function input element map key contain duplic accord valu map function appli equal element result merg use merg function multipl deal collis multipl element map key form Collectors::toMap simpli use merg function throw uncondit easili write flexibl merg polici exampl stream person want produc phone book map name address person name follow grace deal collis produc Map::Map map name concaten list address return Collector::Collector concurr parallel stream pipelin combin function oper merg key map expens oper requir result merg Map::Map encount order use offer parallel perform type input element output type key map function output type valu map function keymapp map function produc key valuemapp map function produc valu mergefunct merg function resolv collis valu associ key suppli Collector::Collector collect element Map::Map key result appli key map function input element valu result appli valu map function input element equal key combin use merg function
Collectors::toMap return Collector::Collector accumul element Map::Map key valu result appli map function input element map key contain duplic accord valu map function appli equal element result merg use merg function Map::Map creat supplier function return Collector::Collector concurr parallel stream pipelin combin function oper merg key map expens oper requir result merg Map::Map encount order use offer parallel perform type input element output type key map function output type valu map function type result Map::Map keymapp map function produc key valuemapp map function produc valu mergefunct merg function resolv collis valu associ key suppli mapsuppli function return empti Map::Map result insert Collector::Collector collect element Map::Map key result appli key map function input element valu result appli valu map function input element equal key combin use merg function
Collectors::toConcurrentMap return concurr Collector::Collector accumul element ConcurrentMap::ConcurrentMap key valu result appli map function input element map key contain duplic accord IllegalStateException::IllegalStateException thrown collect oper perform map key duplic use instead common key valu input element case util exampl produc Map::Map map student grade point averag produc Map::Map map uniqu identifi student Collector::Collector type input element output type key map function output type valu map function keymapp map function produc key valuemapp map function produc valu concurr unord Collector::Collector collect element ConcurrentMap::ConcurrentMap key result appli key map function input element valu result appli valu map function input element
Collectors::toConcurrentMap return concurr Collector::Collector accumul element ConcurrentMap::ConcurrentMap key valu result appli map function input element map key contain duplic accord valu map function appli equal element result merg use merg function multipl deal collis multipl element map key form Collectors::toConcurrentMap simpli use merg function throw uncondit easili write flexibl merg polici exampl stream person want produc phone book map name address person name follow grace deal collis produc Map::Map map name concaten list address Collector::Collector type input element output type key map function output type valu map function keymapp map function produc key valuemapp map function produc valu mergefunct merg function resolv collis valu associ key suppli concurr unord Collector::Collector collect element ConcurrentMap::ConcurrentMap key result appli key map function input element valu result appli valu map function input element equal key combin use merg function
Collectors::toConcurrentMap return concurr Collector::Collector accumul element ConcurrentMap::ConcurrentMap key valu result appli map function input element map key contain duplic accord valu map function appli equal element result merg use merg function ConcurrentMap::ConcurrentMap creat supplier function Collector::Collector type input element output type key map function output type valu map function type result ConcurrentMap::ConcurrentMap keymapp map function produc key valuemapp map function produc valu mergefunct merg function resolv collis valu associ key suppli mapsuppli function return empti Map::Map result insert concurr unord Collector::Collector collect element ConcurrentMap::ConcurrentMap key result appli key map function input element valu result appli valu map function input element equal key combin use merg function
DoublePipeline::DoublePipeline Constructor::Constructor head stream pipelin sourc supplier describ stream sourc sourceflag sourc flag stream sourc describ
DoublePipeline::DoublePipeline Constructor::Constructor head stream pipelin sourc Spliterator::Spliterator describ stream sourc sourceflag sourc flag stream sourc describ
DoublePipeline::DoublePipeline Constructor::Constructor append intermedi oper exist pipelin upstream upstream element sourc opflag oper flag
DoublePipeline::Head Constructor::Constructor sourc stage DoubleStream::DoubleStream sourc supplier describ stream sourc sourceflag sourc flag stream sourc describ parallel pipelin parallel
DoublePipeline::Head Constructor::Constructor sourc stage DoubleStream::DoubleStream sourc Spliterator::Spliterator describ stream sourc sourceflag sourc flag stream sourc describ parallel pipelin parallel
Node::copyInto default implement invok obtain int array copi element int array box Integer::Integer array effici recommend invok
Node::copyInto default implement invok obtain array copi element array box Long::Long array effici recommend invok
AbstractTask::AbstractTask Constructor::Constructor root node helper PipelineHelper::PipelineHelper describ stream pipelin oper spliter Spliterator::Spliterator describ sourc pipelin
AbstractTask::AbstractTask Constructor::Constructor non root node parent node parent task spliter Spliterator::Spliterator describ subtre root node obtain split parent Spliterator::Spliterator
LongPipeline::LongPipeline Constructor::Constructor head stream pipelin sourc supplier describ stream sourc sourceflag sourc flag stream sourc describ parallel pipelin parallel
LongPipeline::LongPipeline Constructor::Constructor head stream pipelin sourc Spliterator::Spliterator describ stream sourc sourceflag sourc flag stream sourc describ parallel pipelin parallel
LongPipeline::LongPipeline Constructor::Constructor append intermedi oper exist pipelin upstream upstream element sourc opflag oper flag
LongPipeline::Head Constructor::Constructor sourc stage LongStream::LongStream sourc supplier describ stream sourc sourceflag sourc flag stream sourc describ parallel pipelin parallel
LongPipeline::Head Constructor::Constructor sourc stage LongStream::LongStream sourc Spliterator::Spliterator describ stream sourc sourceflag sourc flag stream sourc describ parallel pipelin parallel
Stream::collect perform oper element stream mutabl reduct reduc valu mutabl result contain ArrayList::ArrayList element incorpor updat state result replac result produc result equival collect oper parallel requir addit synchron exist jdk signatur suit use refer argument collect exampl accumul string ArrayList::ArrayList take stream string concaten singl string type result supplier function creat result contain parallel execut function call multipl time return fresh valu time accumul function incorpor addit element result combin function combin valu compat accumul function result reduct
Stream::collect perform oper element stream use Collector::Collector Collector::Collector encapsul function argument allow reus collect strategi composit collect oper multipl level group partit stream parallel Collector::Collector stream unord collector concurr reduct perform see detail concurr reduct execut parallel multipl intermedi result instanti popul merg maintain isol mutabl data structur therefor execut parallel non thread safe data structur ArrayList::ArrayList addit synchron parallel reduct accumul string arraylist classifi person object citi classifi person object state citi cascad Collector::Collector togeth type result intermedi accumul type Collector::Collector collector Collector::Collector describ reduct result reduct
MatchOps::MatchTask Constructor::Constructor root node
MatchOps::MatchTask Constructor::Constructor non root node
LongStream::collect perform oper element stream mutabl reduct reduc valu mutabl result contain ArrayList::ArrayList element incorpor updat state result replac result produc result equival collect oper parallel requir addit synchron type result supplier function creat result contain parallel execut function call multipl time return fresh valu time accumul function incorpor addit element result combin function combin valu compat accumul function result reduct
LongStream::boxed return Stream::Stream consist element stream box Long::Long Stream::Stream consist element stream box Long::Long
AbstractPipeline::AbstractPipeline Constructor::Constructor head stream pipelin sourc supplier describ stream sourc sourceflag sourc flag stream sourc describ parallel pipelin parallel
AbstractPipeline::AbstractPipeline Constructor::Constructor head stream pipelin sourc Spliterator::Spliterator describ stream sourc sourceflag sourc flag stream sourc describ parallel pipelin parallel
AbstractPipeline::AbstractPipeline Constructor::Constructor append intermedi oper stage exist pipelin previousstag upstream pipelin stage opflag oper flag stage describ
HashSet::HashSet implement set interfac hash tabl actual hashmap instanc make guarante iter order set particular guarante order remain constant time permit null element offer constant time perform basic oper add remov contain size assum hash function dispers element proper bucket iter set requir time proport sum hashset instanc size number element capac hashmap instanc number bucket thus set initi capac load factor low iter perform note implement synchron multipl thread access hash set concurr thread modifi set synchron extern typic accomplish synchron object natur encapsul set object exist set wrap use creation time prevent accident unsynchron access set iter return iter fail fast set modifi time iter creat iter remov Iterator::Iterator throw thus face concurr modif iter fail quick clean risk arbitrari non determinist behavior undetermin time futur note fail fast behavior iter guarante general speak imposs make guarante presenc unsynchron concurr modif fail fast iter throw concurrentmodificationexcept effort basi therefor wrong write program depend correct fail fast behavior iter detect bug member type element maintain set
HashSet::HashSet construct empti set hashmap instanc default initi capac 16 load factor 75
HashSet::HashSet construct set contain element specifi collect hashmap creat default load factor 75 initi capac suffici contain element specifi collect collect element place set
HashSet::HashSet construct empti set hashmap instanc specifi initi capac specifi load factor initialcapac initi capac hash map loadfactor load factor hash map
HashSet::HashSet construct empti set hashmap instanc specifi initi capac default load factor 75 initialcapac initi capac hash tabl
HashSet::HashSet construct empti link hash set packag privat constructor LinkedHashSet::LinkedHashSet HashMap::HashMap instanc LinkedHashMap::LinkedHashMap specifi initi capac specifi load factor initialcapac initi capac hash map loadfactor load factor hash map dummi ignor distinguish constructor int float constructor
HashSet::iterator return iter element set element return particular order Iterator::Iterator element set
HashSet::writeObject save state hashset instanc stream serial capac hashmap instanc int load factor float emit follow size set number element contain int follow element Object::Object particular order
StringJoiner::StringJoiner StringJoiner::StringJoiner construct sequenc charact separ delimit option start suppli prefix end suppli suffix prior ad StringJoiner::StringJoiner sj tostr default return prefix suffix StringJoiner::setEmptyValue call emptyvalu suppli return instead exampl creat string use set notat indic empti set where prefix suffix ad StringJoiner::StringJoiner String::String georgesallyfr construct follow StringJoiner::StringJoiner employ creat format output use exampl
StringJoiner::setEmptyValue set sequenc charact determin string represent StringJoiner::StringJoiner element ad empti copi emptyvalu paramet made purpos note add call StringJoiner::StringJoiner longer consid empti element ad correspond empti String::String emptyvalu charact return valu empti StringJoiner::StringJoiner StringJoiner::StringJoiner call chain
StringJoiner::length return length String::String represent StringJoiner::StringJoiner note add call length String::String represent prefix suffix emptyvalu return valu equival tostr length length current valu StringJoiner::StringJoiner
Comparator::Comparator comparison function impos total order collect object Comparators::Comparators pass sort allow precis control sort order Comparators::Comparators control order data structur provid order collect object don order impos compar set element said consist equal compar e1 e2 boolean valu e1 equal e2 e1 e2 caution exercis use compar capabl impos order inconsist equal order sort set sort map suppos sort set sort map explicit compar element key drawn set order impos inconsist equal sort set sort map behav strang particular sort set sort map violat general contract set map defin term equal exampl suppos add element equal compar empti TreeSet::TreeSet compar add oper return size tree set increas equival tree set perspect contrari specif note general compar implement io serializ order serializ data structur order data structur serial success compar implement serializ mathemat inclin relat defin impos order given compar impos given set object quotient total order follow contract compar quotient equival relat impos order total order say order impos consist equal mean quotient order equival relat defin object Comparable::Comparable compar option permit comparison null argument maintain requir equival relat interfac member type object compar compar
Comparator::thenComparing return lexicograph order compar compar Comparator::Comparator consid element equal compar determin order return compar serializ specifi compar serializ exampl sort collect String::String base length case insensit natur order compar compos use compar compar compar object equal lexicograph order compar compos compar
NavigableSet::NavigableSet extend navig report closest match given search target lower floor ceil higher return element respect equal greater equal greater given element return null element NavigableSet::NavigableSet access travers ascend descend order descendingset return view set sens relat direct invert perform ascend oper view faster descend interfac addit defin pollfirst polllast return remov lowest highest element exist els return null subset headset tailset differ name SortedSet::SortedSet accept addit argument describ lower upper bound inclus exclus subset NavigableSet::NavigableSet implement NavigableSet::NavigableSet interfac return valu navig ambigu implement permit null element case result disambigu check contain null avoid issu implement interfac encourag permit insert null element note sort set element intrins permit null specifi return SortedSet::SortedSet allow exist implement SortedSet::SortedSet compat retrofit implement NavigableSet::NavigableSet extens implement interfac encourag overrid return NavigableSet::NavigableSet interfac member type element maintain set
Comparators::Comparators Package::Package privat support
SimpleTimeZone::SimpleTimeZone SimpleTimeZone::SimpleTimeZone concret subclass TimeZone::TimeZone repres time zone use gregorian calendar hold offset gmt call raw offset start end rule daylight time schedul hold singl valu handl histor chang offset gmt daylight schedul specifi year daylight time schedul start effect construct SimpleTimeZone::SimpleTimeZone daylight time schedul schedul describ set rule start rule end rule day daylight time start end specifi combin month day month day week valu month valu repres Calendar::Calendar field valu day week valu repres Calendar::Calendar valu mean valu combin follow exact day month specifi exact day month set month day month exact valu day week zero exampl specifi march set month day month day week day week day month specifi day week exact day month set month exact month valu day month day rule appli day week negat field valu exampl specifi sunday april set month day month day week day week day month specifi day week exact day month set day month day week negat valu exampl specifi last wednesday 21st march set month day month 21 day week last day week month specifi last day week month set day week valu day month exampl specifi last sunday octob set month day week day month time day daylight time start end specifi millisecond valu day kind mode specifi time exampl daylight time end 200 wall clock time specifi 7200000 millisecond mode case wall clock time end rule mean daylight time exampl paramet construct time zone object paramet rule applic set rule SimpleTimeZone::setStartRule
SimpleTimeZone::SimpleTimeZone construct SimpleTimeZone::SimpleTimeZone given base time zone offset gmt time zone rule start end daylight time starttim endtim specifi repres wall clock time amount daylight assum 3600000 millisecond hour constructor equival rawoffset given base time zone offset gmt time zone given object startmonth daylight time start month Month::Month field valu base januari startday day month daylight time start see descript case paramet startdayofweek daylight time start day week see descript case paramet starttim daylight time start time local wall clock time millisecond day local standard time case endmonth daylight time end month Month::Month field valu base octob endday day month daylight time end see descript case paramet enddayofweek daylight time end day week see descript case paramet endtim daylight end time local wall clock time millisecond day local daylight time case
SimpleTimeZone::SimpleTimeZone construct SimpleTimeZone::SimpleTimeZone given base time zone offset gmt time zone rule start end daylight time starttim endtim assum repres wall clock time constructor equival rawoffset given base time zone offset gmt time zone given object startmonth daylight time start month Month::Month field valu base januari startday day month daylight time start see descript case paramet startdayofweek daylight time start day week see descript case paramet starttim daylight time start time local wall clock time local standard time case endmonth daylight time end month Month::Month field valu base octob endday day month daylight time end see descript case paramet enddayofweek daylight time end day week see descript case paramet endtim daylight end time local wall clock time local daylight time case dstsave amount time millisecond save daylight time
SimpleTimeZone::SimpleTimeZone construct SimpleTimeZone::SimpleTimeZone given base time zone offset gmt time zone rule start end daylight time constructor take full set start end rule paramet includ mode starttim endtim mode specifi rawoffset given base time zone offset gmt time zone given object startmonth daylight time start month Month::Month field valu base januari startday day month daylight time start see descript case paramet startdayofweek daylight time start day week see descript case paramet starttim daylight time start time time mode specifi starttimemod starttimemod mode start time specifi starttim endmonth daylight time end month Month::Month field valu base octob endday day month daylight time end see descript case paramet enddayofweek daylight time end day week see descript case paramet endtim daylight end time time time mode specifi endtimemod endtimemod mode end time specifi endtim dstsave amount time millisecond save daylight time
SimpleTimeZone::setStartRule set daylight time start rule exampl daylight time start first sunday april local wall clock time set start rule call startmonth daylight time start month Month::Month field valu base januari startday day month daylight time start see descript case paramet startdayofweek daylight time start day week see descript case paramet starttim daylight time start time local wall clock time local standard time case
SimpleTimeZone::setStartRule set daylight time start rule fix date month equival startmonth daylight time start month Month::Month field valu base januari startday day month daylight time start starttim daylight time start time local wall clock time local standard time case see descript case paramet
SimpleTimeZone::setStartRule set daylight time start rule weekday given date month first monday 8th startmonth daylight time start month Month::Month field valu base januari startday day month daylight time start startdayofweek daylight time start day week starttim daylight time start time local wall clock time local standard time case rule select first WeekFields::dayOfWeek dayofmonth fals rule select last WeekFields::dayOfWeek dayofmonth
SimpleTimeZone::setEndRule set daylight time end rule exampl daylight time end last sunday octob wall clock time set end rule call setendrul calendar octob calendar sunday 60 60 1000 endmonth daylight time end month Month::Month field valu base octob endday day month daylight time end see descript case paramet enddayofweek daylight time end day week see descript case paramet endtim daylight end time local wall clock time millisecond day local daylight time case
SimpleTimeZone::setEndRule set daylight time end rule fix date month equival endmonth daylight time end month Month::Month field valu base octob endday day month daylight time end endtim daylight end time local wall clock time millisecond day local daylight time case
SimpleTimeZone::setEndRule set daylight time end rule weekday given date month first monday 8th endmonth daylight time end month Month::Month field valu base octob endday day month daylight time end enddayofweek daylight time end day week endtim daylight end time local wall clock time millisecond day local daylight time case rule select first enddayofweek endday fals rule select last enddayofweek endday month
SimpleTimeZone::getOffset return differ millisecond local time utc take account raw offset effect daylight specifi date time assum start end month distinct use default object calendar determin leap year use result calendar default GregorianCalendar::GregorianCalendar note general client use calendar get zone offset calendar get dst offset instead call era era given date year year given date month month given date Month::Month base januari day day month given date dayofweek day week given date milli millisecond day standard local time millisecond add utc get local time
SimpleTimeZone::hashCode generat hash SimpleDateFormat::SimpleDateFormat object hash object
SimpleTimeZone::decodeStartRule decod start rule valid paramet paramet expect encod form repres various rule mode negat zero valu represent format rang month includ undecimb specif GregorianCalendar::GregorianCalendar use month rang time includ oneday vs end oneday end rule exclus limit point rang time dst includ start end reason specifi end oneday order includ entir day equival time day specifi exampl decemb 31 arguabl start rang oneday keep start end rang consist
TimerTask::TimerTask task schedul time repeat execut Timer::Timer
TimerTask::TimerTask creat timer task
TooManyListenersException::TooManyListenersException TooManyListenersException::TooManyListenersException Exception::Exception part Event::Event model annot implement unicast case multicast Event::Event sourc presenc throw TooManyListenersException::TooManyListenersException claus given concret implement normal multicast addxyzeventlisten event listen registr pattern annot interfac implement unicast listen case listen regist particular event listen sourc concurr
TooManyListenersException::TooManyListenersException construct TooManyListenersException::TooManyListenersException detail messag detail messag String::String describ particular
TooManyListenersException::TooManyListenersException construct TooManyListenersException::TooManyListenersException specifi detail messag detail messag String::String describ particular detail messag
IllegalFormatConversionException::IllegalFormatConversionException construct instanc mismatch convers correspond argument inapplic convers arg Class::Class mismatch argument
InputMismatchException::InputMismatchException thrown Scanner::Scanner indic token retriev match pattern expect type token rang expect type
Matcher::Matcher engin perform match oper interpret matcher creat pattern invok pattern creat matcher perform kind match oper attempt match entir input sequenc pattern attempt match input sequenc start begin pattern scan input sequenc look subsequ match pattern return boolean indic success failur success match obtain queri state matcher matcher find match subset input call region default region contain matcher input region modifi queri region boundari interact pattern construct chang see detail defin replac match subsequ string content desir comput match result tandem order collect result exist string buffer conveni creat string match subsequ input sequenc replac explicit state matcher includ start end indic recent success match includ start end indic input subsequ captur pattern total count subsequ conveni return captur subsequ string form explicit state matcher initi undefin attempt queri part success match caus thrown explicit state matcher recomput match oper implicit state matcher includ input charact sequenc append posit initi zero updat matcher reset explicit invok input sequenc desir reset matcher discard explicit state set append posit zero instanc safe use multipl concurr thread jsr 51
Matcher::Matcher default constructor
Matcher::Matcher matcher state Pattern::Pattern match
Matcher::start return start index previous match index first charact match
Matcher::start return start index subsequ captur given group previous match oper index start Group::Group zero denot entir pattern express start equival start group index captur group matcher pattern index first charact captur group match success group match
Matcher::start return start index subsequ captur given previous match oper name name name captur group matcher pattern index first charact captur group match success group match
Matcher::end return offset last charact match offset last charact match
Matcher::end return offset last charact subsequ captur given group previous match oper index start Group::Group zero denot entir pattern express end equival end group index captur group matcher pattern offset last charact captur group match success group match
Matcher::end return offset last charact subsequ captur given previous match oper name name name captur group matcher pattern offset last charact captur group match success group match
Matcher::group return input subsequ match previous match matcher input sequenc express group substr start nbsp end equival note pattern exampl match empti string return empti string pattern success match empti string input possibl empti subsequ match previous match string form
Matcher::group return input subsequ captur given group previous match oper matcher input sequenc group index express group substr start nbsp end equival index start Group::Group zero denot entir pattern express group equival group match success group specifi fail match part input sequenc null return note group exampl match empti string return empti string group success match empti string input group index captur group matcher pattern possibl empti subsequ captur group previous match null group fail match part input
Matcher::group return input subsequ captur given previous match oper match success group specifi fail match part input sequenc null return note group exampl match empti string return empti string group success match empti string input name name name captur group matcher pattern possibl empti subsequ captur name group previous match null group fail match part input
Matcher::groupCount return number captur group matcher pattern Group::Group zero denot entir pattern convent includ count non negat integ smaller equal valu return guarante valid group index matcher number captur group matcher pattern
Matcher::matches attempt match entir region pattern match succeed obtain start end group entir region sequenc match matcher pattern
Matcher::find attempt find subsequ input sequenc match pattern start begin matcher region previous invoc success matcher reset first charact match previous match match succeed obtain start end group subsequ input sequenc match matcher pattern
Matcher::find reset matcher attempt find subsequ input sequenc match pattern start specifi index match succeed obtain start end group subsequ invoc start first charact match match start index start search match subsequ input sequenc start given index match matcher pattern
Matcher::lookingAt attempt match input sequenc start begin region pattern start begin region requir entir region match match succeed obtain start end group prefix input sequenc match matcher pattern
Matcher::quoteReplacement return liter replac String::String specifi String::String produc String::String work liter replac Matcher::appendReplacement String::String produc match sequenc charact treat liter sequenc slash dollar sign given mean string liter liter string replac
Matcher::appendReplacement implement non termin append replac step perform action read charact input sequenc start append posit append given string buffer stop read last charact preced previous match charact index nbsp nbsp append given replac string string buffer set append posit matcher index last charact match replac string contain refer subsequ captur previous match occurr name replac result evalu correspond respect first number treat part group refer subsequ number incorpor form legal group refer numer consid potenti compon group refer group match string foo exampl pass replac string 2bar caus foobar append string buffer dollar sign includ liter replac string preced backslash note backslash dollar sign replac string caus result treat liter replac string dollar sign treat refer captur subsequ describ backslash escap liter charact replac string intend loop exampl write dog dog yard standard output stream sb target string buffer replac replac string matcher
Matcher::appendTail implement termin append replac step read charact input sequenc start append posit append given string buffer intend invok invoc order copi remaind input sequenc sb target string buffer target string buffer
Matcher::replaceAll replac subsequ input sequenc match pattern given replac string first reset matcher scan input sequenc look match pattern charact part match append result string match replac result replac string replac string contain refer captur subsequ note backslash dollar sign replac string caus result treat liter replac string dollar sign treat refer captur subsequ describ backslash escap liter charact replac string given regular express input aabfooaabfooabfoob replac string invoc matcher express yield string foo foo foo invok chang matcher state matcher further match oper first reset replac replac string string construct replac match subsequ replac string substitut captur subsequ
Matcher::toString return string represent matcher string represent Matcher::Matcher contain use debug exact format unspecifi string represent matcher
Matcher::search initi search find Pattern::Pattern given bound group fill default valu match root state machin call state machin hold state match proceed matcher matcher set boundari start search anchor set param soft boundari start search mean regex tri match index won match subsequ call search start soft boundari end previous match
Matcher::match initi search anchor match Pattern::Pattern given bound group fill default valu match root state machin call state machin hold state match proceed matcher
Matcher::getSubSequence generat String::String matcher input specifi rang beginindex begin index inclus endindex end index exclus String::String generat matcher input
Pattern::Pattern compil represent regular express regular express specifi string first compil instanc result pattern creat object match arbitrari regular express state involv perform match resid matcher matcher share pattern typic invoc sequenc thus defin conveni regular express compil express match input sequenc singl invoc statement equival statement repeat match effici allow compil pattern reus instanc immut safe use multipl concurr thread instanc safe use backslash charact serv introduc escap construct defin tabl quot charact interpret unescap construct thus express match singl backslash match brace error use backslash prior alphabet charact denot escap construct reserv futur extens regular express languag backslash prior non alphabet charact regardless charact part unescap construct backslash string liter sourc interpret requir trade languag specif unicod escap section charact escap section 10 therefor necessari doubl backslash string liter repres regular express protect interpret bytecod compil string liter 92 exampl match singl backspac charact interpret regular express 92 92 match word boundari string liter 92 hello 92 illeg lead compil time error order match string hello string liter 92 92 hello 92 92 Character::Character appear charact compos union oper implicit intersect oper amp amp union oper denot contain charact operand intersect oper denot contain charact operand preced charact oper follow highest lowest note set metacharact effect charact charact instanc regular express lose mean charact express becom rang form metacharact line termin charact sequenc mark end line input charact sequenc recogn line termin newlin line feed charact nbsp carriag return charact follow newlin charact nbsp standalon carriag return charact nbsp line charact nbsp 92 u0085 line separ charact nbsp 92 u2028 paragraph separ charact nbsp 92 u2029 mode activ line termin recogn newlin charact regular express match charact line termin flag specifi default regular express ignor line termin match begin end respect entir input sequenc mode activ match begin input line termin end input mode match line termin end input sequenc captur group number count open parenthes express exampl group Group::Group zero stand entir express captur group name match subsequ input sequenc match group save captur subsequ express refer retriev matcher match oper complet captur group assign name name captur group referenc name Group::Group name compos charact first charact letter uppercas letter 92 u0041 nbsp nbsp 92 u005a lowercas letter 92 u0061 nbsp nbsp 92 u007a digit 92 u0030 nbsp nbsp 92 u0039 name captur group number describ captur input associ group subsequ group recent match group evalu time quantif previous captur valu retain evalu fail match string aba express exampl leav group set captur input discard begin match group begin pure non captur group captur text count group total name captur group unicod support conform Level::Level rl2 canon equival unicod escap sequenc 92 u2014 sourc process describ section trade languag specif escap sequenc implement regular express parser unicod escap express read file keyboard thus string 92 u2014 u2014 equal compil pattern match charact hexadecim valu 0x2014 unicod charact repres regular express use hex notat hexadecim point valu describ construct 92 exampl supplementari charact 2011f specifi 92 2011f instead consecut unicod escap sequenc surrog pair 92 ud840 92 udd1f unicod script block categori binari properti written construct perl prop match input properti prop prop match input properti script block categori binari properti charact specifi prefix ishiragana use script keyword form sc script hiragana sc hiragana script name support Pattern::Pattern valid script name accept defin specifi prefix inmongolian use keyword block form blk block mongolian blk mongolian block name support Pattern::Pattern valid block name accept defin specifi option prefix isl denot categori unicod letter script block categori specifi use keyword general categori form gc general categori lu gc lu support categori version specifi categori name defin standard normat inform specifi prefix isalphabet support binari properti Pattern::Pattern alphabet ideograph letter lowercas uppercas titlecas punctuat ResourceBundle::Control white space digit hex digit join control noncharact point assign predefin Character::Character posix charact conform recommend annex compat properti flag specifi comparison perl Pattern::Pattern engin perform tradit nfa base match order altern occur perl perl construct support predefin charact unicod charact nbsp nbsp nbsp nbsp match unicod backrefer construct th name name charact construct name unicod charact name condit construct condit condit embed construct embed comment syntax comment preprocess oper 92 construct support perl charact union intersect describ notabl differ perl perl interpret refer backslash escap number greater treat refer subexpress exist interpret octal escap octal escap begin zero interpret refer larger number accept refer subexpress exist point regular express parser drop digit number smaller equal exist number group digit perl use flag request match resum where last match function implicit repeat invoc resum where last match matcher reset perl embed flag top level express affect express embed flag take effect point appear top level group latter case flag restor end group perl precis descript behavior regular express construct pleas see jsr 51
Pattern::compile compil given regular express pattern regex express compil given regular express compil pattern
Pattern::compile compil given regular express pattern given flag regex express compil flag match flag bit mask includ given regular express compil pattern given flag
Pattern::pattern return regular express pattern compil sourc pattern
Pattern::matcher creat matcher match given input pattern input charact sequenc match matcher pattern
Pattern::quote return liter pattern String::String specifi String::String produc String::String creat Pattern::Pattern match string liter pattern metacharact escap sequenc input sequenc given mean string liter liter string replac
Pattern::readObject recompil Pattern::Pattern instanc stream origin pattern string read object tree recompil
Pattern::Pattern privat constructor creat pattern pattern string match flag complet describ Pattern::Pattern empti pattern string result object tree start node lastnod node
Pattern::composeOneStep attempt compos input combin first charact first combin mark return String::String composit lead charact first combin mark follow remain combin mark return null first charact further compos
Pattern::compile copi regular express int array invok pars express creat object tree
Pattern::printObjectTree print subtre Pattern::Pattern debug
JumboEnumSet::iterator return iter element contain set iter travers element natur order order enum constant declar return Iterator::Iterator weak consist iter throw iter element contain set
Dictionary::Dictionary Dictionary::Dictionary abstract parent Hashtable::Hashtable map key valu key valu object dictionari object key associ valu given dictionari key associ element look null object key valu rule equal implement decid key note obsolet implement implement Map::Map interfac extend
PropertyResourceBundle::PropertyResourceBundle PropertyResourceBundle::PropertyResourceBundle concret subclass ResourceBundle::ResourceBundle manag resourc local use set static string properti file see resourc bundl type resourc bundl don subclass PropertyResourceBundle::PropertyResourceBundle instead suppli properti file contain resourc data resourcebundl getbundl automat look appropri properti file creat PropertyResourceBundle::PropertyResourceBundle refer see complet descript search instanti strategi show member resourc bundl famili base name myresourc text defin bundl myresourc de german member bundl famili member base PropertyResourceBundle::PropertyResourceBundle text therefor content file myresourc de properti relat show add bundl famili implement subclass ListResourceBundle::ListResourceBundle key exampl form s1 actual key entir choic key use program retriev object bundl key case sensit implement PropertyResourceBundle::PropertyResourceBundle subclass thread safe simultan multipl thread default implement non abstract thread safe note PropertyResourceBundle::PropertyResourceBundle construct InputStream::InputStream Reader::Reader repres properti file construct PropertyResourceBundle::PropertyResourceBundle instanc InputStream::InputStream requir input stream encod iso 8859 case charact repres iso 8859 encod repres unicod escap defin section trade languag specif constructor take Reader::Reader limit
PropertyResourceBundle::PropertyResourceBundle creat properti resourc bundl properti file read constructor encod iso 8859 stream InputStream::InputStream repres properti file read
PropertyResourceBundle::getKeys return Enumeration::Enumeration key contain ResourceBundle::ResourceBundle parent bundl Enumeration::Enumeration key contain ResourceBundle::ResourceBundle parent bundl
PropertyResourceBundle::handleKeySet return Set::Set key contain ResourceBundle::ResourceBundle Set::Set key contain ResourceBundle::ResourceBundle
Base64::encodeToString encod specifi byte array String::String use encod scheme first encod input byte base64 encod byte array construct String::String use encod byte array charset word invoc exact effect invok string encod src standardcharset iso 8859 src byte array encod String::String contain result Base64::Base64 encod charact
Base64::decode decod Base64::Base64 encod String::String newli alloc byte array use encod scheme invoc exact effect invok decod src getbyt standardcharset iso 8859 src string decod newli alloc byte array contain decod byte
Base64::wrap return input stream decod encod byte stream read return InputStream::InputStream throw ioexcept read byte decod close return input stream close input stream input stream input stream decod specifi Base64::Base64 encod byte stream
PropertyPermission::getMask convert action String::String action mask action action string action mask
Collections::sort sort specifi list ascend order accord element element list implement interfac furthermor element list mutual compar e1 compareto e2 throw ClassCastException::ClassCastException element e1 e2 list sort guarante stabl equal element reorder result sort specifi list modifi resiz implement note implement stabl adapt iter mergesort requir fewer lg comparison input array partial sort offer perform tradit mergesort input array random order input array sort implement requir approxim comparison temporari storag requir vari constant sort input array object refer random order input array implement take equal advantag ascend descend order input array take advantag ascend descend order part input array suit merg sort array simpli concaten array sort result array implement adapt tim peter list sort python use techniqu peter mcilroy optimist sort theoret complex proceed fourth annual acm siam symposium discret algorithm pp 467 474 januari 1993 implement dump specifi list array sort array iter list reset element correspond posit array avoid log perform result attempt sort link list place object list list list sort
Collections::sort sort specifi list accord order induc specifi compar element list mutual compar use specifi compar compar e1 e2 throw ClassCastException::ClassCastException element e1 e2 list sort guarante stabl equal element reorder result sort specifi list modifi resiz implement note implement stabl adapt iter mergesort requir fewer lg comparison input array partial sort offer perform tradit mergesort input array random order input array sort implement requir approxim comparison temporari storag requir vari constant sort input array object refer random order input array implement take equal advantag ascend descend order input array take advantag ascend descend order part input array suit merg sort array simpli concaten array sort result array implement adapt tim peter list sort python use techniqu peter mcilroy optimist sort theoret complex proceed fourth annual acm siam symposium discret algorithm pp 467 474 januari 1993 implement dump specifi list array sort array iter list reset element correspond posit array avoid log perform result attempt sort link list place object list list list sort compar determin order list null valu indic element natur order
Collections::binarySearch search specifi list specifi object use binari search algorithm list sort ascend order accord element prior make call sort result undefin list contain multipl element equal specifi object guarante found run log time random access list provid constant time posit access specifi list implement interfac iter base binari search perform link travers log element comparison object list list list search key key search index search key contain list insert point insert point defin point key insert list index first element greater key list size element list specifi key note guarante return valu gt key found
Collections::binarySearch search specifi list specifi object use binari search algorithm list sort ascend order accord specifi compar prior make call sort result undefin list contain multipl element equal specifi object guarante found run log time random access list provid constant time posit access specifi list implement interfac iter base binari search perform link travers log element comparison object list list list search key key search compar list order null valu indic element index search key contain list insert point insert point defin point key insert list index first element greater key list size element list specifi key note guarante return valu gt key found
Collections::reverse revers order element specifi list run linear time list list element revers
Collections::shuffle random permut specifi list use default sourc random permut occur approxim equal likelihood hedg approxim forego descript default sourc random approxim unbias sourc independ chosen bit perfect sourc random chosen bit algorithm choos permut perfect uniform implement travers list backward last element repeat swap random select element current posit element random select portion list run first element current posit inclus run linear time specifi list implement interfac implement dump specifi list array shuffl dump shuffl array list avoid quadrat behavior result shuffl sequenti access list place list list shuffl
Collections::shuffle random permut specifi list use specifi sourc random permut occur equal likelihood assum sourc random fair implement travers list backward last element repeat swap random select element current posit element random select portion list run first element current posit inclus run linear time specifi list implement interfac implement dump specifi list array shuffl dump shuffl array list avoid quadrat behavior result shuffl sequenti access list place list list shuffl rnd sourc random use shuffl list
Collections::min return minimum element given collect accord natur order element element collect implement compar interfac furthermor element collect mutual compar e1 compareto e2 throw classcastexcept element e1 e2 collect iter entir collect henc requir time proport size collect object collect coll collect minimum element determin minimum element given collect accord natur order element
Collections::min return minimum element given collect accord order induc specifi compar element collect mutual compar specifi compar comp compar e1 e2 throw classcastexcept element e1 e2 collect iter entir collect henc requir time proport size collect object collect coll collect minimum element determin comp compar determin minimum element null valu indic element natur order minimum element given collect accord specifi compar
Collections::max return maximum element given collect accord natur order element element collect implement compar interfac furthermor element collect mutual compar e1 compareto e2 throw classcastexcept element e1 e2 collect iter entir collect henc requir time proport size collect object collect coll collect maximum element determin maximum element given collect accord natur order element
Collections::max return maximum element given collect accord order induc specifi compar element collect mutual compar specifi compar comp compar e1 e2 throw classcastexcept element e1 e2 collect iter entir collect henc requir time proport size collect object collect coll collect maximum element determin comp compar determin maximum element null valu indic element natur order maximum element given collect accord specifi compar
Collections::rotate rotat element specifi list specifi distanc call element index element previous index distanc mod list size valu list size inclus effect size list exampl suppos list compris invok collect rotat list collect rotat list list compris note use appli sublist move element list preserv order remain element exampl idiom move element index forward posit greater equal make concret suppos list compris move element index forward posit perform invoc result list move element forward increas absolut valu rotat distanc move element backward use posit shift distanc specifi list implement interfac implement exchang first element locat go repeat exchang displac element locat go displac element swap first element necessari process repeat success element rotat complet specifi list doesn implement randomaccess interfac implement break list sublist view index distanc mod size invok sublist view final invok entir list complet descript algorithm see section jon bentley program pearl addison wesley 1986 list list rotat distanc distanc rotat list constraint valu zero negat greater list size
Collections::containsAll overridden protect unscrupul List::List contain object sens map entri call setvalu
Collections::synchronizedCollection return synchron thread safe collect specifi collect order guarante serial access critic access collect accomplish return collect imper user manual synchron return collect travers failur follow advic result non determinist behavior return collect pass hashcod equal oper collect reli Object::Object equal hashcod necessari preserv contract oper case collect set list return collect serializ specifi collect serializ object collect collect wrap synchron collect synchron view specifi collect
Collections::checkedCollection return dynam typesaf view specifi collect attempt insert element wrong type result immedi assum collect contain incorrect type element prior time dynam typesaf view generat subsequ access collect take place view guarante collect contain incorrect type element generic mechan languag provid compil time static type check defeat mechan uncheck cast compil issu warn uncheck oper time static type check suffici exampl suppos collect pass third parti librari imper librari corrupt collect insert element wrong type use dynam typesaf view debug suppos program fail ClassCastException::ClassCastException indic incorrect type element put parameter collect unfortun occur time erron element insert typic provid sourc reproduc quick determin sourc temporarili modifi program wrap collect dynam typesaf view exampl declar replac temporarili run program caus fail point where incorrect type element insert collect clear identifi sourc fix modifi declar revert origin return collect pass hashcod equal oper collect reli Object::Object equal hashcod necessari preserv contract oper case collect set list return collect serializ specifi collect serializ null consid valu refer type return collect permit insert null element collect object collect collect dynam typesaf view return type type element permit hold dynam typesaf view specifi collect
Collections::emptySet return empti set immut set serializ name field parameter exampl illustr type safe obtain empti set implement creat separ Set::Set object call use compar cost use name field field provid type safeti object set empti set
Collections::emptySortedSet return empti sort set immut set serializ exampl illustr type safe obtain empti sort set implement creat separ SortedSet::SortedSet object call type element set empti sort set
Collections::emptyList return empti list immut list serializ exampl illustr type safe obtain empti list implement note implement creat separ list object call use compar cost use name field field provid type safeti type element list empti immut list
Collections::emptyMap return empti map immut map serializ exampl illustr type safe obtain empti map implement creat separ Map::Map object call use compar cost use name field field provid type safeti map key map valu empti map
Collections::emptySortedMap return empti sort map immut map serializ exampl illustr type safe obtain empti map implement creat separ SortedMap::SortedMap object call map key map valu empti sort map
Collections::reverseOrder return compar impos revers natur order collect object implement Comparable::Comparable interfac natur order order impos object compareto enabl idiom sort maintain collect array object implement Comparable::Comparable interfac revers natur order exampl suppos array string sort array revers lexicograph alphabet order return compar serializ object compar compar compar impos revers natur order collect object implement compar interfac
Collections::reverseOrder return compar impos revers order specifi compar specifi compar null equival word return compar impos revers natur order collect object implement Comparable::Comparable interfac return compar serializ assum specifi compar serializ null object compar compar cmp compar order revers return compar null compar impos revers order specifi compar
Collections::list return array list contain element return specifi enumer order return enumer provid interoper legaci return enumer requir collect object return enumer enumer element return array list array list contain element return specifi enumer
Collections::asLifoQueue return view last first lifo Method::Method add map push remov map pop view use use requir queue lifo order invoc queue return result exact invoc dequ implement sequenc invoc dequ object dequ dequ dequ queue
ResourceBundle::ResourceBundle resourc bundl contain local specif object program local specif resourc String::String exampl program load resourc bundl appropri current user local write program larg independ user local isol local specif resourc bundl allow write program easili local translat languag handl multipl local easili modifi support local resourc bundl belong famili member share common base name name addit compon identifi local exampl base name famili resourc bundl myresourc famili default resourc bundl simpli name famili myresourc bundl last resort specif local support famili provid local specif member exampl german name myresourc de resourc bundl famili contain item item translat local repres resourc bundl exampl myresourc myresourc de String::String button cancel oper myresourc String::String contain cancel myresourc de contain abbrechen resourc countri make exampl myresourc de ch contain object german languag de switzerland ch want modifi resourc program local specif object load ResourceBundle::ResourceBundle use resourc bundl contain key valu pair key uniqu identifi local specif object bundl exampl ListResourceBundle::ListResourceBundle contain key valu pair key String::String exampl key okkey cancelkey exampl valu String::String cancel don valu type object retriev object resourc bundl use appropri getter okkey cancelkey string use getstr retriev getter requir key argument return object found object found getter throw MissingResourceException::MissingResourceException getstr ResourceBundle::ResourceBundle provid get string array ResourceBundle::getStringArray generic getobject type object use getobject ll cast result appropri type exampl platform provid subclass ResourceBundle::ResourceBundle ListResourceBundle::ListResourceBundle PropertyResourceBundle::PropertyResourceBundle provid fair creat resourc saw briefli previous exampl ListResourceBundle::ListResourceBundle manag resourc list key valu pair PropertyResourceBundle::PropertyResourceBundle use properti file manag resourc ListResourceBundle::ListResourceBundle PropertyResourceBundle::PropertyResourceBundle suit write ResourceBundle::ResourceBundle subclass subclass overrid ResourceBundle::handleGetObject getkey implement ResourceBundle::ResourceBundle subclass thread safe simultan multipl thread default implement non abstract direct known concret subclass ListResourceBundle::ListResourceBundle PropertyResourceBundle::PropertyResourceBundle thread safe resourcebundl control provid necessari perform bundl load process ResourceBundle::getBundle factori take resourcebundl control instanc implement subclass order enabl non standard resourc bundl format chang search strategi defin cach paramet refer descript factori detail take instanc resourc bundl load modifi instal implement instal provid detect ResourceBundle::ResourceBundle load time provid provid given base name instead default servic provid instal support base name first return cach manag resourc bundl instanc creat ResourceBundle::getBundle factori cach default factori return resourc bundl instanc multipl time cach ResourceBundle::getBundle client clear cach manag lifetim cach resourc bundl instanc use time live valu specifi cach resourc bundl instanc refer descript detail exampl exampl ResourceBundle::ResourceBundle subclass myresourc manag resourc larger number resourc use Map::Map notic don suppli valu parent level ResourceBundle::ResourceBundle handl key valu okkey restrict use singl famili ResourceBundle::ResourceBundle exampl set bundl messag exceptionresourc exceptionresourc fr exceptionresourc de widget widgetresourc widgetresourc fr widgetresourc de break resourc
ResourceBundle::ResourceBundle sole constructor invoc subclass constructor typic implicit
ResourceBundle::getString get string given key resourc bundl parent call equival call string key key key desir string string given key
ResourceBundle::getLocale return local resourc bundl call ResourceBundle::getBundle determin resourc bundl return correspond request local fallback local resourc bundl
ResourceBundle::getBundle get resourc bundl use specifi base name default local caller loader call equival call getbundl basenam local getdefault getclass getclassload getclassload run secur privileg ResourceBundle::ResourceBundle see complet descript search instanti strategi basenam base name resourc bundl fulli qualifi name resourc bundl given base name default local
ResourceBundle::getBundle return resourc bundl use specifi base name default local specifi control call equival call getclassload run secur privileg ResourceBundle::ResourceBundle see complet descript resourc bundl load process resourcebundl control basenam base name resourc bundl fulli qualifi name control control give resourc bundl load process resourc bundl given base name default local
ResourceBundle::getBundle get resourc bundl use specifi base name local caller loader call equival call getbundl basenam local getclass getclassload getclassload run secur privileg ResourceBundle::ResourceBundle see complet descript search instanti strategi basenam base name resourc bundl fulli qualifi name local local resourc bundl desir resourc bundl given base name local
ResourceBundle::getBundle return resourc bundl use specifi base name target local control caller loader call equival call getclassload run secur privileg ResourceBundle::ResourceBundle see complet descript resourc bundl load process resourcebundl control basenam base name resourc bundl fulli qualifi name targetlocal local resourc bundl desir control control give resourc bundl load process resourc bundl given base name Locale::Locale local
ResourceBundle::getBundle get resourc bundl use specifi base name local loader behav call pass default instanc spi refer descript ResourceBundle::getBundle use base name specifi local default local obtain generat sequenc specifi local languag script countri variant empti string base name candid bundl name list candid local generat attribut valu specifi local languag script countri variant append base name typic look follow candid bundl name where final compon empti string omit underscor exampl countri empti string fifth candid bundl name omit script empti string candid name includ script omit exampl local languag de variant produc candid name base name myresourc case variant contain underscor sequenc bundl name generat truncat last underscor part insert candid bundl name origin variant exampl local languag en script latn countri variant window vista bundl base name myresourc list candid bundl name generat note Locale::Locale list candid bundl name contain extra name order bundl name slight modifi see descript default implement detail ResourceBundle::getBundle iter candid bundl name find first instanti actual resourc bundl use default control generat bundl name generat name first name properti file name candid bundl name attempt creat resourc bundl first attempt load use generat name found load use specifi loader assign compat ResourceBundle::ResourceBundle access ResourceBundle::ResourceBundle instanti ResourceBundle::getBundle creat instanc use result resourc bundl ResourceBundle::getBundle attempt locat properti resourc file use generat properti file name generat path name candid bundl name replac charact append string properti attempt find resourc name use note resourc sens getresourc content resourc bundl contain data file find resourc attempt creat instanc content success instanc becom result resourc bundl continu result resourc bundl instanti list candid bundl name exhaust match resourc bundl found default control call return current default local sequenc candid local name generat use local search result bundl found base name look fail MissingResourceException::MissingResourceException thrown result bundl parent return cach chain complet ResourceBundle::getBundle examin remaind candid local list pass generat result resourc bundl candid bundl name where final compon empti string omit come end candid list tri plain bundl name candid bundl name attempt instanti resourc bundl first look properti file describ succeed call previous instanti resourc bundl resourc bundl continu list name exhaust current bundl non null parent parent chain complet bundl return note ResourceBundle::getBundle cach instanti resourc bundl return resourc bundl instanc multipl time note basenam argument fulli qualifi name compat earlier version sun se Runtime::Runtime environ verifi access PropertyResourceBundle::PropertyResourceBundle specifi path name use instead fulli qualifi name use properti file provid content file valid non abstract subclass ResourceBundle::ResourceBundle file syntact correct properti file default local local en gb call ResourceBundle::getBundle local argument instanti resourc bundl follow file myresourc fr ch properti hidden myresourc fr ch myresourc properti hidden myresourc basenam base name resourc bundl fulli qualifi name local local resourc bundl desir loader loader load resourc bundl resourc bundl given base name local
ResourceBundle::getBundle return resourc bundl use specifi base name target local loader control given control specifi locat instanti resourc bundl conceptu bundl load process given control perform step factori look resourc bundl cach specifi basenam targetlocal loader request resourc bundl instanc found cach time live period instanc parent instanc expir instanc return caller factori proceed load process call get resourc bundl format produc bundl resourc name string properti design base base resourc bundl respect string start reserv futur extens defin format string design defin format call target local get list candid Locale::Locale resourc bundl search call instanti ResourceBundle::ResourceBundle base bundl name candid local format refer note cach lookup step iter combin candid local format ResourceBundle::newBundle return ResourceBundle::ResourceBundle instanc iter combin exampl candid local local de de local de local format properti sequenc local format combin call control newbundl previous step found resourc bundl proceed step bundl found base bundl bundl local candid local list contain local return bundl caller bundl found base bundl candid local list contain local Locale::Locale put bundl hold proceed step bundl found base bundl proceed step call get fallback local altern current target local further find resourc bundl return non null local becom target local load process start step base bundl found put hold previous step return caller MissingResourceException::MissingResourceException thrown point found resourc bundl base bundl bundl set parent instanti return caller instanti base list candid local found final bundl return caller resourc bundl load process factori look cach call time live period resourc bundl found cach expir factori call determin resourc bundl reload reload requir factori call control newbundl reload resourc bundl control newbundl return null factori put dummi resourc bundl cach mark nonexist resourc bundl order avoid lookup overhead subsequ request dummi resourc bundl expir control specifi control resourc bundl load cach default refer detail exampl bundl load process default resourcebundl control implement condit base bundl name foo messag request Locale::Locale default Locale::Locale avail resourc bundl foo messag fr properti foo messag properti first ResourceBundle::getBundle tri load resourc bundl sequenc foo messag file foo messag properti foo messag file foo messag properti foo messag file foo messag properti point ResourceBundle::getBundle find foo messag properti put hold base bundl ResourceBundle::getBundle call return local french ResourceBundle::getBundle tri load bundl sequenc foo messag fr file foo messag fr properti foo messag file foo messag properti ResourceBundle::getBundle find foo messag fr properti creat ResourceBundle::ResourceBundle instanc ResourceBundle::getBundle set parent chain list candid local foo messag properti found list ResourceBundle::getBundle creat ResourceBundle::ResourceBundle instanc becom parent instanc foo messag fr properti basenam base name resourc bundl fulli qualifi name targetlocal local resourc bundl desir loader loader load resourc bundl control control give resourc bundl load process resourc bundl given base name local
ResourceBundle::checkList check given List::List null empti null element
ResourceBundle::putBundleInCache put bundl cach cachekey key resourc bundl bundl resourc bundl put cach ResourceBundle::ResourceBundle cachekey put bundl call found cach return
ResourceBundle::getKeys return enumer key Enumeration::Enumeration key contain ResourceBundle::ResourceBundle parent bundl
ResourceBundle::containsKey determin given key contain ResourceBundle::ResourceBundle parent bundl key resourc key given key contain ResourceBundle::ResourceBundle parent bundl fals
ResourceBundle::keySet return Set::Set key contain ResourceBundle::ResourceBundle parent bundl Set::Set key contain ResourceBundle::ResourceBundle parent bundl
ResourceBundle::handleKeySet return Set::Set key contain ResourceBundle::ResourceBundle default implement return Set::Set key return return null Set::Set creat valu kept ResourceBundle::ResourceBundle order avoid produc Set::Set subsequ call subclass overrid faster handl Set::Set key contain ResourceBundle::ResourceBundle
ResourceBundle::FORMAT default default format List::List contain string properti order List::List
ResourceBundle::FORMAT format List::List contain List::List
ResourceBundle::FORMAT properti properti format List::List contain properti List::List
ResourceBundle::getNoFallbackControl return resourcebundl control return specifi format return null format equal resourcebundl control instanc return singleton thread safe format format return resourcebundl control getformat resourcebundl control support specifi format fallback Locale::Locale support
ResourceBundle::getFormats return List::List String::String contain format load resourc bundl given basenam resourcebundl getbundl factori tri load resourc bundl format order specifi list list return String::String predefin format base resourc bundl properti string start reserv futur extens defin format requir return immut unmodifi List::List return List::List mutat return getformat default implement return resourcebundl getbundl factori look first base resourc bundl properti base basenam base name resourc bundl fulli qualifi name List::List String::String contain format load resourc bundl
ResourceBundle::getCandidateLocales return List::List Locale::Locale candid local basenam local call resourcebundl getbundl factori time factori tri find resourc bundl target Locale::Locale sequenc candid local correspond runtim resourc lookup path known parent chain correspond resourc bundl candid local exist parent defin load resourc bundl last element list desir base bundl termin parent chain given local equal local root root local List::List contain root Locale::Locale return case resourcebundl getbundl factori load base bundl result resourc bundl requir return immut unmodifi List::List return List::List mutat return ResourceBundle::getCandidateLocales default implement return List::List contain Locale::Locale use rule describ descript respect repres non empti languag script countri variant exampl repres Locale::Locale non empti valu languag countri form xx repres non empti languag valu xx case Locale::Locale final compon valu empti string omit input Locale::Locale empti script valu append candid Locale::Locale omit final compon local root input Locale::Locale non empti script valu append candid Locale::Locale omit final compon languag append candid generat Locale::Locale countri variant restor local root input Locale::Locale variant valu consist multipl subtag separ underscor generat candid Locale::Locale omit variant subtag insert occurr local full variant valu origin list exampl variant consist subtag v1 v2 v1 v2 v1 v1 v2 v1 local root case chines input Locale::Locale languag zh chines empti script valu han simplifi hant tradit suppli depend countri countri cn china sg singapor han suppli countri hk hong kong sar china mo macau sar china tw taiwan hant suppli countri countri empti script suppli exampl local zh cn candid list zh han cn zh han zh cn zh local root local zh tw candid list zh hant tw zh hant zh tw zh local root case norwegian local ny local nn repres norwegian nynorsk local languag nn standard candid list generat nn candid ad ny local root local exact local ny first convert local nn procedur follow treat languag synonym norwegian bokm xe5 nb singl case local ny handl input Locale::Locale languag nb candid Locale::Locale languag nb interleav first use request languag use synonym exampl local nb posix generat candid list nb posix posix nb nb local root local posix generat list local appear correspond local nb default implement use overrid implement modifi return caller subclass modifi return ResourceBundle::getCandidateLocales exampl given basenam messag given local local ja nbsp nbsp xx List::List Locale::Locale return resourc bundl ja Locale::Locale found runtim resourc lookup path parent chain basenam base name resourc bundl fulli qualifi name local local resourc bundl desir List::List candid Locale::Locale given local
ResourceBundle::getFallbackLocale return Locale::Locale fallback local further resourc bundl search resourcebundl getbundl factori call factori time result resourc bundl found basenam local where local paramet resourcebundl getbundl previous fallback local return return null further fallback search desir default implement return given local isn default null return basenam base name resourc bundl fulli qualifi name resourcebundl getbundl unabl find resourc bundl base bundl local Locale::Locale resourcebundl getbundl unabl find resourc bundl base bundl Locale::Locale fallback search null further fallback search desir
ResourceBundle::needsReload determin expir bundl cach reload base load time given loadtim criteria return reload requir fals loadtim millisecond offset call resourcebundl getbundl factori call resourcebundl control instanc current invoc instanc invoc origin load resourc bundl default implement compar loadtim last modifi time sourc data resourc bundl determin sourc data modifi loadtim return fals return implement assum given format string file suffix default format properti basenam base bundl name resourc bundl fulli qualifi name local local resourc bundl instanti format resourc bundl format load loader ClassLoader::ClassLoader use load bundl bundl resourc bundl instanc expir cach loadtim time bundl load put cach expir bundl reload fals
ResourceBundle::toBundleName convert given basenam local bundl name call default implement implement return valu where languag script countri UUID::variant languag script countri variant valu local respect final compon valu empti string omit preced script empti script valu omit preced valu empti string basenam return exampl basenam basenam local local ja nbsp nbsp xx basenam ja thinsp xx return given local local en basenam en return overrid allow applic use convent organ packag local resourc basenam base name resourc bundl fulli qualifi name local local resourc bundl load bundl name resourc bundl
ListResourceBundle::ListResourceBundle ListResourceBundle::ListResourceBundle abstract subclass ResourceBundle::ResourceBundle manag resourc local conveni easi use list see ResourceBundle::ResourceBundle resourc bundl general subclass overrid getcont provid array where item array pair object first element pair key String::String element valu associ key show member resourc bundl famili base name myresourc myresourc default member bundl famili myresourc fr french member member base ListResourceBundle::ListResourceBundle relat show add bundl famili base properti file key exampl form s1 actual key entir choic key use program retriev object bundl key case sensit implement ListResourceBundle::ListResourceBundle subclass thread safe simultan multipl thread default implement thread safe
ListResourceBundle::getKeys return Enumeration::Enumeration key contain ResourceBundle::ResourceBundle parent bundl Enumeration::Enumeration key contain ResourceBundle::ResourceBundle parent bundl
ListResourceBundle::handleKeySet return Set::Set key contain ResourceBundle::ResourceBundle Set::Set key contain ResourceBundle::ResourceBundle
ListResourceBundle::getContents return array item pair object Object::Object array first element pair key String::String element valu associ key see descript detail array Object::Object array repres key valu pair
AbstractList::add append specifi element end list option oper list support oper place limit element ad list particular list refus add null element impos restrict type element ad List::List clear specifi document restrict element ad implement call add size note implement throw UnsupportedOperationException::UnsupportedOperationException overridden element append list specifi
AbstractList::listIterator implement return straightforward implement ListIterator::ListIterator interfac extend implement Iterator::Iterator interfac return iter ListIterator::ListIterator implement reli list get int set int add int remov int note list iter return implement throw respons remov set add list remov int set int add int overridden implement made throw runtim face concurr modif describ specif protect field
Locale::Locale Locale::Locale object repres specif geograph polit cultur region oper requir Locale::Locale perform task call local sensit use Locale::Locale tailor user exampl display number local sensit oper mdash number format accord custom convent user nativ countri region cultur Locale::Locale implement ietf bcp 47 compos support ldml ut 35 unicod Locale::Locale data markup languag bcp 47 compat extens local data exchang Locale::Locale object logic consist field describ iso 639 alpha alpha languag regist languag subtag alpha letter futur enhanc languag alpha alpha alpha find full list valid languag iana languag subtag Registry::Registry search type languag languag field case insensit Locale::Locale canonic lower case form languag valu form za note full bcp47 languag product exclud extlang modern letter languag replac exampl en ja japanes kok konkani iso 15924 alpha script find full list valid script iana languag subtag Registry::Registry search type script script field case insensit Locale::Locale canonic titl case first letter upper case rest letter lower case form script valu form za exampl latn latin cyrl cyril iso 3166 alpha countri un 49 numer area find full list valid countri region iana languag subtag Registry::Registry search type region countri region field case insensit Locale::Locale canonic upper case form countri region valu form za exampl unit state fr franc 029 caribbean arbitrari valu indic variat Locale::Locale where variant valu indic semant valu order import first separ underscor variant field case sensit note ietf bcp 47 place syntact restrict variant subtag bcp 47 subtag strict indic addit variat defin languag dialect cover combin languag script region subtag find full list valid variant iana languag subtag Registry::Registry search type variant variant field Locale::Locale histor kind variat languag variat exampl support variant avail se Runtime::Runtime environ indic altern cultur behavior calendar type number script bcp 47 kind identifi languag support extens subtag privat use subtag form variant valu form subtag subtag where subtag 9a za 9a za note bcp 47 use hyphen delimit lenient exampl polyton polyton greek posix map singl charact key string valu indic extens apart languag identif extens Locale::Locale implement semant syntax bcp 47 extens subtag privat use subtag extens case insensit Locale::Locale canonic extens key valu lower case note extens empti valu form key singl charact set 9a za form valu form subtag subtag where key subtag 9a za key subtag 9a za allow singl charact subtag exampl key valu ca japanes japanes Calendar::Calendar key valu note bcp 47 requir field valu regist iana languag subtag Registry::Registry Locale::Locale provid valid featur builder check individu field satisfi syntact requir form valid valu see detail ut 35 unicod Locale::Locale data markup languag defin option attribut keyword overrid refin default behavior associ local keyword repres pair key type exampl nu thai indic thai local digit valu thai format number key nu keyword map bcp 47 extens valu use extens key exampl nu thai becom extens nu thai thus Locale::Locale object contain unicod local attribut keyword getextens unicod local extens return String::String repres exampl nu thai Locale::Locale provid allow access unicod local attribut key type pair repres string unicod Locale::Locale Extension::Extension list attribut alphabet follow key type sequenc key list alphabet order subtag compris key type fix type defin form local key form 9a za form local type form 9a za 9a za empti seri subtag alphanum length form local attribut form 9a za singl subtag form local type subtag unicod local extens specifi option behavior local sensit servic ldml specif defin various key valu actual local sensit servic implement Runtime::Runtime environ support particular unicod local attribut key type pair creat local creat Locale::Locale object builder use construct Locale::Locale object conform bcp 47 syntax constructor Locale::Locale provid constructor constructor allow creat Locale::Locale object languag countri variant specifi script extens factori creat Locale::Locale object form bcp 47 languag tag local constant Locale::Locale provid number conveni constant use creat Locale::Locale object common local exampl creat Locale::Locale object unit state system internation provid local resourc multipl local find local languag tag meet user specif prefer note term languag tag interchang local local match document order match user prefer local set languag tag defin mechan filter lookup filter get match local lookup choos match local match case insensit match mechan describ section user prefer call languag prioriti list express list languag rang syntact type languag rang basic extend see detail filter filter oper return match languag tag defin rfc 4647 follow filter languag rang repres specif languag tag languag tag fewest number subtag accept match languag tag match set tag equal greater number subtag languag rang non wildcard subtag languag rang appear match languag tag type filter filter basic languag rang call basic filter filter extend languag rang call extend filter return result kind languag rang includ given languag prioriti List::List paramet specifi filter lookup lookup oper return match languag tag defin rfc 4647 follow contrast filter languag rang repres specif tag accept match first match tag found accord user prioriti consid closest match item return exampl languag prioriti List::List consist languag rang zh hant tw en priorit order lookup progress search languag tag order find match languag tag languag tag match complet languag rang languag tag return languag rang ignor lookup multipl languag tag match result subtag includ languag rang first match languag tag return languag tag treat match use local ve creat Locale::Locale queri use Locale::getCountry get countri region Locale::getLanguage get languag use getdisplaycountri get name countri suitabl display user similar use getdisplaylanguag get name languag suitabl display user interest getdisplayxxx local sensit version use default local use local specifi argument platform provid number perform local sensit oper exampl NumberFormat::NumberFormat format number currenc percentag local sensit manner NumberFormat::NumberFormat conveni creat default object type exampl NumberFormat::NumberFormat provid conveni creat default NumberFormat::NumberFormat object variant explicit local latter use default local Locale::Locale mechan identifi kind object NumberFormat::NumberFormat get local mechan identifi object contain object compat order maintain compat exist usag local constructor retain behavior prior Runtime::Runtime environ version larg tostr thus Locale::Locale object continu particular client pars output tostr languag countri variant field continu strong discourag variant field addit script extens addit bcp 47 impos syntax restrict impos local constructor mean convers local bcp 47 languag tag made lose thus Locale::toLanguageTag repres state local languag countri variant conform bcp 47 issu recommend client migrat construct non conform local use Locale::forLanguageTag local builder instead client desir string represent complet local reli Locale::toLanguageTag purpos compat reason non conform local treat case ja jp jp th th th form bcp 47 variant eas migrat bcp 47 treat construct case caus constructor generat extens valu behav exact prior ja jp jp repres japanes japan japanes imperi calendar represent use unicod local extens specifi unicod local key ca calendar type japanes Locale::Locale constructor call argument ja jp jp extens ca japanes automat ad th th th repres thai thailand thai digit represent use unicod local extens specifi unicod local key nu number valu thai Locale::Locale constructor call argument th th th extens nu thai automat ad serial serial writeobject write field output stream includ extens deseri readresolv add extens describ case th th th ja jp jp legaci languag local constructor convert languag earlier obsolet form map iw yi map ji map continu case order break backward compat ad map old languag maintain old intern Locale::Locale Locale::getLanguage tostr reflect old use bcp 47 languag tag Locale::toLanguageTag reflect preserv equival local matter construct default resourc bundl lookup mechan implement map resourc name use convent see letter languag countri region Locale::Locale constructor specifi languag countri param charact length practic accept length specif relax allow languag eight charact countri region charact particular letter languag digit region specifi iana languag subtag Registry::Registry compat implement impos length constraint
Locale::FRENCH use constant languag
Locale::GERMAN use constant languag
Locale::FRANCE use constant countri
Locale::GERMANY use constant countri
Locale::ITALY use constant countri
Locale::JAPAN use constant countri
Locale::KOREA use constant countri
Locale::CHINA use constant countri
Locale::TAIWAN use constant countri
Locale::UK use constant countri
Locale::US use constant countri
Locale::CANADA use constant countri
Locale::Locale privat constructor getinst
Locale::Locale construct local languag countri variant constructor normal languag valu lowercas countri valu uppercas note iso 639 stabl standard languag defin specif iw ji chang constructor accept old iw ji yi Locale::Locale return old backward compat reason constructor make syntact check input case ja jp jp th th th handl see languag iso 639 alpha alpha languag languag subtag charact length see Locale::Locale descript valid languag valu countri iso 3166 alpha countri un 49 numer area see Locale::Locale descript valid countri valu variant arbitrari valu indic variat Locale::Locale see Locale::Locale descript detail
Locale::Locale construct local languag countri constructor normal languag valu lowercas countri valu uppercas note iso 639 stabl standard languag defin specif iw ji chang constructor accept old iw ji yi Locale::Locale return old backward compat reason constructor make syntact check input languag iso 639 alpha alpha languag languag subtag charact length see Locale::Locale descript valid languag valu countri iso 3166 alpha countri un 49 numer area see Locale::Locale descript valid countri valu
Locale::Locale construct local languag constructor normal languag valu lowercas note iso 639 stabl standard languag defin specif iw ji chang constructor accept old iw ji yi Locale::Locale return old backward compat reason constructor make syntact check input languag iso 639 alpha alpha languag languag subtag charact length see Locale::Locale descript valid languag valu
Locale::createConstant call creat Locale::Locale constant due make shortcut
Locale::getInstance return Locale::Locale construct given languag countri variant Locale::Locale instanc avail cach instanc return Locale::Locale instanc creat cach languag lowercas languag countri uppercas letter iso 3166 numric un 49 area variant vendor browser specif see descript Locale::Locale instanc request
Locale::getDefault get current valu default local instanc virtual machin virtual machin set default local startup base host environ local sensit local explicit specifi chang use default local instanc virtual machin
Locale::getDefault get current valu default local specifi Locale::Category instanc virtual machin virtual machin set default local startup base host environ local sensit local explicit specifi chang use setdefault local categori Locale::Locale categori specifi categori get default local default local specifi Locale::Category instanc virtual machin
Locale::setDefault set default local instanc virtual machin affect host local secur manag checkpermiss call propertypermiss user languag write permiss default local chang virtual machin set default local startup base host environ local sensit local explicit specifi chang default local affect area function caller prepar reiniti local sensit run virtual machin set default local default local Locale::Category set specifi default local newlocal default local
Locale::setDefault set default local specifi Locale::Category instanc virtual machin affect host local secur manag checkpermiss call propertypermiss user languag write permiss default local chang virtual machin set default local startup base host environ local sensit local explicit specifi chang default local affect area function caller prepar reiniti local sensit run virtual machin categori specifi categori set default local newlocal default local
Locale::getAvailableLocales return array instal local return array repres union local support runtim environ instal implement contain Locale::Locale instanc equal array instal local
Locale::getISOCountries return list letter countri defin iso 3166 creat local note Locale::Locale support countri region letter numer un 49 area therefor list return contain valid creat local array iso 3166 letter countri
Locale::getISOLanguages return list letter languag defin iso 639 creat local note iso 639 stabl standard mdash languag chang list function return includ old languag chang Locale::Locale support languag charact length therefor list return contain valid creat local array iso 639 letter languag
Locale::getLanguage return languag Locale::Locale note iso 639 stabl standard mdash languag chang local constructor recogn old languag chang function return old want check specif languag chang don instead languag empti string defin
Locale::getCountry return countri region local empti string uppercas iso 3166 letter un 49 digit countri region empti string defin
Locale::hasExtensions return Locale::Locale Locale::Locale extens
Locale::stripExtensions return copi Locale::Locale Locale::Locale extens Locale::Locale return copi Locale::Locale extens extens
Locale::getBaseLocale Package::Package local return local baselocal ResourceBundle::ResourceBundle base local Locale::Locale
Locale::getLocaleExtensions Package::Package privat return local localeextens ResourceBundle::ResourceBundle local exnteion Locale::Locale null extens defin
Locale::toString return string represent Locale::Locale object consist languag countri variant script extens languag countri variant script extens languag lower case countri upper case script titl case extens lower case extens privat use subtag canon order explain local script extens result prior languag countri field miss function return empti string variant script extens field local variant variant accompani form languag countri script extens variant miss underscor ad behavior design support debug compat previous use tostr expect languag countri variant field repres Locale::Locale String::String interchang purpos use exampl en de de gb en win de posix zh cn han zh tw hant th th th nu thai string represent Locale::Locale debug
Locale::toLanguageTag return form ietf bcp 47 languag tag repres local Locale::Locale languag countri variant satisfi ietf bcp 47 languag tag syntax requir handl field describ languag languag empti exampl e2 emit und undetermin countri countri exampl 12 usa omit variant variant sub segment delimit emit subtag otherwis sub segment match 9a za exampl win oracl jdk standard edit first form sub segment append privat use subtag first append subtag lvariant follow sub segment order separ hyphen exampl lvariant win oracl lvariant jdk standard edit sub segment match 9a za variant truncat problemat sub segment sub segment omit remaind non empti emit privat use subtag remaind turn form exampl solari isjustthecoolestth emit lvariant solari solari convers support old local represent includ deprec iso languag compat perform convers deprec iso languag iw ji convert yi respect local languag countri variant ny repres norwegian nynorsk norway convert languag tag nn note languag tag creat form satisfi syntax requir defin ietf bcp 47 specif necessarili valid bcp 47 languag tag exampl return xx yy languag subtag xx region subtag yy invalid regist iana languag subtag Registry::Registry bcp47 languag tag repres local
Locale::getDisplayCountry return name local countri appropri display user name return local default local exampl local fr fr default local en getdisplaycountri return franc local en default local fr fr getdisplaycountri return etat uni name return local default local say don japanes name croatia function fall name use iso last resort valu local doesn specifi countri function return empti string name countri appropri local
Locale::getDisplayCountry return name local countri appropri display user name return local accord inlocal exampl local fr fr inlocal en getdisplaycountri return franc local en inlocal fr fr getdisplaycountri return etat uni name return local accord inlocal say don japanes name croatia function fall name final iso last resort valu local doesn specifi countri function return empti string inlocal local retriev display countri name countri appropri given local
Locale::getDisplayName return name local appropri display user valu return getdisplaylanguag getdisplayscript getdisplaycountri getdisplayvari assembl singl string non empti valu order subsequ name parenthes exampl languag script countri variant languag countri languag variant script countri countri depend field specifi local languag script countri variant field empti function return empti string name local appropri display
Locale::getDisplayName return name local appropri display user valu return getdisplaylanguag getdisplayscript getdisplaycountri getdisplayvari assembl singl string non empti valu order subsequ name parenthes exampl languag script countri variant languag countri languag variant script countri countri depend field specifi local languag script countri variant field empti function return empti string inlocal local retriev display name name local appropri display
Locale::equals return Locale::Locale equal object Locale::Locale deem equal Locale::Locale ident languag script countri variant extens unequ object Locale::Locale equal specifi object
Locale::getDisplayVariantArray return array display name variant bundl ResourceBundle::ResourceBundle use get display name array display name zero length
Locale::writeObject serial Locale::Locale specifi ObjectOutputStream::ObjectOutputStream ObjectOutputStream::ObjectOutputStream write
Locale::readObject deseri Locale::Locale ObjectInputStream::ObjectInputStream read
Locale::readResolve return cach Locale::Locale instanc equival deseri Locale::Locale serial languag countri variant field read object data stream exact ja jp jp th th th script extens field empti suppli Locale::UNICODE local extens ca japanes calendar type japanes nu thai number script type thai see instanc Locale::Locale equival deseri Locale::Locale
Locale::setRegion set region region null empti string region builder remov region thrown typic region valu letter iso 3166 digit un 49 area countri valu Locale::Locale creat builder normal upper case region region builder
Locale::setVariant set variant variant null empti string variant builder remov consist subtag thrown note check variant satisfi ietf bcp 47 variant subtag syntax requir normal valu lowercas letter Locale::Locale impos syntact restrict variant variant valu Locale::Locale case sensit set variant use Locale::Locale constructor variant variant builder
Locale::build return instanc Locale::Locale creat field set builder appli convers list construct Locale::Locale grandfath tag handl Locale::Locale
Locale::FilteringMode return instanc Locale::Locale creat field set builder appli convers list construct Locale::Locale grandfath tag handl Locale::Locale enum provid constant select filter mode local match refer detail exampl think languag prioriti list includ languag rang set languag tag filter behav follow
Locale::FilteringMode::AUTOSELECT filter specifi automat filter mode base given languag prioriti List::List consist languag rang rang basic basic filter select extend filter select
Locale::FilteringMode::IGNORE extend rang specifi basic filter note extend languag rang includ given languag prioriti List::List ignor
Locale::FilteringMode::MAP extend rang specifi basic filter extend languag rang includ given languag prioriti List::List map basic languag rang specif languag rang start subtag treat languag rang exampl treat first subtag extra remov exampl ja jp map ja jp
Locale::FilteringMode::REJECT extend rang specifi basic filter extend languag rang includ given languag prioriti List::List list reject filter throw
Locale::parse pars given rang generat languag prioriti List::List perform syntact check languag rang given rang doesn valid use iana languag subtag Registry::Registry rang given take form weight list languag rang given weight valu weight valu ident qualiti valu express user prefer languag weight valu specifi correspond languag rang follow default weight valu max weight omit weight list languag rang priorit list sort descend order base prioriti first languag rang highest prioriti meet user prefer case languag rang sort descend order languag prioriti List::List base prioriti weight languag rang appear given rang first includ languag prioriti List::List return list consist languag rang given rang equival found iana languag subtag Registry::Registry exampl given rang accept languag iw en en element list return languag rang iw highest prioriti list ad user languag prioriti List::List local match find hebrew match local languag tag system offer support local languag tag rang list comma separ languag rang list languag rang form accept languag header defin languag prioriti List::List consist languag rang includ given rang equival languag rang avail list modifi
Locale::parse pars given rang generat languag prioriti List::List custom list use given map equival mapequival pars rang map rang list comma separ languag rang list languag rang form accept languag header defin map map contain custom languag rang languag prioriti List::List custom list
Locale::mapEquivalents generat custom languag prioriti List::List use given prioritylist map given map empti return copi given prioritylist map key repres languag rang valu list equival map equival languag rang weight valu origin languag rang custom perform modif use iana languag subtag Registry::Registry exampl user languag prioriti List::List consist languag rang zh zh cn en zh tw zh hk newli generat languag prioriti List::List custom use map exampl consist zh zh han zh cn zh han cn en zh tw zh hk zh hk zh tw aren convert zh han hk zh han tw includ languag prioriti List::List exampl map clear distinguish simplifi chines tradit chines zh zh map isn includ map replac perform custom list won includ zh zh cn prioritylist user languag prioriti List::List map map contain custom languag rang languag prioriti List::List custom list modifi
Locale::filter return list match Locale::Locale instanc use filter mechan defin rfc 4647 prioritylist user languag prioriti List::List languag tag sort descend order base prioriti weight local Locale::Locale instanc match mode filter mode list Locale::Locale instanc match languag tag sort descend order base prioriti weight empti list match list modifi
Locale::filter return list match Locale::Locale instanc use filter mechan defin rfc 4647 equival mode prioritylist user languag prioriti List::List languag tag sort descend order base prioriti weight local Locale::Locale instanc match list Locale::Locale instanc match languag tag sort descend order base prioriti weight empti list match list modifi
Locale::filterTags return list match languag tag use basic filter mechan defin rfc 4647 prioritylist user languag prioriti List::List languag tag sort descend order base prioriti weight tag languag tag mode filter mode list match languag tag sort descend order base prioriti weight empti list match list modifi
Locale::filterTags return list match languag tag use basic filter mechan defin rfc 4647 equival mode prioritylist user languag prioriti List::List languag tag sort descend order base prioriti weight tag languag tag list match languag tag sort descend order base prioriti weight empti list match list modifi
Locale::lookup return Locale::Locale instanc match languag tag use lookup mechan defin rfc 4647 prioritylist user languag prioriti List::List languag tag sort descend order base prioriti weight local Locale::Locale instanc match match Locale::Locale instanc chosen base prioriti weight null match
Locale::lookupTag return match languag tag use lookup mechan defin rfc 4647 prioritylist user languag prioriti List::List languag tag sort descend order base prioriti weight tag languag tang match match languag tag chosen base prioriti weight null match
SortedSet::SortedSet further provid total order element element order use typic sort set creation time set iter travers set ascend element order addit oper take advantag order interfac set analogu element insert sort set implement compar interfac accept specifi compar furthermor element mutual compar e1 compareto e2 compar compar e1 e2 throw classcastexcept element e1 e2 sort set attempt violat restrict caus offend constructor invoc throw classcastexcept note order maintain sort set explicit compar consist equal sort set correct implement set interfac see compar interfac compar interfac precis definit consist equal set interfac defin term equal oper sort set perform element comparison use compareto compar element deem equal standpoint sort set equal behavior sort set defin order inconsist equal fail obey general contract set interfac general purpos sort set implement provid standard constructor argument constructor creat empti sort set sort accord natur order element constructor singl argument type compar creat empti sort set sort accord specifi compar constructor singl argument type collect creat sort set element argument sort accord natur order element constructor singl argument type sortedset creat sort set element order input sort set enforc recommend interfac contain constructor note return subset restrict rang rang half open includ low endpoint endpoint where applic close rang includ endpoint element type allow calcul successor given valu mere request subrang lowendpoint successor highendpoint exampl suppos sort set string idiom obtain view contain string low inclus similar techniqu generat open rang contain endpoint idiom obtain view contain string low exclus interfac member type element maintain set
SortedSet::first return first lowest element current set first lowest element current set
SortedSet::last return last highest element current set last highest element current set
ArrayList::ArrayList resiz array implement list interfac implement option list oper permit element includ null addit implement list interfac provid manipul size array intern store list rough equival vector unsynchron size isempti get set iter listiter oper run constant time add oper run amort constant time ad element requir time oper run linear time rough speak constant factor low compar linkedlist implement arraylist instanc capac capac size array store element list list size element ad ArrayList::ArrayList capac grow automat detail growth polici specifi fact ad element constant amort time cost increas capac arraylist instanc ad number element use ensurecapac oper reduc amount increment realloc note implement synchron multipl thread access arraylist instanc concurr thread modifi list structur synchron extern structur modif oper add delet element explicit resiz array mere set valu element structur modif typic accomplish synchron object natur encapsul list object exist list wrap use creation time prevent accident unsynchron access list list structur modifi time iter creat iter iter throw thus face concurr modif iter fail quick clean risk arbitrari non determinist behavior undetermin time futur note fail fast behavior iter guarante general speak imposs make guarante presenc unsynchron concurr modif fail fast iter throw ConcurrentModificationException::ConcurrentModificationException effort basi therefor wrong write program depend correct fail fast behavior iter detect bug member
ArrayList::ArrayList construct empti list specifi initi capac initialcapac initi capac list
ArrayList::ArrayList construct empti list initi capac ten
ArrayList::ArrayList construct list contain element specifi collect order return collect iter collect element place list
ArrayList::trimToSize trim capac arraylist instanc list current size use oper minim storag arraylist instanc
ArrayList::size return number element list number element list
ArrayList::add append specifi element end list element append list specifi
ArrayList::add insert specifi element specifi posit list shift element current posit subsequ element add indic index index specifi element insert element element insert
ArrayList::addAll append element specifi collect end list order return specifi collect Iterator::Iterator behavior oper undefin specifi collect modifi oper progress impli behavior call undefin specifi collect list list nonempti collect contain element ad list list chang result call
EnumMap::writeObject save state enummap instanc stream serial size enum map number key valu map emit int follow key Object::Object valu Object::Object key valu map repres enum map
LocaleServiceProvider::LocaleServiceProvider super local sensit servic provid interfac spis Locale::Locale sensit servic provid interfac interfac correspond local sensit text util packag interfac enabl construct local sensit object retriev local name packag Locale::Locale sensit factori name retriev text util packag use implement provid interfac offer support local set local support runtim environ packag Locale::Locale sensit Provider::Service Provider::Provider implement implement local sensit servic packag use instal extens provid identifi provid configur file resourc directori meta inf servic use fulli qualifi provid interfac name file name file contain list fulli qualifi concret provid name line line termin line feed carriag return carriag return follow line feed space tab charact surround name blank line ignor comment charact u0023 line charact first comment charact ignor file encod utf particular concret provid name configur file name configur file duplic ignor configur file name particular provid jar file distribut unit provid provid access loader initi queri locat configur file necessarili loader load file exampl implement take form jar file contain file file text spi dateformatprovid line fulli qualifi name implement DateFormatProvider::DateFormatProvider invoc Locale::Locale sensit servic Locale::Locale sensit factori name retriev text util packag invok servic provid support request local first check runtim environ support request local use support avail call instal provid appropri interfac find support request local provid found call obtain request object name check local support ignor default local extens check LocaleServiceProvider::isSupportedLocale overridden runtim environ instal provid support request local go list candid local repeat avail check match found algorithm creat list candid local ResourceBundle::ResourceBundle default see detail local resolv candid list return request object name invok origin request local includ Locale::Locale extens runtim environ support root local local sensit servic order guarante process termin provid name provid object allow return null name request local claim support includ return valu getavailablelocal similar runtim environ name local support set object name request vari time feasibl cover complet runtim environ provid return null instead name lookup proceed describ local support start jdk8 search order local sensit servic configur use local provid system properti system properti declar user prefer order look local sensit servic separ comma read runtim startup call system setproperti won affect order exampl specifi properti where spi repres local sensit servic implement instal spi provid jre repres local sensit servic Runtime::Runtime environ local sensit servic spi provid look first local sensit servic provid cldr provid base unicod consortium host provid reflect user custom set oper system provid avail depend Runtime::Runtime environ implement specifi jre spi ident default behavior compatibil prior releas
LocaleServiceProvider::getAvailableLocales return array local local servic provid provid local object name compos getavailablelocal valu local depend servic dateformat getavailablelocal array return includ Locale::Locale object differ extens array local local servic provid provid local object name
LocaleServiceProvider::isSupportedLocale return given local support local servic provid given local contain taken account support determin default implement return given local equal avail Locale::Locale return ignor extens given local avail local concret local servic provid implement overrid implement Locale::Locale extens awar exampl DecimalFormatSymbolsProvider::DecimalFormatSymbolsProvider implement check extens given local see number system specifi support CollatorProvider::CollatorProvider implement affect particular number system case extens number system ignor local Locale::Locale test given local support provid fals
CalendarNameProvider::CalendarNameProvider abstract servic provid provid local string represent display name Calendar::Calendar field valu calendar type specifi calendar system provid calendar field valu name see detail calendar field calendar field specifi constant defin calendar common field valu support calendar system calendar specif field valu support calendar field valu name gregori consist date time symbol time zone name support
CalendarNameProvider::getDisplayName return string represent display name calendar field valu given style local string represent applic null return field Calendar::Calendar field index time zone field support null return time zone field specifi valu numer represent field valu exampl field valid valu inclus style give style string represent exampl call return sunday calendartyp calendar type calendar type given local ignor field Calendar::Calendar field index valu valu Calendar::Calendar field style string represent style local desir local string represent field valu null string represent applic given calendar type unknown
CalendarNameProvider::getDisplayNames return Map::Map contain string represent display name Calendar::Calendar field given style local correspond field valu field Calendar::Calendar field index time zone field support null return time zone field specifi style give style string represent note narrow name uniqu due use singl charact sunday saturday narrow name includ case exampl call return Map::Map contain januari jan februari feb calendartyp calendar type calendar type given local ignor field calendar field display name return style style appli display name local desir local Map::Map contain display name field style local field valu null display name defin field
ResourceBundleControlProvider::ResourceBundleControlProvider interfac servic provid provid implement resourcebundl getbundl factori take instanc modifi ResourceBundleControlProvider::ResourceBundleControlProvider implement provid implement packag use instal extens refer extens packag instal ResourceBundleControlProvider::ResourceBundleControlProvider implement load use ResourceBundle::ResourceBundle load time
WeakHashMap::hash retriev object hash appli supplement hash function result hash defend poor qualiti hash function critic HashMap::HashMap use power length hash tabl encount collis hashcod differ lower bit
Hashtable::Hashtable implement hash tabl map key valu null object key valu success store retriev object hashtabl object key implement hashcod equal instanc Hashtable::Hashtable paramet affect perform initi capac load factor capac number bucket hash tabl initi capac simpli capac time hash tabl creat note hash tabl open case hash collis singl bucket store multipl entri search sequenti load factor measur full hash tabl allow get capac automat increas initi capac load factor paramet mere hint implement exact detail rehash invok implement depend general default load factor 75 offer tradeoff time space cost higher valu decreas space overhead increas time cost look entri reflect hashtabl oper includ get put initi capac control tradeoff wast space rehash oper time consum rehash oper occur initi capac greater maximum number entri hashtabl contain divid load factor set initi capac wast space entri made Hashtable::Hashtable creat suffici capac allow entri insert effici let perform automat rehash grow tabl exampl creat hashtabl number use name number key retriev number use iter return iter collect return collect view fail fast Hashtable::Hashtable structur modifi time iter creat iter remov iter throw thus face concurr modif iter fail quick clean risk arbitrari non determinist behavior undetermin time futur enumer return hashtabl key element fail fast note fail fast behavior iter guarante general speak imposs make guarante presenc unsynchron concurr modif fail fast iter throw concurrentmodificationexcept effort basi therefor wrong write program depend correct fail fast behavior iter detect bug platform v1 retrofit implement interfac make member collect implement Hashtable::Hashtable synchron thread safe implement recommend use place Hashtable::Hashtable thread safe concurr implement desir recommend use place Hashtable::Hashtable
Hashtable::Hashtable construct empti hashtabl specifi initi capac specifi load factor initialcapac initi capac hashtabl loadfactor load factor hashtabl
Hashtable::Hashtable construct empti hashtabl specifi initi capac default load factor 75 initialcapac initi capac hashtabl
Hashtable::Hashtable construct empti hashtabl default initi capac 11 load factor 75
Hashtable::Hashtable construct hashtabl map given Map::Map hashtabl creat initi capac suffici hold map given Map::Map default load factor 75 map map place map
Hashtable::keys return enumer key hashtabl enumer key hashtabl
Hashtable::elements return enumer valu hashtabl use Enumeration::Enumeration return object fetch element sequenti enumer valu hashtabl
Hashtable::get return valu specifi key map null map contain map key formal map contain map key valu key equal return return null map key key associ valu return valu specifi key map null map contain map key
Hashtable::put map specifi key specifi valu hashtabl key valu null valu retriev call get key equal origin key key hashtabl key valu valu previous valu specifi key hashtabl null
Hashtable::keySet return view key contain map set map chang map reflect set versa map modifi iter set progress iter remov oper result iter undefin set support element remov remov correspond map map iter remov set remov removeal retainal clear oper support add addal oper
Hashtable::equals compar specifi Object::Object Map::Map equal definit Map::Map interfac object compar equal hashtabl specifi Object::Object equal Map::Map
Hashtable::hashCode return hash valu Map::Map definit Map::Map interfac
Hashtable::writeObject save state Hashtable::Hashtable stream serial capac Hashtable::Hashtable length bucket array emit int follow size Hashtable::Hashtable number key valu map follow key Object::Object valu Object::Object key valu map repres Hashtable::Hashtable key valu map emit particular order
Hashtable::readObject reconstitut Hashtable::Hashtable stream deseri
Deque::Deque linear collect support element insert remov end name dequ doubl end queue pronounc deck Deque::Deque implement place fix limit number element contain interfac support capac restrict dequ fix size limit interfac defin access element end dequ insert remov examin element exist form throw oper fail return valu null fals depend oper latter form insert oper design specif use capac restrict Deque::Deque implement implement insert oper fail twelv describ summar tabl interfac extend interfac dequ queue fifo first first behavior result element ad end dequ remov begin inherit Queue::Queue interfac precis equival Deque::Deque indic tabl dequ lifo last first stack interfac prefer legaci dequ stack element push pop begin dequ Stack::Stack precis equival Deque::Deque indic tabl note work equal dequ queue stack case element drawn begin dequ interfac provid remov interior element interfac interfac provid support index access element Deque::Deque implement strict requir prohibit insert null element strong encourag user Deque::Deque implement allow null element strong encourag take advantag abil insert null null return valu various indic dequ empti Deque::Deque implement general defin element base version equal hashcod instead inherit ident base version Object::Object interfac member type element held collect
Deque::addFirst insert specifi element front dequ violat capac restrict throw IllegalStateException::IllegalStateException space current avail use capac restrict dequ general prefer use element add
Deque::addLast insert specifi element end dequ violat capac restrict throw IllegalStateException::IllegalStateException space current avail use capac restrict dequ general prefer use equival element add
Deque::removeFirst retriev remov first element dequ differ throw dequ empti head dequ
Deque::removeLast retriev remov last element dequ differ throw dequ empti tail dequ
Deque::pollLast retriev remov last element dequ return null dequ empti tail dequ null dequ empti
Deque::peekLast retriev remov last element dequ return null dequ empti tail dequ null dequ empti
Deque::removeFirstOccurrence remov first occurr specifi element dequ dequ contain element unchang formal remov first element null nbsp nbsp null nbsp nbsp equal element exist return dequ contain specifi element equival dequ chang result call element remov dequ element remov result call
Deque::removeLastOccurrence remov last occurr specifi element dequ dequ contain element unchang formal remov last element null nbsp nbsp null nbsp nbsp equal element exist return dequ contain specifi element equival dequ chang result call element remov dequ element remov result call
Deque::add insert specifi element queue repres dequ word tail dequ violat capac restrict return success throw IllegalStateException::IllegalStateException space current avail use capac restrict dequ general prefer use equival element add specifi
Deque::offer insert specifi element queue repres dequ word tail dequ violat capac restrict return success fals space current avail use capac restrict dequ general prefer fail insert element throw equival element add element ad dequ els fals
Deque::remove retriev remov head queue repres dequ word first element dequ differ throw dequ empti equival head queue repres dequ
Deque::remove remov first occurr specifi element dequ dequ contain element unchang formal remov first element null nbsp nbsp null nbsp nbsp equal element exist return dequ contain specifi element equival dequ chang result call equival element remov dequ element remov result call
Deque::size return number element dequ number element dequ
Deque::iterator return iter element dequ proper sequenc element return order first head last tail iter element dequ proper sequenc
Objects::requireNonNull check specifi object refer null design primarili paramet valid constructor demonstr obj object refer check nulliti type refer obj null
Objects::requireNonNull check specifi object refer null throw custom design primarili paramet valid constructor multipl paramet demonstr obj object refer check nulliti messag detail messag event NullPointerException::NullPointerException thrown type refer obj null
Objects::requireNonNull check specifi object refer null throw custom allow creation messag defer null check made confer perform advantag non null case decid call care taken cost creat messag supplier cost creat string messag obj object refer check nulliti messagesuppli supplier detail messag event NullPointerException::NullPointerException thrown type refer obj null
LinkedHashMap::keySet return view key contain map set map chang map reflect set versa map modifi iter set progress iter remov oper result iter undefin set support element remov remov correspond map map iter remov set remov removeal retainal clear oper support add addal oper typic provid faster sequenti perform poorer parallel perform HashMap::HashMap set view key contain map
LinkedHashMap::values return view valu contain map collect map chang map reflect collect versa map modifi iter collect progress iter remov oper result iter undefin collect support element remov remov correspond map map iter remov collect remov removeal retainal clear oper support add addal oper typic provid faster sequenti perform poorer parallel perform HashMap::HashMap view valu contain map
LinkedHashMap::entrySet return view map contain map set map chang map reflect set versa map modifi iter set progress iter remov oper setvalu oper map entri return iter result iter undefin set support element remov remov correspond map map iter remov set remov removeal retainal clear oper support add addal oper typic provid faster sequenti perform poorer parallel perform HashMap::HashMap set view map contain map
Collection::spliterator creat element collect implement document characterist valu report spliter characterist valu requir report spliter report collect contain element default implement overridden subclass return effici spliter order preserv expect lazi behavior spliter characterist immut concurr practic overrid describ spliter document polici bind structur interfer overrid creat stream use Supplier::Supplier spliter requir ensur stream produc reflect content collect initi termin stream oper default implement creat spliter collect Iterator::Iterator spliter inherit fail fast properti collect iter creat Spliterator::Spliterator report creat Spliterator::Spliterator addit report spliter cover element report addit characterist valu size subsiz aid client control simplifi comput enabl share use immut empti spliter instanc see empti collect enabl client determin spliter cover element Spliterator::Spliterator element collect
TreeMap::TreeMap red black tree base implement map sort accord key map creation time depend constructor implement provid guarante log time cost containskey get put remov oper algorithm adapt cormen leiserson rivest introduct algorithm note order maintain tree map sort map explicit compar consist equal sort map correct implement Map::Map interfac see Comparable::Comparable Comparator::Comparator precis definit consist equal Map::Map interfac defin term equal oper sort map perform key comparison use compareto compar key deem equal standpoint sort map equal behavior sort map defin order inconsist equal fail obey general contract Map::Map interfac note implement synchron multipl thread access map concurr thread modifi map structur synchron extern structur modif oper add delet map mere chang valu associ exist key structur modif typic accomplish synchron object natur encapsul map object exist map wrap use creation time prevent accident unsynchron access map iter return iter collect return collect view fail fast map structur modifi time iter creat iter remov iter throw thus face concurr modif iter fail quick clean risk arbitrari non determinist behavior undetermin time futur note fail fast behavior iter guarante general speak imposs make guarante presenc unsynchron concurr modif fail fast iter throw ConcurrentModificationException::ConcurrentModificationException effort basi therefor wrong write program depend correct fail fast behavior iter detect bug map entri pair return view repres snapshot map time produc support entri setvalu note chang map associ map use put member type key maintain map type map valu
TreeMap::TreeMap construct empti tree map use natur order key key insert map implement interfac furthermor key mutual compar k1 compareto k2 throw ClassCastException::ClassCastException key k1 k2 map user attempt put key map violat constraint exampl user attempt put string key map key integ put object key Object::Object valu call throw ClassCastException::ClassCastException
TreeMap::TreeMap construct empti tree map order accord given compar key insert map mutual compar given compar compar compar k1 k2 throw ClassCastException::ClassCastException key k1 k2 map user attempt put key map violat constraint put object key Object::Object valu call throw ClassCastException::ClassCastException compar compar order map null key
TreeMap::TreeMap construct tree map contain map given map order accord natur order key key insert map implement interfac furthermor key mutual compar k1 compareto k2 throw ClassCastException::ClassCastException key k1 k2 map run log time map map place map
TreeMap::TreeMap construct tree map contain map use order specifi sort map run linear time sort map map place map compar sort map
TreeMap::remove remov map key TreeMap::TreeMap key key map remov previous valu associ key null map key null return indic map previous associ null key
TreeMap::clone return shallow copi TreeMap::TreeMap instanc key valu clone shallow copi map
TreeMap::compare compar key use correct comparison TreeMap::TreeMap
TreeMap::getFirstEntry return first TreeMap::Entry TreeMap::TreeMap accord treemap key sort function return null TreeMap::TreeMap empti
TreeMap::getLastEntry return last TreeMap::Entry TreeMap::TreeMap accord treemap key sort function return null TreeMap::TreeMap empti
TreeMap::writeObject save state TreeMap::TreeMap instanc stream serial size TreeMap::TreeMap number key valu map emit int follow key Object::Object valu Object::Object key valu map repres TreeMap::TreeMap key valu map emit key order determin treemap Comparator::Comparator key natur order TreeMap::TreeMap Comparator::Comparator
TreeMap::readObject reconstitut TreeMap::TreeMap instanc stream deseri
TreeMap::buildFromSorted linear time tree build algorithm sort data accept key valu iter stream lead paramet seem altern format accept iter map entri null defaultv null iter key null defaultv null stream altern serial key valu null defaultv null stream serial key null defaultv null assum compar TreeMap::TreeMap set prior call size number key key valu pair read iter stream non null entri creat entri key read iter str non null entri creat key possibl valu read stream serial form exact str non null defaultv non null default valu valu map null valu read iter stream describ
TreeMap::buildFromSorted recurs helper work previous ident name paramet ident definit addit paramet document assum compar size field TreeMap::TreeMap set prior call ignor field level current level tree initi call lo first element index subtre initi last element index subtre initi size redlevel level node red equal TreeMap::computeRedLevel tree size
InvalidPropertiesFormatException::InvalidPropertiesFormatException thrown indic oper complet input conform appropri xml document type collect properti specif note InvalidPropertiesFormatException::InvalidPropertiesFormatException inherit Serializable::Serializable interfac Exception::Exception intend Serializable::Serializable appropri serial implement throw NotSerializableException::NotSerializableException
InflaterInputStream::reset reposit stream posit time mark last call input stream reset InflaterInputStream::InflaterInputStream throw IOException::IOException
Deflater::setDictionary set preset dictionari compress preset dictionari histori buffer predetermin data uncompress inflat inflat inflat getadl call order get Adler32::Adler32 valu dictionari requir decompress dictionari data byte start offset data len length data
Deflater::setDictionary set preset dictionari compress preset dictionari histori buffer predetermin data uncompress inflat inflat inflat getadl call order get Adler32::Adler32 valu dictionari requir decompress dictionari data byte
GZIPOutputStream::GZIPOutputStream implement stream filter write compress data gzip file format
GZIPOutputStream::GZIPOutputStream creat output stream specifi buffer size output stream instanc creat invok argument constructor gzipoutputstream size fals output stream size output buffer size
GZIPOutputStream::GZIPOutputStream creat output stream specifi buffer size flush mode output stream size output buffer size syncflush invoc inherit instanc flush compressor flush mode flush output stream flush output stream
GZIPOutputStream::GZIPOutputStream creat output stream default buffer size output stream instanc creat invok argument constructor gzipoutputstream fals output stream
GZIPOutputStream::GZIPOutputStream creat output stream default buffer size specifi flush mode output stream syncflush invoc inherit instanc flush compressor flush mode flush output stream flush output stream
GZIPOutputStream::write write array byte compress output stream block byte written buf data written start offset data len length data
GZIPOutputStream::finish finish write compress data output stream close stream use appli multipl filter success output stream
Adler32::Adler32 comput Adler32::Adler32 checksum data stream Adler32::Adler32 checksum reliabl crc 32 comput faster pass null argument caus thrown
Adler32::Adler32 creat Adler32::Adler32 object
ZipInputStream::ZipInputStream implement input stream filter read file zip file format includ support compress uncompress entri
ZipInputStream::ZipInputStream creat zip input stream utf decod entri name actual input stream
ZipInputStream::ZipInputStream creat zip input stream actual input stream charset decod zip entri name ignor zip entri general purpos bit flag set
ZipInputStream::getNextEntry read zip file entri posit stream begin entri data zip file entri null entri
ZipInputStream::read read current zip entri array byte len zero block input avail byte read return buffer data read start offset destin array len maximum number byte read actual number byte read end entri reach
ZipInputStream::close close input stream releas system resourc associ stream
ZipInputStream::createZipEntry creat ZipEntry::ZipEntry object specifi entri name name zip file entri name ZipEntry::ZipEntry creat
ZipOutputStream::ZipOutputStream implement output stream filter write file zip file format includ support compress uncompress entri
ZipOutputStream::ZipOutputStream creat zip output stream utf encod entri name comment actual output stream
ZipOutputStream::ZipOutputStream creat zip output stream actual output stream charset encod entri name comment
ZipOutputStream::putNextEntry begin write zip file entri posit stream start entri data close current entri activ default compress compress specifi entri current time entri set modif time zip entri written
ZipOutputStream::closeEntry close current zip entri posit stream write entri
ZipOutputStream::write write array byte current zip entri data block byte written data written start offset data len number byte written
ZipOutputStream::close close zip output stream stream filter
ZipFile::ZipFile read entri zip file note pass null argument constructor caus thrown
ZipFile::ZipFile open zip file read first secur manag SecurityManager::checkRead call name argument argument ensur read allow utf decod entri name comment name name zip file
ZipFile::ZipFile open ZipFile::ZipFile read specifi file object specifi mode mode argument open read open read open delet first secur manag SecurityManager::checkRead call name argument argument ensur read allow utf decod entri name comment file zip file open read mode mode file open
ZipFile::ZipFile open zip file read given specifi File::File object utf decod entri name comment file zip file open read
ZipFile::ZipFile open ZipFile::ZipFile read specifi file object specifi mode mode argument open read open read open delet first secur manag SecurityManager::checkRead call name argument argument ensur read allow file zip file open read mode mode file open charset decod zip entri name comment encod use utf encod indic entri general purpos flag
ZipFile::ZipFile open zip file read first secur manag SecurityManager::checkRead call name argument argument ensur read allow name name zip file charset decod zip entri name comment encod use utf encod indic entri general purpos flag
ZipFile::ZipFile open zip file read given specifi File::File object file zip file open read charset decod zip entri name comment ignor zip entri general purpos bit flag set
ZipFile::getInputStream return input stream read content specifi zip file entri close zip file turn close input stream return invoc entri zip file entri input stream read content specifi zip file entri
ZipFile::entries return enumer zip file entri enumer zip file entri
ZipFile::finalize ensur system resourc held ZipFile::ZipFile object releas refer time gc invok undetermin strong recommend applic invok close finish access ZipFile::ZipFile prevent hold system resourc undetermin length time
ZipError::ZipError construct ZipError::ZipError given detail messag String::String contain detail messag
CheckedOutputStream::CheckedOutputStream output stream maintain checksum data written checksum verifi integr output data
CheckedOutputStream::CheckedOutputStream creat output stream specifi Checksum::Checksum output stream cksum checksum
CheckedOutputStream::getChecksum return Checksum::Checksum output stream Checksum::Checksum
Checksum::getValue return current checksum valu current checksum valu
Inflater::setDictionary set preset dictionari given array byte call inflat return Inflater::needsDictionary return indic preset dictionari requir getadl get Adler32::Adler32 valu dictionari dictionari data byte start offset data len length data
Inflater::setDictionary set preset dictionari given array byte call inflat return Inflater::needsDictionary return indic preset dictionari requir getadl get Adler32::Adler32 valu dictionari dictionari data byte
Inflater::inflate uncompress byte specifi buffer return actual number byte uncompress return valu indic needsinput Inflater::needsDictionary call order determin input data preset dictionari requir latter case getadl get Adler32::Adler32 valu dictionari requir buffer uncompress data start offset data len maximum number uncompress byte actual number uncompress byte
Inflater::inflate uncompress byte specifi buffer return actual number byte uncompress return valu indic needsinput Inflater::needsDictionary call order determin input data preset dictionari requir latter case getadl get Adler32::Adler32 valu dictionari requir buffer uncompress data actual number uncompress byte
DataFormatException::DataFormatException construct DataFormatException::DataFormatException specifi detail messag detail messag String::String describ particular String::String contain detail messag
DeflaterOutputStream::close write remain compress data output stream close stream
ZipEntry::ZipEntry repres zip file entri
ZipEntry::ZipEntry creat zip entri specifi name name entri name
ZipEntry::ZipEntry creat zip entri field taken specifi zip entri zip TreeMap::Entry object
ZipEntry::ZipEntry creat un initi zip entri
ZipEntry::getName return name entri name entri
ZipEntry::getSize return uncompress size entri data uncompress size entri data known
ZipEntry::getCompressedSize return size compress entri data case store entri compress size uncompress size entri size compress entri data known
GZIPInputStream::GZIPInputStream implement stream filter read compress data gzip file format
GZIPInputStream::GZIPInputStream creat input stream specifi buffer size input stream size input buffer size
GZIPInputStream::GZIPInputStream creat input stream default buffer size input stream
GZIPInputStream::read read uncompress data array byte len zero block input decompress byte read return buf buffer data read start offset destin array len maximum number byte read actual number byte read end compress input stream reach
GZIPInputStream::close close input stream releas system resourc associ stream
CheckedInputStream::CheckedInputStream input stream maintain checksum data read checksum verifi integr input data
CheckedInputStream::CheckedInputStream creat input stream use specifi Checksum::Checksum input stream cksum Checksum::Checksum
CheckedInputStream::getChecksum return Checksum::Checksum input stream Checksum::Checksum valu
RegularEnumSet::iterator return iter element contain set iter travers element natur order order enum constant declar return Iterator::Iterator snapshot iter throw element travers exist call invok iter element contain set
PriorityQueue::PriorityQueue unbound prioriti base prioriti heap element prioriti queue order accord queue construct time depend constructor prioriti queue permit null element prioriti queue reli natur order permit insert non compar object result ClassCastException::ClassCastException head queue element respect specifi order multipl element tie valu head element tie broken arbitrarili queue retriev oper poll remov peek element access element head queue prioriti queue unbound intern capac govern size array store element queue queue size element ad prioriti queue capac grow automat detail growth polici specifi iter implement option interfac Iterator::Iterator guarante travers element prioriti queue particular order order travers consid use array sort pq toarray note implement synchron multipl thread access PriorityQueue::PriorityQueue instanc concurr thread modifi queue instead use thread safe implement note implement provid log time enqueu dequeu offer poll remov add linear time remov object contain object constant time retriev peek element size member type element held collect
PriorityQueue::toArray return array contain element queue runtim type return array specifi array return array element particular order queue fit specifi array return therein array alloc runtim type specifi array size queue queue fit specifi array room spare array element queue element array end collect set null act bridg array base collect base further allow precis control runtim type output array circumst save alloc cost suppos queue known contain string dump queue newli alloc array String::String note toarray object ident function toarray array element queue store big array runtim type alloc purpos array contain element queue
PriorityQueue::writeObject save queue stream serial length array instanc emit int follow element Object::Object proper order stream
ListIterator::ListIterator iter list allow programm travers list direct modifi list iter obtain iter current posit list ListIterator::ListIterator current element cursor posit lie element return call previous element return call iter list length cursor posit illustr caret element element element element cursor posit note defin term cursor posit defin oper last element return call interfac member
ListIterator::hasNext return list iter element travers list forward direct word return return element throw list iter element travers list forward direct
ListIterator::next return element list advanc cursor posit call repeat iter list intermix call go forth note altern call previous return element repeat element list
ListIterator::hasPrevious return list iter element travers list revers direct word return return element throw list iter element travers list revers direct
ListIterator::nextIndex return index element return subsequ call return list size list iter end list index element return subsequ call list size list iter end list
ListIterator::previousIndex return index element return subsequ call return list iter begin list index element return subsequ call previous list iter begin list
ListIterator::add insert specifi element list option oper element insert element return element return list contain element element becom sole element list element insert implicit cursor subsequ call unaffect subsequ call previous return element call increas valu return call nextindex ListIterator::previousIndex element insert
GregorianCalendar::GregorianCalendar GregorianCalendar::GregorianCalendar concret subclass Calendar::Calendar provid standard calendar system world GregorianCalendar::GregorianCalendar hybrid calendar support julian gregorian calendar system support singl discontinu correspond default gregorian date gregorian calendar institut octob 15 1582 countri cutov date chang caller call histor countri adopt gregorian calendar first octob 1582 julian thus follow octob 15 1582 gregorian calendar model correct gregorian cutov GregorianCalendar::GregorianCalendar implement julian calendar differ gregorian julian calendar leap year rule julian calendar specifi leap year year gregorian calendar omit centuri year divis 400 GregorianCalendar::GregorianCalendar implement prolept gregorian julian calendar date comput extrapol current rule indefinit backward forward time result GregorianCalendar::GregorianCalendar year generat meaning consist result date obtain use GregorianCalendar::GregorianCalendar histor accur march ad onward modern julian calendar rule adopt date leap year rule appli irregular 45 bc julian calendar exist prior institut gregorian calendar year day march 25 avoid confus calendar use januari manual adjust made desir date prior gregorian changeov fall januari march 24 valu calcul field rang 53 first week calendar year earliest seven day period start contain day year thus depend valu getminimaldaysinfirstweek getfirstdayofweek day week januari week week year week year exclus number sequenti 52 53 year involv julian gregorian transit getfirstdayofweek getminimaldaysinfirstweek valu initi use local depend resourc construct GregorianCalendar::GregorianCalendar iso 8601 standard getfirstdayofweek monday getminimaldaysinfirstweek valu local where standard prefer valu explicit set call sync week year cycl week first last week inclus week year valu therefor first last day week year calendar year valu exampl januari 1998 thursday getfirstdayofweek monday getminimaldaysinfirstweek iso 8601 standard compat set week 1998 start decemb 29 1997 end januari 1998 week year 1998 last day calendar year 1997 getfirstdayofweek sunday week 1998 start januari 1998 end januari 10 1998 first day 1998 part week 53 1997 week year 1997 week month valu calcul week month field rang week month day week month earliest set getminimaldaysinfirstweek contigu day month end day getfirstdayofweek week year week month shorter day start getfirstdayofweek includ day previous month day month week week month exampl getfirstdayofweek sunday getminimaldaysinfirstweek first week januari 1998 sunday januari saturday januari 10 day week month thursday januari saturday januari week month getminimaldaysinfirstweek chang januari januari week month default field valu clear set calendar field undefin GregorianCalendar::GregorianCalendar use default valu calendar field valu undefin default valu applic field list exampl
GregorianCalendar::GregorianCalendar construct default GregorianCalendar::GregorianCalendar use current time default time zone default local
GregorianCalendar::GregorianCalendar construct GregorianCalendar::GregorianCalendar base current time given time zone default local zone given time zone
GregorianCalendar::GregorianCalendar construct GregorianCalendar::GregorianCalendar base current time default time zone given local alocal given local
GregorianCalendar::GregorianCalendar construct GregorianCalendar::GregorianCalendar base current time given time zone given local zone given time zone alocal given local
GregorianCalendar::GregorianCalendar construct GregorianCalendar::GregorianCalendar given date set default time zone default local year valu set year calendar field calendar month valu set month calendar field calendar Month::Month valu base januari dayofmonth valu set day month calendar field calendar
GregorianCalendar::GregorianCalendar construct GregorianCalendar::GregorianCalendar given date time set default time zone default local year valu set year calendar field calendar month valu set month calendar field calendar Month::Month valu base januari dayofmonth valu set day month calendar field calendar hourofday valu set hour day calendar field calendar minut valu set minut calendar field calendar
GregorianCalendar::GregorianCalendar construct GregorianCalendar::GregorianCalendar given date time set default time zone default local year valu set year calendar field calendar month valu set month calendar field calendar Month::Month valu base januari dayofmonth valu set day month calendar field calendar hourofday valu set hour day calendar field calendar minut valu set minut calendar field calendar valu set calendar field calendar
GregorianCalendar::GregorianCalendar construct GregorianCalendar::GregorianCalendar given date time set default time zone default local year valu set year calendar field calendar month valu set month calendar field calendar Month::Month valu base januari dayofmonth valu set day month calendar field calendar hourofday valu set hour day calendar field calendar minut valu set minut calendar field calendar valu set calendar field calendar milli valu set millisecond calendar field
GregorianCalendar::GregorianCalendar construct empti GregorianCalendar::GregorianCalendar zone given time zone alocal given local flag flag request empti instanc
GregorianCalendar::setGregorianChange set GregorianCalendar::GregorianCalendar chang date point switch julian date gregorian date occur default octob 15 1582 gregorian previous date julian calendar obtain pure julian calendar set chang date date max valu obtain pure gregorian calendar set chang date date min valu date given gregorian cutov date
GregorianCalendar::getGregorianChange get gregorian Calendar::Calendar chang date point switch julian date gregorian date occur default octob 15 1582 gregorian previous date julian calendar gregorian cutov date GregorianCalendar::GregorianCalendar object
GregorianCalendar::isLeapYear determin given year leap year return given year leap year specifi bc year number year number given exampl year bc specifi year given year given year leap year fals
GregorianCalendar::equals compar GregorianCalendar::GregorianCalendar specifi Object::Object result argument GregorianCalendar::GregorianCalendar object repres time valu millisecond offset Calendar::Calendar paramet gregorian chang date object obj object compar object equal obj fals
GregorianCalendar::hashCode generat hash GregorianCalendar::GregorianCalendar object
GregorianCalendar::roll add subtract singl unit time given time field chang larger field exampl consid GregorianCalendar::GregorianCalendar origin set decemb 31 1999 call set calendar januari 31 1999 year field unchang larger field month indic valu specifi calendar field roll roll use roll fals
GregorianCalendar::roll add sign amount specifi calendar field chang larger field negat roll amount mean subtract field chang larger field specifi amount perform call ad amount calendar field normal calendar field rang valu non lenient mode IllegalArgumentException::IllegalArgumentException thrown exampl consid GregorianCalendar::GregorianCalendar origin set august 31 1999 call roll calendar month set calendar april 30 1999 use GregorianCalendar::GregorianCalendar day month field 31 month april day month set closest valu 30 year field maintain valu 1999 larger field month exampl consid GregorianCalendar::GregorianCalendar origin set sunday june 1999 call roll calendar week month set calendar tuesday june 1999 call add calendar week month set calendar sunday 30 1999 roll rule impos addit constraint month chang week month roll taken add rule result date tuesday june saturday june accord add rule day week invari chang week month set tuesday closest valu sunday where sunday first day week field calendar field amount sign amount add field
GregorianCalendar::getMinimum return minimum valu given calendar field GregorianCalendar::GregorianCalendar instanc minimum valu defin smallest valu return time valu take consider current valu field calendar field minimum valu given calendar field
GregorianCalendar::getMaximum return maximum valu given calendar field GregorianCalendar::GregorianCalendar instanc maximum valu defin largest valu return time valu take consider current valu field calendar field maximum valu given calendar field
GregorianCalendar::getGreatestMinimum return highest minimum valu given calendar field GregorianCalendar::GregorianCalendar instanc highest minimum valu defin largest valu return time valu take consider current valu field calendar field highest minimum valu given calendar field
GregorianCalendar::getLeastMaximum return lowest maximum valu given calendar field GregorianCalendar::GregorianCalendar instanc lowest maximum valu defin smallest valu return time valu take consider current valu field calendar field lowest maximum valu given calendar field
GregorianCalendar::getActualMinimum return minimum valu calendar field take consider given time valu current valu exampl gregorian chang date januari 10 1970 date GregorianCalendar::GregorianCalendar januari 20 1970 actual minimum valu day month field 10 previous date januari 10 1970 decemb 27 1996 julian calendar therefor decemb 28 1969 januari 1970 don exist field calendar field minimum given field time valu GregorianCalendar::GregorianCalendar
GregorianCalendar::getActualMaximum return maximum valu calendar field take consider given time valu current valu exampl date instanc februari 2004 actual maximum valu day month field 29 2004 leap year date instanc februari 2005 28 calcul maximum valu base calendar year valu call get maximum valu week year week year GregorianCalendar::GregorianCalendar field calendar field maximum given field time valu GregorianCalendar::GregorianCalendar
GregorianCalendar::getYearOffsetInMillis return millisecond offset begin year Calendar::Calendar object normal
GregorianCalendar::isWeekDateSupported return indic GregorianCalendar::GregorianCalendar support week date
GregorianCalendar::getWeekYear return repres GregorianCalendar::GregorianCalendar date week maximum week number week year week year valu year calendar year valu call calcul week year week year repres GregorianCalendar::GregorianCalendar valu year repres negat number bc bc bc
GregorianCalendar::setWeekDate set GregorianCalendar::GregorianCalendar date given date specifi weekofyear dayofweek weekofyear follow dayofweek valu valu note numer day week represent differ iso 8601 standard weekofyear number compat standard getfirstdayofweek monday getminimaldaysinfirstweek set calendar field instant time valu calcul return weekofyear valid week year rang weekyear weekyear weekofyear valu adjust lenient mode IllegalArgumentException::IllegalArgumentException thrown non lenient mode weekyear week year weekofyear week number base weekyear dayofweek day week valu constant field
GregorianCalendar::getWeeksInWeekYear return number week repres GregorianCalendar::GregorianCalendar exampl GregorianCalendar::GregorianCalendar date decemb 31 2008 return 53 period decemb 29 2008 januari 2010 return 52 period decemb 31 2007 decemb 28 2008 number week week year
GregorianCalendar::toZonedDateTime convert object ZonedDateTime::ZonedDateTime repres point time line GregorianCalendar::GregorianCalendar object support julian gregorian cutov date ZonedDateTime::ZonedDateTime result year month day valu result repres correct date iso calendar system valu modifi julian day zone date time repres point time line gregorian calendar
GregorianCalendar::from obtain instanc GregorianCalendar::GregorianCalendar default local ZonedDateTime::ZonedDateTime object ZonedDateTime::ZonedDateTime support julian gregorian cutov date use iso calendar system return GregorianCalendar::GregorianCalendar pure gregorian calendar use iso 8601 standard week definit monday valu zonedatetim store point time line further futur further GregorianCalendar::GregorianCalendar scenario throw IllegalArgumentException::IllegalArgumentException zdt zone date time object convert gregorian calendar repres point time line zone date time
TimeZone::TimeZone TimeZone::TimeZone repres time zone offset figur daylight save typic get TimeZone::TimeZone use getdefault creat TimeZone::TimeZone base time zone where program run exampl program run japan getdefault creat TimeZone::TimeZone object base japanes standard Time::Time get TimeZone::TimeZone use gettimezon time zone instanc time zone pacif Time::Time zone america los angel get pacif Time::Time TimeZone::TimeZone object use TimeZone::getAvailableIDs iter support time zone choos support get TimeZone::TimeZone time zone want repres support custom time zone specifi produc TimeZone::TimeZone syntax custom time zone hour 23 minut 00 59 exampl gmt 10 gmt 0010 mean ten hour ten minut ahead gmt respect format local independ digit taken basic latin block unicod standard daylight time transit schedul specifi custom time zone specifi string doesn match syntax gmt creat TimeZone::TimeZone specifi custom time zone normal syntax exampl timezon gettimezon gmt getid return gmt 0800 letter time zone compat jdk letter time zone pst ctt ast support use deprec abbrevi multipl time zone exampl cst central standard Time::Time china standard Time::Time platform recogn
TimeZone::getOffset get time zone offset current date modifi case daylight save offset add utc get local time return histor correct offset TimeZone::TimeZone implement subclass support histor daylight Time::Time schedul gmt offset chang era era given date year year given date month month given date Month::Month base januari day day month given date dayofweek day week given date millisecond millisecond day standard local time offset millisecond add gmt get local time
TimeZone::getID get time zone time zone
TimeZone::getDisplayName return name specifi style TimeZone::TimeZone suitabl user specifi local specifi daylight daylight Time::Time name return TimeZone::TimeZone doesn observ daylight Time::Time standard Time::Time name return look time zone name deriv specifi local search perform time zone name Locale::Locale search path includ found name return string return daylight specifi daylight Time::Time name fals specifi standard Time::Time name style local local suppli display name human readabl name time zone given local
TimeZone::observesDaylightTime return TimeZone::TimeZone current daylight Time::Time transit standard Time::Time daylight Time::Time occur futur time default implement return usedaylighttim indaylighttim Date::Date return TimeZone::TimeZone current daylight Time::Time transit standard Time::Time daylight Time::Time occur futur time fals
TimeZone::inDaylightTime queri given date daylight Time::Time time zone date given Date::Date given date daylight Time::Time fals
TimeZone::getTimeZone get TimeZone::TimeZone given TimeZone::TimeZone abbrevi pst full name america los angel custom gmt 800 note support abbrevi jdk compat full name specifi TimeZone::TimeZone gmt zone given understood
TimeZone::getTimeZone get TimeZone::TimeZone given TemporalQueries::zoneId TemporalQueries::zoneId time zone obtain specifi TimeZone::TimeZone gmt zone given understood
TimeZone::getAvailableIDs get avail accord given time zone offset millisecond rawoffset given time zone gmt offset millisecond array where time zone specifi gmt offset exampl america phoenix america denver gmt 0700 differ daylight behavior
TimeZone::getAvailableIDs get avail support array
TimeZone::getDefault get default TimeZone::TimeZone virtual machin cach default TimeZone::TimeZone avail clone return take step determin default time zone use user timezon properti valu default time zone avail detect platform time zone sourc platform time zone map vari implement use gmt last resort given detect time zone unknown default TimeZone::TimeZone creat cach clone return user timezon properti valu set return default TimeZone::TimeZone
UUID::randomUUID static factori retriev type pseudo random generat uuid uuid generat use cryptograph strong pseudo random number generat random generat uuid
UUID::version version number associ uuid version number describ uuid generat version number mean time base uuid dce secur uuid name base uuid random generat uuid version number uuid
UUID::variant variant number associ uuid variant number describ layout uuid variant number mean reserv ncs backward compat leach salz reserv microsoft corpor backward compat reserv futur definit variant number uuid
UUID::toString return String::String object repres uuid uuid string represent describ bnf string represent uuid
Scanner::Scanner text scanner pars primit type string use regular express Scanner::Scanner break input token use delimit pattern default match whitespac result token convert valu type use various exampl allow user read number system exampl allow type assign entri file mynumb scanner use delimit whitespac exampl read item string print output output generat use regular express pars token onc scanner recogn reset valu scanner delimit default whitespac delimit regardless previous chang scan oper block wait input primit type companion first skip input match delimit pattern attempt return token hasnext block wait further input hasnext block connect associ block oper independ delimit pattern attempt match specifi pattern regard delimit input thus circumst where delimit relev block wait input scanner throw scanner pass token caus retriev skip depend type delimit pattern empti token return exampl pattern return empti token match multipl instanc delimit delimit pattern return empti token pass space time scanner read text object implement interfac invoc readabl throw scanner assum end input reach recent ioexcept thrown readabl retriev Scanner::Scanner close close input sourc sourc implement interfac Scanner::Scanner safe multithread use extern synchron mention pass null paramet Scanner::Scanner caus NullPointerException::NullPointerException thrown scanner default interpret number decim radix set use reset valu scanner radix 10 regardless previous chang instanc capabl scan number standard format format scanner local scanner valu return chang reset valu scanner local initi local regardless previous chang local format defin term paramet particular local taken local object df object dfs localgroupsepar nbsp nbsp charact separ thousand group nbsp dfs localdecimalsepar nbsp nbsp charact decim point nbsp dfs localpositiveprefix nbsp nbsp string appear posit number empti nbsp df localpositivesuffix nbsp nbsp string appear posit number empti nbsp df localnegativeprefix nbsp nbsp string appear negat number empti nbsp df localnegativesuffix nbsp nbsp string appear negat number empti nbsp df localnan nbsp nbsp string repres number float point valu nbsp dfs localinfin nbsp nbsp string repres infin float point valu nbsp dfs string pars number instanc specifi term regular express grammar where rmax highest digit radix exampl rmax base 10 nonasciidigit non ascii charact return nbsp non0digit rmax nonasciidigit digit rmax nonasciidigit groupednumer nbsp non0digit digit digit nbsp nbsp nbsp nbsp nbsp localgroupsepar digit digit digit numer digit groupednumer numer localpositiveprefix numer localpositivesuffix localnegativeprefix numer localnegativesuffix decimalnumer numer numer localdecimalsepar digit localdecimalsepar digit expon ee digit decimalnumer expon localpositiveprefix decimalnumer localpositivesuffix expon localnegativeprefix decimalnumer localnegativesuffix expon hexfloat xx 9a fa 9a fa pp nonnumb nan localnan infin localinfin signednonnumb nonnumb localpositiveprefix nonnumb localpositivesuffix localnegativeprefix nonnumb localnegativesuffix decim hexfloat signednonnumb whitespac signific regular express
Scanner::Scanner construct Scanner::Scanner return valu scan specifi sourc delimit specifi pattern sourc charact sourc implement Readable::Readable interfac pattern delimit pattern
Scanner::Scanner construct Scanner::Scanner produc valu scan specifi sourc sourc charact sourc implement interfac
Scanner::Scanner construct Scanner::Scanner produc valu scan specifi input stream byte stream convert charact use platform sourc input stream scan
Scanner::Scanner construct Scanner::Scanner produc valu scan specifi input stream byte stream convert charact use specifi charset sourc input stream scan charsetnam encod type convert byte stream charact scan
Scanner::Scanner construct Scanner::Scanner produc valu scan specifi file byte file convert charact use platform sourc file scan
Scanner::Scanner construct Scanner::Scanner produc valu scan specifi file byte file convert charact use specifi charset sourc file scan charsetnam encod type convert byte file charact scan
Scanner::Scanner construct Scanner::Scanner produc valu scan specifi file byte file convert charact use platform sourc path file scan
Scanner::Scanner construct Scanner::Scanner produc valu scan specifi file byte file convert charact use specifi charset sourc path file scan charsetnam encod type convert byte file charact scan
Scanner::Scanner construct Scanner::Scanner produc valu scan specifi string sourc string scan
Scanner::Scanner construct Scanner::Scanner produc valu scan specifi channel byte sourc convert charact use platform sourc channel scan
Scanner::Scanner construct Scanner::Scanner produc valu scan specifi channel byte sourc convert charact use specifi charset sourc channel scan charsetnam encod type convert byte channel charact scan
Scanner::ioException return IOException::IOException last thrown Scanner::Scanner Readable::Readable return null exist last thrown scanner readabl
Scanner::delimiter return Pattern::Pattern Scanner::Scanner current use match delimit scanner delimit pattern
Scanner::useDelimiter set scanner delimit pattern specifi pattern pattern delimit pattern scanner
Scanner::useDelimiter set scanner delimit pattern pattern construct specifi String::String invoc form usedelimit pattern behav exact invoc usedelimit pattern compil pattern invok set scanner delimit pattern string specifi delimit pattern scanner
Scanner::match return match result last scan oper perform scanner throw IllegalStateException::IllegalStateException match perform last match success various Scanner::Scanner make match result avail complet throw instanc invoc return int return MatchResult::MatchResult search regular express defin similar make match avail succeed match result last match oper
Scanner::toString return string represent Scanner::Scanner string represent Scanner::Scanner contain use debug exact format unspecifi string represent scanner
Scanner::hasNext return scanner token input block wait input scan scanner advanc input scanner token
Scanner::next find return complet token scanner complet token preced follow input match delimit pattern block wait input scan previous invoc return token
Scanner::remove remov oper support implement Iterator::Iterator
Scanner::hasNext return token match pattern construct specifi string scanner advanc input invoc form hasnext pattern behav exact invoc hasnext pattern compil pattern pattern string specifi pattern scan scanner token match specifi pattern
Scanner::next return token match pattern construct specifi string match success scanner advanc input match pattern invoc form pattern behav exact invoc pattern compil pattern pattern string specifi pattern scan token
Scanner::hasNext return complet token match specifi pattern complet token prefix postfix input match delimit pattern block wait input scanner advanc input pattern pattern scan scanner token match specifi pattern
Scanner::next return token match specifi pattern block wait input scan previous invoc return match success scanner advanc input match pattern pattern pattern scan token
Scanner::hasNextLine return line input scanner block wait input scanner advanc input scanner line input
Scanner::nextLine advanc scanner current line return input skip return rest current line exclud line separ end posit set begin line continu search input look line separ buffer input search line skip line separ line skip
Scanner::nextInt scan token input int invoc form nextint behav exact invoc nextint radix where Scanner::radix default radix scanner int scan input
Scanner::nextInt scan token input int throw InputMismatchException::InputMismatchException token translat valid int valu describ translat success scanner advanc input match token match regular express defin token convert int valu remov local specif prefix group separ local specif suffix map non ascii digit ascii digit prepend negat sign local specif negat prefix suffix pass result string specifi radix radix radix interpret token int valu int scan input
Scanner::processFloatToken float token strip prefix group separ suffix non ascii digit convert ascii digit Float::parseFloat accept non ascii digit token digit process token pass Float::parseFloat
Scanner::hasNextBigInteger return token scanner input interpret BigInteger::BigInteger default radix use scanner advanc input scanner token valid BigInteger::BigInteger
Scanner::hasNextBigInteger return token scanner input interpret BigInteger::BigInteger specifi radix use scanner advanc input radix radix interpret token integ scanner token valid BigInteger::BigInteger
Scanner::hasNextBigDecimal return token scanner input interpret BigDecimal::BigDecimal use scanner advanc input scanner token valid BigDecimal::BigDecimal
Vector::Vector Vector::Vector implement growabl array object array contain compon access use integ index size Vector::Vector grow shrink accommod ad remov item Vector::Vector creat vector tri optim storag manag maintain capac capacityincr capac vector size larger compon ad vector vector storag increas chunk size capacityincr increas capac vector insert number compon reduc amount increment realloc vector structur modifi time iter creat iter iter throw thus face concurr modif iter fail quick clean risk arbitrari non determinist behavior undetermin time futur return fail fast note fail fast behavior iter guarante general speak imposs make guarante presenc unsynchron concurr modif fail fast iter throw ConcurrentModificationException::ConcurrentModificationException effort basi therefor wrong write program depend correct fail fast behavior iter detect bug platform v1 retrofit implement interfac make member collect implement Vector::Vector synchron thread safe implement recommend use place Vector::Vector
Vector::Vector construct empti vector specifi initi capac capac increment initialcapac initi capac vector capacityincr amount capac increas vector overflow
Vector::Vector construct empti vector specifi initi capac capac increment equal zero initialcapac initi capac vector
Vector::Vector construct empti vector intern data array size 10 standard capac increment zero
Vector::Vector construct vector contain element specifi collect order return collect iter collect element place vector
Vector::copyInto copi compon vector specifi array item index vector copi compon anarray anarray array compon get copi
Vector::size return number compon vector number compon vector
Vector::isEmpty test vector compon vector compon size zero fals
Vector::contains return vector contain specifi element formal return vector contain element null nbsp nbsp null nbsp nbsp equal element presenc vector test vector contain specifi element
Vector::insertElementAt insert specifi object compon vector specifi index compon vector index greater equal specifi index shift upward index greater valu previous index valu greater equal equal current size vector index equal current size vector element append Vector::Vector ident function part interfac note add revers order paramet close match array usag obj compon insert index where insert compon
Vector::clone return clone vector copi contain refer clone intern data array refer origin intern data array Vector::Vector object clone vector
Vector::toArray return array contain element Vector::Vector correct order
Vector::toArray return array contain element Vector::Vector correct order runtim type return array specifi array Vector::Vector fit specifi array return therein array alloc runtim type specifi array size Vector::Vector Vector::Vector fit specifi array room spare array element Vector::Vector element array end Vector::Vector set null use determin length Vector::Vector caller know Vector::Vector contain null element array element Vector::Vector store big array runtim type alloc purpos array contain element Vector::Vector
Vector::get return element specifi posit Vector::Vector index index element return object specifi index
Vector::set replac element specifi posit Vector::Vector specifi element index index element replac element element store specifi posit element previous specifi posit
Vector::add append specifi element end Vector::Vector element append Vector::Vector specifi
Vector::remove remov first occurr specifi element Vector::Vector Vector::Vector contain element unchang formal remov element lowest index null get null equal get element exist element remov Vector::Vector Vector::Vector contain specifi element
Vector::add insert specifi element specifi posit Vector::Vector shift element current posit subsequ element add indic index index specifi element insert element element insert
Vector::remove remov element specifi posit Vector::Vector shift subsequ element subtract indic return element remov Vector::Vector index index element remov element remov
Vector::clear remov element Vector::Vector Vector::Vector empti call return throw
Vector::containsAll return Vector::Vector contain element specifi Collection::Collection collect element test contain Vector::Vector Vector::Vector contain element specifi collect
Vector::addAll append element specifi Collection::Collection end Vector::Vector order return specifi Collections::Collections Iterator::Iterator behavior oper undefin specifi Collection::Collection modifi oper progress impli behavior call undefin specifi Collection::Collection Vector::Vector Vector::Vector nonempti element insert Vector::Vector Vector::Vector chang result call
Vector::removeAll remov Vector::Vector element contain specifi Collection::Collection collect element remov Vector::Vector Vector::Vector chang result call
Vector::retainAll retain element Vector::Vector contain specifi Collection::Collection word remov Vector::Vector element contain specifi Collection::Collection collect element retain Vector::Vector element remov Vector::Vector chang result call
Vector::addAll insert element specifi Collection::Collection Vector::Vector specifi posit shift element current posit subsequ element increas indic element appear Vector::Vector order return specifi Collections::Collections iter index index insert first element specifi collect element insert Vector::Vector Vector::Vector chang result call
Vector::equals compar specifi Object::Object Vector::Vector equal return specifi Object::Object List::List list size correspond pair element list equal element e1 e2 equal e1 null e2 null e1 equal e2 word list defin equal contain element order Object::Object compar equal Vector::Vector specifi Object::Object equal Vector::Vector
Vector::hashCode return hash valu Vector::Vector
Vector::toString return string represent Vector::Vector contain String::String represent element
Vector::subList return view portion List::List fromindex inclus toindex exclus fromindex toindex equal return List::List empti return List::List List::List chang return List::List reflect List::List versa return List::List support option List::List oper support List::List elimin explicit rang oper sort common exist array oper expect List::List rang oper oper sublist view instead List::List exampl idiom remov rang element list similar idiom construct indexof lastindexof algorithm Collections::Collections appli sublist semant List::List return becom undefin list List::List structur modifi return List::List structur modif chang size List::List perturb fashion iter progress yield incorrect result fromindex low endpoint inclus sublist toindex endpoint exclus sublist view specifi rang List::List
Vector::writeObject save state Vector::Vector instanc stream serial perform synchron ensur consist serial data
Currency::Currency repres currenc currenc identifi iso 4217 currenc visit design Currency::Currency instanc given currenc therefor constructor obtain Currency::Currency instanc use getinst user supersed runtim currenc data mean system properti util currenc data system properti defin valu locat properti file content key valu pair iso 3166 countri iso 4217 currenc data respect valu part consist iso 4217 valu currenc alphabet numer minor unit iso 4217 valu separ comma line start consid comment line option utc timestamp specifi currenc entri user specifi cutov date indic data come effect timestamp append end currenc properti use comma separ utc datestamp valid jre use currenc properti current utc date date specifi load time format timestamp iso 8601 format yyyi mm dd hhmmss exampl sampl currenc properti jp jpz 999 supersed currenc data japan sampl currenc properti cutov date jp jpz 999 2014 01 01t000000 supersed currenc data japan Currency::Currency load 1st januari 2014 000000 gmt where syntact malform entri encount entri ignor remaind entri file process instanc where duplic countri entri exist behavior Currency::Currency Currency::Currency undefin remaind entri file process
Currency::Currency construct Currency::Currency instanc constructor privat insur instanc given currenc
Currency::getInstance return Currency::Currency instanc given currenc currencycod iso 4217 currenc Currency::Currency instanc given currenc
Currency::getInstance return Currency::Currency instanc countri given local languag variant compon local ignor result vari time countri chang currenc exampl origin member countri european monetari union return old nation currenc decemb 31 2001 euro januari 2002 local time respect countri return null territori don currenc antarctica local local countri Currency::Currency instanc Currency::Currency instanc countri given local null
Currency::getCurrencyCode get iso 4217 currenc currenc iso 4217 currenc currenc
Currency::getSymbol get symbol currenc default local exampl dollar symbol default local local symbol determin iso 4217 currenc return equival call symbol currenc default local
Currency::getSymbol get symbol currenc specifi local exampl dollar symbol specifi local local symbol determin iso 4217 currenc return local local display name currenc symbol currenc specifi local
Formattable::Formattable formatt interfac implement perform custom format use convers specifi interfac allow basic control format arbitrari object exampl print represent stock name depend flag length constraint import nio charbuff import util formatt import util formatt import util local import static util formattableflag stocknam implement Formattable::Formattable privat String::String symbol companynam frenchcompanynam stocknam string symbol String::String companynam String::String frenchcompanynam formatto formatt fmt int int width int precis StringBuilder::StringBuilder sb StringBuilder::StringBuilder decid form name String::String name companynam fmt local equal local franc name frenchcompanynam boolean altern altern altern boolean usesymbol altern precis precis conjunct produc output various format string Formatter::Formatter fmt Formatter::Formatter stocknam sn stocknam huge huge fruit inc fruit titanesqu inc fmt format sn huge fruit inc fmt format sn tostr huge huge fruit inc fmt format sn huge fmt format 10 8s sn huge fmt format 12s sn huge fruit fmt format local franc 25s sn fruit titanesqu inc formatt necessarili safe multithread access Thread::Thread safeti option enforc extend implement interfac specifi pass null argument interfac caus thrown
Set::Set collect contain duplic element formal set contain pair element e1 e2 e1 equal e2 null element impli name interfac model mathemat set abstract set interfac place addit stipul inherit collect interfac contract constructor contract add equal hashcod declar inherit includ conveni specif accompani declar tailor set interfac contain addit stipul addit stipul constructor surpris constructor creat set contain duplic element defin note great care exercis mutabl object set element behavior set specifi valu object chang manner affect equal comparison object element set case prohibit permiss set contain element set implement restrict element contain exampl implement prohibit null element restrict type element attempt add inelig element throw uncheck typic nullpointerexcept classcastexcept attempt queri presenc inelig element throw simpli return fals implement exhibit former behavior exhibit latter general attempt oper inelig element complet result insert inelig element set throw succeed option implement mark option specif interfac interfac member type element maintain set
Set::size return number element set cardin set contain integ max valu element return integ max valu number element set cardin
Set::iterator return iter element set element return particular order set instanc provid guarante iter element set
Set::toArray return array contain element set set make guarante order element return iter return element order return array safe refer maintain set word alloc array set array caller thus free modifi return array act bridg array base collect base array contain element set
Set::toArray return array contain element set runtim type return array specifi array set fit specifi array return therein array alloc runtim type specifi array size set set fit specifi array room spare array element set element array end set set null use determin length set caller know set contain null element set make guarante order element return iter return element order act bridg array base collect base further allow precis control runtim type output array circumst save alloc cost suppos set known contain string dump set newli alloc array string note toarray object ident function toarray array element set store big array runtim type alloc purpos array contain element set
Set::add add specifi element set option oper formal add specifi element set set contain element e2 null nbsp nbsp e2 null nbsp nbsp equal e2 set contain element call leav set unchang return fals combin restrict constructor ensur set contain duplic element stipul impli set accept element set refus add particular element includ null throw describ specif individu set implement clear document restrict element contain element ad set set contain specifi element
Set::spliterator creat Spliterator::Spliterator element set Spliterator::Spliterator report implement document report addit characterist valu default implement creat spliter set Iterator::Iterator spliter inherit fail fast properti set iter creat Spliterator::Spliterator addit report creat Spliterator::Spliterator addit report Spliterator::Spliterator element set
IdentityHashMap::hash return index Object::Object
IdentityHashMap::writeObject save state identityhashmap instanc stream serial size HashMap::HashMap number key valu map int follow key Object::Object valu Object::Object key valu map repres IdentityHashMap::IdentityHashMap key valu map emit particular order
AbstractQueue::AbstractQueue Constructor::Constructor use subclass
Date::Date Date::Date repres specif instant time millisecond precis prior jdk nbsp Date::Date addit function allow interpret date year month day hour minut valu allow format pars date string unfortun function amen internation jdk nbsp Calendar::Calendar convert date time field DateFormat::DateFormat format pars date string correspond Date::Date deprec Date::Date intend reflect coordin univers time utc exact depend host environ virtual machin modern oper system assum nbsp day nbsp 24 nbsp time nbsp 60 nbsp time nbsp 60 nbsp 86400 case utc year extra call leap leap ad last day decemb 31 june 30 exampl last minut year 1995 61 ad leap comput clock accur abl reflect leap distinct comput standard defin term greenwich mean time gmt equival univers time ut gmt civil name standard ut scientif name standard distinct utc ut utc base atom clock ut base astronom observ practic purpos invis fine hair split earth rotat uniform slow speed complic ut flow uniform leap introduc utc keep utc ut1 version ut correct appli time date system exampl time scale satellit base global posit system gps synchron utc adjust leap interest sourc further naval observatori particular director Time::Time definit system Time::Time Date::Date accept return year month date hour minut valu represent use year repres integ nbsp 1900 month repres integ 11 januari februari forth thus 11 decemb date day month repres integ 31 usual manner hour repres integ 23 thus hour midnight hour hour noon hour 12 minut repres integ 59 usual manner repres integ 61 valu 60 61 occur leap implement actual track leap correct manner leap current introduc extrem unlik leap occur minut specif follow date time convent iso case argument given purpos fall indic rang exampl date specifi januari 32 interpret mean februari
Date::Date alloc Date::Date object initi repres time alloc measur nearest millisecond
Date::Date alloc Date::Date object initi repres specifi number millisecond standard base time known epoch name januari 1970 000000 gmt date millisecond januari 1970 000000 gmt
Date::Date alloc Date::Date object initi repres midnight local time begin day specifi year month date argument year year 1900 month month 11 date day month 31
Date::Date alloc Date::Date object initi repres instant start minut specifi year month date hrs min argument local time zone year year 1900 month month 11 date day month 31 hrs hour 23 min minut 59
Date::Date alloc Date::Date object initi repres instant start specifi year month date hrs min sec argument local time zone year year 1900 month month 11 date day month 31 hrs hour 23 min minut 59 sec 59
Date::Date alloc Date::Date object initi repres date time indic string interpret string represent date
Date::parse attempt interpret string represent date time attempt success time indic return repres distanc measur millisecond time epoch 000000 gmt januari 1970 attempt fail illegalargumentexcept thrown accept syntax particular recogn ietf standard date syntax sat 12 aug 1995 133000 gmt understand continent time zone abbrevi general use time zone offset use sat 12 aug 1995 133000 gmt 0430 hour 30 minut west greenwich meridian time zone specifi local time zone assum gmt utc consid equival string process look data interest materi ascii parenthesi charact ignor parenthes nest charact permit ascii charact whitespac charact consecut sequenc decim digit treat decim number number preced year recogn number time zone offset number 24 offset measur hour regard offset minut express 24 hour time format punctuat preced mean westward offset Time::Time zone offset relat utc greenwich thus exampl occur string mean hour west greenwich 0430 mean hour thirti minut east greenwich permit string specifi gmt ut utc redund exampl gmt utc 0430 number regard year number condit number equal greater 70 follow space comma slash end string number 70 month day month recogn recogn year number 100 interpret abbrevi year relat centuri date 80 year 19 year time Date::Date initi adjust year number 1900 subtract exampl current year 1999 year rang 19 99 assum mean 1919 1999 year 18 assum mean 2000 2018 note slight interpret year 100 number follow colon regard hour hour recogn case regard minut number follow slash regard month decreas produc number rang 11 month recogn case regard day month number follow whitespac comma hyphen end string hour recogn minut regard minut minut recogn regard regard day month consecut sequenc letter regard word treat follow word match ignor case ignor pars fail hour recogn greater 12 word match pm ignor case add 12 hour pars fail hour recogn greater 12 word match prefix sunday monday tuesday wednesday thursday friday saturday ignor case ignor exampl sat friday tue thur ignor word match prefix januari februari march april june juli august septemb octob novemb decemb ignor case order given recogn specifi month convert number 11 exampl aug sept april nov recogn month ma recogn march word match gmt ut utc ignor case treat refer utc word match est cst mst pst ignor case recogn refer time zone north america seven eight hour west greenwich respect word match edt cdt mdt pdt ignor case recogn refer time zone respect daylight time entir string scan convert time result time zone time zone offset recogn year month day month hour minut interpret utc time zone offset appli year month day month hour minut interpret local time zone string pars date number millisecond januari 1970 000000 gmt repres string argument
Date::getYear return valu result subtract 1900 year contain begin instant time repres Date::Date object interpret local time zone year repres date 1900
Date::setYear set year date object specifi valu 1900 Date::Date object modifi repres point time specifi year month date hour minut interpret local time zone cours date februari 29 exampl year set non leap year date treat march year year valu
Date::getTime return number millisecond januari 1970 000000 gmt repres date object number millisecond januari 1970 000000 gmt repres date
Date::setTime set Date::Date object repres point time time millisecond januari 1970 000000 gmt time number millisecond
Date::before test date specifi date date instant time repres date object strict earlier instant repres fals
Date::after test date specifi date date instant repres date object strict instant repres fals
Date::equals compar date equal result argument null Date::Date object repres point time millisecond object thus Date::Date object equal gettim return valu obj object compar object fals
Date::getMillisOf return millisecond valu Date::Date object affect intern state
Date::compareTo compar date order anotherd Date::Date compar valu argument Date::Date equal Date::Date valu Date::Date Date::Date argument valu greater Date::Date Date::Date argument
Date::toString convert Date::Date object String::String form where dow day week sun mon tue wed thu fri sat mon month jan feb mar apr jun jul aug sep oct nov dec dd day month 01 31 decim digit hh hour day 00 23 decim digit mm minut hour 00 59 decim digit ss minut 00 61 decim digit zzz time zone reflect daylight time standard time zone abbrevi includ recogn pars time zone avail zzz empti consist charact yyyi year decim digit string represent date
Date::convertToAbbr convert given name letter abbrevi monday mon store abbrevi given StringBuilder::StringBuilder
Date::getTimezoneOffset return offset measur minut local time zone relat utc appropri time repres Date::Date object exampl massachusett time zone west greenwich februari 14 1996 standard time eastern standard Time::Time use offset hour utc june 1996 daylight time eastern daylight Time::Time use offset hour utc produc result comput time zone offset minut current time zone
Date::from obtain instanc Date::Date Instant::Instant object Instant::Instant use precis nanosecond Date::Date use precis millisecond convers trancat excess precis amount nanosecond subject integ divis million Instant::Instant store point time line further futur further Date::Date scenario throw instant instant convert Date::Date repres point time line instant
Date::toInstant convert Date::Date object Instant::Instant convers creat Instant::Instant repres point time line Date::Date instant repres point time line Date::Date object
Spliterator::Spliterator object travers partit element sourc sourc element cover Spliterator::Spliterator exampl array io channel generat function Spliterator::Spliterator travers element individu sequenti bulk Spliterator::Spliterator partit element use Spliterator::Spliterator possibl parallel oper oper use Spliterator::Spliterator split imbalanc ineffici manner unlik benefit parallel travers split exhaust element Spliterator::Spliterator use singl bulk comput Spliterator::Spliterator report set structur sourc element employ Spliterator::Spliterator client control simplifi comput exampl Spliterator::Spliterator report size Spliterator::Spliterator report distinct Spliterator::Spliterator report sort Collector::Characteristics report union bit set characterist addit constrain behavior exampl order travers conform document order characterist defin futur implementor assign mean unlist valu late bind Spliterator::Spliterator bind sourc element point first travers first split first queri estim size time Spliterator::Spliterator creat Spliterator::Spliterator late bind bind sourc element point construct first invoc modif made sourc prior bind reflect Spliterator::Spliterator travers bind Spliterator::Spliterator effort basi throw structur interfer detect Spliterators::Spliterators call fail fast bulk travers Spliterator::Spliterator optim travers check structur interfer element travers check element spliter provid estim number remain element ideal reflect characterist valu correspond exact number element encount success travers exact known estim valu valu use oper perform sourc determin prefer split further travers remain element sequenti obvious util parallel algorithm spliter expect thread safe instead implement parallel algorithm use spliter ensur spliter thread time general easi attain serial thread confin natur consequ typic parallel algorithm work recurs decomposit thread call hand return Spliterator::Spliterator thread turn travers further split Spliterator::Spliterator behaviour split travers undefin thread oper concurr spliter origin thread hand spliter thread process handoff occur element consum guarante accuraci size spliter valid travers begun primit subtyp Spliterator::Spliterator valu subtyp default implement box primit valu instanc correspond wrapper box undermin perform advantag gain use primit avoid box correspond primit base exampl prefer travers primit valu use box base affect order valu transform box valu encount spliter iter travers element sourc Spliterator::Spliterator design support effici parallel travers addit sequenti travers support decomposit singl element iter addit protocol access element Spliterator::Spliterator design impos smaller element overhead Iterator::Iterator avoid inher race involv separ hasnext mutabl sourc arbitrari non determinist behavior occur sourc structur interf element ad replac remov time Spliterator::Spliterator bind data sourc end travers exampl interfer produc arbitrari non determinist result use util stream framework structur interfer sourc manag approxim order decreas desir sourc structur interf exampl instanc immut sourc Spliterator::Spliterator creat sourc report characterist immut sourc manag concurr modif exampl key set concurr sourc Spliterator::Spliterator creat sourc report characterist concurr mutabl sourc provid late bind fail fast Spliterator::Spliterator late bind narrow window interfer affect calcul fail fast detect effort basi structur interfer occur travers commenc throw exampl non concurr Collection::Collection jdk provid late bind fail fast spliter mutabl sourc provid non late bind fail fast Spliterator::Spliterator sourc increas likelihood throw ConcurrentModificationException::ConcurrentModificationException window potenti interfer larger mutabl sourc provid late bind non fail fast Spliterator::Spliterator sourc risk arbitrari non determinist behavior travers commenc interfer detect mutabl sourc provid non late bind non fail fast Spliterator::Spliterator sourc increas risk arbitrari non determinist behavior non detect interfer occur construct exampl use illustr maintain array actual data held locat unrel tag data held odd locat Spliterator::Spliterator ignor tag exampl parallel comput framework util stream packag use Spliterator::Spliterator parallel comput implement associ parallel foreach illustr primari usag idiom split subtask estim amount work perform sequenti assum order process subtask doesn matter fork task further split process element concurr undetermin order exampl use similar usag appli parallel task construct boolean system properti org openjdk util stream tripwir set diagnost warn report box primit valu occur oper primit subtyp type element return Spliterator::Spliterator
Properties::Properties Properties::Properties repres persist set properti Properties::Properties save stream load stream key correspond valu properti list string properti list contain properti list default properti list search properti key found origin properti list Properties::Properties inherit Hashtable::Hashtable put putal appli Properties::Properties object use strong discourag allow caller insert entri key valu string setproperti instead store save call compromis Properties::Properties object contain non String::String key valu call fail similar call Properties::propertyNames list fail call compromis Properties::Properties object contain non String::String key load store properti charact base stream line orient format specifi work load reader store writer String::String pair input output stream encod iso 8859 charact encod charact repres encod written use unicod escap defin section trade languag specif singl charact allow escap sequenc native2ascii tool convert properti file charact encod load store properti xml format default utf charact encod specif encod specifi requir implement requir support utf utf 16 support encod xml properti document doctyp declar note system uri http sun com dtd properti dtd access export import properti mere serv string uniqu identifi dtd thread safe multipl thread share singl properti object extern synchron
Properties::Properties creat empti properti list default valu
Properties::Properties creat empti properti list specifi default default default
Properties::setProperty call hashtabl put parallel getproperti enforc use string properti key valu valu return result hashtabl call put key key place properti list valu valu correspond key previous valu specifi key properti list null
Properties::load read properti list key element pair input charact stream line orient format Properties::Properties process term line kind line natur line logic line natur line defin line charact termin set line termin charact end stream natur line blank line comment line hold key element pair logic line hold data key element pair spread adjac natur line escap line termin sequenc backslash charact note comment line extend manner natur line comment comment indic describ line read input end stream reach natur line contain white space charact consid blank ignor comment line ascii first non white space charact comment line ignor encod key element addit line termin format consid charact space u005cu0020 tab u005cu0009 form feed u005cu000c white space logic line spread natur line backslash escap line termin sequenc line termin sequenc white space start line affect key element valu remaind discuss key element pars load assum charact constitut key element appear singl natur line line continu charact remov note suffici examin charact preced line termin sequenc decid line termin escap odd number contigu backslash line termin escap input process non zero number contigu backslash line termin elsewher encod backslash escap process key contain charact line start first non white space charact includ first unescap white space charact line termin key termin charact includ key escap preced backslash charact exampl charact key line termin charact includ use escap sequenc white space key skip first non white space charact key ignor white space charact skip remain charact line becom part associ element string remain charact element empti string raw charact sequenc constitut key element identifi escap process perform describ exampl line specifi key truth associ element valu beauti exampl line specifi singl properti key fruit associ element note space appear space appear comma final result line termin lead white space continu line mere discard replac charact third exampl line specifi key chees associ element empti string charact key element repres escap sequenc similar charact string liter see section 10 trade languag specif differ charact escap sequenc unicod escap charact string octal escap recogn charact sequenc repres backspac charact treat backslash charact non valid escap charact error backslash silent drop exampl string sequenc caus compil time error contrast silent drop backslash therefor treat charact sequenc equival singl charact escap necessari singl doubl quot rule singl doubl quot charact preced backslash yield singl doubl quot charact respect singl charact allow unicod escap sequenc specifi stream remain open return reader input charact stream
Properties::load read properti list key element pair input byte stream input stream line orient format specifi assum use iso 8859 charact encod byte latin1 charact charact latin1 charact repres key element use unicod escap defin section trade languag specif specifi stream remain open return instream input stream
Properties::save call store outputstream String::String comment suppress ioexcept thrown output stream comment descript properti list
Properties::store write properti list key element pair Properties::Properties tabl output charact stream format suitabl use Properties::Properties default tabl Properties::Properties tabl written comment argument null ascii charact comment string line separ first written output stream thus comment serv identifi comment line feed carriag return carriag return follow line feed comment replac line separ generat Writer::Writer charact comment charact charact ascii written line separ comment line written consist ascii charact current date time produc tostr Date::Date current time line separ generat Writer::Writer entri Properties::Properties tabl written line entri key string written ascii associ element string key space charact written preced charact element lead space charact embed trail space charact written preced charact key element charact written preced backslash ensur proper load entri written output stream flush output stream remain open return writer output charact stream writer comment descript properti list
Properties::store write properti list key element pair Properties::Properties tabl output stream format suitabl load Properties::Properties tabl use Properties::Properties default tabl Properties::Properties tabl written output comment properti key valu format specifi differ stream written use iso 8859 charact encod charact latin comment written u005cu xxxx appropri unicod hexadecim valu xxxx charact u005cu0020 charact greater u005cu007 properti key valu written u005cu xxxx appropri hexadecim valu xxxx entri written output stream flush output stream remain open return output stream comment descript properti list
Properties::storeToXML emit xml document repres properti contain tabl invoc form prop storetoxml os comment behav exact invoc prop storetoxml os comment utf os output stream emit xml document comment descript properti list null comment desir
Properties::storeToXML emit xml document repres properti contain tabl use specifi encod xml document doctyp declar specifi comment null comment store document implement requir support write xml document use utf utf 16 encod implement support addit encod specifi stream remain open return os output stream emit xml document comment descript properti list null comment desir encod name support
Properties::getProperty search properti specifi key properti list key found properti list default properti list default recurs check return null properti found key properti key valu properti list specifi key valu
Properties::getProperty search properti specifi key properti list key found properti list default properti list default recurs check return default valu argument properti found key hashtabl key defaultvalu default valu valu properti list specifi key valu
Properties::stringPropertyNames return set key properti list where key correspond valu string includ distinct key default properti list key name found properti list Properties::Properties key valu type string omit return set properti object chang properti reflect set versa set key properti list where key correspond valu string includ key default properti list
Enumeration::Enumeration object implement Enumeration::Enumeration interfac generat seri element time success call nextel return success element seri exampl print element vector lt gt enumer element vector key hashtabl valu hashtabl enumer specifi input stream SequenceInputStream::SequenceInputStream note function interfac duplic Iterator::Iterator interfac addit Iterator::Iterator add option remov oper shorter name implement consid use Iterator::Iterator prefer Enumeration::Enumeration
Enumeration::hasMoreElements test enumer contain element enumer object contain element provid fals
Enumeration::nextElement return element enumer enumer object element provid element enumer
PrimitiveIterator::PrimitiveIterator base type primit Iterator::Iterator subtyp valu subtyp default implement box primit valu instanc correspond wrapper box offset advantag gain use primit avoid box correspond primit base exampl prefer iter primit valu use box base affect order valu transform box valu encount boolean system properti org openjdk util stream tripwir set diagnost warn report box primit valu occur oper primit subtyp type element return PrimitiveIterator::PrimitiveIterator type wrapper type primit type Integer::Integer primit int type type primit consum type primit Integer::Integer
Timer::Timer facil thread schedul task futur execut background thread task schedul time execut repeat execut regular interv correspond timer object singl background thread execut timer task sequenti Timer::Timer task complet quick timer task take excess time complet hog timer task execut thread turn delay execut subsequ task bunch execut rapid success offend task final complet last live refer timer object goe outstand task complet execut timer task execut thread termin grace becom subject garbag collect take arbitrarili occur default task execut thread run daemon thread capabl keep termin caller want termin timer task execut thread rapid caller invok timer cancel timer task execut thread termin unexpect exampl stop invok further attempt schedul task timer result illegalstateexcept timer cancel invok thread safe multipl thread share singl timer object extern synchron offer time guarante schedul task use object wait introduc util concurr packag concurr util therein thread pool repeat execut task given rate delay effect versatil replac Timer::Timer TimerTask::TimerTask combin allow multipl servic thread accept various time unit doesn requir subclass TimerTask::TimerTask implement Runnable::Runnable configur ScheduledThreadPoolExecutor::ScheduledThreadPoolExecutor thread make equival Timer::Timer implement note scale number concurr schedul task thousand intern use binari heap repres task queue cost schedul task log where number concurr schedul task implement note constructor start timer thread
Timer::Timer creat timer associ thread
Timer::Timer creat timer associ thread specifi daemon thread call timer schedul repeat mainten activ perform run prolong lifetim isdaemon associ thread run daemon
Timer::Timer creat timer associ thread specifi name associ thread name name associ thread
Timer::Timer creat timer associ thread specifi name specifi name name associ thread isdaemon associ thread run daemon
Timer::scheduleAtFixedRate schedul specifi task repeat fix rate execut begin specifi delay subsequ execut take place approxim regular interv separ specifi period fix rate execut execut schedul relat schedul execut time initi execut execut delay reason garbag collect background activ execut occur rapid success catch run frequenc execut exact reciproc specifi period assum system clock object wait accur fix rate execut appropri recur activ sensit absolut time ring chime hour hour run schedul mainten day particular time appropri recur activ where total time perform fix number execut countdown timer tick ten final fix rate execut appropri schedul multipl repeat timer task remain synchron respect task task schedul delay delay millisecond task execut period time millisecond success task execut
Timer::scheduleAtFixedRate schedul specifi task repeat fix rate execut begin specifi time subsequ execut take place approxim regular interv separ specifi period fix rate execut execut schedul relat schedul execut time initi execut execut delay reason garbag collect background activ execut occur rapid success catch run frequenc execut exact reciproc specifi period assum system clock object wait accur consequ schedul first time miss execut schedul immedi catch execut fix rate execut appropri recur activ sensit absolut time ring chime hour hour run schedul mainten day particular time appropri recur activ where total time perform fix number execut countdown timer tick ten final fix rate execut appropri schedul multipl repeat timer task remain synchron respect task task schedul firsttim first time task execut period time millisecond success task execut
TaskQueue::TaskQueue timer loop see comment repres timer task queue prioriti queue timertask order nextexecutiontim Timer::Timer object share TimerThread::TimerThread intern use heap offer log perform add TaskQueue::removeMin TaskQueue::rescheduleMin oper constant time perform getmin oper
LinkedHashSet::spliterator creat fail fast Spliterator::Spliterator element set Spliterator::Spliterator report order implement document report addit characterist valu implement creat spliter set Iterator::Iterator spliter inherit fail fast properti set iter creat Spliterator::Spliterator addit report Spliterator::Spliterator element set
Iterator::Iterator iter collect Iterator::Iterator take place Collections::Collections framework iter differ enumer iter allow caller remov element collect iter defin semant Method::Method name improv interfac member type element return iter
Iterator::hasNext return iter element word return return element throw iter element
Iterator::next return element iter element iter
Arrays::sort sort specifi array ascend numer order implement note sort algorithm dual pivot quicksort vladimir yaroslavskiy jon bentley joshua bloch algorithm offer log perform data set caus quicksort degrad quadrat perform typic faster tradit pivot quicksort implement array sort
Arrays::sort sort specifi rang array ascend order rang sort extend index fromindex inclus index toindex exclus fromindex toindex rang sort empti implement note sort algorithm dual pivot quicksort vladimir yaroslavskiy jon bentley joshua bloch algorithm offer log perform data set caus quicksort degrad quadrat perform typic faster tradit pivot quicksort implement array sort fromindex index first element inclus sort toindex index last element exclus sort
Arrays::sort sort specifi array ascend numer order implement note sort algorithm dual pivot quicksort vladimir yaroslavskiy jon bentley joshua bloch algorithm offer log perform data set caus quicksort degrad quadrat perform typic faster tradit pivot quicksort implement array sort
Arrays::sort sort specifi rang array ascend order rang sort extend index fromindex inclus index toindex exclus fromindex toindex rang sort empti implement note sort algorithm dual pivot quicksort vladimir yaroslavskiy jon bentley joshua bloch algorithm offer log perform data set caus quicksort degrad quadrat perform typic faster tradit pivot quicksort implement array sort fromindex index first element inclus sort toindex index last element exclus sort
Arrays::sort sort specifi array ascend numer order implement note sort algorithm dual pivot quicksort vladimir yaroslavskiy jon bentley joshua bloch algorithm offer log perform data set caus quicksort degrad quadrat perform typic faster tradit pivot quicksort implement array sort
Arrays::sort sort specifi rang array ascend order rang sort extend index fromindex inclus index toindex exclus fromindex toindex rang sort empti implement note sort algorithm dual pivot quicksort vladimir yaroslavskiy jon bentley joshua bloch algorithm offer log perform data set caus quicksort degrad quadrat perform typic faster tradit pivot quicksort implement array sort fromindex index first element inclus sort toindex index last element exclus sort
Arrays::sort sort specifi array ascend numer order implement note sort algorithm dual pivot quicksort vladimir yaroslavskiy jon bentley joshua bloch algorithm offer log perform data set caus quicksort degrad quadrat perform typic faster tradit pivot quicksort implement array sort
Arrays::sort sort specifi rang array ascend order rang sort extend index fromindex inclus index toindex exclus fromindex toindex rang sort empti implement note sort algorithm dual pivot quicksort vladimir yaroslavskiy jon bentley joshua bloch algorithm offer log perform data set caus quicksort degrad quadrat perform typic faster tradit pivot quicksort implement array sort fromindex index first element inclus sort toindex index last element exclus sort
Arrays::sort sort specifi array ascend numer order implement note sort algorithm dual pivot quicksort vladimir yaroslavskiy jon bentley joshua bloch algorithm offer log perform data set caus quicksort degrad quadrat perform typic faster tradit pivot quicksort implement array sort
Arrays::sort sort specifi rang array ascend order rang sort extend index fromindex inclus index toindex exclus fromindex toindex rang sort empti implement note sort algorithm dual pivot quicksort vladimir yaroslavskiy jon bentley joshua bloch algorithm offer log perform data set caus quicksort degrad quadrat perform typic faster tradit pivot quicksort implement array sort fromindex index first element inclus sort toindex index last element exclus sort
Arrays::sort sort specifi array ascend numer order implement note sort algorithm dual pivot quicksort vladimir yaroslavskiy jon bentley joshua bloch algorithm offer log perform data set caus quicksort degrad quadrat perform typic faster tradit pivot quicksort implement array sort
Arrays::sort sort specifi rang array ascend order rang sort extend index fromindex inclus index toindex exclus fromindex toindex rang sort empti implement note sort algorithm dual pivot quicksort vladimir yaroslavskiy jon bentley joshua bloch algorithm offer log perform data set caus quicksort degrad quadrat perform typic faster tradit pivot quicksort implement array sort fromindex index first element inclus sort toindex index last element exclus sort
Arrays::sort sort specifi array ascend numer order implement note sort algorithm dual pivot quicksort vladimir yaroslavskiy jon bentley joshua bloch algorithm offer log perform data set caus quicksort degrad quadrat perform typic faster tradit pivot quicksort implement array sort
Arrays::sort sort specifi rang array ascend order rang sort extend index fromindex inclus index toindex exclus fromindex toindex rang sort empti implement note sort algorithm dual pivot quicksort vladimir yaroslavskiy jon bentley joshua bloch algorithm offer log perform data set caus quicksort degrad quadrat perform typic faster tradit pivot quicksort implement array sort fromindex index first element inclus sort toindex index last element exclus sort
Arrays::sort sort specifi array object ascend order accord element element array implement interfac furthermor element array mutual compar e1 compareto e2 throw ClassCastException::ClassCastException element e1 e2 array sort guarante stabl equal element reorder result sort implement note implement stabl adapt iter mergesort requir fewer lg comparison input array partial sort offer perform tradit mergesort input array random order input array sort implement requir approxim comparison temporari storag requir vari constant sort input array object refer random order input array implement take equal advantag ascend descend order input array take advantag ascend descend order part input array suit merg sort array simpli concaten array sort result array implement adapt tim peter list sort python use techniqu peter mcilroy optimist sort theoret complex proceed fourth annual acm siam symposium discret algorithm pp 467 474 januari 1993 array sort
Arrays::sort sort specifi rang specifi array object ascend order accord element rang sort extend index fromindex inclus index toindex exclus fromindex toindex rang sort empti element rang implement interfac furthermor element rang mutual compar e1 compareto e2 throw ClassCastException::ClassCastException element e1 e2 array sort guarante stabl equal element reorder result sort implement note implement stabl adapt iter mergesort requir fewer lg comparison input array partial sort offer perform tradit mergesort input array random order input array sort implement requir approxim comparison temporari storag requir vari constant sort input array object refer random order input array implement take equal advantag ascend descend order input array take advantag ascend descend order part input array suit merg sort array simpli concaten array sort result array implement adapt tim peter list sort python use techniqu peter mcilroy optimist sort theoret complex proceed fourth annual acm siam symposium discret algorithm pp 467 474 januari 1993 array sort fromindex index first element inclus sort toindex index last element exclus sort
Arrays::sort sort specifi array object accord order induc specifi compar element array mutual compar specifi compar compar e1 e2 throw ClassCastException::ClassCastException element e1 e2 array sort guarante stabl equal element reorder result sort implement note implement stabl adapt iter mergesort requir fewer lg comparison input array partial sort offer perform tradit mergesort input array random order input array sort implement requir approxim comparison temporari storag requir vari constant sort input array object refer random order input array implement take equal advantag ascend descend order input array take advantag ascend descend order part input array suit merg sort array simpli concaten array sort result array implement adapt tim peter list sort python use techniqu peter mcilroy optimist sort theoret complex proceed fourth annual acm siam symposium discret algorithm pp 467 474 januari 1993 object sort array sort compar determin order array null valu indic element
Arrays::sort sort specifi rang specifi array object accord order induc specifi compar rang sort extend index fromindex inclus index toindex exclus fromindex toindex rang sort empti element rang mutual compar specifi compar compar e1 e2 throw ClassCastException::ClassCastException element e1 e2 rang sort guarante stabl equal element reorder result sort implement note implement stabl adapt iter mergesort requir fewer lg comparison input array partial sort offer perform tradit mergesort input array random order input array sort implement requir approxim comparison temporari storag requir vari constant sort input array object refer random order input array implement take equal advantag ascend descend order input array take advantag ascend descend order part input array suit merg sort array simpli concaten array sort result array implement adapt tim peter list sort python use techniqu peter mcilroy optimist sort theoret complex proceed fourth annual acm siam symposium discret algorithm pp 467 474 januari 1993 object sort array sort fromindex index first element inclus sort toindex index last element exclus sort compar determin order array null valu indic element
Arrays::binarySearch search specifi array specifi valu use binari search algorithm array sort prior make call sort result undefin array contain multipl element specifi valu guarante found array search key valu search index search key contain array insert point insert point defin point key insert array index first element greater key length element array specifi key note guarante return valu gt key found
Arrays::binarySearch search rang specifi array specifi valu use binari search algorithm rang sort prior make call sort result undefin rang contain multipl element specifi valu guarante found array search fromindex index first element inclus search toindex index last element exclus search key valu search index search key contain array specifi rang insert point insert point defin point key insert array index first element rang greater key toindex element rang specifi key note guarante return valu gt key found
Arrays::binarySearch search specifi array int specifi valu use binari search algorithm array sort prior make call sort result undefin array contain multipl element specifi valu guarante found array search key valu search index search key contain array insert point insert point defin point key insert array index first element greater key length element array specifi key note guarante return valu gt key found
Arrays::binarySearch search rang specifi array int specifi valu use binari search algorithm rang sort prior make call sort result undefin rang contain multipl element specifi valu guarante found array search fromindex index first element inclus search toindex index last element exclus search key valu search index search key contain array specifi rang insert point insert point defin point key insert array index first element rang greater key toindex element rang specifi key note guarante return valu gt key found
Arrays::binarySearch search specifi array specifi valu use binari search algorithm array sort prior make call sort result undefin array contain multipl element specifi valu guarante found array search key valu search index search key contain array insert point insert point defin point key insert array index first element greater key length element array specifi key note guarante return valu gt key found
Arrays::binarySearch search rang specifi array specifi valu use binari search algorithm rang sort prior make call sort result undefin rang contain multipl element specifi valu guarante found array search fromindex index first element inclus search toindex index last element exclus search key valu search index search key contain array specifi rang insert point insert point defin point key insert array index first element rang greater key toindex element rang specifi key note guarante return valu gt key found
Arrays::binarySearch search specifi array char specifi valu use binari search algorithm array sort prior make call sort result undefin array contain multipl element specifi valu guarante found array search key valu search index search key contain array insert point insert point defin point key insert array index first element greater key length element array specifi key note guarante return valu gt key found
Arrays::binarySearch search rang specifi array char specifi valu use binari search algorithm rang sort prior make call sort result undefin rang contain multipl element specifi valu guarante found array search fromindex index first element inclus search toindex index last element exclus search key valu search index search key contain array specifi rang insert point insert point defin point key insert array index first element rang greater key toindex element rang specifi key note guarante return valu gt key found
Arrays::binarySearch search specifi array byte specifi valu use binari search algorithm array sort prior make call sort result undefin array contain multipl element specifi valu guarante found array search key valu search index search key contain array insert point insert point defin point key insert array index first element greater key length element array specifi key note guarante return valu gt key found
Arrays::binarySearch search rang specifi array byte specifi valu use binari search algorithm rang sort prior make call sort result undefin rang contain multipl element specifi valu guarante found array search fromindex index first element inclus search toindex index last element exclus search key valu search index search key contain array specifi rang insert point insert point defin point key insert array index first element rang greater key toindex element rang specifi key note guarante return valu gt key found
Arrays::binarySearch search specifi array doubl specifi valu use binari search algorithm array sort prior make call sort result undefin array contain multipl element specifi valu guarante found consid nan valu equival equal array search key valu search index search key contain array insert point insert point defin point key insert array index first element greater key length element array specifi key note guarante return valu gt key found
Arrays::binarySearch search rang specifi array doubl specifi valu use binari search algorithm rang sort prior make call sort result undefin rang contain multipl element specifi valu guarante found consid nan valu equival equal array search fromindex index first element inclus search toindex index last element exclus search key valu search index search key contain array specifi rang insert point insert point defin point key insert array index first element rang greater key toindex element rang specifi key note guarante return valu gt key found
Arrays::binarySearch search specifi array float specifi valu use binari search algorithm array sort prior make call sort result undefin array contain multipl element specifi valu guarante found consid nan valu equival equal array search key valu search index search key contain array insert point insert point defin point key insert array index first element greater key length element array specifi key note guarante return valu gt key found
Arrays::binarySearch search rang specifi array float specifi valu use binari search algorithm rang sort prior make call sort result undefin rang contain multipl element specifi valu guarante found consid nan valu equival equal array search fromindex index first element inclus search toindex index last element exclus search key valu search index search key contain array specifi rang insert point insert point defin point key insert array index first element rang greater key toindex element rang specifi key note guarante return valu gt key found
Arrays::binarySearch search specifi array specifi object use binari search algorithm array sort ascend order accord element prior make call sort result undefin array contain element mutual compar exampl string integ sort accord natur order element henc result undefin array contain multipl element equal specifi object guarante found array search key valu search index search key contain array insert point insert point defin point key insert array index first element greater key length element array specifi key note guarante return valu gt key found
Arrays::binarySearch search rang specifi array specifi object use binari search algorithm rang sort ascend order accord element prior make call sort result undefin rang contain element mutual compar exampl string integ sort accord natur order element henc result undefin rang contain multipl element equal specifi object guarante found array search fromindex index first element inclus search toindex index last element exclus search key valu search index search key contain array specifi rang insert point insert point defin point key insert array index first element rang greater key toindex element rang specifi key note guarante return valu gt key found
Arrays::binarySearch search specifi array specifi object use binari search algorithm array sort ascend order accord specifi compar prior make call sort result undefin array contain multipl element equal specifi object guarante found object array array search key valu search compar array order null valu indic element index search key contain array insert point insert point defin point key insert array index first element greater key length element array specifi key note guarante return valu gt key found
Arrays::binarySearch search rang specifi array specifi object use binari search algorithm rang sort ascend order accord specifi compar prior make call sort result undefin rang contain multipl element equal specifi object guarante found object array array search fromindex index first element inclus search toindex index last element exclus search key valu search compar array order null valu indic element index search key contain array specifi rang insert point insert point defin point key insert array index first element rang greater key toindex element rang specifi key note guarante return valu gt key found
Arrays::equals return specifi array equal array consid equal array contain number element correspond pair element array equal word array equal contain element order array refer consid equal null array test equal a2 array test equal array equal
Arrays::equals return specifi array int equal array consid equal array contain number element correspond pair element array equal word array equal contain element order array refer consid equal null array test equal a2 array test equal array equal
Arrays::equals return specifi array equal array consid equal array contain number element correspond pair element array equal word array equal contain element order array refer consid equal null array test equal a2 array test equal array equal
Arrays::equals return specifi array char equal array consid equal array contain number element correspond pair element array equal word array equal contain element order array refer consid equal null array test equal a2 array test equal array equal
Arrays::equals return specifi array byte equal array consid equal array contain number element correspond pair element array equal word array equal contain element order array refer consid equal null array test equal a2 array test equal array equal
Arrays::equals return specifi array boolean equal array consid equal array contain number element correspond pair element array equal word array equal contain element order array refer consid equal null array test equal a2 array test equal array equal
Arrays::equals return specifi array doubl equal array consid equal array contain number element correspond pair element array equal word array equal contain element order array refer consid equal null doubl d1 d2 consid equal oper consid nan equal 0d unequ 0d array test equal a2 array test equal array equal
Arrays::equals return specifi array float equal array consid equal array contain number element correspond pair element array equal word array equal contain element order array refer consid equal null float f1 f2 consid equal oper consid nan equal 0f unequ 0f array test equal a2 array test equal array equal
Arrays::equals return specifi array Objects::Objects equal array consid equal array contain number element correspond pair element array equal object e1 e2 consid equal e1 null e2 null e1 equal e2 word array equal contain element order array refer consid equal null array test equal a2 array test equal array equal
Arrays::fill assign specifi valu element specifi array array fill val valu store element array
Arrays::fill assign specifi valu element specifi rang specifi array rang fill extend index fromindex inclus index toindex exclus fromindex toindex rang fill empti array fill fromindex index first element inclus fill specifi valu toindex index last element exclus fill specifi valu val valu store element array
Arrays::fill assign specifi int valu element specifi array int array fill val valu store element array
Arrays::fill assign specifi int valu element specifi rang specifi array int rang fill extend index fromindex inclus index toindex exclus fromindex toindex rang fill empti array fill fromindex index first element inclus fill specifi valu toindex index last element exclus fill specifi valu val valu store element array
Arrays::fill assign specifi valu element specifi array array fill val valu store element array
Arrays::fill assign specifi valu element specifi rang specifi array rang fill extend index fromindex inclus index toindex exclus fromindex toindex rang fill empti array fill fromindex index first element inclus fill specifi valu toindex index last element exclus fill specifi valu val valu store element array
Arrays::fill assign specifi char valu element specifi array char array fill val valu store element array
Arrays::fill assign specifi char valu element specifi rang specifi array char rang fill extend index fromindex inclus index toindex exclus fromindex toindex rang fill empti array fill fromindex index first element inclus fill specifi valu toindex index last element exclus fill specifi valu val valu store element array
Arrays::fill assign specifi byte valu element specifi array byte array fill val valu store element array
Arrays::fill assign specifi byte valu element specifi rang specifi array byte rang fill extend index fromindex inclus index toindex exclus fromindex toindex rang fill empti array fill fromindex index first element inclus fill specifi valu toindex index last element exclus fill specifi valu val valu store element array
Arrays::fill assign specifi boolean valu element specifi array boolean array fill val valu store element array
Arrays::fill assign specifi boolean valu element specifi rang specifi array boolean rang fill extend index fromindex inclus index toindex exclus fromindex toindex rang fill empti array fill fromindex index first element inclus fill specifi valu toindex index last element exclus fill specifi valu val valu store element array
Arrays::fill assign specifi doubl valu element specifi array doubl array fill val valu store element array
Arrays::fill assign specifi doubl valu element specifi rang specifi array doubl rang fill extend index fromindex inclus index toindex exclus fromindex toindex rang fill empti array fill fromindex index first element inclus fill specifi valu toindex index last element exclus fill specifi valu val valu store element array
Arrays::fill assign specifi float valu element specifi array float array fill val valu store element array
Arrays::fill assign specifi float valu element specifi rang specifi array float rang fill extend index fromindex inclus index toindex exclus fromindex toindex rang fill empti array fill fromindex index first element inclus fill specifi valu toindex index last element exclus fill specifi valu val valu store element array
Arrays::fill assign specifi Object::Object refer element specifi array Objects::Objects array fill val valu store element array
Arrays::fill assign specifi Object::Object refer element specifi rang specifi array Objects::Objects rang fill extend index fromindex inclus index toindex exclus fromindex toindex rang fill empti array fill fromindex index first element inclus fill specifi valu toindex index last element exclus fill specifi valu val valu store element array
Arrays::asList return fix size list specifi array chang return list write array act bridg array base collect base combin return list serializ implement provid conveni creat fix size list initi contain element object array array list list view specifi array
Arrays::toString return string represent content specifi array string represent consist list array element enclos squar bracket adjac element separ charact comma follow space element convert string string valueof return null null array string represent return string represent
Arrays::toString return string represent content specifi array string represent consist list array element enclos squar bracket adjac element separ charact comma follow space element convert string string valueof int return null null array string represent return string represent
Arrays::toString return string represent content specifi array string represent consist list array element enclos squar bracket adjac element separ charact comma follow space element convert string string valueof return null null array string represent return string represent
Arrays::toString return string represent content specifi array string represent consist list array element enclos squar bracket adjac element separ charact comma follow space element convert string string valueof char return null null array string represent return string represent
Arrays::toString return string represent content specifi array string represent consist list array element enclos squar bracket adjac element separ charact comma follow space element convert string string valueof byte return null null array string represent return string represent
Arrays::toString return string represent content specifi array string represent consist list array element enclos squar bracket adjac element separ charact comma follow space element convert string string valueof boolean return null null array string represent return string represent
Arrays::toString return string represent content specifi array string represent consist list array element enclos squar bracket adjac element separ charact comma follow space element convert string string valueof float return null null array string represent return string represent
Arrays::toString return string represent content specifi array string represent consist list array element enclos squar bracket adjac element separ charact comma follow space element convert string string valueof doubl return null null array string represent return string represent
Arrays::toString return string represent content specifi array array contain array element convert string inherit object describ ident content valu return equal valu return array aslist tostr null case null return array string represent return string represent
Arrays::deepToString return string represent deep content specifi array array contain array element string represent contain content design convert multidimension array string string represent consist list array element enclos squar bracket adjac element separ charact comma follow space element convert string string valueof object array element array primit type convert string invok appropri overload array tostr element array refer type convert string invok recurs avoid infinit recurs specifi array contain element contain indirect refer level array self refer convert string exampl array contain refer render return null specifi array null array string represent return string represent
Arrays::setAll Set::Set element specifi array use generat function comput element generat function throw relay caller array indetermin state type element array array array initi generat function accept index produc desir valu posit
Arrays::parallelSetAll Set::Set element specifi array parallel use generat function comput element generat function throw uncheck thrown Arrays::parallelSetAll array indetermin state type element array array array initi generat function accept index produc desir valu posit
Arrays::setAll Set::Set element specifi array use generat function comput element generat function throw relay caller array indetermin state array array initi generat function accept index produc desir valu posit
Arrays::parallelSetAll Set::Set element specifi array parallel use generat function comput element generat function throw uncheck thrown Arrays::parallelSetAll array indetermin state array array initi generat function accept index produc desir valu posit
Arrays::setAll Set::Set element specifi array use generat function comput element generat function throw relay caller array indetermin state array array initi generat function accept index produc desir valu posit
Arrays::parallelSetAll Set::Set element specifi array parallel use generat function comput element generat function throw uncheck thrown Arrays::parallelSetAll array indetermin state array array initi generat function accept index produc desir valu posit
Arrays::setAll Set::Set element specifi array use generat function comput element generat function throw relay caller array indetermin state array array initi generat function accept index produc desir valu posit
Arrays::parallelSetAll Set::Set element specifi array parallel use generat function comput element generat function throw uncheck thrown Arrays::parallelSetAll array indetermin state array array initi generat function accept index produc desir valu posit
ScheduledExecutorService::ScheduledExecutorService schedul command run given delay execut period schedul creat task various delay return task object cancel check execut scheduleatfixedr schedulewithfixeddelay creat execut task run period cancel command submit use submit schedul request delay zero zero negat delay period allow schedul treat request immedi execut schedul accept relat delay period argument absolut time date matter transform absolut time repres requir form exampl schedul futur date use schedul task date gettim system currenttimemilli timeunit millisecond bewar expir relat delay coincid current Date::Date task enabl due network time synchron protocol clock drift factor provid conveni factori ScheduledExecutorService::ScheduledExecutorService implement packag usag exampl set ScheduledExecutorService::ScheduledExecutorService beep ten hour
BrokenBarrierException::BrokenBarrierException Exception::Exception thrown thread tri wait barrier broken state enter broken state thread wait
ForkJoinTask::ForkJoinTask abstract base task run ForkJoinTask::ForkJoinTask thread entiti lighter weight normal thread huge number task subtask host number actual thread ForkJoinPool::ForkJoinPool price usag limit ForkJoinTask::ForkJoinTask begin execut explicit submit engag forkjoin comput commenc relat start turn start subtask indic name program use ForkJoinTask::ForkJoinTask employ deriv provid number come play advanc usag extens mechan allow support form fork join process ForkJoinTask::ForkJoinTask lightweight form effici ForkJoinTask::ForkJoinTask stem set restrict partial static enforc reflect use comput task calcul pure function oper pure isol object primari coordin mechan arrang asynchron execut doesn proceed task result comput comput ideal avoid synchron block minim block synchron apart join task use synchron phaser advertis cooper fork join schedul subdivid task perform block ideal access variabl complet independ access run task guidelin loos enforc permit check ioexcept thrown comput encount uncheck rethrown caller attempt join addit includ stem intern resourc exhaust failur alloc intern task queue rethrown behav regular contain stack trace display exampl use ex printstacktrac thread initi comput thread actual encount minim latter defin use forkjointask block requir further consider complet task depend task block extern synchron event style async task join exampl subclass fall categori minim resourc impact task ideal perform possibl block action number possibl block task known pool level pool guarante thread avail ensur progress perform primari await complet extract result task variant support interrupt time wait complet report result use Future::Future convent Method::Method semant equival fork join attempt begin execut current thread quiet form extract result report use set task execut delay process result complet Method::Method invokeal avail multipl version perform common form parallel invoc fork set task join typic usag fork join pair act call fork return join parallel recurs function case form recurs call return join perform innermost first exampl fork fork join join substanti effici join execut status task queri level detail task complet includ case where task cancel execut task complet cancel encount task cancel case return task cancel encount case return encount ForkJoinTask::ForkJoinTask subclass instead subclass abstract support particular style fork join process typic comput return result complet action trigger action normal concret ForkJoinTask::ForkJoinTask subclass declar field compris paramet establish constructor defin comput somehow use control suppli base variant appropri use complet depend acycl parallel comput describ direct acycl graph dag execut encount form deadlock task cyclic wait framework support techniqu exampl use use construct custom subclass static structur dag support usag ForkJoinTask::ForkJoinTask atom tag valu use check use ForkJoinTask::ForkJoinTask implement use protect tag purpos use construct subclass exampl parallel graph travers use suppli avoid revisit node task process Method::Method name tag bulki part encourag definit reflect usag pattern base support final prevent overrid implement intrins tie lightweight task schedul framework develop creat basic style fork join process minim implement protect introduc abstract comput implement subclass possibl reli protect forkjointask perform relat amount comput task split smaller subtask recurs decomposit rough rule thumb task perform 100 10000 basic comput step avoid indefinit loop task big parallel improv throughput memori intern task mainten overhead overwhelm process provid adapt use mix execut forkjointask kind task task form consid use pool construct asyncmod forkjointask Serializable::Serializable enabl extens remot execut framework sensibl serial task execut serial reli execut
ConcurrentHashMap::ConcurrentHashMap hash tabl support full concurr retriev expect concurr updat obey function specif includ version correspond Hashtable::Hashtable oper thread safe retriev oper entail lock support lock entir tabl prevent access fulli interoper Hashtable::Hashtable program reli thread safeti synchron detail retriev oper includ get general block overlap updat oper includ put remov retriev reflect result recent complet updat oper hold onset formal updat oper given key bear happen relat non null retriev key report updat valu aggreg oper putal clear concurr retriev reflect insert remov entri similar iter Spliterators::Spliterators enumer return element reflect state hash tabl point creation iter enumer throw iter design thread time bear mind result aggreg status includ size isempti containsvalu typic use map undergo concurr updat thread result reflect transient state adequ monitor estim purpos program control tabl dynam expand collis key distinct hash fall slot modulo tabl size expect averag effect maintain rough bin map correspond 75 load factor threshold resiz varianc averag map ad remov overal maintain common accept time space tradeoff hash tabl resiz kind hash tabl relat slow oper provid size estim option initialcapac constructor argument addit option loadfactor constructor argument provid further mean custom initi tabl capac specifi tabl densiti calcul amount space alloc given number element compat previous version constructor option specifi expect concurrencylevel addit hint intern size note use key exact hashcod slow perform hash tabl amelior impact key use comparison order key break tie ConcurrentHashMap::ConcurrentHashMap creat use view use key interest map valu transient take map valu ConcurrentHashMap::ConcurrentHashMap scalabl frequenc map form histogram multiset use valu initi exampl add count concurrenthashmap freq use freq computeifabs longadd increment view iter implement option interfac allow null key valu concurrenthashmap support set sequenti parallel bulk oper design safe sensibl appli map concurr updat thread exampl comput snapshot summari valu share registri kind oper form accept function key valu entri Key::Key valu argument return valu element ConcurrentHashMap::ConcurrentHashMap order particular process order parallel execut correct suppli function depend order object valu transient chang comput progress foreach action ideal side effect free bulk oper object support setvalu foreach perform given action element variant form appli given transform element perform action search return first avail non null result appli given function element skip further search result found reduc accumul element suppli reduct function reli order formal associ commut variant plain reduct form key valu function argument correspond return type map reduct accumul result given function appli element reduct scalar doubl int use given basi valu bulk oper accept parallelismthreshold argument proceed sequenti current map size estim given threshold use valu max valu suppress parallel use valu result maxim parallel partit subtask fulli util parallel comput normal initi choos extrem valu measur perform use valu trade overhead throughput concurr properti bulk oper follow concurrenthashmap non null result return get key relat access bear happen relat associ insert updat result bulk oper reflect composit element relat necessarili atom respect map somehow known quiescent convers key valu map null null serv reliabl atom indic current lack result maintain properti null serv implicit basi non scalar reduct oper doubl int version basi combin valu return valu formal ident element reduct common reduct properti exampl comput sum basi minimum basi max valu search transform function argument similar return null indic lack result case case map reduct enabl transform serv filter return null case primit ident basi element combin creat compound transform filter compos null mean rule use search reduc oper accept return TreeMap::Entry argument maintain key valu associ use exampl find key greatest valu note plain TreeMap::Entry argument suppli use abstractmap simpleentri bulk oper complet abrupt throw encount suppli function bear mind handl concurr execut function thrown first occur speedup parallel compar sequenti form common guarante parallel oper involv brief function map execut slowli sequenti form work parallel comput expens comput similar parallel lead actual parallel processor busi perform unrel task argument task non null member type key maintain map type map valu
ConcurrentHashMap::comparableClassFor return Class::Class form implement compar els null
ConcurrentHashMap::writeObject save state ConcurrentHashMap::ConcurrentHashMap instanc stream serial stream key Object::Object valu Object::Object key valu map follow null pair key valu map emit particular order
ConcurrentHashMap::compute attempt comput map specifi key current map valu null current map entir invoc perform atom attempt updat oper map thread block comput progress comput attempt updat map Map::Map key key specifi valu associ remappingfunct function comput valu valu associ specifi key null
ConcurrentHashMap::merge specifi key associ non null valu associ given valu replac valu result given remap function remov null entir invoc perform atom attempt updat oper map thread block comput progress comput attempt updat map Map::Map key key specifi valu associ valu valu use absent remappingfunct function recomput valu valu associ specifi key null
Phaser::Phaser reusabl synchron barrier similar function support flexibl usag registr case barrier number parti regist synchron phaser vari time task regist time use form constructor establish initi number parti option deregist arriv use case basic synchron construct registr deregistr affect intern count establish further intern bookkeep task queri regist introduc bookkeep subclass synchron CyclicBarrier::CyclicBarrier Phaser::Phaser repeat await Method::Method effect analog generat phaser associ phase number phase number start zero advanc parti arriv phaser wrap zero reach integ max valu use phase number enabl independ control action arriv phaser await kind invok regist parti arriv record arriv block return associ arriv phase number phase number phaser arriv appli final parti given phase arriv option action perform phase advanc action perform parti trigger phase advanc arrang overrid control termin overrid similar flexibl barrier action CyclicBarrier::CyclicBarrier wait Method::Method requir argument indic arriv phase number return phaser advanc phase similar construct use CyclicBarrier::CyclicBarrier Phaser::awaitAdvance continu wait wait thread interrupt interrupt timeout version avail encount task wait interrupt timeout chang state phaser necessari perform associ recoveri handler invok Phaser::forceTermination phaser task execut ensur suffici parallel execut task block wait phase advanc termin phaser enter termin state check use termin synchron return wait advanc indic negat return valu similar attempt regist termin effect termin trigger invoc Phaser::onAdvance return default implement return deregistr caus number regist parti becom zero illustr phaser control action fix number iter conveni overrid caus termin current phase number reach threshold Method::Method avail abrupt releas wait thread allow termin tier phaser tier construct tree structur reduc content phaser number parti experi heavi synchron content cost instead set group sub phaser share common parent great increas throughput incur greater oper overhead tree tier phaser registr deregistr child phaser parent manag automat number regist parti child phaser becom non zero establish constructor child phaser regist parent number regist parti becom zero result invoc child phaser deregist parent monitor synchron invok regist parti current state phaser monitor caller given moment parti total arriv current phase remain parti arriv phase advanc valu return reflect transient state general use synchron control Method::Method return snapshot state queri form conveni inform monitor sampl usag Phaser::Phaser instead CountDownLatch::CountDownLatch control shot action serv variabl number parti typic idiom set first regist start action deregist caus set thread repeat perform action given number iter overrid Phaser::onAdvance task await termin regist execut similar loop relat construct await particular phase number context where phase wrap integ max valu exampl creat set task use tree phaser use form assum task constructor accept Phaser::Phaser regist construct invoc build task Phaser::Phaser task start exampl submit pool valu task phaser depend expect synchron rate valu low appropri extrem phase task bodi thus rate hundr extrem implement note implement restrict maximum number parti 65535 attempt regist addit parti result IllegalStateException::IllegalStateException creat tier phaser accommod arbitrarili set particip
Phaser::onAdvance overrid perform action impend phase advanc control termin invok arriv parti advanc phaser wait parti dormant return phaser set final termin state advanc subsequ call return uncheck Exception::Exception Error::Error thrown invoc propag parti attempt advanc phaser case advanc occur argument provid state phaser prevail current transit effect invok arriv registr wait phaser Phaser::onAdvance unspecifi reli phaser member tier set phaser Phaser::onAdvance invok root phaser advanc support common use case default implement return number regist parti becom zero result parti invok Phaser::arriveAndDeregister disabl behavior thus enabl continu futur registr overrid return fals phase current phase number entri phaser advanc registeredparti current number regist parti phaser termin
Phaser::toString return string identifi phaser state state bracket includ String::String phase follow phase number parti follow number regist parti arriv follow number arriv parti string identifi phaser state
RejectedExecutionException::RejectedExecutionException Exception::Exception thrown task accept execut
BlockingDeque::BlockingDeque addit support block oper wait dequ becom non empti retriev element wait space becom avail dequ store element BlockingDeque::BlockingDeque come form handl oper satisfi satisfi point futur throw return valu null fals depend oper third block current thread indefinit oper succeed fourth block given maximum time limit give summar tabl BlockingDeque::BlockingDeque thread safe permit null element capac constrain BlockingDeque::BlockingDeque implement fifo BlockingQueue::BlockingQueue inherit BlockingQueue::BlockingQueue interfac precis equival BlockingDeque::BlockingDeque indic tabl memori consist effect concurr collect action thread prior place object BlockingDeque::BlockingDeque action subsequ access remov element BlockingDeque::BlockingDeque thread interfac member type element held collect
ConcurrentMap::putIfAbsent specifi key associ valu associ given valu equival action perform atom implement intent abstract inappropri default Map::Map key key specifi valu associ valu valu associ specifi key previous valu associ specifi key null map key null return indic map previous associ null key implement support null valu
ConcurrentMap::remove remov entri key current map given valu equival action perform atom implement intent abstract inappropri default Map::Map key key specifi valu associ valu valu expect associ specifi key valu remov
ConcurrentMap::replace replac entri key current map given valu equival action perform atom implement intent abstract inappropri default Map::Map key key specifi valu associ oldvalu valu expect associ specifi key newvalu valu associ specifi key valu replac
ConcurrentMap::replace replac entri key current map valu equival action perform atom implement intent abstract inappropri default Map::Map key key specifi valu associ valu valu associ specifi key previous valu associ specifi key null map key null return indic map previous associ null key implement support null valu
ConcurrentLinkedQueue::toArray return array contain element queue proper sequenc runtim type return array specifi array queue fit specifi array return therein array alloc runtim type specifi array size queue queue fit specifi array room spare array element queue element array end queue set null act bridg array base collect base further allow precis control runtim type output array circumst save alloc cost suppos queue known contain string dump queue newli alloc array String::String note toarray object ident function toarray array element queue store big array runtim type alloc purpos array contain element queue
CountedCompleter::CountedCompleter complet action perform trigger remain action countedcomplet general robust presenc subtask stall blockag form forkjointask intuit program use CountedCompleter::CountedCompleter similar complet base compon multipl complet necessari trigger complet action initi start zero atom chang use invoc action count nonzero decrement complet action perform complet complet process continu complet case relat synchron compon affect intern count establish further intern bookkeep particular ident task maintain illustr creat subclass record task result illustr util support custom complet travers countedcomplet provid basic synchron mechan use creat further abstract subclass maintain linkag field addit support appropri set relat usag concret CountedCompleter::CountedCompleter defin case illustr invok CountedCompleter::tryComplete return option overrid perform action normal complet perform action countedcomplet bear result case normal declar countedcomplet return null result valu case overrid provid result join invok relat general return valu field function field CountedCompleter::CountedCompleter object hold result complet Method::Method default play role countedcomplet rare applic overrid maintain object field hold result data CountedCompleter::CountedCompleter complet return null regular ForkJoinTask::ForkJoinTask ad function complet turn complet serv intern helper comput task status report arbitrari status chang explicit invoc complet comput complet relay task complet complet exist complet similar cancel intern CountedCompleter::CountedCompleter local effect complet use sampl usag parallel recurs decomposit countedcomplet arrang tree similar construct involv set typic vari complet task parent comput tree entail bit bookkeep countedcomplet choic appli possibl time consum oper further subdivid element array collect especi oper take signific amount time complet element intrins variat exampl auxiliari effect garbag collect countedcomplet provid continu thread block wait perform exampl initi version use divid recurs decomposit divid work singl piec leaf task work split individu call tree base techniqu prefer fork leaf task reduc inter thread communic improv load balanc recurs case pair subtask finish trigger complet parent result combin perform default op implement oncomplet overridden static util set base task invok implicit use design improv notic recurs case task fork task invok task return analog tail recurs remov task return execut task fall invok CountedCompleter::tryComplete count set further improv notic task exist instead creat iter use origin task add count fork addit task tree implement CountedCompleter::tryComplete replac addit improv entail precomput count establish constructor leaf step subdivid say instead iter use adapt threshold instead subdivid singl element search tree countedcomplet search valu properti part data structur report result found poll result avoid unnecessari work addit task simpler effici let notic result set skip further process illustr array use full partit practic leaf task process element exampl task effect compareandset common result trail uncondit invoc CountedCompleter::tryComplete made condit result get null CountedCompleter::tryComplete further bookkeep requir manag complet root task complet record subtask CountedCompleter::CountedCompleter task combin result multipl subtask access result illustr perform simplifi form map reduc where map reduct type divid conquer design subtask record sibl access oncomplet techniqu appli reduct order combin result matter order reduct requir explicit design variant streamlin seen exampl appli oncomplet take form common complet design combin result callback style trigger task context count becom zero task count zero invoc CountedCompleter::tryComplete subtask complet decrement count zero caller argument distinguish case caller action necessari caller argument cast suppli valu link valu combin assum proper use count action oncomplet occur complet task subtask addit synchron requir ensur thread safeti access field task complet task complet travers use oncomplet process complet inapplic inconveni use creat custom travers exampl defin mapreduc split hand task form third foreach exampl complet cooper reduc unexhaust subtask link follow trigger countedcomplet fork instead serv bit plumb design includ complet async task trigger async task exampl
ForkJoinWorkerThread::eraseThreadLocals eras threadloc null Thread::Thread map
ForkJoinWorkerThread::createThreadGroup return group system ThreadGroup::ThreadGroup topmost parentless group parent use unsaf travers Thread::Thread group ThreadGroup::ThreadGroup parent field
CancellationException::CancellationException Exception::Exception indic result valu produc task retriev task cancel
Semaphore::toString return string identifi semaphor state state bracket includ String::String permit follow number permit string identifi semaphor state
ConcurrentSkipListMap::writeObject save map stream serial stream key Object::Object valu Object::Object key valu map repres map follow null key valu map emit key order determin Comparator::Comparator key natur order Comparator::Comparator
CountDownLatch::toString return string identifi latch state state bracket includ String::String count follow current count string identifi latch state
LinkedBlockingDeque::toArray return array contain element dequ proper sequenc runtim type return array specifi array dequ fit specifi array return therein array alloc runtim type specifi array size dequ dequ fit specifi array room spare array element dequ element array end dequ set null act bridg array base collect base further allow precis control runtim type output array circumst save alloc cost suppos dequ known contain string dump dequ newli alloc array String::String note toarray object ident function toarray array element dequ store big array runtim type alloc purpos array contain element dequ
LinkedBlockingDeque::writeObject save dequ stream serial stream capac int follow element Object::Object proper order follow null
ArrayBlockingQueue::toArray return array contain element queue proper sequenc runtim type return array specifi array queue fit specifi array return therein array alloc runtim type specifi array size queue queue fit specifi array room spare array element queue element array end queue set null act bridg array base collect base further allow precis control runtim type output array circumst save alloc cost suppos queue known contain string dump queue newli alloc array String::String note toarray object ident function toarray array element queue store big array runtim type alloc purpos array contain element queue
RejectedExecutionHandler::rejectedExecution Method::Method invok accept task occur thread queue slot avail bound exceed shutdown Executor::Executor absenc altern throw uncheck propag caller execut runnabl task request execut executor executor attempt execut task
CopyOnWriteArrayList::toArray return array contain element list proper sequenc first last element runtim type return array specifi array list fit specifi array return therein array alloc runtim type specifi array size list list fit specifi array room spare array element list element array end list set null use determin length list caller know list contain null element act bridg array base collect base further allow precis control runtim type output array circumst save alloc cost suppos list known contain string dump list newli alloc array String::String note toarray object ident function toarray array element list store big array runtim type alloc purpos array contain element list
CopyOnWriteArrayList::writeObject save list stream serial stream length array list emit int follow element Object::Object proper order
BlockingQueue::BlockingQueue addit support oper wait queue becom non empti retriev element wait space becom avail queue store element BlockingQueue::BlockingQueue come form handl oper satisfi satisfi point futur throw return valu null fals depend oper third block current thread indefinit oper succeed fourth block given maximum time limit give summar tabl BlockingQueue::BlockingQueue accept null element implement throw NullPointerException::NullPointerException attempt add put offer null null sentinel valu indic failur poll oper BlockingQueue::BlockingQueue capac bound given time remainingcapac addit element put block BlockingQueue::BlockingQueue intrins capac constraint report remain capac integ max valu BlockingQueue::BlockingQueue implement design primarili produc consum queue addit support interfac exampl remov arbitrari element queue use remov oper general perform effici intend occasion use queu messag cancel BlockingQueue::BlockingQueue implement thread safe queu achiev effect atom use intern lock form concurr control bulk Collection::Collection oper addal containsal retainal removeal necessarili perform atom specifi implement exampl addal fail throw ad element BlockingQueue::BlockingQueue intrins support kind quot close quot quot shutdown quot oper indic item ad usag featur tend implement depend exampl common tactic produc insert end stream poison object interpret accord taken consum usag exampl base typic produc consum scenario note BlockingQueue::BlockingQueue safe multipl produc multipl consum memori consist effect concurr collect action thread prior place object BlockingQueue::BlockingQueue action subsequ access remov element BlockingQueue::BlockingQueue thread interfac member type element held collect
DelayQueue::DelayQueue unbound Delayed::Delayed element element taken delay expir head queue Delayed::Delayed element delay expir furthest delay expir head poll return null expir occur element getdelay timeunit nanosecond return valu equal zero unexpir element remov use take poll treat normal element exampl size return count expir unexpir element queue permit null element iter implement option interfac Iterator::Iterator guarante travers element DelayQueue::DelayQueue particular order member type element held collect
CompletionStage::CompletionStage stage possibl asynchron comput perform action comput valu CompletionStage::CompletionStage complet stage complet termin comput turn trigger depend stage function defin interfac take basic form expand larger set captur rang usag style comput perform stage express Function::Function Consumer::Consumer Runnable::Runnable use name includ appli accept run respect depend requir argument produc result exampl stage thenappli squar thenaccept system print thenrun system println addit form compos appli function stage result stage execut trigger complet singl stage stage stage depend singl stage arrang use prefix trigger complet stage combin result effect use correspond name trigger stage make guarante result effect depend stage comput depend stage control trigger comput guarante particular order addit execut stage comput arrang default execut default asynchron execut use suffix async employ stage default asynchron execut facil custom suppli execut properti default async mode specifi CompletionStage::CompletionStage implement interfac explicit Executor::Executor argument arbitrari execut properti support concurr execut arrang process accommod asynchroni form support process trigger stage complet normal Method::Method allow inject action regardless outcom preserv outcom complet Method::Method addit allow stage comput replac result enabl further process depend stage case stage comput termin abrupt uncheck error depend stage requir complet complet hold caus stage depend stage complet CompletionException::CompletionException correspond stage depend complet guarante made depend stage complet normal case CompletionStage::whenComplete suppli action encount stage complet complet adher trigger execut complet specif repeat individu specif addit argument pass complet result paramet type accept null pass null valu paramet result thrown interfac defin initi creat forcibl complet normal probe complet status result await complet stage implement CompletionStage::CompletionStage provid mean achiev effect appropri Method::Method enabl interoper implement interfac common convers type
ExecutorService::ExecutorService provid manag termin produc track progress asynchron task ExecutorService::ExecutorService shut caus reject task shut ExecutorService::ExecutorService allow previous submit task execut termin prevent wait task start attempt stop current execut task termin executor task activ execut task await execut task submit unus ExecutorService::ExecutorService shut allow reclam resourc submit extend base creat return cancel execut wait complet ExecutorService::invokeAny invokeal perform common use form bulk execut execut collect task wait complet Class::Class write custom variant provid factori executor servic packag usag exampl sketch network servic thread thread pool servic incom request use preconfigur factori shut ExecutorService::ExecutorService phase first call shutdown reject incom task call shutdownnow necessari cancel linger task memori consist effect action thread prior submiss Runnable::Runnable Callable::Callable task ExecutorService::ExecutorService action taken task turn happen result retriev futur get
TimeoutException::TimeoutException Exception::Exception thrown block oper time block oper timeout specifi mean indic timeout occur oper return valu indic timeout desir TimeoutException::TimeoutException declar thrown
CompletionException::CompletionException Exception::Exception thrown error encount cours complet result task
AbstractQueuedLongSynchronizer::toString return string identifi synchron state state bracket includ String::String State::State follow current valu nonempti empti depend queue empti string identifi synchron state
Condition::Condition Condition::Condition factor Object::Object monitor distinct object give effect multipl wait set object combin use arbitrari implement where Lock::Lock replac use synchron statement Condition::Condition replac use Object::Object monitor condit known condit queue condit variabl provid mean thread suspend execut quot wait quot notifi thread state condit access share state occur thread protect lock form associ condit key properti wait condit provid atom releas associ lock suspend current thread object wait Condition::Condition instanc intrins bound lock obtain Condition::Condition instanc particular instanc use exampl suppos bound buffer support put take take attempt empti buffer thread block item becom avail put attempt full buffer thread block space becom avail keep wait put thread take thread separ wait set use optim notifi singl thread time item space becom avail buffer achiev use instanc provid function reason implement sampl usag Condition::Condition implement provid behavior semant Object::Object monitor guarante order notif requir lock held perform notif implement provid semant implement document semant note Condition::Condition instanc normal object target synchron statement monitor invok acquir monitor lock Condition::Condition instanc use monitor specifi relationship acquir associ Condition::Condition use recommend avoid confus use Condition::Condition instanc implement where note pass null valu paramet result thrown implement consider wait Condition::Condition quot spurious wakeup quot permit occur general concess platform semant practic impact program Condition::Condition wait loop test state predic wait implement free remov possibl spurious wakeup recommend applic programm assum occur wait loop form condit wait interrupt non interrupt time differ eas implement platform perform characterist particular difficult provid featur maintain specif semant order guarante further abil interrupt actual suspens thread feasibl implement platform consequ implement requir defin exact guarante semant form wait requir support interrupt actual suspens thread implement requir clear document semant guarante wait implement support interrupt thread suspens obey interrupt semant defin interfac interrupt general impli cancel check interrupt infrequ implement favor respond interrupt normal return shown interrupt occur action unblock thread implement document behavior
ReentrantReadWriteLock::ReentrantReadWriteLock implement support similar semant properti acquisit order impos reader writer prefer order lock access support option fair polici non fair mode default construct non fair default order entri read write lock unspecifi subject reentranc constraint nonfair lock continu contend indefinit postpon reader writer thread normal higher throughput fair lock fair mode construct fair thread contend entri use approxim arriv order polici current held lock releas longest wait singl writer thread assign write lock group reader thread wait longer wait writer thread group assign read lock thread tri acquir fair read lock non reentrant block write lock held wait writer thread thread acquir read lock oldest current wait writer thread acquir releas write lock cours wait writer abandon wait leav reader thread longest waiter queue write lock free reader assign read lock thread tri acquir fair write lock non reentrant block read lock write lock free impli wait thread note non block honor fair set acquir lock regardless wait thread reentranc lock allow reader writer reacquir read write lock style non reentrant reader allow write lock held write thread releas addit writer acquir read lock versa applic reentranc use write lock held call callback perform read read lock reader tri acquir write lock succeed lock downgrad reentranc allow downgrad write lock read lock acquir write lock read lock releas write lock upgrad read lock write lock interrupt lock acquisit read lock write lock support interrupt lock acquisit support write lock provid implement behav respect write lock implement cours write lock read lock support readlock newcondit throw UnsupportedOperationException::UnsupportedOperationException instrument support determin lock held contend design monitor system state synchron control serial behav built lock deseri lock unlock state regardless state serial sampl usag sketch show perform lock downgrad updat cach handl particular tricki handl multipl lock non nest fashion reentrantreadwritelock improv concurr use kind Collections::Collections typic worthwhil collect expect access reader thread writer thread entail oper overhead outweigh synchron overhead exampl use TreeMap::TreeMap expect concurr access implement note lock support maximum 65535 recurs write lock 65535 read lock attempt exceed limit result throw lock
ReentrantReadWriteLock::ReadLock Constructor::Constructor use subclass lock outer lock object
ReentrantReadWriteLock::toString return string identifi lock lock state state bracket includ String::String read lock follow number held read lock string identifi lock lock state
ReentrantReadWriteLock::WriteLock Constructor::Constructor use subclass lock outer lock object
ReentrantReadWriteLock::toString return string identifi lock lock state state bracket includ String::String unlock String::String lock follow thread string identifi lock lock state
ReentrantReadWriteLock::toString return string identifi lock lock state state bracket includ String::String write lock follow number reentrant held write lock String::String read lock follow number held read lock string identifi lock lock state
ReentrantLock::toString return string identifi lock lock state state bracket includ String::String unlock String::String lock follow thread string identifi lock lock state
AbstractQueuedSynchronizer::AbstractQueuedSynchronizer provid framework implement block lock relat synchron semaphor event reli first first fifo wait queue design use basi kind synchron reli singl atom int valu repres state subclass defin protect chang state defin state mean term object acquir releas given carri queu block mechan subclass maintain state field atom updat int valu manipul use track respect synchron subclass defin non intern helper implement synchron properti enclos Class::Class AbstractQueuedSynchronizer::AbstractQueuedSynchronizer implement synchron interfac instead defin invok appropri concret lock relat synchron implement support default exclus mode share mode acquir exclus mode attempt acquir thread succeed share mode acquir multipl thread succeed quot understand quot differ mechan sens share mode acquir succeed wait thread exist determin acquir thread wait mode share fifo queue implement subclass support mode come play exampl subclass support exclus share mode defin support unus mode defin nest implement subclass support exclus mode report synchron exclus held respect current thread invok current valu fulli releas object given save state valu eventu restor object previous acquir state AbstractQueuedSynchronizer::AbstractQueuedSynchronizer creat condit constraint met use behavior depend cours semant synchron implement provid inspect instrument monitor intern queue similar condit object export desir use AbstractQueuedSynchronizer::AbstractQueuedSynchronizer synchron mechan serial store atom integ maintain state deseri object empti thread queue typic subclass requir serializ defin readobject restor known initi state deseri usag use basi synchron redefin applic inspect modifi synchron state use default throw implement intern thread safe general block defin support mean use declar final independ vari find inherit use keep track thread exclus synchron encourag use enabl monitor diagnost tool assist user determin thread hold lock base intern fifo queue automat enforc fifo acquisit polici core exclus synchron take form share mode similar involv cascad signal check acquir invok enqueu newli acquir thread barg ahead block queu desir defin tryacquir tryacquireshar disabl barg intern invok inspect therebi fair fifo acquisit order particular fair synchron defin tryacquir return fals specif design fair synchron return variat throughput scalabl general highest default barg known greedi renounc convoy avoid strategi guarante fair starvat free earlier queu thread allow recontend queu thread recontent unbias chanc succeed incom thread acquir quot spin quot usual sens perform multipl invoc tryacquir interspers comput block give benefit spin exclus synchron briefli held liabil isn desir augment preced call acquir fast path check possibl precheck synchron contend provid effici scalabl basi synchron part rang use synchron reli int state acquir releas paramet intern fifo wait queue suffic build synchron lower level use custom block support usag exampl non reentrant mutual exclus lock use valu zero repres unlock state repres lock state non reentrant lock strict requir record current owner thread anyway make usag easier monitor support condit expos instrument latch requir singl signal fire latch non exclus use share acquir releas
AbstractQueuedSynchronizer::toString return string identifi synchron state state bracket includ String::String State::State follow current valu nonempti empti depend queue empti string identifi synchron state
StampedLock::StampedLock capabl base lock mode control read write access state StampedLock::StampedLock consist version mode Lock::Lock acquisit return stamp repres control access respect lock state version instead return valu zero repres failur acquir access Lock::Lock releas convers requir stamp argument fail match state lock mode write Method::Method possibl block wait exclus access return stamp releas lock untim time version trywritelock lock held write mode read lock obtain optimist read valid fail read Method::Method possibl block wait non exclus access return stamp releas lock untim time version tryreadlock optimist read Method::Method return non zero stamp lock current held write mode Method::Method return lock acquir write mode obtain given stamp mode thought extrem weak version read lock broken writer time use optimist mode read segment reduc content improv throughput use inher fragil optimist read section read field hold local variabl use valid field read optimist mode wild inconsist usag appli familiar data represent check consist repeat invok valid exampl step typic requir first read object array refer access field element support condit provid convers mode exampl attempt upgrad mode return valid write stamp write mode read mode reader optimist mode lock avail form design reduc bloat occur retri base design stampedlock design use intern util develop thread safe compon use reli knowledg intern properti data object protect reentrant lock bodi call unknown acquir lock pass stamp use convert use read lock mode reli associ section side effect free unvalid optimist read section call known toler potenti inconsist stamp use finit represent cryptograph secur valid stamp guessabl stamp valu recycl sooner year continu oper stamp held use valid longer period fail valid correct stampedlock serializ deseri initi unlock state use remot lock schedul polici StampedLock::StampedLock consist prefer reader writer versa effort necessarili conform schedul fair polici zero return acquir convert lock carri state lock subsequ invoc succeed support coordin usag multipl lock mode implement interfac StampedLock::StampedLock view applic requir associ set function sampl usag illustr usag idiom maintain dimension point sampl illustr catch convent strict occur bodi
StampedLock::toString return string identifi lock lock state state bracket includ String::String unlock String::String write lock String::String read lock follow current number read lock held string identifi lock lock state
LinkedBlockingQueue::toArray return array contain element queue proper sequenc runtim type return array specifi array queue fit specifi array return therein array alloc runtim type specifi array size queue queue fit specifi array room spare array element queue element array end queue set null act bridg array base collect base further allow precis control runtim type output array circumst save alloc cost suppos queue known contain string dump queue newli alloc array String::String note toarray object ident function toarray array element queue store big array runtim type alloc purpos array contain element queue
LinkedBlockingQueue::writeObject save queue stream serial stream capac emit int follow element Object::Object proper order follow null
ThreadLocalRandom::ThreadLocalRandom random number generat isol current thread global generat ThreadLocalRandom::ThreadLocalRandom initi intern generat seed modifi applic use ThreadLocalRandom::ThreadLocalRandom share Random::Random object concurr program typic encount overhead content use ThreadLocalRandom::ThreadLocalRandom particular appropri multipl task exampl use random number parallel thread pool usag typic form threadlocalrandom current nextx where int Long::Long usag form accid share ThreadLocalRandom::ThreadLocalRandom multipl thread provid addit common bound random generat instanc ThreadLocalRandom::ThreadLocalRandom cryptograph secur consid instead use secur sensit applic addit default construct instanc use cryptograph random seed util securerandomse set
ThreadLocalRandom::ThreadLocalRandom Constructor::Constructor static singleton
ThreadLocalRandom::localInit initi Thread::Thread field current thread call thread threadlocalrandomprob zero indic thread local seed valu generat note initi pure thread local reli static atom generat initi valu
CompletableFuture::CompletableFuture explicit complet set valu status support depend function action trigger complet thread attempt CompletableFuture::CompletableFuture succeed addit relat manipul status result CompletableFuture::CompletableFuture implement interfac polici action suppli depend complet non async perform thread complet current CompletableFuture::CompletableFuture caller complet async explicit Executor::Executor argument perform use support parallel level case Thread::Thread simplifi monitor debug track generat asynchron task instanc marker interfac CompletionStage::CompletionStage implement independ behavior impact overrid subclass completablefutur implement polici direct control comput caus complet cancel treat form complet Method::Method effect completeexcept CancellationException::CancellationException Method::Method determin CompletableFuture::CompletableFuture complet fashion case complet CompletionException::CompletionException throw caus held correspond CompletionException::CompletionException simplifi usag context defin instead throw CompletionException::CompletionException case
CompletableFuture::toString return string identifi CompletableFuture::CompletableFuture complet state state bracket contain String::String complet normal String::String complet String::String complet follow number completablefutur depend complet string identifi CompletableFuture::CompletableFuture state
ExecutionException::ExecutionException Exception::Exception thrown attempt retriev result task abort throw inspect use
ConcurrentLinkedDeque::toArray return array contain element dequ proper sequenc first last element runtim type return array specifi array dequ fit specifi array return therein array alloc runtim type specifi array size dequ dequ fit specifi array room spare array element dequ element array end dequ set null act bridg array base collect base further allow precis control runtim type output array circumst save alloc cost suppos dequ known contain string dump dequ newli alloc array String::String note toarray object ident function toarray array element dequ store big array runtim type alloc purpos array contain element dequ
DoubleAdder::DoubleAdder variabl maintain initi zero doubl sum updat contend thread set variabl grow dynam reduc content Method::Method equival return current total combin variabl maintain sum order accumul thread guarante thus applic numer stabil requir especi combin valu substanti order magnitud prefer altern multipl thread updat common valu purpos summari statist frequent updat frequent read extend defin equal hashcod compareto instanc expect mutat use collect key
DoubleAdder::toString return String::String represent String::String represent
LongAdder::LongAdder variabl maintain initi zero sum updat contend thread set variabl grow dynam reduc content Method::Method equival return current total combin variabl maintain sum prefer multipl thread updat common sum purpos collect statist fine grain synchron control low updat content similar characterist content expect throughput signific higher expens higher space consumpt longadd maintain scalabl frequenc map form histogram multiset exampl add count concurrenthashmap freq initi use freq computeifabs longadd increment extend defin equal hashcod compareto instanc expect mutat use collect key
LongAdder::toString return String::String represent String::String represent
AtomicBoolean::toString return String::String represent current valu String::String represent current valu
DoubleAccumulator::DoubleAccumulator variabl maintain run doubl valu updat use suppli function updat contend thread set variabl grow dynam reduc content Method::Method equival return current valu variabl maintain updat prefer altern multipl thread updat common valu purpos summari statist frequent updat frequent read suppli accumul function side effect free appli attempt updat fail due content thread function appli current valu first argument given updat argument exampl maintain run maximum valu suppli Double::max doubl negat infin ident order accumul thread guarante thus applic numer stabil requir especi combin valu substanti order magnitud provid analog function common case maintain sum call DoubleAdder::DoubleAdder equival doubleaccumul extend defin equal hashcod compareto instanc expect mutat use collect key
DoubleAccumulator::toString return String::String represent current valu String::String represent current valu
AtomicLong::AtomicLong valu updat atom see packag specif descript properti atom variabl AtomicLong::AtomicLong applic atom increment sequenc number replac extend Number::Number allow uniform access tool util deal numer base
AtomicLong::toString return String::String represent current valu String::String represent current valu
AtomicLongArray::toString return String::String represent current valu array String::String represent current valu array
AtomicLongFieldUpdater::newUpdater creat return updat object given field Class::Class argument check reflect type generic type match tclass object hold field fieldnam name field updat type instanc tclass updat
AtomicInteger::AtomicInteger int valu updat atom see packag specif descript properti atom variabl AtomicInteger::AtomicInteger applic atom increment counter replac extend Number::Number allow uniform access tool util deal numer base
AtomicInteger::toString return String::String represent current valu String::String represent current valu
AtomicIntegerArray::toString return String::String represent current valu array String::String represent current valu array
AtomicIntegerFieldUpdater::newUpdater creat return updat object given field Class::Class argument check reflect type generic type match tclass object hold field fieldnam name field updat type instanc tclass updat
AtomicReferenceArray::toString return String::String represent current valu array String::String represent current valu array
Striped64::Striped64 packag local hold common represent mechan support dynam stripe 64bit valu extend Number::Number concret subclass
AtomicReference::toString return String::String represent current valu String::String represent current valu
AtomicReferenceFieldUpdater::newUpdater creat return updat object given field Class::Class argument check reflect type generic type match tclass object hold field vclass field fieldnam name field updat type instanc tclass type instanc vclass updat
LongAccumulator::LongAccumulator variabl maintain run valu updat use suppli function updat contend thread set variabl grow dynam reduc content Method::Method equival return current valu variabl maintain updat prefer multipl thread updat common valu purpos collect statist fine grain synchron control low updat content similar characterist content expect throughput signific higher expens higher space consumpt order accumul thread guarante depend applic function order accumul matter suppli accumul function side effect free appli attempt updat fail due content thread function appli current valu first argument given updat argument exampl maintain run maximum valu suppli Long::max min valu ident provid analog function common case maintain count sum call LongAdder::LongAdder equival longaccumul 0l extend defin equal hashcod compareto instanc expect mutat use collect key
LongAccumulator::toString return String::String represent current valu String::String represent current valu
PriorityBlockingQueue::PriorityBlockingQueue unbound use order rule suppli block retriev oper queue logic unbound attempt addit fail due resourc exhaust caus OutOfMemoryError::OutOfMemoryError permit null element prioriti queue reli permit insert non compar object result ClassCastException::ClassCastException iter implement option interfac Iterator::Iterator guarante travers element PriorityBlockingQueue::PriorityBlockingQueue particular order order travers consid use array sort pq toarray drainto remov element prioriti order place collect oper make guarante order element equal prioriti enforc order defin custom compar use secondari key break tie primari prioriti valu exampl appli first first tie break compar element use insert fifoentri anentri instead plain entri object member type element held collect
PriorityBlockingQueue::toArray return array contain element queue runtim type return array specifi array return array element particular order queue fit specifi array return therein array alloc runtim type specifi array size queue queue fit specifi array room spare array element queue element array end queue set null act bridg array base collect base further allow precis control runtim type output array circumst save alloc cost suppos queue known contain string dump queue newli alloc array String::String note toarray object ident function toarray array element queue store big array runtim type alloc purpos array contain element queue
CopyOnWriteArraySet::toArray return array contain element set runtim type return array specifi array set fit specifi array return therein array alloc runtim type specifi array size set set fit specifi array room spare array element set element array end set set null use determin length set caller know set contain null element set make guarante order element return iter return element order act bridg array base collect base further allow precis control runtim type output array circumst save alloc cost suppos set known contain string dump set newli alloc array String::String note toarray object ident function toarray array element set store big array runtim type alloc purpos array contain element set
ThreadPoolExecutor::ThreadPoolExecutor execut submit task use possibl pool thread normal configur use factori thread pool address provid improv perform execut number asynchron task due reduc task invoc overhead provid mean bound manag resourc includ thread consum execut collect task ThreadPoolExecutor::ThreadPoolExecutor maintain basic statist number complet task use wide rang context provid adjust paramet extens hook programm urg use conveni factori unbound thread pool automat thread reclam fix size thread pool singl background thread preconfigur set common usag scenario use guid manual configur tune core maximum pool size ThreadPoolExecutor::ThreadPoolExecutor automat adjust pool size see accord bound set corepools see maximumpools see task submit fewer corepools thread run thread creat handl request worker thread idl corepools maximumpools thread run thread creat queue full set corepools maximumpools creat fix size thread pool set maximumpools essenti unbound valu integ max valu allow pool accommod arbitrari number concurr task typic core maximum pool size set construct chang dynam use demand construct default core thread initi creat start task arriv overridden dynam use want prestart thread construct pool non empti queue creat thread thread creat use specifi creat thread norm prioriti prioriti non daemon status suppli ThreadFactory::ThreadFactory alter thread name thread group prioriti daemon status ThreadFactory::ThreadFactory fail creat thread ask return null newthread executor continu abl execut task thread possess modifythread RuntimePermission::RuntimePermission worker thread thread use pool possess permiss servic degrad configur chang take effect time manner shutdown pool remain state termin complet keep aliv time pool current corepools thread excess thread termin idl keepalivetim see provid mean reduc resourc consumpt pool activ pool becom activ thread construct paramet chang dynam use use valu max valu effect disabl idl thread termin prior shut default keep aliv polici appli corepools thread appli time polici core thread keepalivetim valu non zero queu transfer hold submit task use queue interact pool size fewer corepools thread run Executor::Executor prefer ad thread queu corepools thread run Executor::Executor prefer queu request ad thread request queu thread creat exceed maximumpools case task reject general strategi queu direct handoff default choic work queue hand task thread hold attempt queue task fail thread avail run thread construct polici avoid lockup handl set request intern depend direct handoff general requir unbound maximumpools avoid reject submit task turn admit possibl unbound thread growth command continu arriv averag faster process unbound queue use unbound queue exampl predefin capac caus task wait queue corepools thread busi thus corepools thread creat valu maximumpools therefor doesn effect appropri task complet independ task affect execut exampl web page server style queu use smooth transient burst request admit possibl unbound work queue growth command continu arriv averag faster process bound queue bound queue exampl prevent resourc exhaust finit maximumpools difficult tune control Queue::Queue size maximum pool size trade use queue pool minim cpu usag os resourc context switch overhead lead artifici low throughput task frequent block exampl bound system abl schedul time thread allow use queue general requir larger pool size keep cpus busier encount unaccept schedul overhead decreas throughput reject task task submit reject Executor::Executor shut Executor::Executor use finit bound maximum thread work queue capac satur case execut invok predefin handler polici provid default handler throw runtim reject thread invok execut run task provid feedback control mechan slow rate task submit task execut simpli drop executor shut task head work queue drop execut retri fail caus repeat defin use kind requir care especi polici design work particular capac queu polici hook provid protect overrid call execut task manipul execut environ exampl reiniti threadloc gather statist ad log entri addit overridden perform process Executor::Executor fulli termin hook callback throw intern worker thread turn fail abrupt termin queue mainten allow access work queue purpos monitor debug use purpos strong discourag suppli avail assist storag reclam number queu task becom cancel final pool longer referenc program remain thread shutdown automat ensur unreferenc pool reclaim user forget call arrang unus thread eventu die set appropri keep aliv time use lower bound zero core thread set extens exampl extens overrid protect hook exampl subclass add paus resum featur
ThreadPoolExecutor::beforeExecute Method::Method invok prior execut given Runnable::Runnable given thread invok thread execut task initi threadloc perform log implement custom subclass note proper nest multipl overrid subclass general invok super beforeexecut end thread run task task execut
ThreadPoolExecutor::afterExecute Method::Method invok complet execut given Runnable::Runnable invok thread execut task non null Throwable::Throwable uncaught RuntimeException::RuntimeException Error::Error caus execut termin abrupt implement custom subclass note proper nest multipl overrid subclass general invok super afterexecut begin note action enclos task explicit submit task object catch maintain comput caus abrupt termin intern pass trap kind failur further probe case sampl subclass print direct caus task abort runnabl complet caus termin null execut complet normal
ThreadPoolExecutor::terminated Method::Method invok Executor::Executor termin default implement note proper nest multipl overrid subclass general invok super termin
ForkJoinPool::invoke perform given task return result complet comput encount uncheck Exception::Exception Error::Error rethrown outcom invoc rethrown behav regular contain stack trace display exampl use ex printstacktrac current thread thread actual encount minim latter task task type task result task result
ThreadFactory::newThread construct Thread::Thread implement initi prioriti name daemon status ThreadGroup::ThreadGroup runnabl execut thread instanc construct thread null request creat thread reject
Queue::Queue collect design hold element prior process basic oper queue provid addit insert extract inspect oper exist form throw oper fail return valu null fals depend oper latter form insert oper design specif use capac restrict Queue::Queue implement implement insert oper fail queue typic necessarili order element fifo first first manner prioriti queue order element accord suppli compar element natur order lifo queue stack order element lifo last first order head queue element remov call fifo queue element insert tail queue kind queue use placement rule Queue::Queue implement specifi order properti insert element return fals differ fail add element throw uncheck offer design use failur normal occurr exampl fix capac quot bound quot queue remov return head queue exact element remov queue function queue order polici differ implement implement remov poll differ behavior queue empti remov throw poll return null return remov head queue Queue::Queue interfac defin block queue common concurr program wait element appear space becom avail defin interfac extend interfac Queue::Queue implement general allow insert null element implement prohibit insert null implement permit null insert Queue::Queue null return valu poll indic queue contain element Queue::Queue implement general defin element base version equal hashcod instead inherit ident base version Object::Object element base equal defin queue element order properti interfac member type element held collect
Queue::offer insert specifi element queue violat capac restrict use capac restrict queue general prefer fail insert element throw element add element ad queue els fals
Queue::poll retriev remov head queue return null queue empti head queue null queue empti
Queue::element retriev remov head queue differ throw queue empti head queue
Queue::peek retriev remov head queue return null queue empti head queue null queue empti
Formatter::Formatter interpret printf style format string provid support layout justif align common format numer string date time data local specif output common type byte support limit format custom arbitrari user type interfac formatt necessarili safe multithread access Thread::Thread safeti option respons user format print languag heavili inspir printf format string similar custom made accommod languag exploit featur format strict exampl convers incompat flag thrown inapplic flag silent ignor format string thus intend recogniz programm necessarili complet compat exampl expect usag conveni common format request exist illustr invoc sprintf string format use static specif divid section first section cover basic format concept section intend user want get start quick familiar format print program languag section cover specif implement detail intend user want precis specif format behavior section intend provid brief overview format concept precis behavior detail refer section produc format output requir format string argument list format string contain fix text embed format specifi consid exampl format string first argument format contain format specifi tm te ty indic argument process where insert text remain portion format string fix text includ duke birthday space punctuat argument list consist argument pass format string exampl argument list size consist object format specifi general charact numer type syntax option argument index decim integ indic posit argument argument list first argument referenc option flag set charact modifi output format set valid flag depend convers option width posit decim integ indic minimum number charact written output option precis non negat decim integ restrict number charact specif behavior depend convers requir convers charact indic argument format set valid convers given argument depend argument data type format specifi type repres date time syntax option argument index flag width defin requir convers charact sequenc first charact charact indic format charact similar complet ident defin gnu date posix strftime 3c format specifi correspond argument syntax option flag width defin requir convers charact indic content insert output convers convers divid categori general appli argument type charact appli basic type repres unicod charact char byte convers appli type int return numer integr appli integr type byte int char float point appli float point type float doubl date time appli type capabl encod date time percent produc liter 92 u0025 line separ produc platform specif line separ tabl summar support convers convers denot upper case charact correspond lower case convers charact result convert upper case accord rule prevail result equival invoc charact explicit defin convers illeg reserv futur extens date time convers suffix charact defin convers type similar complet ident defin gnu date posix strftime 3c addit convers type access specif function millisecond convers charact format time convers charact format date convers charact format common date time composit charact explicit defin date time convers suffix illeg reserv futur extens flag tabl summar support flag mean flag support indic argument type depend definit convers convers convers appli appli byte int convers charact explicit defin flag illeg reserv futur extens width width minimum number charact written output line separ convers width applic thrown precis general argument type precis maximum number charact written output float point convers precis number digit radix point convers precis total number digit result magnitud charact integr date time argument type percent line separ convers precis applic precis thrown argument ConcurrentSkipListMap::Index argument index decim integ indic posit argument argument list first argument referenc refer argument posit use 92 u003c flag caus argument previous format specifi exampl statement produc ident string section intend provid behavior detail format includ condit support data type local interact flag convers data type overview format concept refer charact explicit defin convers date time convers suffix flag illeg reserv futur extens use charact format string caus thrown format specifi contain width precis invalid valu unsupport respect thrown format specifi contain convers charact applic correspond argument thrown specifi thrown format Formatter::Formatter format conveni convers denot upper case charact correspond lower case convers charact result convert upper case accord rule prevail result equival invoc general convers appli argument type appli general convers minimum number charact written output length convert valu width output pad nbsp nbsp 92 u0020 total number charact equal width pad default flag given pad width specifi minimum precis maximum number charact written output precis appli width thus output truncat precis charact width greater precis precis specifi explicit limit number charact convers appli char appli type byte int return return fals thrown flag defin appli flag given thrown width defin precis applic precis specifi thrown numer convers divid categori numer type format accord algorithm digit obtain integ part fraction part expon appropri data type transform appli digit charact string replac local specif digit comput relat current local nbsp nbsp nbsp nbsp decim separ local specif substitut 92 u002c given local specif insert scan integ part string signific signific digit insert separ interv defin local flag given local specif insert sign charact first non zero digit length string equal request field width valu negat flag given 92 u0028 prepend 92 u0029 append valu negat float point negat zero flag given 92 u002d prepend flag given valu posit zero float point posit zero 92 u002b prepend valu nan posit infin liter string nan infin respect output valu negat infin output infin flag given output infin valu local convers appli byte int convers flag given result contain radix indic octal 0x 0x hexadecim number zero base width valu flag given space pad occur sign appli numer integr convers given default format follow output justifi width negat number begin 92 u002d posit number zero includ sign extra lead space group separ includ minimum number charact written output includ sign digit group separ radix indic parenthes length convert valu width output pad space 92 u0020 total number charact equal width pad default flag given pad width specifi minimum precis applic precis specifi thrown convers appli convers flag given result contain base indic octal 0x 0x hexadecim number zero base width valu flag given valu negat zero pad occur sign flag given space pad occur sign defin Byte::Byte Short::Short Integer::Integer Long::Long appli flag given Byte::Byte Short::Short Integer::Integer Long::Long specif defin Byte::Byte Short::Short Integer::Integer Long::Long precis applic precis specifi thrown convers appli float doubl defin Byte::Byte Short::Short Integer::Integer Long::Long appli flag given decim separ given default format follow output justifi width negat number begin posit number posit zero includ sign extra lead space group separ includ decim separ appear digit follow minimum number charact written output includ sign digit group separ decim separ exponenti symbol radix indic parenthes string repres infin nan applic length convert valu width output pad space 92 u0020 total number charact equal width pad default flag given pad width specifi minimum precis number digit decim separ precis specifi assum convers precis total number signific digit result magnitud precis specifi default valu precis taken convers precis number hexadecim digit radix point precis digit return output convers appli defin Byte::Byte Short::Short Integer::Integer Long::Long appli flag given decim separ flag given Float::Float Point2D::Double specif defin Float::Float Point2D::Double convers appli date time convers charact suffix defin convers type similar complet ident defin gnu date posix strftime 3c addit convers type access specif function millisecond convers charact format time convers charact format date convers charact format common date time composit flag defin appli flag given thrown width minimum number charact written output length convert valu width output pad space 92 u0020 total number charact equal width pad default flag given pad width specifi minimum precis applic precis specifi thrown convers correspond argument convers correspond argument flag width precis applic respect thrown Format::Format specifi refer argument explicit index format specifi contain argument index argument index decim integ indic posit argument argument list first argument referenc argument referenc exampl relat index format specifi contain 92 u003c flag caus argument previous format specifi previous argument thrown ordinari index format specifi contain argument index format string use form index exampl maximum number argument limit maximum dimens array defin trade virtual machin specif argument index correspond avail argument thrown argument format specifi extra argument ignor specifi pass null argument constructor caus thrown
Formatter::Formatter construct formatt destin format output retriev invok current content convert string invok local instanc virtual machin
Formatter::Formatter construct formatt specifi destin local instanc virtual machin destin format output null creat
Formatter::Formatter construct formatt specifi local destin format output retriev invok current content convert string invok appli format null local appli
Formatter::Formatter construct formatt specifi destin local destin format output null creat appli format null local appli
Formatter::Formatter construct formatt specifi file name charset instanc virtual machin local instanc virtual machin filenam name file use destin formatt file exist truncat zero size file creat output written file buffer
Formatter::Formatter construct formatt specifi file name charset local instanc virtual machin filenam name file use destin formatt file exist truncat zero size file creat output written file buffer csn name support
Formatter::Formatter construct formatt specifi file name charset local filenam name file use destin formatt file exist truncat zero size file creat output written file buffer csn name support appli format null local appli
Formatter::Formatter construct formatt specifi file charset instanc virtual machin local instanc virtual machin file file use destin formatt file exist truncat zero size file creat output written file buffer
Formatter::Formatter construct formatt specifi file charset local instanc virtual machin file file use destin formatt file exist truncat zero size file creat output written file buffer csn name support
Formatter::Formatter construct formatt specifi file charset local file file use destin formatt file exist truncat zero size file creat output written file buffer csn name support appli format null local appli
Formatter::Formatter construct formatt specifi print stream local instanc virtual machin charact written given object therefor encod use object charset ps stream use destin formatt
Formatter::Formatter construct formatt specifi output stream charset instanc virtual machin local instanc virtual machin os output stream use destin formatt output buffer
Formatter::Formatter construct formatt specifi output stream charset local instanc virtual machin os output stream use destin formatt output buffer csn name support
Formatter::Formatter construct formatt specifi output stream charset local os output stream use destin formatt output buffer csn name support appli format null local appli
Formatter::format write format string object destin use specifi format string argument local defin construct formatt format format string describ arg argument referenc format specifi format string argument format specifi extra argument ignor maximum number argument limit maximum dimens array defin trade virtual machin specif formatt
Formatter::format write format string object destin use specifi local format string argument appli format null local appli chang object local set construct format format string describ arg argument referenc format specifi format string argument format specifi extra argument ignor maximum number argument limit maximum dimens array defin trade virtual machin specif formatt
Formatter::BigDecimalLayoutForm Enum::Enum BigDecimal::BigDecimal format
Formatter::BigDecimalLayoutForm::SCIENTIFIC Format::Format BigDecimal::BigDecimal computer scientif notat
Formatter::BigDecimalLayoutForm::DECIMAL float Format::Format BigDecimal::BigDecimal decim number
MissingResourceException::MissingResourceException construct MissingResourceException::MissingResourceException specifi detail messag String::String describ particular detail messag classnam name resourc key key miss resourc
ArraysParallelSortHelpers::ArraysParallelSortHelpers helper util parallel sort array parallelsort primit type Object::Object defin static contain sorter merger implement type sorter base cilksort cilk basic algorithm array size use sequenti quicksort array sort otherwis break array half half break half half quarter sort quarter merg merg halv reason split quarter guarante final sort array workspac array workspac swap role subsort step leaf level sort use associ sequenti sort merger perform merg sorter structur sort stabl TimSort::TimSort full sort big split largest partit half find greatest point smaller partit begin half larger binari search merg parallel partit part ensur task trigger stabil preserv order current CountedCompleter::CountedCompleter design requir task serv place holder trigger complet task emptycomplet relay don keep track array fork don hold task state primit version fjbyte fjdoubl ident type declar base sequenti sort reli non version TimSort::TimSort ComparableTimSort::ComparableTimSort DualPivotQuicksort::DualPivotQuicksort sort accept temp workspac array slice alloc avoid redund alloc DualPivotQuicksort::DualPivotQuicksort byte sort use workspac array
Spliterators::spliterator creat Spliterator::Spliterator use given Iterator::Iterator sourc element given initi report size spliter inherit fail fast properti iter implement trysplit permit limit parallel travers element accomplish spliter behaviour split travers undefin iter oper spliter return initi report size equal actual number element sourc Window::Type element iter iter sourc size number element sourc report initi estimates characterist Collector::Characteristics spliter sourc element characterist size subsiz addit report concurr suppli spliter iter
Spliterators::spliteratorUnknownSize creat Spliterator::Spliterator use given Iterator::Iterator sourc element initi size estim spliter inherit fail fast properti iter implement trysplit permit limit parallel travers element accomplish spliter behaviour split travers undefin iter oper spliter return Window::Type element iter iter sourc characterist Collector::Characteristics spliter sourc element size subsiz suppli ignor report spliter iter
NavigableMap::NavigableMap extend navig return closest match given search target lowerentri floorentri ceilingentri higherentri return map entri object associ key respect equal greater equal greater given key return null key similar lowerkey floorkey ceilingkey higherkey return associ key design locat travers entri NavigableMap::NavigableMap access travers ascend descend key order descendingmap return view map sens relat direct invert perform ascend oper view faster descend submap headmap tailmap differ name SortedMap::SortedMap accept addit argument describ lower upper bound inclus exclus submap NavigableMap::NavigableMap implement NavigableMap::NavigableMap interfac interfac addit defin firstentri pollfirstentri lastentri polllastentri return remov greatest map exist els return null implement entri return expect return map entri pair repres snapshot map time produc thus general support option entri setvalu note chang map associ map use put specifi return SortedMap::SortedMap allow exist implement SortedMap::SortedMap compat retrofit implement NavigableMap::NavigableMap extens implement interfac encourag overrid return NavigableMap::NavigableMap similar overriden return NavigableSet::NavigableSet interfac member type key maintain map type map valu
ArrayDeque::ArrayDeque resiz array implement interfac Array::Array dequ capac restrict grow necessari support usag thread safe absenc extern synchron support concurr access multipl thread null element prohibit faster stack faster queue ArrayDeque::ArrayDeque oper run amort constant time includ bulk oper run linear time iter return iter fail fast dequ modifi time iter creat iter remov iter general throw thus face concurr modif iter fail quick clean risk arbitrari non determinist behavior undetermin time futur note fail fast behavior iter guarante general speak imposs make guarante presenc unsynchron concurr modif fail fast iter throw ConcurrentModificationException::ConcurrentModificationException effort basi therefor wrong write program depend correct fail fast behavior iter detect bug iter implement option interfac member type element held collect
ArrayDeque::ArrayDeque construct empti array dequ initi capac suffici hold 16 element
ArrayDeque::ArrayDeque construct empti array dequ initi capac suffici hold specifi number element numel lower bound initi capac dequ
ArrayDeque::ArrayDeque construct dequ contain element specifi collect order return collect iter first element return collect iter becom first element front dequ collect element place dequ
ArrayDeque::toArray return array contain element dequ proper sequenc first last element runtim type return array specifi array dequ fit specifi array return therein array alloc runtim type specifi array size dequ dequ fit specifi array room spare array element dequ element array end dequ set null act bridg array base collect base further allow precis control runtim type output array circumst save alloc cost suppos dequ known contain string dump dequ newli alloc array String::String note toarray object ident function toarray array element dequ store big array runtim type alloc purpos array contain element dequ
Map::Map object map key valu map contain duplic key key map valu interfac take place dictionari total abstract interfac map interfac provid collect view allow map content view set key collect valu set key valu map order map defin order iter map collect view return element map implement treemap make specif guarante order hashmap note great care exercis mutabl object map key behavior map specifi valu object chang manner affect equal comparison object key map case prohibit permiss map contain key permiss map contain valu extrem caution advis equal hashcod longer defin map general purpos map implement provid standard constructor argument constructor creat empti map constructor singl argument type map creat map key valu map argument effect latter constructor allow user copi map produc equival map desir enforc recommend interfac contain constructor general purpos map implement jdk compli destruct contain interfac modifi map oper specifi throw unsupportedoperationexcept map support oper case requir throw unsupportedoperationexcept invoc effect map exampl invok unmodifi map requir throw map map superimpos empti map implement restrict key valu contain exampl implement prohibit null key valu restrict type key attempt insert inelig key valu throw uncheck typic nullpointerexcept classcastexcept attempt queri presenc inelig key valu throw simpli return fals implement exhibit former behavior exhibit latter general attempt oper inelig key valu complet result insert inelig element map throw succeed option implement mark option specif interfac Collections::Collections framework interfac defin term exampl specif say return map contain map key key null null key equal specif constru impli invok map containskey non null argument key caus key equal invok key implement free implement optim wherebi equal invoc avoid exampl first compar hash key specif guarante object unequ hash equal general implement various Collections::Collections framework interfac free take advantag specifi behavior wherev implementor deem appropri map oper perform recurs travers map fail self referenti instanc where map indirect contain includ clone equal hashcod tostr implement option handl self referenti scenario current implement interfac member type key maintain map type map valu
Map::size return number key valu map map map contain integ max valu element return integ max valu number key valu map map
Map::containsKey return map contain map specifi key formal return map contain map key key null null key equal map key key presenc map test map contain map specifi key
Map::get return valu specifi key map null map contain map key formal map contain map key valu key null null key equal return return null map map permit null valu return valu null necessarili indic map contain map key map explicit map key null oper distinguish case key key associ valu return valu specifi key map null map contain map key
Map::put associ specifi valu specifi key map option oper map previous contain map key old valu replac specifi valu map said contain map key return key key specifi valu associ valu valu associ specifi key previous valu associ key null map key null return indic map previous associ null key implement support null valu
Map::keySet return view key contain map set map chang map reflect set versa map modifi iter set progress iter remov oper result iter undefin set support element remov remov correspond map map iter remov set remov removeal retainal clear oper support add addal oper set view key contain map
Map::entrySet return view map contain map set map chang map reflect set versa map modifi iter set progress iter remov oper setvalu oper map entri return iter result iter undefin set support element remov remov correspond map map iter remov set remov removeal retainal clear oper support add addal oper set view map contain map
Map::compute attempt comput map specifi key current map valu null current map exampl creat append String::String msg valu map Method::Method simpler use purpos function return null map remov remain absent initi absent function throw uncheck rethrown current map unchang default implement equival perform step map return current valu null absent default implement make guarante synchron atom properti implement atom guarante overrid document concurr properti particular implement subinterfac document function appli atom valu key key specifi valu associ remappingfunct function comput valu valu associ specifi key null
Map::merge specifi key associ valu associ null associ given non null valu replac associ valu result given remap function remov result null use combin multipl map valu key exampl creat append String::String msg valu map function return null map remov function throw uncheck rethrown current map unchang default implement equival perform step map return current valu null absent default implement make guarante synchron atom properti implement atom guarante overrid document concurr properti particular implement subinterfac document function appli atom valu key key result valu associ valu non null valu merg exist valu associ key exist valu null valu associ key associ key remappingfunct function recomput valu valu associ specifi key null valu associ key
List::List order collect known sequenc user interfac precis control where list element insert user access element integ index posit list search element list set list typic allow duplic element formal list typic allow pair element e1 e2 e1 equal e2 typic allow multipl null element allow null element inconceiv wish implement list prohibit duplic throw runtim user attempt insert expect usag rare list interfac place addit stipul specifi collect interfac contract iter add remov equal hashcod declar inherit includ conveni list interfac provid posit index access list element list array zero base note oper execut time proport index valu implement linkedlist exampl thus iter element list typic prefer index caller know implement list interfac provid iter call listiter allow element insert replac bidirect access addit normal oper iter interfac provid obtain list iter start specifi posit list list interfac provid search specifi object perform standpoint caution implement perform cost linear search list interfac provid effici insert remov multipl element arbitrari point list note permiss list contain element extrem caution advis equal hashcod longer defin list list implement restrict element contain exampl implement prohibit null element restrict type element attempt add inelig element throw uncheck typic nullpointerexcept classcastexcept attempt queri presenc inelig element throw simpli return fals implement exhibit former behavior exhibit latter general attempt oper inelig element complet result insert inelig element list throw succeed option implement mark option specif interfac interfac member type element list
List::size return number element list list contain integ max valu element return integ max valu number element list
List::iterator return iter element list proper sequenc iter element list proper sequenc
List::toArray return array contain element list proper sequenc first last element return array safe refer maintain list word alloc array list array caller thus free modifi return array act bridg array base collect base array contain element list proper sequenc
List::toArray return array contain element list proper sequenc first last element runtim type return array specifi array list fit specifi array return therein array alloc runtim type specifi array size list list fit specifi array room spare array element list element array end list set null use determin length list caller know list contain null element act bridg array base collect base further allow precis control runtim type output array circumst save alloc cost suppos list known contain string dump list newli alloc array string note toarray object ident function toarray array element list store big array runtim type alloc purpos array contain element list
List::add append specifi element end list option oper list support oper place limit element ad list particular list refus add null element impos restrict type element ad List::List clear specifi document restrict element ad element append list specifi
List::remove remov first occurr specifi element list option oper list contain element unchang formal remov element lowest index null nbsp nbsp get null nbsp nbsp equal get element exist return list contain specifi element equival list chang result call element remov list list contain specifi element
List::addAll append element specifi collect end list order return specifi collect iter option oper behavior oper undefin specifi collect modifi oper progress note occur specifi collect list nonempti collect contain element ad list list chang result call
List::addAll insert element specifi collect list specifi posit option oper shift element current posit subsequ element increas indic element appear list order return specifi collect iter behavior oper undefin specifi collect modifi oper progress note occur specifi collect list nonempti index index insert first element specifi collect collect contain element ad list list chang result call
List::get return element specifi posit list index index element return element specifi posit list
List::add insert specifi element specifi posit list option oper shift element current posit subsequ element add indic index index specifi element insert element element insert
List::remove remov element specifi posit list option oper shift subsequ element subtract indic return element remov list index index element remov element previous specifi posit
List::indexOf return index first occurr specifi element list list contain element formal return lowest index null nbsp nbsp get null nbsp nbsp equal get index element search index first occurr specifi element list list contain element
List::listIterator return list iter element list proper sequenc list iter element list proper sequenc
List::listIterator return list iter element list proper sequenc start specifi posit list specifi index indic first element return initi call initi call return element specifi index index index first element return list iter call list iter element list proper sequenc start specifi posit list
List::spliterator creat element list Spliterator::Spliterator report implement document report addit characterist valu default implement creat spliter list Iterator::Iterator spliter inherit fail fast properti list iter creat Spliterator::Spliterator addit report Spliterator::Spliterator element list
LinkedList::LinkedList doubli link list implement List::List Deque::Deque interfac implement option list oper permit element includ null oper perform expect doubli link list oper index list travers list begin end closer specifi index note implement synchron multipl thread access link list concurr thread modifi list structur synchron extern structur modif oper add delet element mere set valu element structur modif typic accomplish synchron object natur encapsul list object exist list wrap use creation time prevent accident unsynchron access list iter return iter listiter fail fast list structur modifi time iter creat iter remov add iter throw thus face concurr modif iter fail quick clean risk arbitrari non determinist behavior undetermin time futur note fail fast behavior iter guarante general speak imposs make guarante presenc unsynchron concurr modif fail fast iter throw ConcurrentModificationException::ConcurrentModificationException effort basi therefor wrong write program depend correct fail fast behavior iter detect bug member type element held collect
LinkedList::LinkedList construct empti list
LinkedList::LinkedList construct list contain element specifi collect order return collect iter collect element place list
LinkedList::getFirst return first element list first element list
LinkedList::getLast return last element list last element list
LinkedList::removeFirst remov return first element list first element list
LinkedList::removeLast remov return last element list last element list
LinkedList::addFirst insert specifi element begin list element add
LinkedList::addLast append specifi element end list equival element add
LinkedList::add append specifi element end list equival element append list specifi
LinkedList::remove remov first occurr specifi element list list contain element unchang formal remov element lowest index null nbsp nbsp get null nbsp nbsp equal get element exist return list contain specifi element equival list chang result call element remov list list contain specifi element
LinkedList::get return element specifi posit list index index element return element specifi posit list
LinkedList::add insert specifi element specifi posit list shift element current posit subsequ element add indic index index specifi element insert element element insert
LinkedList::remove remov element specifi posit list shift subsequ element subtract indic return element remov list index index element remov element previous specifi posit
LinkedList::remove retriev remov head first element list head list
LinkedList::listIterator return list iter element list proper sequenc start specifi posit list obey general contract list listiter int list iter fail fast list structur modifi time Iterator::Iterator creat list iter remov add list iter throw ConcurrentModificationException::ConcurrentModificationException thus face concurr modif iter fail quick clean risk arbitrari non determinist behavior undetermin time futur index index first element return list iter call ListIterator::ListIterator element list proper sequenc start specifi posit list
LinkedList::clone return shallow copi LinkedList::LinkedList element clone shallow copi LinkedList::LinkedList instanc
LinkedList::toArray return array contain element list proper sequenc first last element runtim type return array specifi array list fit specifi array return therein array alloc runtim type specifi array size list list fit specifi array room spare array element list element array end list set null use determin length list caller know list contain null element act bridg array base collect base further allow precis control runtim type output array circumst save alloc cost suppos list known contain string dump list newli alloc array String::String note toarray object ident function toarray array element list store big array runtim type alloc purpos array contain element list
LinkedList::writeObject save state LinkedList::LinkedList instanc stream serial size list number element contain emit int follow element Object::Object proper order
LinkedList::readObject reconstitut LinkedList::LinkedList instanc stream deseri
TreeSet::TreeSet implement base element order use set creation time depend constructor implement provid guarante log time cost basic oper add remov contain note order maintain set explicit compar consist equal correct implement Set::Set interfac see Comparable::Comparable Comparator::Comparator precis definit consist equal Set::Set interfac defin term equal oper TreeSet::TreeSet instanc perform element comparison use compareto compar element deem equal standpoint set equal behavior set defin order inconsist equal fail obey general contract Set::Set interfac note implement synchron multipl thread access tree set concurr thread modifi set synchron extern typic accomplish synchron object natur encapsul set object exist set wrap use creation time prevent accident unsynchron access set iter return iter fail fast set modifi time iter creat iter remov iter throw thus face concurr modif iter fail quick clean risk arbitrari non determinist behavior undetermin time futur note fail fast behavior iter guarante general speak imposs make guarante presenc unsynchron concurr modif fail fast iter throw ConcurrentModificationException::ConcurrentModificationException effort basi therefor wrong write program depend correct fail fast behavior iter detect bug member type element maintain set
TreeSet::TreeSet construct set specifi navig map
TreeSet::TreeSet construct empti tree set sort accord natur order element element insert set implement interfac furthermor element mutual compar e1 compareto e2 throw ClassCastException::ClassCastException element e1 e2 set user attempt add element set violat constraint exampl user attempt add string element set element integ add call throw ClassCastException::ClassCastException
TreeSet::TreeSet construct empti tree set sort accord specifi compar element insert set mutual compar specifi compar compar compar e1 e2 throw ClassCastException::ClassCastException element e1 e2 set user attempt add element set violat constraint add call throw ClassCastException::ClassCastException compar compar order set null element
TreeSet::TreeSet construct tree set contain element specifi collect sort accord natur order element element insert set implement interfac furthermor element mutual compar e1 compareto e2 throw ClassCastException::ClassCastException element e1 e2 set collect element compris set
TreeSet::TreeSet construct tree set contain element use order specifi sort set sort set element compris set
TreeSet::clone return shallow copi TreeSet::TreeSet instanc element clone shallow copi set
TreeSet::writeObject save state TreeSet::TreeSet instanc stream serial emit compar order set null obey element natur order Object::Object follow size set number element contain int follow element Object::Object order determin set Comparator::Comparator element natur order set Comparator::Comparator
TreeSet::readObject reconstitut TreeSet::TreeSet instanc stream deseri
ConcurrentModificationException::ConcurrentModificationException thrown detect concurr modif object modif permiss exampl general permiss thread modifi Collection::Collection thread iter general result iter undefin circumst Iterator::Iterator implement includ general purpos collect implement jre choos throw behavior detect iter known fail fast iter fail quick clean risk arbitrari non determinist behavior undetermin time futur note indic object concurr modifi thread singl thread issu sequenc invoc violat contract object object throw exampl thread modifi collect iter collect fail fast iter iter throw note fail fast behavior guarante general speak imposs make guarante presenc unsynchron concurr modif fail fast oper throw ConcurrentModificationException::ConcurrentModificationException effort basi therefor wrong write program depend correct ConcurrentModificationException::ConcurrentModificationException detect bug
JapaneseImperialCalendar::equals compar JapaneseImperialCalendar::JapaneseImperialCalendar specifi Object::Object result argument JapaneseImperialCalendar::JapaneseImperialCalendar object repres time valu millisecond offset Calendar::Calendar paramet obj object compar object equal obj fals
JapaneseImperialCalendar::getMinimum return minimum valu given calendar field Calendar::Calendar instanc minimum valu defin smallest valu return time valu take consider current valu field calendar field minimum valu given calendar field
JapaneseImperialCalendar::getMaximum return maximum valu given calendar field GregorianCalendar::GregorianCalendar instanc maximum valu defin largest valu return time valu take consider current valu field calendar field maximum valu given calendar field
JapaneseImperialCalendar::getGreatestMinimum return highest minimum valu given calendar field GregorianCalendar::GregorianCalendar instanc highest minimum valu defin largest valu return time valu take consider current valu field calendar field highest minimum valu given calendar field
JapaneseImperialCalendar::getLeastMaximum return lowest maximum valu given calendar field GregorianCalendar::GregorianCalendar instanc lowest maximum valu defin smallest valu return time valu take consider current valu field calendar field lowest maximum valu given calendar field
HashMap::HashMap hash tabl base implement map interfac implement provid option map oper permit null valu null key hashmap rough equival hashtabl unsynchron permit null make guarante order map particular guarante order remain constant time implement provid constant time perform basic oper get put assum hash function dispers element proper bucket iter collect view requir time proport capac hashmap instanc number bucket size number key valu map thus set initi capac load factor low iter perform instanc hashmap paramet affect perform initi capac load factor capac number bucket hash tabl initi capac simpli capac time hash tabl creat load factor measur full hash tabl allow get capac automat increas number entri hash tabl exceed product load factor current capac hash tabl rehash intern data structur rebuilt hash tabl approxim twice number bucket general rule default load factor 75 offer tradeoff time space cost higher valu decreas space overhead increas lookup cost reflect oper hashmap includ get put expect number entri map load factor taken account set initi capac minim number rehash oper initi capac greater maximum number entri divid load factor rehash oper occur map store hashmap instanc creat suffici capac allow map store effici let perform automat rehash grow tabl note use key hashcod slow perform hash tabl amelior impact key use comparison order key break tie note implement synchron multipl thread access hash map concurr thread modifi map structur synchron extern structur modif oper add delet map mere chang valu associ key instanc contain structur modif typic accomplish synchron object natur encapsul map object exist map wrap use creation time prevent accident unsynchron access map iter return collect view fail fast map structur modifi time iter creat iter remov iter throw thus face concurr modif iter fail quick clean risk arbitrari non determinist behavior undetermin time futur note fail fast behavior iter guarante general speak imposs make guarante presenc unsynchron concurr modif fail fast iter throw concurrentmodificationexcept effort basi therefor wrong write program depend correct fail fast behavior iter detect bug member type key maintain map type map valu
HashMap::comparableClassFor return Class::Class form implement compar els null
HashMap::HashMap construct empti hashmap specifi initi capac load factor initialcapac initi capac loadfactor load factor
HashMap::HashMap construct empti hashmap specifi initi capac default load factor 75 initialcapac initi capac
HashMap::HashMap construct empti hashmap default initi capac 16 default load factor 75
HashMap::HashMap construct hashmap map specifi map hashmap creat default load factor 75 initi capac suffici hold map specifi map map map place map
HashMap::putMapEntries implement map putal Map::Map constructor map evict fals initi construct map els relay afternodeinsert
HashMap::writeObject save state hashmap instanc stream serial capac HashMap::HashMap length bucket array emit int follow size int number key valu map follow key Object::Object valu Object::Object key valu map key valu map emit particular order
HashMap::readObject reconstitut HashMap::HashMap instanc stream deseri
Logging::Logging Logging::Logging implement loggingmxbean loggingmxbean interfac provid standard manag access individu Logger::Logger object avail runtim
Logging::Logging Constructor::Constructor Logging::Logging implement loggingmxbean
SimpleFormatter::SimpleFormatter print brief summari LogRecord::LogRecord human readabl format summari typic line SimpleFormatter::SimpleFormatter initi specifi util log simpleformatt format properti log messag properti defin configur file system properti properti set log properti system properti format string specifi system properti properti defin given format string default format implement specif
LogRecord::LogRecord LogRecord::LogRecord object pass log request log framework individu log handler LogRecord::LogRecord pass log framework logic belong framework longer updat client note client specifi explicit sourc name sourc name LogRecord::LogRecord infer automat first access due call LogRecord::getSourceMethodName LogRecord::getSourceClassName analyz call stack therefor log Handler::Handler want pass LogRecord::LogRecord thread transmit rmi wish subsequ obtain name name call LogRecord::getSourceClassName LogRecord::getSourceMethodName forc valu fill serial note LogRecord::LogRecord serializ object paramet array serializ serial object paramet array written correspond string use object tostr ResourceBundle::ResourceBundle transmit part serial form resourc bundl name recipi object readobject attempt locat suitabl resourc bundl
LogRecord::setLoggerName Set::Set sourc logger name name sourc logger name null
LogRecord::getResourceBundle get local resourc bundl ResourceBundle::ResourceBundle local messag string format result null messag localiz suitabl ResourceBundle::ResourceBundle avail local resourc bundl
LogRecord::setResourceBundle Set::Set local resourc bundl bundl local bundl null
LogRecord::getResourceBundleName get local resourc bundl name name ResourceBundle::ResourceBundle local messag string format result null messag localiz local resourc bundl name
LogRecord::setResourceBundleName Set::Set local resourc bundl name name local bundl name null
LogRecord::getLevel get log messag level exampl level sever log messag level
LogRecord::setLevel Set::Set log messag level exampl level sever level log messag level
LogRecord::setSequenceNumber Set::Set sequenc number sequenc number normal assign LogRecord::LogRecord constructor normal necessari use seq sequenc number
LogRecord::getSourceClassName get name alleg issu log request note sourceclassnam verifi spoof part log call infer automat log framework latter case approxim fact describ earlier call stack frame null obtain sourc name
LogRecord::setSourceClassName Set::Set name alleg issu log request sourceclassnam sourc name null
LogRecord::getSourceMethodName get name alleg issu log request note sourcemethodnam verifi spoof part log call infer automat log framework latter case approxim fact describ earlier call stack frame null obtain sourc name
LogRecord::setSourceMethodName Set::Set name alleg issu log request sourcemethodnam sourc name null
LogRecord::getMessage get raw log messag local format null equival empti string messag final text local key format sourc logger local ResourceBundle::ResourceBundle ResourceBundle::ResourceBundle entri messag string messag string replac local valu raw messag string
LogRecord::setMessage Set::Set raw log messag local format messag raw messag string null
LogRecord::setParameters Set::Set paramet log messag paramet log messag paramet null
LogRecord::setThreadID Set::Set identifi thread where messag origin threadid thread
LogRecord::getMillis get event time millisecond 1970 event time milli 1970
LogRecord::setMillis Set::Set event time milli event time milli 1970
LogRecord::setThrown Set::Set throwabl associ log event thrown throwabl null
LogRecord::writeObject default field follow byte version number major byte follow minor byte follow log record paramet array paramet array written paramet array zero length array length written integ follow String::String valu paramet paramet null null String::String written output object tostr written
Handler::close close handler free associ resourc close perform flush close handler close call handler longer Method::Method call silent ignor throw runtim
Handler::setFormatter Set::Set formatt formatt format logrecord handler handler use formatt case formatt rememb newformatt formatt use null
Handler::setEncoding Set::Set charact encod handler encod set logrecord written handler encod name support charact encod null indic default platform encod
Handler::setFilter Set::Set filter control output handler call publish handler call filter non null check logrecord publish discard newfilt filter object null
Handler::setLevel Set::Set log level specifi messag level log handler messag level lower valu discard intent allow develop turn volumin log limit messag sent handler newlevel valu log level
LogManager::LogManager singl global LogManager::LogManager object maintain set share state logger log servic LogManager::LogManager object manag hierarch namespac Logger::Logger object name logger store namespac manag set log control properti key valu pair handler log object configur global LogManager::LogManager object retriev use logmanag getlogmanag LogManager::LogManager object creat initi subsequ chang startup LogManager::LogManager locat use util log manag system properti LogManager::LogManager defin option system properti allow control initi configur util log config util log config file properti specifi command line command system properti definit pass jni createjavavm util log config properti set properti valu treat name given load object instanti object constructor respons read initi configur object use system properti control configur altern configur use readconfigur inputstream defin properti LogManager::LogManager util log config properti set util log config file system properti specifi properti file util properti format initi log configur read file properti defin LogManager::LogManager use default configur default configur typic load properti file lib log properti instal directori properti logger handler name start dot separ name handler logger global log properti includ properti handler defin whitespac comma separ list name handler load regist handler root Logger::Logger Logger::Logger name name Handler::Handler default constructor note handler creat lazili first properti lt logger gt handler defin whitespac comma separ list name handler load regist handler specifi logger name Handler::Handler default constructor note handler creat lazili first properti lt logger gt useparenthandl defin boolean valu default logger call parent addit handl log messag result messag handl root logger set properti fals Handler::Handler configur logger log messag deliv properti config properti intend allow arbitrari configur run properti defin whitespac comma separ list name instanc creat name default constructor execut arbitrari updat log configur set logger level ad handler ad filter note load LogManager::LogManager configur first search system path user path includ LogManager::LogManager config handler logger organ name hierarchi base dot separ name thus child b1 b2 peer properti name end level assum defin log level logger thus foo level defin log level logger call foo recurs children name hierarchi log level appli order defin properti file thus level set child node tree come set parent properti name level set level root tree LogManager::LogManager object multi thread safe
LogManager::addLogger add name logger return fals logger name regist Logger::Logger factori call regist newli creat Logger::Logger retain refer Logger::Logger object avoid garbag collect LogManager::LogManager retain weak refer logger logger argument logger regist success fals logger name exist
LogManager::getLogger Method::Method find name logger note untrust creat logger arbitrari name reli find logger secur sensit log note Logger::Logger associ String::String name garbag collect time strong refer Logger::Logger caller check return valu null order proper handl case where Logger::Logger garbag collect name name logger match logger null found
LogManager::getLoggerNames get enumer known logger name note logger ad dynam load report logger current regist note return name Logger::Logger strong refer Logger::Logger return String::String prevent Logger::Logger garbag collect particular return name pass logmanag getlogg caller check return valu logmanag getlogg null proper handl case where Logger::Logger garbag collect time name return enumer logger name string
LogManager::readConfiguration reiniti log properti reread log configur rule locat configur properti startup normal log properti read file startup log level definit configur file appli use logger setlevel target Logger::Logger exist PropertyChangeEvent::PropertyChangeEvent fire properti read
LogManager::readConfiguration reiniti log properti reread log configur given stream util properti format PropertyChangeEvent::PropertyChangeEvent fire properti read log level definit configur file appli use logger setlevel target Logger::Logger exist stream read properti
LogManager::LOGGING mxbean name String::String represent manag interfac log facil
Filter::Filter Filter::Filter provid fine grain control log control log level Logger::Logger Handler::Handler filter associ Logger::Logger Handler::Handler call islogg check given LogRecord::LogRecord publish islogg return fals LogRecord::LogRecord discard
Level::Level Level::Level defin set standard log level control log output log Level::Level object order specifi order integ enabl log given level enabl log higher level client normal use predefin Level::Level constant level sever level descend order sever highest valu warn info config fine finer finest lowest valu addit level turn log level enabl log messag third parti defin addit log level subclass Level::Level case subclass take care chose uniqu integ level valu ensur maintain Object::Object uniqu properti serial defin suitabl readresolv
Level::OFF level turn log level initi integ max valu
Level::SEVERE sever messag level indic serious failur general sever messag describ event consider import prevent normal program execut reason intellig end user system administr level initi 1000
Level::WARNING warn messag level indic potenti general warn messag describ event interest end user system manag indic potenti level initi 900
Level::INFO info messag level inform messag typic info messag written consol equival info level reason signific messag make sens end user system administr level initi 800
Level::FINEST finest indic detail trace messag level initi 300
Level::ALL indic messag log level initi integ min valu
Level::Level creat name Level::Level given integ valu note constructor protect allow subclass general client log use constant Level::Level object sever finest client add log level subclass Level::Level defin constant name name Level::Level exampl sever valu integ valu level
Level::Level creat name Level::Level given integ valu given local resourc name name name Level::Level exampl sever valu integ valu level resourcebundlenam name resourc bundl use local given name resourcebundlenam null empti string ignor
Level::getName return non local string name Level::Level non local name
Level::getLocalizedName return local string name Level::Level current default local local avail non local name return local name
Level::toString return string represent Level::Level non local name Level::Level exampl info
Level::intValue get integ valu level integ valu effici order comparison Level::Level object integ valu level
Level::parse pars level name string Level::Level argument string consist level name integ valu exampl sever 1000 name string pars pars valu pass integ correspond known name 700 return associ name config pass integ return level name initi valu
SocketHandler::SocketHandler construct sockethandl use specifi host port sockethandl configur base logmanag properti default valu given target host port argument host argument empti null String::String localhost host target host port target port
XMLFormatter::XMLFormatter Format::Format LogRecord::LogRecord standard xml format dtd specif appendix Logging::Logging specif xmlformatt arbitrari charact encod recommend normal utf charact encod set output Handler::Handler
Formatter::Formatter Formatter::Formatter provid support format logrecord typic log Handler::Handler Formatter::Formatter associ Formatter::Formatter take LogRecord::LogRecord convert string formatt xmlformatt wrap head tail string set format record gethead gettail obtain string
Formatter::Formatter construct formatt
Formatter::format Format::Format given log record return format string result format String::String normal includ local format version logrecord messag field recommend use conveni local format messag field record log record format format log record
Formatter::formatMessage local format messag string log record conveni Formatter::Formatter subclass use perform format messag string first local format string use record ResourceBundle::ResourceBundle ResourceBundle::ResourceBundle messag key found key format string format String::String use text style format paramet formatt string contain text messageformat format string format perform record log record contain raw messag local format messag
Logger::Logger Logger::Logger object log messag specif system compon logger normal name use hierarch dot separ namespac Logger::Logger name arbitrari string normal base packag name name log compon javax swing addit creat anonym logger store Logger::Logger namespac Logger::Logger object obtain call getlogg factori creat Logger::Logger return suitabl exist Logger::Logger note Logger::Logger return getlogg factori garbag collect time strong refer Logger::Logger kept Logging::Logging messag forward regist Handler::Handler object forward messag varieti destin includ consol file os log Logger::Logger keep track parent Logger::Logger nearest exist ancestor Logger::Logger namespac Logger::Logger Level::Level associ reflect minimum Level::Level logger care logger level set null effect level inherit parent turn obtain recurs parent tree log level configur base properti log configur file describ descript LogManager::LogManager dynam chang call logger setlevel logger level chang chang affect child logger child logger null level inherit effect level parent log call Logger::Logger initi perform cheap check request level sever fine effect log level logger request level lower log level log call return pass initi cheap test Logger::Logger alloc LogRecord::LogRecord describ log messag call Filter::Filter detail check record publish pass publish LogRecord::LogRecord output handler default logger publish parent handler recurs tree Logger::Logger ResourceBundle::ResourceBundle associ ResourceBundle::ResourceBundle specifi name use factori valu use bundl local log messag Logger::Logger ResourceBundle::ResourceBundle resourc bundl name inherit ResourceBundle::ResourceBundle resourc bundl name parent recurs tree logger output take msg argument msg argument raw valu local key format logger inherit local ResourceBundle::ResourceBundle ResourceBundle::ResourceBundle map msg string msg string replac local valu origin msg string typic formatt use text messageformat style format format paramet exampl format string format paramet string set altern take msgsupplier instead msg argument take String::String function invok construct desir log messag messag actual log base effect log level thus elimin unnecessari messag construct exampl develop want log system health status diagnosi string accept version look health status collect unnecessarili log level finer disabl supplier accept version status collect log level finer enabl look ResourceBundle::ResourceBundle logger first look bundl specifi use resourc bundl name specifi factori ResourceBundle::ResourceBundle resourc bundl name found use nearest ResourceBundle::ResourceBundle resourc bundl name inherit parent tree ResourceBundle::ResourceBundle inherit specifi ResourceBundle::ResourceBundle logger inherit resourc bundl name resourc bundl name map ResourceBundle::ResourceBundle object use default Locale::Locale time log map resourc bundl name ResourceBundle::ResourceBundle object logger first use thread map given resourc bundl name ResourceBundle::ResourceBundle thread context loader null instead ResourceBundle::ResourceBundle found use loader first caller factori format includ local respons output Handler::Handler typic call Formatter::Formatter note format occur synchron delay LogRecord::LogRecord actual written extern sink log group categori set log take log level messag string option paramet messag string set logp log precis log take explicit sourc name name set logrb log resourc bundl logp take explicit resourc bundl object use local log messag conveni trace entri enter return exit throw throw final set conveni use simplest case develop simpli want log string given log level name standard Level::Level name sever warn info take singl argument messag string take explicit sourc name name Logging::Logging framework make effort determin call log realiz automat infer approxim wrong virtual machin allow extens optim jite entir remov stack frame make imposs reliabl locat call Logger::Logger multi thread safe subclass inform note LogManager::LogManager provid implement name logger point namespac therefor subclass Logger::Logger implement conjunct LogManager::LogManager take care obtain Logger::Logger instanc LogManager::LogManager deleg oper islogg log logrecord instanc note order intercept log output subclass overrid log logrecord log implement call log logrecord
Logger::global global Logger::Logger object conveni develop make casual use Logging::Logging packag develop make serious use log packag exampl product creat use Logger::Logger object appropri name log control suitabl logger granular develop keep strong refer Logger::Logger object prevent garbag collect
Logger::Logger protect construct logger name subsystem logger initi configur null Level::Level useparenthandl set name name logger dot separ name normal base packag name name subsystem javax swing null anonym logger resourcebundlenam name ResourceBundle::ResourceBundle local messag logger null messag requir local
Logger::getLogger find creat logger name subsystem logger creat given name return logger creat logger creat log level configur base LogManager::LogManager configur configur send log output parent handler regist LogManager::LogManager global namespac note LogManager::LogManager retain weak refer newli creat Logger::Logger understand previous creat Logger::Logger given name garbag collect time strong refer Logger::Logger particular mean call getlogg mylogg log use Logger::Logger object name mylogg strong refer Logger::Logger name mylogg elsewher program name name logger dot separ name normal base packag name name subsystem javax swing suitabl Logger::Logger
Logger::getLogger find creat logger name subsystem logger creat given name return logger creat logger creat log level configur base LogManager::LogManager configur send log output parent handler regist LogManager::LogManager global namespac note LogManager::LogManager retain weak refer newli creat Logger::Logger understand previous creat Logger::Logger given name garbag collect time strong refer Logger::Logger particular mean call getlogg mylogg log use Logger::Logger object name mylogg strong refer Logger::Logger name mylogg elsewher program name Logger::Logger exist local resourc bundl given resourc bundl name name Logger::Logger exist resourc bundl name IllegalArgumentException::IllegalArgumentException thrown name name logger dot separ name normal base packag name name subsystem javax swing resourcebundlenam name ResourceBundle::ResourceBundle local messag logger null messag requir local suitabl Logger::Logger
Logger::getAnonymousLogger creat anonym Logger::Logger newli creat Logger::Logger regist LogManager::LogManager namespac access check updat logger factori primarili intend use applet result Logger::Logger anonym kept privat creat remov normal secur check turn allow untrust applet updat control state Logger::Logger exampl applet setlevel Logger::addHandler anonym Logger::Logger logger anonym configur root logger parent mean default inherit effect level handler root logger chang parent requir secur permiss specifi newli creat privat Logger::Logger
Logger::getAnonymousLogger creat anonym Logger::Logger newli creat Logger::Logger regist LogManager::LogManager namespac access check updat logger factori primarili intend use applet result Logger::Logger anonym kept privat creat remov normal secur check turn allow untrust applet updat control state Logger::Logger exampl applet setlevel Logger::addHandler anonym Logger::Logger logger anonym configur root logger parent mean default inherit effect level handler root logger chang parent requir secur permiss specifi resourcebundlenam name ResourceBundle::ResourceBundle local messag logger null messag requir local newli creat privat Logger::Logger
Logger::getResourceBundle retriev local resourc bundl logger return ResourceBundle::ResourceBundle set set factori current default local note result null Logger::Logger use resourc bundl resourc bundl name inherit parent local bundl null
Logger::getResourceBundleName retriev local resourc bundl name logger name specifi factori ResourceBundle::ResourceBundle set note result null Logger::Logger use resourc bundl resourc bundl name inherit parent local bundl name null
Logger::setFilter Set::Set filter control output Logger::Logger pass initi level check Logger::Logger call Filter::Filter check log record publish newfilt filter object null
Logger::getFilter get current filter Logger::Logger filter object null
Logger::log log LogRecord::LogRecord log call actual perform log subclass overrid singl captur log activ record LogRecord::LogRecord publish
Logger::log log messag argument logger current enabl given messag level given messag forward regist output Handler::Handler object level messag level identifi sever msg string messag key messag catalog
Logger::log log messag construct log level messag actual log logger current enabl given messag level messag construct invok supplier function forward regist output Handler::Handler object level messag level identifi sever msgsupplier function call produc desir log messag
Logger::log log messag object paramet logger current enabl given messag level correspond LogRecord::LogRecord creat forward regist output Handler::Handler object level messag level identifi sever msg string messag key messag catalog param1 paramet messag
Logger::log log messag array object argument logger current enabl given messag level correspond LogRecord::LogRecord creat forward regist output Handler::Handler object level messag level identifi sever msg string messag key messag catalog param array paramet messag
Logger::log log messag associ Throwable::Throwable logger current enabl given messag level given argument store LogRecord::LogRecord forward regist output handler note thrown argument store LogRecord::LogRecord thrown properti LogRecord::LogRecord paramet properti thus process output formatt treat format paramet LogRecord::LogRecord messag properti level messag level identifi sever msg string messag key messag catalog thrown Throwable::Throwable associ log messag
Logger::log log lazili construct messag associ Throwable::Throwable logger current enabl given messag level messag construct invok supplier function messag given store forward regist output handler note thrown argument store LogRecord::LogRecord thrown properti LogRecord::LogRecord paramet properti thus process output formatt treat format paramet LogRecord::LogRecord messag properti level messag level identifi sever thrown Throwable::Throwable associ log messag msgsupplier function call produc desir log messag
Logger::logrb log messag specifi sourc resourc bundl name argument logger current enabl given messag level given messag forward regist output Handler::Handler object msg string local use name resourc bundl resourc bundl name null empti String::String invalid msg string local level messag level identifi sever sourceclass name issu log request sourcemethod name issu log request bundlenam name resourc bundl local msg null msg string messag key messag catalog
Logger::logrb log messag specifi sourc resourc bundl name singl object paramet log messag logger current enabl given messag level correspond LogRecord::LogRecord creat forward regist output Handler::Handler object msg string local use name resourc bundl resourc bundl name null empti String::String invalid msg string local level messag level identifi sever sourceclass name issu log request sourcemethod name issu log request bundlenam name resourc bundl local msg null msg string messag key messag catalog param1 Parameter::Parameter log messag
Logger::logrb log messag specifi sourc resourc bundl name array object argument logger current enabl given messag level correspond LogRecord::LogRecord creat forward regist output Handler::Handler object msg string local use name resourc bundl resourc bundl name null empti String::String invalid msg string local level messag level identifi sever sourceclass name issu log request sourcemethod name issu log request bundlenam name resourc bundl local msg null msg string messag key messag catalog param Array::Array paramet messag
Logger::logrb log messag specifi sourc resourc bundl name associ Throwable::Throwable logger current enabl given messag level given argument store LogRecord::LogRecord forward regist output handler msg string local use name resourc bundl resourc bundl name null empti String::String invalid msg string local note thrown argument store LogRecord::LogRecord thrown properti LogRecord::LogRecord paramet properti thus process output formatt treat format paramet LogRecord::LogRecord messag properti level messag level identifi sever sourceclass name issu log request sourcemethod name issu log request bundlenam name resourc bundl local msg null msg string messag key messag catalog thrown Throwable::Throwable associ log messag
Logger::exiting log return result object conveni log return LogRecord::LogRecord messag return log level finer give sourcemethod sourceclass result object log sourceclass name issu log request sourcemethod name result Object::Object return
Logger::severe log sever messag logger current enabl sever messag level given messag forward regist output Handler::Handler object msg string messag key messag catalog
Logger::warning log warn messag logger current enabl warn messag level given messag forward regist output Handler::Handler object msg string messag key messag catalog
Logger::info log info messag logger current enabl info messag level given messag forward regist output Handler::Handler object msg string messag key messag catalog
Logger::config log config messag logger current enabl config messag level given messag forward regist output Handler::Handler object msg string messag key messag catalog
Logger::fine log fine messag logger current enabl fine messag level given messag forward regist output Handler::Handler object msg string messag key messag catalog
Logger::finer log finer messag logger current enabl finer messag level given messag forward regist output Handler::Handler object msg string messag key messag catalog
Logger::finest log finest messag logger current enabl finest messag level given messag forward regist output Handler::Handler object msg string messag key messag catalog
Logger::severe log sever messag construct log level messag actual log logger current enabl sever messag level messag construct invok supplier function forward regist output Handler::Handler object msgsupplier function call produc desir log messag
Logger::warning log warn messag construct log level messag actual log logger current enabl warn messag level messag construct invok supplier function forward regist output Handler::Handler object msgsupplier function call produc desir log messag
Logger::info log info messag construct log level messag actual log logger current enabl info messag level messag construct invok supplier function forward regist output Handler::Handler object msgsupplier function call produc desir log messag
Logger::config log config messag construct log level messag actual log logger current enabl config messag level messag construct invok supplier function forward regist output Handler::Handler object msgsupplier function call produc desir log messag
Logger::fine log fine messag construct log level messag actual log logger current enabl fine messag level messag construct invok supplier function forward regist output Handler::Handler object msgsupplier function call produc desir log messag
Logger::finer log finer messag construct log level messag actual log logger current enabl finer messag level messag construct invok supplier function forward regist output Handler::Handler object msgsupplier function call produc desir log messag
Logger::finest log finest messag construct log level messag actual log logger current enabl finest messag level messag construct invok supplier function forward regist output Handler::Handler object msgsupplier function call produc desir log messag
Logger::setLevel Set::Set log level specifi messag level log logger messag level lower valu discard level valu level turn log level null mean node inherit level nearest ancestor specif non null level valu newlevel valu log level null
Logger::getLevel get log Level::Level specifi Logger::Logger result null mean logger effect level inherit parent logger level
Logger::isLoggable check messag given level actual log logger check base logger effect level inherit parent level messag log level given messag level current log
Logger::addHandler add log Handler::Handler receiv log messag default logger send output parent logger typic root Logger::Logger configur set handler essenti act default handler logger handler log Handler::Handler
Logger::setUseParentHandlers specifi logger send output parent Logger::Logger mean logrecord written parent handler potenti parent recurs namespac useparenthandl output sent logger parent
Logger::findResourceBundle privat util map resourc bundl name actual resourc bundl use entri cach return null null name return null find resourc bundl suitabl previous cach valu name ResourceBundle::ResourceBundle locat usercallersclassload search use caller ClassLoader::ClassLoader ResourceBundle::ResourceBundle specifi name null found
Logger::getParent return parent Logger::Logger return nearest extant parent namespac thus Logger::Logger call Logger::Logger call creat logger exist call getpar Logger::Logger return Logger::Logger result null call root Logger::Logger namespac nearest exist parent Logger::Logger
Logger::setParent Set::Set parent Logger::Logger LogManager::LogManager updat Logger::Logger namespac chang call parent parent logger
FileHandler::FileHandler file log handler filehandl write specifi file write rotat set file rotat set file file reach given size limit close rotat file open success older file name ad base filenam default buffer enabl io librari log record flush complet default xmlformatt format configur default filehandl initi use logmanag configur properti where lt handler name gt refer fulli qualifi name handler properti defin invalid valu specifi default valu lt handler name gt level specifi default level handler default level lt handler name gt filter specifi name filter use default filter lt handler name gt formatt specifi name formatt use default util log xmlformatt lt handler name gt encod name charact set encod use default default platform encod lt handler name gt limit specifi approxim maximum amount write byte file zero limit default limit lt handler name gt count specifi output file cycl default lt handler name gt pattern specifi pattern generat output file name see detail default log lt handler name gt append specifi FileHandler::FileHandler append exist file default fals exampl properti FileHandler::FileHandler util log filehandl level info util log filehandl formatt util log simpleformatt custom handler com foo myhandl properti com foo myhandl level info com foo myhandl formatt util log simpleformatt pattern consist string includ compon replac runtim local pathnam separ system temporari directori valu user system properti generat number distinguish rotat log uniqu number resolv conflict translat singl percent sign field specifi file count greater generat number ad end generat filenam dot thus exampl pattern log count typic caus log file written solari var tmp java0 log var tmp java1 log window 95 typic written temp java0 log temp java1 log generat number follow sequenc normal uniqu field set filehandl tri open filenam find file current use process increment uniqu number field repeat filehandl find file name current use conflict field specifi ad end filenam dot automat ad generat number thus process tri log fred txt end use fred0 txt fred1 txt fred2 txt first file rotat sequenc note use uniqu avoid conflict guarante work reliabl use local disk file system
FileHandler::configure configur FileHandler::FileHandler LogManager::LogManager properti default valu specifi javadoc
FileHandler::FileHandler construct default filehandl configur entir logmanag properti default valu
FileHandler::FileHandler initi filehandl write given filenam filehandl configur base logmanag properti default valu given pattern argument filenam pattern file limit set limit file count set limit amount data written use care pattern name output file
FileHandler::FileHandler initi filehandl write given filenam option append filehandl configur base logmanag properti default valu given pattern argument filenam pattern file limit set limit file count set append mode set given append argument limit amount data written use care pattern name output file append specifi append mode
FileHandler::FileHandler initi filehandl write set file approxim given limit written file file open output cycl set count file filehandl configur base logmanag properti default valu given pattern argument filenam pattern file limit set limit argument file count set given count argument count pattern pattern name output file limit maximum number byte write file count number file use
FileHandler::FileHandler initi filehandl write set file option append approxim given limit written file file open output cycl set count file filehandl configur base logmanag properti default valu given pattern argument filenam pattern file limit set limit argument file count set given count argument append mode set given append argument count pattern pattern name output file limit maximum number byte write file count number file use append specifi append mode
FileHandler::generate generat file base user suppli pattern generat number integ uniqu suffix pattern pattern name output file generat generat number distinguish rotat log uniqu uniqu number resolv conflict generat File::File
MemoryHandler::setPushLevel Set::Set pushlevel logrecord copi intern buffer level greater equal pushlevel push call newlevel valu pushlevel
ConsoleHandler::ConsoleHandler handler publish log record system err default simpleformatt generat brief summari configur default consolehandl initi use logmanag configur properti where refer fulli qualifi name handler properti defin invalid valu specifi default valu lt handler name gt level specifi default level handler default level info lt handler name gt filter specifi name filter use default filter lt handler name gt formatt specifi name formatt use default util log simpleformatt lt handler name gt encod name charact set encod use default default platform encod exampl properti ConsoleHandler::ConsoleHandler util log consolehandl level info util log consolehandl formatt util log simpleformatt custom handler com foo myhandl properti com foo myhandl level info com foo myhandl formatt util log simpleformatt
ConsoleHandler::ConsoleHandler creat consolehandl system err consolehandl configur base logmanag properti default valu
ErrorManager::ErrorManager ErrorManager::ErrorManager object attach handler process error occur Handler::Handler Logging::Logging process log output Handler::Handler encount throw Exception::Exception issuer log call unlik interest Handler::Handler call associ ErrorManager::ErrorManager
StreamHandler::StreamHandler creat streamhandl given formatt output stream target output stream formatt Formatter::Formatter format output
StreamHandler::setEncoding Set::Set chang charact encod handler encod set logrecord written handler encod name support charact encod null indic default platform encod
SplittableRandom::SplittableRandom generat uniform pseudorandom valu applic use context isol parallel comput generat subtask Class::Class SplittableRandom::SplittableRandom support produc pseudorandom number type int doubl similar usag differ seri generat valu pass diehard suit test independ uniform properti random number generat recent valid test valid type rang similar properti expect hold approxim period length seri generat valu repeat 64 Method::Method construct return SplittableRandom::SplittableRandom instanc share mutabl state current instanc probabl valu collect generat object statist properti quantiti valu generat singl thread use singl SplittableRandom::SplittableRandom object instanc SplittableRandom::SplittableRandom thread safe design split share thread exampl comput use random number includ construct form subtask asplittablerandom split fork provid addit generat random stream employ techniqu stream parallel mode instanc SplittableRandom::SplittableRandom cryptograph secur consid instead use secur sensit applic addit default construct instanc use cryptograph random seed util securerandomse set
AbstractMap::toString return String::String represent map entri implement return string represent entri key follow equal charact follow string represent entri valu String::String represent map entri
AbstractMap::toString return String::String represent map entri implement return string represent entri key follow equal charact follow string represent entri valu String::String represent map entri
Attributes::getValue return valu specifi attribut name specifi string null attribut found attribut name case insensit defin name attribut name string String::String valu specifi attribut name null found
Attributes::getValue return valu specifi attribut name null attribut found defin name attribut name object String::String valu specifi attribut name null found
Attributes::put associ specifi valu specifi attribut name key Map::Map Map::Map previous contain map attribut name old valu replac name attribut name valu attribut valu previous valu attribut null
Attributes::putValue associ specifi valu specifi attribut name specifi String::String attribut name case insensit Map::Map previous contain map attribut name old valu replac defin name attribut name string valu attribut valu previous valu attribut null
Attributes::remove remov attribut specifi name key Map::Map return previous attribut valu null name attribut name previous valu attribut null
Attributes::containsValue return Map::Map map attribut name key specifi valu valu attribut valu Map::Map map attribut name specifi valu
Attributes::containsKey return Map::Map contain specifi attribut name key name attribut name Map::Map contain specifi attribut name
Attributes::putAll copi attribut name valu map specifi Attributes::Attributes Map::Map duplic map replac attr Attributes::Attributes store map
Attributes::clear remov attribut Map::Map
Attributes::size return number attribut Map::Map
Attributes::isEmpty return Map::Map contain attribut
Attributes::keySet return Set::Set view attribut name key contain Map::Map
Attributes::values return Collection::Collection view attribut valu contain Map::Map
Attributes::entrySet return Collection::Collection view attribut name valu map contain Map::Map
Attributes::equals compar specifi Attributes::Attributes object Map::Map equal return given object instanc Attributes::Attributes Attributes::Attributes object repres map Object::Object compar specifi Object::Object equal Map::Map
Attributes::hashCode return hash valu Map::Map
Attributes::toString return attribut name String::String
JarInputStream::createZipEntry creat JarEntry::JarEntry ZipEntry::ZipEntry specifi jar file entri name manifest attribut specifi jar file entri name copi jarentri name name jar zip file entri JarEntry::JarEntry object creat
JarEntry::JarEntry creat JarEntry::JarEntry field taken specifi ZipEntry::ZipEntry object ze ZipEntry::ZipEntry object creat JarEntry::JarEntry
JarFile::getEntry return ZipEntry::ZipEntry given entri name null found name jar file entri name ZipEntry::ZipEntry given entri name null found
Manifest::getEntries return Map::Map entri contain Manifest::Manifest entri repres String::String name key associ Attributes::Attributes valu Map::Map permit null key entri null key creat entri written use Map::Map entri contain Manifest::Manifest
Manifest::read read Manifest::Manifest specifi InputStream::InputStream entri name attribut read merg current manifest entri input stream
Manifest::equals return specifi Object::Object Manifest::Manifest Attributes::Attributes entri object compar specifi Object::Object Manifest::Manifest Attributes::Attributes entri
Pack200::unpack read Pack200::Pack200 archiv write encod jar JarOutputStream::JarOutputStream entir content input stream read effici read Pack200::Pack200 archiv file pass File::File object use altern describ close input output output accumul element InputStream::InputStream JarOutputStream::JarOutputStream
Pack200::unpack read Pack200::Pack200 archiv write encod jar JarOutputStream::JarOutputStream close output output accumul element File::File JarOutputStream::JarOutputStream
EventObject::toString return String::String represent EventObject::EventObject String::String represent EventObject::EventObject
StringTokenizer::StringTokenizer string token allow break string token token simpler StreamTokenizer::StreamTokenizer StringTokenizer::StringTokenizer distinguish identifi number quot string recogn skip comment set delimit charact separ token specifi creation time token basi instanc StringTokenizer::StringTokenizer behav depend creat returndelim flag valu fals flag fals delimit charact serv separ token token maxim sequenc consecut charact delimit flag delimit charact consid token token thus delimit charact maxim sequenc consecut charact delimit stringtoken object intern maintain current posit string token oper advanc current posit charact process token return take substr string creat stringtoken object exampl use token print output stringtoken legaci retain compat reason use discourag recommend seek function use split string util regex packag instead exampl illustr string split break string basic token print output
StringTokenizer::setMaxDelimCodePoint Set::Set maxdelimcodepoint highest char delimit set
StringTokenizer::StringTokenizer construct string token specifi string charact delim argument delimit separ token returndelim flag delimit charact return token delimit return string length flag fals delimit charact skip serv separ token note delim null constructor throw tri invok result stringtoken result nullpointerexcept str string pars delim delimit returndelim flag indic return delimit token
StringTokenizer::StringTokenizer construct string token specifi string charact delim argument delimit separ token delimit charact treat token note delim null constructor throw tri invok result stringtoken result nullpointerexcept str string pars delim delimit
StringTokenizer::StringTokenizer construct string token specifi string token use default delimit set nbsp 92 92 92 92 space charact tab charact newlin charact carriag return charact form feed charact delimit charact treat token str string pars
StringTokenizer::hasMoreTokens test token avail token string return subsequ call nexttoken argument success return token token string current posit fals
StringTokenizer::nextToken return token string token token string token
StringTokenizer::nextToken return token string token string first set charact consid delimit stringtoken object chang charact string delim token string current posit return current posit advanc recogn token delimit set remain default call delim delimit token switch delimit set
StringTokenizer::hasMoreElements return valu StringTokenizer::hasMoreTokens exist implement Enumeration::Enumeration interfac token fals
StringTokenizer::nextElement return valu nexttoken declar return valu Object::Object String::String exist implement Enumeration::Enumeration interfac token string
StringTokenizer::countTokens calcul number time token nexttoken call generat current posit advanc number token remain string use current delimit set
Calendar::Calendar Calendar::Calendar abstract provid convert specif instant time set year month day month Calendar::HOUR manipul calendar field get date week instant time repres millisecond valu offset januari 1970 000000 000 gmt gregorian provid addit field implement concret calendar system packag field defin protect local sensit Calendar::Calendar provid getinst get general use object type Calendar::Calendar getinst return Calendar::Calendar object calendar field initi current date time Calendar::Calendar object produc calendar field valu implement date time format particular languag calendar style exampl japanes gregorian japanes tradit Calendar::Calendar defin rang valu return calendar field mean exampl first month calendar system valu month januari calendar valu defin concret subclass era see individu field document subclass document detail get set Calendar::Calendar Field::Field valu calendar field valu set call set field valu set Calendar::Calendar interpret calcul time valu millisecond epoch valu calendar field call get Calendar::getTimeInMillis gettim add roll involv calcul lenienc Calendar::Calendar mode interpret calendar field lenient non lenient Calendar::Calendar lenient mode accept wider rang calendar field valu produc Calendar::Calendar recomput calendar field valu return get calendar field normal exampl lenient GregorianCalendar::GregorianCalendar interpret month januari day month 32 februari Calendar::Calendar non lenient mode throw inconsist calendar field exampl GregorianCalendar::GregorianCalendar produc day month valu length month non lenient GregorianCalendar::GregorianCalendar throw calcul time calendar field valu rang field valu set Calendar::Calendar defin local specif seven day week use paramet first day week minim day first week number taken local resourc data Calendar::Calendar construct specifi explicit set valu set get week month week year field Calendar::Calendar determin first week month year refer point first week month year defin earliest seven day period begin getfirstdayofweek contain getminimaldaysinfirstweek day month year week number preced first week week number follow note normal number return get exampl specif Calendar::Calendar subclass design week week year week previous year calendar field resolut comput date time calendar field insuffici comput year month day month inconsist tuesday juli 15 1996 gregorian juli 15 1996 actual monday Calendar::Calendar resolv calendar field valu determin date time default combin calendar field recent combin determin recent set singl field calendar field valu haven set select field combin Calendar::Calendar use default valu default valu field vari concret calendar system exampl GregorianCalendar::GregorianCalendar default field start epoch year 1970 month januari day month note ambigu interpret singular time resolv 2359 last minut day 0000 first minut day thus 2359 dec 31 1999 lt 0000 jan 2000 lt 0001 jan 2000 histor precis midnight belong noon belong pm day 1200 midnight lt 1201 1200 pm noon lt 1201 pm date time format string part definit calendar modifi overrid user runtim use format date field manipul calendar field chang use set add roll set valu chang calendar field valu addit set intern member variabl indic calendar field chang calendar field chang calendar time valu millisecond recomput call get gettim gettimeinmilli add roll made thus multipl call set trigger multipl unnecessari comput result chang calendar field use set calendar field chang depend calendar field calendar field valu calendar system addit get necessarili return valu set call set calendar field recomput specif determin concret calendar exampl consid GregorianCalendar::GregorianCalendar origin set august 31 1999 call set calendar month calendar septemb set date septemb 31 1999 temporari intern represent resolv octob 1999 gettim call call set calendar day month 30 call gettim set date septemb 30 1999 recomput occur set add delta add delta field equival call set get delta adjust add rule valu field call valu field call delta modulo overflow occur field overflow occur field valu exceed rang result larger field increment decrement field valu adjust rang add rule smaller field expect invari imposs equal prior valu chang minimum maximum field chang constraint time zone offset chang valu adjust close expect valu smaller field repres smaller unit time Calendar::HOUR smaller field day month adjust made smaller field expect invari calendar system determin field expect invari addit set add forc immedi recomput calendar millisecond field exampl consid GregorianCalendar::GregorianCalendar origin set august 31 1999 call add calendar month 13 set calendar septemb 30 2000 add rule set month field septemb ad 13 month august give septemb year day month 31 septemb GregorianCalendar::GregorianCalendar add rule set day month 30 closest valu smaller field day week adjust rule expect chang month chang GregorianCalendar::GregorianCalendar roll delta add delta field chang larger field equival call add delta adjust roll rule larger field unchang call larger field repres larger unit time day month larger field Calendar::HOUR exampl see usag model motiv behavior add roll consid user interfac compon increment decrement button month day year GregorianCalendar::GregorianCalendar interfac read januari 31 1999 user press month increment button read implement use set read march 1999 result februari 28 1999 furthermor user press month increment button read march 31 1999 march 28 1999 origin date use add roll depend larger field affect user interfac behav user intuit expect
Calendar::ERA Field::Field number get set indic era ad bc julian calendar calendar specif valu see subclass document
Calendar::YEAR Field::Field number get set indic year calendar specif valu see subclass document
Calendar::MONTH Field::Field number get set indic month calendar specif valu first month year gregorian julian calendar januari last depend number month year
Calendar::WEEK year Field::Field number get set indic week number current year first week year defin getfirstdayofweek getminimaldaysinfirstweek valu subclass defin valu week year day first week year
Calendar::WEEK month Field::Field number get set indic week number current month first week month defin getfirstdayofweek getminimaldaysinfirstweek valu subclass defin valu week month day first week month
Calendar::DATE Field::Field number get set indic day month synonym day month first day month valu
Calendar::DAY month Field::Field number get set indic day month synonym date first day month valu
Calendar::DAY year Field::Field number get set indic day number current year first day year valu
Calendar::DAY week Field::Field number get set indic day week field take valu sunday monday tuesday wednesday thursday friday saturday
Calendar::DAY week month Field::Field number get set indic ordin number day week current month day week field uniqu specifi day month week month week year field valu depend getfirstdayofweek getminimaldaysinfirstweek day month correspond day week month 14 correspond day week month day week month indic week day week month negat valu count end month last sunday month specifi day week sunday day week month negat valu count backward align differ month posit valu exampl month 31 day day week month overlap day week month end
Calendar::AM pm Field::Field number get set indic Calendar::HOUR noon 100415 250 pm pm Calendar::PM
Calendar::HOUR Field::Field number get set indic hour morn afternoon Calendar::HOUR 12 hour clock 11 noon midnight repres 12 100415 250 pm Calendar::HOUR 10
Calendar::HOUR day Field::Field number get set indic hour day hour day 24 hour clock 100415 250 pm hour day 22
Calendar::MINUTE Field::Field number get set indic minut hour 100415 250 pm minut
Calendar::SECOND Field::Field number get set indic minut 100415 250 pm 15
Calendar::MILLISECOND Field::Field number get set indic millisecond 100415 250 pm millisecond 250
Calendar::ZONE offset Field::Field number get set indic raw offset gmt millisecond field reflect correct gmt offset valu time zone Calendar::Calendar TimeZone::TimeZone implement subclass support histor gmt offset chang
Calendar::DST offset Field::Field number get set indic daylight offset millisecond field reflect correct daylight offset valu time zone Calendar::Calendar TimeZone::TimeZone implement subclass support histor daylight Time::Time schedul chang
Calendar::FIELD count number distinct field recogn get set Field::Field number rang field count
Calendar::UNDECIMBER valu field indic thirteenth month year GregorianCalendar::GregorianCalendar use valu lunar calendar
Calendar::setInstant set instant paramet instant valu given equival call instant Date::Date repres millisecond offset epoch CalendarBuilder::CalendarBuilder
Calendar::set set field paramet given valu field index Field::Field valu valid perform rang valu normal lenient mode detect invalid valu non lenient mode build Calendar::Calendar field index Calendar::Calendar field valu field valu CalendarBuilder::CalendarBuilder
Calendar::setLocale set local paramet given local local given CalendarBuilder::CalendarBuilder calendar type explicit given call Locale::Locale valu determin type Calendar::Calendar built week definit paramet explicit given call Locale::Locale default valu local CalendarBuilder::CalendarBuilder
Calendar::build return Calendar::Calendar built paramet set setter calendar type given determin Calendar::Calendar creat explicit calendar type given local default calendar creat calendar type iso8601 set date min valu prolept gregorian calendar week definit paramet set note GregorianCalendar::GregorianCalendar creat iso8601 return gregori default valu local time zone paramet haven given explicit rang field valu normal lenient mode detect invalid valu non lenient mode Calendar::Calendar built paramet CalendarBuilder::CalendarBuilder
Calendar::Calendar construct Calendar::Calendar default time zone default local
Calendar::Calendar construct calendar specifi time zone local zone time zone use alocal local week data
Calendar::getInstance get calendar use default time zone local Calendar::Calendar return base current time default time zone default local Calendar::Calendar
Calendar::getInstance get calendar use specifi time zone default local Calendar::Calendar return base current time given time zone default local zone time zone use Calendar::Calendar
Calendar::getInstance get calendar use default time zone specifi local Calendar::Calendar return base current time default time zone given local alocal local week data Calendar::Calendar
Calendar::getInstance get calendar specifi time zone local Calendar::Calendar return base current time given time zone given local zone time zone use alocal local week data Calendar::Calendar
Calendar::getAvailableLocales return array local getinst return local instanc array return contain Locale::Locale instanc equal array local local Calendar::Calendar instanc avail
Calendar::getTime return Date::Date object repres Calendar::Calendar time valu millisecond offset Date::Date repres time valu
Calendar::setTime set calendar time given Date::Date note call settim date max valu date min valu yield incorrect field valu get date given Date::Date
Calendar::getTimeInMillis return calendar time valu millisecond current time utc millisecond epoch
Calendar::setTimeInMillis set calendar current time given valu milli time utc millisecond epoch
Calendar::get return valu given calendar field lenient mode calendar field normal non lenient mode calendar field valid throw calendar field rang valu normal valid handl process calendar system depend field given calendar field valu given calendar field
Calendar::internalSet set valu given calendar field affect set state field Calendar::Calendar instanc
Calendar::set set given calendar field given valu valu interpret regardless lenienc mode field given calendar field valu valu set given calendar field
Calendar::set set valu calendar field year month day month previous valu calendar field retain desir call first year valu set year calendar field month valu set month calendar field Month::Month valu base januari date valu set day month calendar field
Calendar::set set valu calendar field year month day month hour day minut previous valu field retain desir call first year valu set year calendar field month valu set month calendar field Month::Month valu base januari date valu set day month calendar field hourofday valu set hour day calendar field minut valu set minut calendar field
Calendar::set set valu field year month day month hour day minut previous valu field retain desir call first year valu set year calendar field month valu set month calendar field Month::Month valu base januari date valu set day month calendar field hourofday valu set hour day calendar field minut valu set minut calendar field valu set calendar field
Calendar::clear set calendar field valu time valu millisecond offset Calendar::Calendar undefin mean return fals calendar field date time calcul treat field set Calendar::Calendar implement use specif default field valu date time calcul exampl GregorianCalendar::GregorianCalendar use 1970 year field valu undefin
Calendar::clear set given calendar field valu time valu millisecond offset Calendar::Calendar undefin mean return fals date time calcul treat field set Calendar::Calendar implement use field specif default valu date time calcul field handl independ appli clear field doesn reset hour day valu Calendar::Calendar use reset hour valu field calendar field clear
Calendar::getDisplayName return string represent calendar field valu given style local string represent applic null return call get calendar field valu string represent applic given calendar field exampl Calendar::Calendar GregorianCalendar::GregorianCalendar date 2005 01 01 string represent field januari style local jan style string represent avail field return null default implement support calendar field name given local field calendar field string represent return style style appli string represent local local string represent calendar type specifi local ignor string represent given field given style null string represent applic
Calendar::getDisplayNames return Map::Map contain name calendar field given style local correspond field valu exampl Calendar::Calendar return map contain jan feb style local narrow name uniqu due use singl charact sunday saturday case narrow name includ return Map::Map valu calendar field taken account determin set display name exampl Calendar::Calendar lunisolar calendar system year valu given field leap month return month name contain leap month name month name map valu specif year default implement support display name contain exampl field style return Map::Map contain string return field calendar field display name return style style appli string represent local local display name Map::Map contain display name style local field valu null display name defin field
Calendar::setFieldsNormalized set state calendar field specifi fieldmask unset fieldmask specifi calendar field state Calendar::Calendar becom calendar field sync time valu millisecond offset epoch fieldmask field mask indic calendar field sync time valu
Calendar::setUnnormalized mark Calendar::Calendar sync
Calendar::getAvailableCalendarTypes return unmodifi Set::Set contain calendar type support Calendar::Calendar runtim environ avail calendar type Set::Set return contain gregori calendar type don includ alias gregorian gregori unmodifi Set::Set contain avail calendar type
Calendar::getCalendarType return calendar type Calendar::Calendar Calendar::Calendar type defin unicod Locale::Locale data markup languag ldml specif default implement return name Calendar::Calendar instanc subclass implement ldml defin calendar system overrid return appropri calendar type ldml defin calendar type name Calendar::Calendar instanc
Calendar::equals compar Calendar::Calendar specifi Object::Object result argument Calendar::Calendar object calendar system repres time valu millisecond offset Calendar::Calendar paramet object Calendar::Calendar paramet valu repres isleni getfirstdayofweek getminimaldaysinfirstweek gettimezon differ paramet Calendar::Calendar return fals use compar time valu obj object compar object equal obj fals
Calendar::before return Calendar::Calendar repres time time repres specifi Object::Object equival Calendar::Calendar instanc return fals Object::Object compar time Calendar::Calendar time repres fals
Calendar::after return Calendar::Calendar repres time time repres specifi Object::Object equival Calendar::Calendar instanc return fals Object::Object compar time Calendar::Calendar time repres fals
Calendar::compareTo compar time valu millisecond offset repres Calendar::Calendar object anothercalendar Calendar::Calendar compar valu time repres argument equal time repres Calendar::Calendar valu time Calendar::Calendar time repres argument valu greater time Calendar::Calendar time repres argument
Calendar::add add subtract specifi amount time given calendar field base calendar rule exampl subtract day current time calendar achiev call add calendar day month field calendar field amount amount date time ad field
Calendar::roll add specifi sign amount specifi calendar field chang larger field negat amount mean roll note default implement Calendar::Calendar repeat call version roll unit exampl day month field 31 roll februari leav set 28 GregorianCalendar::GregorianCalendar version function take care subclass provid overrid function field calendar field amount sign amount add calendar field
Calendar::isWeekDateSupported return Calendar::Calendar support week date default implement return fals Calendar::Calendar support week date fals
Calendar::getWeekYear return week year repres Calendar::Calendar week year sync week cycl first day week year default implement throw week year Calendar::Calendar
Calendar::setWeekDate set date Calendar::Calendar given date specifi week year week year day week set calendar field time valu calcul return weekofyear valid week year rang weekyear weekyear WeekFields::weekOfYear valu adjust lenient mode IllegalArgumentException::IllegalArgumentException thrown non lenient mode default implement throw UnsupportedOperationException::UnsupportedOperationException weekyear week year weekofyear week number base weekyear dayofweek day week valu constant field
Calendar::getWeeksInWeekYear return number week week year repres Calendar::Calendar default implement throw UnsupportedOperationException::UnsupportedOperationException number week week year
Calendar::getMinimum return minimum valu given calendar field Calendar::Calendar instanc minimum valu defin smallest valu return time valu minimum valu depend calendar system specif paramet instanc field calendar field minimum valu given calendar field
Calendar::getMaximum return maximum valu given calendar field Calendar::Calendar instanc maximum valu defin largest valu return time valu maximum valu depend calendar system specif paramet instanc field calendar field maximum valu given calendar field
Calendar::getGreatestMinimum return highest minimum valu given calendar field Calendar::Calendar instanc highest minimum valu defin largest valu return time valu greatest minimum valu depend calendar system specif paramet instanc field calendar field highest minimum valu given calendar field
Calendar::getLeastMaximum return lowest maximum valu given calendar field Calendar::Calendar instanc lowest maximum valu defin smallest valu return time valu maximum valu depend calendar system specif paramet instanc exampl Calendar::Calendar gregorian calendar system return 28 day month field 28th last day shortest month calendar februari common year field calendar field lowest maximum valu given calendar field
Calendar::getActualMinimum return minimum valu specifi calendar field given time valu Calendar::Calendar default implement use iter algorithm determin actual minimum valu calendar field subclass overrid effici implement case simpli return getminimum field calendar field minimum given calendar field time valu Calendar::Calendar
Calendar::getActualMaximum return maximum valu specifi calendar field given time valu Calendar::Calendar exampl actual maximum valu month field 12 year 13 year hebrew calendar system default implement use iter algorithm determin actual maximum valu calendar field subclass overrid effici implement field calendar field maximum given calendar field time valu Calendar::Calendar
Calendar::setWeekCountData firstdayofweek minimaldaysinfirstweek local depend figur week count specif date given local set Calendar::Calendar construct desiredlocal given local
Calendar::writeObject save state object stream serial ideal Calendar::Calendar write state data current time write field data field istimeset arefieldsset isset nextstamp part persist state unfortun didn happen jdk ship compat jdk write field valu state flag nextstamp remov serial stream happen futur
Calendar::toInstant convert object convers creat Instant::Instant repres point time line Calendar::Calendar instant repres point time line
SortedMap::SortedMap further provid total order key map order accord key typic sort map creation time order reflect iter sort map collect view return entryset keyset valu addit oper take advantag order interfac map analogu key insert sort map implement Comparable::Comparable interfac accept specifi compar furthermor key mutual compar k1 compareto k2 compar compar k1 k2 throw ClassCastException::ClassCastException key k1 k2 sort map attempt violat restrict caus offend constructor invoc throw ClassCastException::ClassCastException note order maintain sort map explicit compar consist equal sort map correct implement Map::Map interfac see Comparable::Comparable interfac Comparator::Comparator interfac precis definit consist equal Map::Map interfac defin term equal oper sort map perform key comparison use compareto compar key deem equal standpoint sort map equal behavior tree map defin order inconsist equal fail obey general contract Map::Map interfac general purpos sort map implement provid standard constructor enforc recommend requir constructor specifi interfac expect standard constructor sort map implement argument constructor creat empti sort map sort accord natur order key constructor singl argument type Comparator::Comparator creat empti sort map sort accord specifi compar constructor singl argument type Map::Map creat map key valu map argument sort accord key natur order constructor singl argument type SortedMap::SortedMap creat sort map key valu map order input sort map note return submap restrict key rang rang half open includ low endpoint endpoint where applic close rang includ endpoint key type allow calcul successor given key mere request subrang lowendpoint successor highendpoint exampl suppos map key string idiom obtain view contain key valu map key low inclus similar techniqu generat open rang contain endpoint idiom obtain view contain key valu map key low exclus interfac member type key maintain map type map valu
SortedMap::subMap return view portion map key rang fromkey inclus tokey exclus fromkey tokey equal return map empti return map map chang return map reflect map versa return map support option map oper map support return map throw IllegalArgumentException::IllegalArgumentException attempt insert key rang fromkey low endpoint inclus key return map tokey endpoint exclus key return map view portion map key rang fromkey inclus tokey exclus
SortedMap::headMap return view portion map key strict tokey return map map chang return map reflect map versa return map support option map oper map support return map throw IllegalArgumentException::IllegalArgumentException attempt insert key rang tokey endpoint exclus key return map view portion map key strict tokey
SortedMap::tailMap return view portion map key greater equal fromkey return map map chang return map reflect map versa return map support option map oper map support return map throw IllegalArgumentException::IllegalArgumentException attempt insert key rang fromkey low endpoint inclus key return map view portion map key greater equal fromkey
SortedMap::firstKey return first lowest key current map first lowest key current map
SortedMap::lastKey return last highest key current map last highest key current map
SortedMap::keySet return view key contain map set iter return key ascend order set map chang map reflect set versa map modifi iter set progress iter remov oper result iter undefin set support element remov remov correspond map map iter remov set remov removeal retainal clear oper support add addal oper set view key contain map sort ascend order
ActivationGroup::ActivationGroup ActivationGroup::ActivationGroup respons creat instanc activat object group inform ActivationMonitor::ActivationMonitor object becom activ inact group becom inact ActivationGroup::ActivationGroup initi creat side effect creat ActivationDesc::ActivationDesc explicit ActivationGroupID::ActivationGroupID first activat object group activationgroup creategroup side effect activ first object group ActivationGroupDesc::ActivationGroupDesc regist activ recreat ActivationGroup::ActivationGroup activ spawn separ vm child process exampl regist activ group direct activ request appropri group implement specif vms spawn activ group creat activationgroup creategroup static creategroup requir group creat group concret subclass ActivationGroup::ActivationGroup group constructor take argument group ActivationGroupID::ActivationGroupID group initi data rmi marshalledobject creat default implement ActivationGroup::ActivationGroup overrid system properti properti request ActivationGroupDesc::ActivationGroupDesc creat set default system secur manag requir specif properti set object activ group creat Properties::Properties object contain properti creat ActivationGroupDesc::ActivationGroupDesc Properties::Properties object use activationgroup creategroup creat ActivationDesc::ActivationDesc default ActivationGroupDesc::ActivationGroupDesc creat requir use secur manag activativationgroupdescriptor properti list set secur manag properti name secur manag instal
ActivationGroup::setSystem Set::Set activ system vm activ system set group current activ activ system set call getsystem attempt obtain refer ActivationSystem::ActivationSystem look name rmi activ activationsystem activ registri default port number look activ system defin activationsystem system port port overridden set properti rmi activ port secur manag first call secur manag SecurityManager::checkSetFactory result SecurityException::SecurityException system remot refer ActivationSystem::ActivationSystem
ActivationGroupDesc::ActivationGroupDesc construct group descriptor use system default group implement locat Properties::Properties specifi environ overrid overrid system properti group implement vm command environ control exact command option start child vm null accept rmid default constructor creat ActivationGroupDesc::ActivationGroupDesc null group name indic system default ActivationGroup::ActivationGroup implement overrid set properti set group recreat cmd control option execut vm process null
ActivationGroupDesc::equals compar command environ content equal obj Object::Object compar Objects::Objects equal fals
ActivationGroupDesc::readObject readobject custom serial read object serial form follow first invok ObjectInputStream::defaultReadObject specifi object input stream option null option set zero length array String::String
ActivationGroupDesc::equals compar activ group descriptor content equal obj Object::Object compar Objects::Objects equal fals
ActivationID::equals compar activ content equal return condit uniqu identifi equival content activ specifi identifi refer remot object obj Object::Object compar Objects::Objects equal fals
Activatable::Activatable Constructor::Constructor activ export object specifi port activat remot object constructor take argument object activ identifi ActivationID::ActivationID object initi data MarshalledObject::MarshalledObject concret subclass call constructor activ paramet constructor describ side effect construct remot object export rmi runtim specifi port avail accept incom call client activ identifi object port port number object export
Activatable::Activatable Constructor::Constructor activ export object specifi port activat remot object constructor take argument object activ identifi ActivationID::ActivationID object initi data MarshalledObject::MarshalledObject concret subclass call constructor activ paramet constructor describ side effect construct remot object export rmi runtim specifi port avail accept incom call client activ identifi object port port number object export csf client side socket factori make call remot object ssf server side socket factori receiv remot call
ActivationGroupID::equals compar group identifi content equal return condit uniqu identifi equival content activ system specifi refer remot object obj Object::Object compar Objects::Objects equal fals
ActivationDesc::equals compar activ descriptor content equal obj Object::Object compar Objects::Objects equal fals
ActivationSystem::setActivationDesc Set::Set activ descriptor desc object activ identifi chang take effect subsequ activ object activ identifi activat object desc activ descriptor activat object previous valu activ descriptor
ActivationSystem::setActivationGroupDesc Set::Set activ group descriptor desc object activ group identifi chang take effect subsequ activ group activ group identifi activ group desc activ group descriptor activ group previous valu activ group descriptor
LocateRegistry::getRegistry return local creat remot refer remot object Registry::Registry specifi host port communic remot registri use suppli RMIClientSocketFactory::RMIClientSocketFactory csf creat Socket::Socket connect registri remot host port host host remot registri port port registri accept request csf client side Socket::Socket factori make connect registri csf null default client side Socket::Socket factori registri stub refer stub remot registri
LocateRegistry::createRegistry creat export Registry::Registry instanc local host use custom socket factori communic instanc registri creat listen incom request given port use ServerSocket::ServerSocket creat suppli RMIServerSocketFactory::RMIServerSocketFactory Registry::Registry instanc export static invok pass Registry::Registry instanc specifi port specifi RMIClientSocketFactory::RMIClientSocketFactory specifi RMIServerSocketFactory::RMIServerSocketFactory argument Registry::Registry instanc export known object identifi instanc construct valu port port registri accept request csf client side Socket::Socket factori make connect registri ssf server side ServerSocket::ServerSocket factori accept connect registri registri
ConnectIOException::ConnectIOException ConnectIOException::ConnectIOException thrown IOException::IOException occur make connect remot host remot call
RemoteObjectInvocationHandler::RemoteObjectInvocationHandler implement InvocationHandler::InvocationHandler interfac use Remote::Remote Method::Method invoc rmi invoc handler conjunct dynam proxi instanc replac pregener stub applic expect use remot object export use dynam proxi instanc proxi invoc handler
RemoteObjectInvocationHandler::invoke process invoc made encapsul proxi instanc proxi return result RemoteObjectInvocationHandler::RemoteObjectInvocationHandler implement follow process describ return hash valu proxi return argument arg instanc dynam proxi invoc handler equal invoc handler argument return fals return string represent proxi remot call made follow proxi instanc interfac thrown invok invoc handler RemoteRef::RemoteRef pass proxi arg hash defin section Remote::Remote Method::Method invoc rmi specif result return thrown remoteref invok check assign throw claus implement proxi wrap wrap thrown thrown invok thrown semant unspecifi argument produc instanc valid dynam proxi contain invoc handler proxi proxi instanc invok Method::Method instanc correspond interfac invok proxi instanc arg array object contain valu argument pass invoc proxi instanc null take argument valu return invoc proxi instanc
RMIClassLoaderSpi::loadClass provid implement load codebas url path option use suppli loader typic provid implement attempt resolv name use given defaultload specifi attempt resolv codebas url path implement return given name throw codebas list url separ space load null name name load defaultload addit contextu loader use null Class::Class object repres load
RMISocketFactory::RMISocketFactory RMISocketFactory::RMISocketFactory instanc rmi runtim order obtain client server socket rmi call use setsocketfactori request rmi runtim use socket factori instanc instead default implement default socket factori implement perform tier approach creat client socket first direct socket connect remot vm attempt fail due firewal runtim use http explicit port number server firewal allow type communic http cgi bin script server post rmi call http tunnel mechan disabl default behavior control rmi server disablehttp properti default valu set properti valu fals enabl http tunnel mechan deprec http tunnel http tunnel mechan describ specif http explicit port http cgi bin script deprec http tunnel mechan subject remov futur releas platform default socket factori implement creat server socket bound wildcard address accept request network interfac use rmisocketfactori creat server socket bound specif address restrict origin request exampl implement socket factori bind server socket ipv4 loopback address restrict rmi process request local host Set::Set rmi server hostnam system properti 127 ensur generat stub connect network interfac
RMISocketFactory::setSocketFactory Set::Set global socket factori rmi get socket remot object associ specif client server socket factori rmi socket factori set note rmisocketfactori set current secur manag allow set socket factori disallow SecurityException::SecurityException thrown fac socket factori
RMIClassLoader::loadClass load specifi name deleg pass null first argument name argument name name load Class::Class object repres load
RMIClassLoader::loadClass load codebas url codebas null behav null codebas given name deleg provid instanc pass result invok given url null codebas null first argument name argument null third argument codebas url load null name name load Class::Class object repres load
RMIClassLoader::loadClass load codebas url path deleg provid instanc pass codebas first argument name argument null third argument codebas list url separ space load null name name load Class::Class object repres load
RMIClassLoader::loadClass load codebas url path option use suppli loader caller make avail provid implement addit contextu loader consid loader caller stack typic provid implement attempt resolv name use given defaultload specifi attempt resolv codebas url path deleg provid instanc pass codebas first argument name argument defaultload third argument codebas list url separ space load null name name load defaultload addit contextu loader use null Class::Class object repres load
RMIClassLoader::getDefaultProviderInstance return canon instanc default provid servic provid interfac system properti rmi server rmiclassloaderspi defin RMIClassLoader::RMIClassLoader static use canon instanc default provid servic provid instanc secur manag checkpermiss invok runtimepermiss setfactori permiss result SecurityException::SecurityException default servic provid instanc implement follow return String::String repres codebas url path remot parti use download definit specifi format return string path url separ space codebas string return depend defin loader specifi loader system loader see parent system loader loader instal extens bootstrap loader repres null valu rmi server codebas properti possibl earlier cach valu return null return properti set loader instanc URLClassLoader::URLClassLoader return string space separ list extern form url return invok URLClassLoader::getURLs loader URLClassLoader::URLClassLoader creat provid servic invoc loadclass loadproxyclass permiss requir get associ codebas string arbitrari URLClassLoader::URLClassLoader instanc secur manag checkpermiss invok url return URLClassLoader::getURLs permiss return invok openconnect getpermiss url invoc throw SecurityException::SecurityException IOException::IOException valu rmi server codebas properti possibl earlier cach valu return null return properti set final loader instanc URLClassLoader::URLClassLoader valu rmi server codebas properti possibl earlier cach valu return null return properti set implement describ take String::String paramet name codebas space separ list url invoc associ codebas loader identifi use codebas argument conjunct current thread context loader see secur manag provid maintain intern tabl loader instanc instanc key pair parent loader codebas url path order list url codebas argument null codebas url path valu system properti rmi server codebas possibl earlier cach valu given codebas url path pass codebas argument invoc given context codebas loader loader tabl specifi codebas url path current thread context loader parent loader exist creat ad tabl tabl maintain strong refer contain loader order allow defin garbag collect reachabl order prevent arbitrari untrust implicit load virtual machin secur manag secur manag set codebas loader current thread context loader suppli codebas url path ignor remot load disabl return codebas loader specifi codebas url path secur manag call context permiss connect url codebas url path SecurityException::SecurityException thrown attempt load specifi name follow defaultload argument null first attempt load specifi name use defaultload evalu success load defaultload return ClassNotFoundException::ClassNotFoundException thrown thrown caller loadclass attempt load specifi name use codebas loader specifi codebas url path secur manag call context permiss connect url codebas url path current thread context loader instead codebas loader attempt return dynam proxi name interfac follow defaultload argument null name interfac resolv loader resolv interfac first attempt obtain dynam proxi use resolv interfac defin codebas loader attempt throw IllegalArgumentException::IllegalArgumentException attempt obtain dynam proxi resolv interfac defin defaultload attempt throw IllegalArgumentException::IllegalArgumentException throw ClassNotFoundException::ClassNotFoundException thrown thrown caller resolv interfac defin loader attempt obtain dynam proxi resolv interfac defin loader LinkageError::LinkageError thrown implement specifi interfac defin loader name interfac resolv codebas loader resolv interfac attempt obtain dynam proxi resolv interfac codebas loader attempt throw IllegalArgumentException::IllegalArgumentException throw ClassNotFoundException::ClassNotFoundException resolv interfac defin loader attempt obtain dynam proxi resolv interfac defin loader LinkageError::LinkageError thrown implement specifi interfac defin loader ClassNotFoundException::ClassNotFoundException thrown name interfac resolv canon instanc default servic provid
LoaderHandler::loadClass load locat specifi rmi server codebas properti name name load Class::Class object repres load
LoaderHandler::loadClass load url codebas url load name name load Class::Class object repres load
ServerNotActiveException::ServerNotActiveException ServerNotActiveException::ServerNotActiveException Exception::Exception thrown call remoteserv getclienthost getclienthost call servic remot call
RemoteObject::RemoteObject RemoteObject::RemoteObject implement lang object behavior remot object RemoteObject::RemoteObject provid remot semant Object::Object implement hashcod equal tostr
RemoteObject::equals compar remot object equal return boolean indic remot object equival specifi Object::Object remot object store hashtabl specifi Object::Object instanc RemoteObject::RemoteObject deleg return result invok equal paramet remot object argument obj Object::Object compar Objects::Objects equal fals
RemoteObject::toString return String::String repres valu remot object
RemoteRef::remoteEquals compar remot object equal return boolean indic remot object equival specifi Object::Object remot object store hashtabl obj Object::Object compar Objects::Objects equal fals
RemoteRef::remoteToString return String::String repres refer remot object string repres remot object refer
RemoteCall::getInputStream get InputStream::InputStream stub skeleton get result argument input stream read argument result
LogStream::setDefaultStream Set::Set default stream log newdefault default log stream
LogStream::setOutputStream Set::Set stream output log sent output stream log
ObjID::REGISTRY Object::Object number known ObjID::ObjID registri
ObjID::ACTIVATOR Object::Object number known ObjID::ObjID activ
ObjID::DGC Object::Object number known ObjID::ObjID distribut garbag collector
DecimalFormatSymbols::DecimalFormatSymbols repres set symbol decim separ group separ DecimalFormat::DecimalFormat format number DecimalFormat::DecimalFormat creat instanc DecimalFormatSymbols::DecimalFormatSymbols local data chang symbol get DecimalFormatSymbols::DecimalFormatSymbols object DecimalFormat::DecimalFormat modifi
DecimalFormatSymbols::DecimalFormatSymbols creat DecimalFormatSymbols::DecimalFormatSymbols object default local constructor construct instanc local support runtim environ support instal implement full local coverag use equival call
DecimalFormatSymbols::DecimalFormatSymbols creat DecimalFormatSymbols::DecimalFormatSymbols object given local constructor construct instanc local support runtim environ support instal implement full local coverag use specifi local contain number system instanc initi specifi number system jre implement support exampl return NumberFormat::NumberFormat instanc thai number system instead latin number system local desir local
DecimalFormatSymbols::getAvailableLocales return array local getinst return local instanc return array repres union local support runtim instal implement contain Locale::Locale instanc equal array local local DecimalFormatSymbols::DecimalFormatSymbols instanc avail
DecimalFormatSymbols::getInstance get DecimalFormatSymbols::DecimalFormatSymbols instanc default local provid access DecimalFormatSymbols::DecimalFormatSymbols instanc local support runtim support instal implement equival call DecimalFormatSymbols::DecimalFormatSymbols instanc
DecimalFormatSymbols::getInstance get DecimalFormatSymbols::DecimalFormatSymbols instanc specifi local provid access DecimalFormatSymbols::DecimalFormatSymbols instanc local support runtim support instal implement specifi local contain number system instanc initi specifi number system jre implement support exampl return NumberFormat::NumberFormat instanc thai number system instead latin number system local desir local DecimalFormatSymbols::DecimalFormatSymbols instanc
DecimalFormatSymbols::setGroupingSeparator set charact thousand separ french groupingsepar group separ
DecimalFormatSymbols::setDecimalSeparator set charact decim sign french decimalsepar charact decim sign
DecimalFormatSymbols::setPercent set charact percent sign arab percent charact percent sign
DecimalFormatSymbols::setMinusSign set charact repres sign explicit negat format specifi form prefix minussign posit format minussign charact repres sign
DecimalFormatSymbols::getCurrencySymbol return currenc symbol currenc DecimalFormatSymbols::DecimalFormatSymbols local currenc symbol
DecimalFormatSymbols::setCurrencySymbol set currenc symbol currenc DecimalFormatSymbols::DecimalFormatSymbols local currenc currenc symbol
DecimalFormatSymbols::getInternationalCurrencySymbol return iso 4217 currenc currenc DecimalFormatSymbols::DecimalFormatSymbols currenc
DecimalFormatSymbols::setInternationalCurrencySymbol set iso 4217 currenc currenc DecimalFormatSymbols::DecimalFormatSymbols currenc valid defin set currenc attribut correspond Currency::Currency instanc currenc symbol attribut currenc symbol DecimalFormatSymbols::DecimalFormatSymbols local currenc valid currenc attribut set null currenc symbol attribut modifi currencycod currenc
DecimalFormatSymbols::getCurrency get currenc DecimalFormatSymbols::DecimalFormatSymbols null currenc symbol attribut previous set valu valid iso 4217 currenc currenc null
DecimalFormatSymbols::setCurrency set currenc DecimalFormatSymbols::DecimalFormatSymbols set currenc symbol attribut currenc symbol DecimalFormatSymbols::DecimalFormatSymbols local intern currenc symbol attribut currenc iso 4217 currenc currenc currenc
Collator::Collator Collator::Collator perform local sensit String::String comparison use build search sort routin natur languag text Collator::Collator abstract base subclass implement specif collat strategi subclass RuleBasedCollator::RuleBasedCollator current platform applic wide set languag subclass creat handl local sensit use static factori getinst obtain appropri Collator::Collator object given local look subclass Collator::Collator understand detail particular collat strategi modifi strategi exampl show compar string use Collator::Collator default local set Collator::Collator strength properti determin level differ consid signific comparison strength provid Collator::PRIMARY Collator::SECONDARY Collator::TERTIARY Collator::IDENTICAL exact assign strength languag featur local depend exampl czech consid primari differ 283 secondari differ tertiari differ ident show case accent ignor compar String::String exact compar provid perform sort list String::String general necessari compar String::String multipl time case CollationKey::CollationKey provid perform CollationKey::CollationKey convert String::String seri bit compar bitwis CollationKey::CollationKey CollationKey::CollationKey creat Collator::Collator object given String::String note CollationKey::CollationKey Collator::Collator compar see descript exampl use CollationKey::CollationKey
Collator::PRIMARY Collator::Collator strength valu set primari differ consid signific comparison assign strength languag featur local depend common exampl base letter vs consid primari differ
Collator::SECONDARY Collator::Collator strength valu set secondari differ consid signific comparison assign strength languag featur local depend common exampl accent form base letter vs u00e4 consid secondari differ
Collator::TERTIARY Collator::Collator strength valu set tertiari differ consid signific comparison assign strength languag featur local depend common exampl case differ vs consid tertiari differ
Collator::IDENTICAL Collator::Collator strength valu set differ consid signific comparison assign strength languag featur local depend common exampl control charact 092 u0001 vs 092 u0002 consid equal primari secondari tertiari level ident level addit differ pre compos accent 092 u00c0 grave combin accent 092 u0300 combin grave consid signific ident level decomposit set decomposit
Collator::getInstance get Collator::Collator current default local default local determin util local getdefault Collator::Collator default local exampl en
Collator::getInstance get Collator::Collator desir local desiredlocal desir local Collator::Collator desir local
Collator::compare compar sourc string target string accord collat rule Collator::Collator return integ equal greater zero depend sourc String::String equal greater target string see Collator::Collator descript exampl use time comparison perform given String::String involv multipl comparison collationkey compareto perform see Collator::Collator descript exampl use collationkey sourc sourc string target target string return integ valu valu zero sourc target valu zero sourc target equal valu greater zero sourc greater target
Collator::getCollationKey transform String::String seri bit compar bitwis collationkey collationkey provid perform collat compar string involv multipl comparison see Collator::Collator descript exampl use collationkey sourc string transform collat key CollationKey::CollationKey given String::String base collat collat rule sourc String::String null null CollationKey::CollationKey return
Collator::getStrength return collat strength properti strength properti determin minimum level differ consid signific comparison see Collator::Collator descript exampl use collat current strength properti
Collator::setStrength set collat strength properti strength properti determin minimum level differ consid signific comparison see Collator::Collator descript exampl use newstrength strength valu
Collator::getDecomposition get decomposit mode Collator::Collator decomposit mode determin unicod compos charact handl adjust decomposit mode allow user select faster complet collat behavior valu decomposit mode decomposit canon decomposit full decomposit see document constant descript mean decomposit mode
Collator::setDecomposition Set::Set decomposit mode Collator::Collator see Collator::getDecomposition descript decomposit mode decompositionmod decomposit mode
Collator::getAvailableLocales return array local getinst return local instanc return array repres union local support runtim instal implement contain Locale::Locale instanc equal array local local Collator::Collator instanc avail
Collator::equals compar equal collat Collator::Collator compar Collator::Collator Collator::Collator fals
Collator::hashCode generat hash Collator::Collator
Collator::Collator default constructor constructor protect subclass get access user typic creat Collator::Collator sub call factori getinst
Normalizer::normalize normal sequenc char valu sequenc normal accord specifi normal src sequenc char valu normal form normal form normal String::String
BreakIterator::BreakIterator BreakIterator::BreakIterator implement find locat boundari text instanc BreakIterator::BreakIterator maintain current posit scan text return index charact where boundari occur intern BreakIterator::BreakIterator scan text use CharacterIterator::CharacterIterator thus abl scan text held object implement protocol StringCharacterIterator::StringCharacterIterator scan String::String object pass settext use factori creat instanc various type break iter particular use getwordinst getlineinst getsentenceinst getcharacterinst creat BreakIterator::BreakIterator perform word line sentenc charact boundari analysi respect singl BreakIterator::BreakIterator work unit word line sentenc use iter unit boundari analysi wish perform line boundari analysi determin where text string broken line wrap mechan correct handl punctuat hyphen word actual line break consid avail line width handl higher level softwar sentenc boundari analysi allow select correct interpret period number abbrevi trail punctuat mark quotat mark parenthes word boundari analysi search replac function text edit applic allow user select word doubl click word select provid correct interpret punctuat mark word charact part word symbol punctuat mark word break side Character::Character boundari analysi allow user interact charact expect exampl move cursor text string Character::Character boundari analysi provid correct navig charact string regardless charact store boundari return supplementari charact combin charact sequenc ligatur cluster exampl accent charact store base charact diacrit mark user consid charact differ languag BreakIterator::BreakIterator instanc return factori intend use natur languag program languag text defin subclass token program languag exampl creat use text boundari print element order print element revers order print first element print last element print element specifi posit find word iter return breakiter getwordinst uniqu break posit return don repres start end iter sentenc break iter return break repres end sentenc begin word break iter charact boundari word punctuat whitespac word use heurist determin boundari begin word charact boundari boundari includ letter alphabet letter cjk ideograph hangul syllabl kana charact text boundari word materi word
BreakIterator::BreakIterator Constructor::Constructor BreakIterator::BreakIterator stateless default behavior
BreakIterator::first return first boundari iter current posit set first text boundari charact index first text boundari
BreakIterator::next return nth boundari current boundari first last text boundari reach return breakiter current posit set first last text boundari depend reach iter current posit set boundari exampl iter current posit mth text boundari boundari exist current boundari last text boundari call return text posit set th text boundari call return breakiter last text boundari becom text posit boundari return valu negat valu move previous boundari posit valu move boundari charact index nth boundari current posit breakiter first last text boundari reach
BreakIterator::next return boundari current boundari current boundari last text boundari return breakiter iter current posit unchang iter current posit set boundari current boundari charact index text boundari breakiter current boundari last text boundari equival
BreakIterator::setText Set::Set text string scan current scan posit reset first newtext text scan
BreakIterator::setText Set::Set text scan current scan posit reset first newtext text scan
BreakIterator::getWordInstance return BreakIterator::BreakIterator instanc break iter word break
BreakIterator::getWordInstance return BreakIterator::BreakIterator instanc given local local desir local break iter word break
BreakIterator::getLineInstance return BreakIterator::BreakIterator instanc break iter line break
BreakIterator::getLineInstance return BreakIterator::BreakIterator instanc given local local desir local break iter line break
BreakIterator::getCharacterInstance return BreakIterator::BreakIterator instanc break iter charact break
BreakIterator::getCharacterInstance return BreakIterator::BreakIterator instanc given local local desir local break iter charact break
BreakIterator::getSentenceInstance return BreakIterator::BreakIterator instanc break iter sentenc break
BreakIterator::getSentenceInstance return BreakIterator::BreakIterator instanc given local local desir local break iter sentenc break
BreakIterator::getAvailableLocales return array local get instanc return local instanc return array repres union local support runtim instal implement contain Locale::Locale instanc equal array local local BreakIterator::BreakIterator instanc avail
RuleBasedCollator::RuleBasedCollator RuleBasedCollator::RuleBasedCollator concret subclass Collator::Collator provid data driven tabl collat creat custom tabl base Collator::Collator RuleBasedCollator::RuleBasedCollator map charact sort key RuleBasedCollator::RuleBasedCollator restrict effici subclass complex languag collat rule control lt modifi gt specifi appli collat object non mention charact end collat order collat tabl compos list collat rule where rule form definit rule element follow text argument text argument sequenc charact exclud charact common whitespac charact 0009 000d 0020 rule syntax charact 0021 002f 003a 0040 005b 0060 007b 007e charact desir put singl quot ampersand gt amp note unquot white space charact ignor treat bc modifi current modifi turn collat rule turn backward sort accent secondari differ french turn thai lao vowel conson swap rule forc thai vowel rang 92 u0e40 92 u0e44 preced thai conson rang 92 u0e01 92 u0e2 lao vowel rang 92 u0ec0 92 u0ec4 preced lao conson rang 92 u0e81 92 u0ea vowel place conson collat purpos indic accent sort backward french relat relat follow lt greater letter differ primari greater accent differ secondari greater case differ tertiari equal reset singl reset primarili contract expans add modif end set rule amp indic rule follow posit where reset text argument sort sound complic practic exampl equival express notic order subsequ item goe text argument equival text argument sequenc initi substr text argument lt amp ae lt valid sequenc ae reset latter case ae enter treat singl charact instead sort expand charact follow differ appear natur languag tradit spanish ch treat contract singl charact express lt ch lt tradit german umlaut treat expand charact express lt amp ae 92 u00e3 amp ae 92 u00c3 92 u00e3 92 u00c3 cours escap sequenc umlaut ignor charact ignor charact first rule start relat exampl fragment lt lt lt first relat lt text argument first lt ignor exampl lt lt make ignor charact saw earlier word black bird sampl languag see accent ignor normal accent RuleBasedCollator::RuleBasedCollator automat process rule tabl includ pre compos combin charact version accent charact rule string contain base charact separ combin accent charact pre compos accent charact match canon combin charact rule string enter tabl allow use RuleBasedCollator::RuleBasedCollator compar accent string collat set decomposit caveat first string collat contain combin sequenc canon order set collat canon decomposit full decomposit enabl sort combin sequenc string contain charact compat decomposit full width half width form use full decomposit rule tabl includ canon map error error text argument contain unquot punctuat symbol lt lt relat reset charact follow text argument lt reset where text argument initi substr text argument sequenc lt amp lt produc error RuleBasedCollator::RuleBasedCollator throw ParseException::ParseException exampl simpl lt lt lt lt norwegian lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt lt 92 u00e6 92 u00c6 lt 92 u00f8 92 u00d8 lt 92 u00e5 92 u030a 92 u00c5 92 u030a aa aa creat RuleBasedCollator::RuleBasedCollator object rule tailor construct RuleBasedCollator::RuleBasedCollator rule contain String::String object exampl collat rule string creat concaten rule string exampl rule return concaten combin multipl RuleBasedCollator::RuleBasedCollator exampl demonstr chang order non space accent
RuleBasedCollator::RuleBasedCollator RuleBasedCollator::RuleBasedCollator constructor take tabl rule build collat tabl pleas see RuleBasedCollator::RuleBasedCollator descript detail collat rule syntax rule collat rule build collat tabl
RuleBasedCollator::RuleBasedCollator RuleBasedCollator::RuleBasedCollator constructor take tabl rule build collat tabl pleas see RuleBasedCollator::RuleBasedCollator descript detail collat rule syntax rule collat rule build collat tabl decomp decomposit strength build collat tabl perform comparison
RuleBasedCollator::RuleBasedCollator copi constructor clone perform
RuleBasedCollator::getRules get tabl base rule collat object return collat rule tabl collat object creat
RuleBasedCollator::getCollationElementIterator return CollationElementIterator::CollationElementIterator given String::String sourc string collat CollationElementIterator::CollationElementIterator object
RuleBasedCollator::getCollationElementIterator return CollationElementIterator::CollationElementIterator given CharacterIterator::CharacterIterator sourc charact iter collat CollationElementIterator::CollationElementIterator object
RuleBasedCollationKey::RuleBasedCollationKey RuleBasedCollationKey::RuleBasedCollationKey concret implement CollationKey::CollationKey RuleBasedCollationKey::RuleBasedCollationKey RuleBasedCollator::RuleBasedCollator
RuleBasedCollationKey::compareTo compar RuleBasedCollationKey::RuleBasedCollationKey target collat rule Collator::Collator object creat key appli note rulebasedcollationkey creat collat compar target target RuleBasedCollationKey::RuleBasedCollationKey return integ valu valu zero target valu zero target equal valu greater zero greater target
RuleBasedCollationKey::equals compar RuleBasedCollationKey::RuleBasedCollationKey target equal collat rule Collator::Collator object creat key appli note rulebasedcollationkey creat collat compar target RuleBasedCollationKey::RuleBasedCollationKey compar return object equal fals
RuleBasedCollationKey::hashCode creat hash RuleBasedCollationKey::RuleBasedCollationKey hash valu calcul key String::String key creat thus rulebasedcollationkey hashcod hashcod equal allow languag sensit comparison hash tabl see collatinkey descript exampl hash valu base string collat order
RuleBasedCollationKey::RuleBasedCollationKey RuleBasedCollationKey::RuleBasedCollationKey generat Collator::Collator object
MessageFormat::format format array object append MessageFormat::MessageFormat pattern format element replac format object StringBuffer::StringBuffer text substitut individu format element deriv current subformat format element argument element format element argument index indic first match line tabl argument unavail argument null fewer argumentindex element pos non null refer field argument locat first format string return argument array object format substitut result where text append pos input align field desir output offset align field string buffer pass result format text append
MessageFormat::format creat MessageFormat::MessageFormat given pattern use format given argument equival pattern argument StringBuffer::StringBuffer null tostr pattern pattern string argument object format format string
MessageFormat::format format array object append MessageFormat::MessageFormat pattern format element replac format object StringBuffer::StringBuffer equival Object::Object argument result pos argument array object format substitut result where text append pos input align field desir output offset align field
MessageFormat::formatToCharacterIterator format array object insert MessageFormat::MessageFormat pattern produc AttributedCharacterIterator::AttributedCharacterIterator use return AttributedCharacterIterator::AttributedCharacterIterator build result String::String determin result String::String text return AttributedCharacterIterator::AttributedCharacterIterator return argument StringBuffer::StringBuffer null tostr addit AttributedCharacterIterator::AttributedCharacterIterator contain attribut indic where text generat argument argument array key attribut type messageformat field valu Integer::Integer object indic index argument array argument text generat attribut valu Format::Format instanc MessageFormat::MessageFormat use place result AttributedCharacterIterator::AttributedCharacterIterator allow find where argument place result String::String field contain turn argument array object format substitut AttributedCharacterIterator::AttributedCharacterIterator describ format valu
MessageFormat::parse pars text begin given string produc object array use entir text given string see messag pars sourc String::String begin pars Object::Object array pars string
MessageFormat::parseObject pars text string produc object array attempt pars text start index given pos pars succeed index pos updat index last charact pars necessarili use charact end string pars object array return updat pos indic start point call error occur index pos chang error index pos set index charact where error occur null return see messag pars sourc String::String part pars pos ParsePosition::ParsePosition object index error index describ Object::Object array pars string case error return null
MessageFormat::Field creat Field::Field specifi name name Attributes::Name attribut
MessageFormat::ARGUMENT constant identifi portion messag generat argument pass formattocharacteriter valu associ key Integer::Integer indic index argument array argument text generat
MessageFormat::append conveni append charact iter StringBuffer::StringBuffer result
CharacterIterator::CharacterIterator interfac defin protocol bidirect iter text iter iter bound sequenc charact charact index valu begin valu return getbeginindex continu valu return getendindex iter maintain current charact index valid rang getbeginindex getendindex valu getendindex includ allow handl zero length text rang histor reason current index retriev call getindex set call setindex first last previous iter return move rang getbeginindex getendindex signal iter reach end sequenc return indic current index rang exampl travers text start finish travers text backward end start travers forward backward given posit text call notboundari exampl repres addit stop criteria
CharacterIterator::first set posit getbeginindex return charact posit first charact text text empti
CharacterIterator::last set posit getendindex getendindex text empti return charact posit last charact text text empti
CharacterIterator::next increment iter index return charact index result index greater equal getendindex current index reset getendindex valu return charact posit posit end text rang
CharacterIterator::previous decrement iter index return charact index current index getbeginindex index remain getbeginindex valu return charact posit current posit equal getbeginindex
ParseException::ParseException construct ParseException::ParseException specifi detail messag offset detail messag String::String describ particular detail messag erroroffset posit where error found pars
Format::Format Format::Format abstract base format local sensit date messag number Format::Format defin program interfac format local sensit object String::String format pars String::String object parseobject general format parseobject abl pars string format format case where exampl format creat adjac integ number separ case parseobject tell digit belong number subclass platform provid subclass Format::Format DateFormat::DateFormat MessageFormat::MessageFormat NumberFormat::NumberFormat format date messag number respect concret subclass implement format object obj StringBuffer::StringBuffer toappendto FieldPosition::FieldPosition pos formattocharacteriter object obj parseobject string sourc ParsePosition::ParsePosition pos general allow polymorph pars format object exampl MessageFormat::MessageFormat subclass provid addit format specif input type pars specif result type pars take ParsePosition::ParsePosition argument throw ParseException::ParseException text requir format begin input text subclass implement factori getinst get use format object appropri current local getinst local get use format object appropri specifi local addit subclass implement getxxxxinst control exampl NumberFormat::NumberFormat provid getpercentinst getcurrencyinst get number formatt subclass Format::Format allow programm creat object local getinst local exampl implement final subclass defin set constant identifi various field format output constant creat FieldPosition::FieldPosition object identifi contain field posit format result constant name item field where item identifi field exampl constant see DateFormat::ERA field friend format general synchron recommend creat separ format instanc thread multipl thread access format concurr synchron extern
Format::format format object produc string equival obj StringBuffer::StringBuffer fieldposit tostr obj object format format string
Format::formatToCharacterIterator format Object::Object produc AttributedCharacterIterator::AttributedCharacterIterator use return AttributedCharacterIterator::AttributedCharacterIterator build result String::String determin result String::String attribut key AttributedCharacterIterator::AttributedCharacterIterator type field Format::Format implement defin legal valu attribut AttributedCharacterIterator::AttributedCharacterIterator typic attribut key attribut valu default implement creat AttributedCharacterIterator::AttributedCharacterIterator attribut subclass support field overrid creat AttributedCharacterIterator::AttributedCharacterIterator meaning attribut obj object format AttributedCharacterIterator::AttributedCharacterIterator describ format valu
Format::parseObject pars text string produc object attempt pars text start index given pos pars succeed index pos updat index last charact pars necessarili use charact end string pars object return updat pos indic start point call error occur index pos chang error index pos set index charact where error occur null return sourc String::String part pars pos ParsePosition::ParsePosition object index error index describ Object::Object pars string case error return null
Format::parseObject pars text begin given string produc object use entir text given string sourc String::String begin pars Object::Object pars string
Format::createAttributedCharacterIterator creat AttributedCharacterIterator::AttributedCharacterIterator String::String String::String creat AttributedCharacterIterator::AttributedCharacterIterator AttributedCharacterIterator::AttributedCharacterIterator wrap
Format::createAttributedCharacterIterator return AttributedCharacterIterator::AttributedCharacterIterator String::String string addit key valu pair key valu string String::String creat AttributedCharacterIterator::AttributedCharacterIterator key Key::Key AttributedCharacterIterator::AttributedCharacterIterator valu valu associ key AttributedCharacterIterator::AttributedCharacterIterator AttributedCharacterIterator::AttributedCharacterIterator wrap arg
Format::Field creat Field::Field specifi name name Attributes::Name attribut
Format::formatted notifi particular region String::String format invok correspond integ field match attr attr identifi field match valu valu associ field start begin locat field end end field start buffer length buffer contain current format valu receiv modifi
Format::formatted notifi particular region String::String format fieldid identifi field integ attr identifi field match valu valu associ field start begin locat field end end field start buffer length buffer contain current format valu receiv modifi
DigitList::DigitList digit List::List privat DecimalFormat::DecimalFormat handl transcod numer valu string charact handl non negat number divis labor DigitList::DigitList DecimalFormat::DecimalFormat DigitList::DigitList handl radix 10 represent issu DecimalFormat::DecimalFormat handl local specif issu posit negat group decim point currenc DigitList::DigitList represent float point valu integ valu assum doubl suffici precis repres digit DigitList::DigitList represent consist string charact digit radix 10 radix 10 expon associ valu repres DigitList::DigitList object comput mulitpli fraction where deriv place digit list decim point 10 expon
DigitList::setRoundingMode Set::Set mode
DigitList::set Set::Set digit list represent given doubl valu support fix point notat isneg Boolean::Boolean valu indic number negat sourc valu convert inf inf nan valu maximumfractiondigit fraction digit convert
DigitList::set Set::Set digit list represent given doubl valu support fix point exponenti notat isneg Boolean::Boolean valu indic number negat sourc valu convert inf inf nan valu maximumdigit fraction total digit convert fixedpoint maximumdigit maximum fraction digit convert fals total digit
DigitList::set generat represent form ddddd ddddd ddddd ddddde ddddd roundedup Boolean::Boolean valu indic digit alldecimaldigit Boolean::Boolean valu indic digit exact decim represent doubl pass
DigitList::round represent given number digit maximumdigit maximum number digit shown alreadyround Boolean::Boolean indic happen alldecimaldigit Boolean::Boolean indic digit provid exact represent valu return count equal maximumdigit
DigitList::set Set::Set digit list represent given valu isneg Boolean::Boolean valu indic number negat sourc valu convert min valu maximumdigit digit convert maximumdigit lower number signific digit sourc represent ignor
DigitList::set Set::Set digit list represent given BigDecimal::BigDecimal valu support fix point exponenti notat isneg Boolean::Boolean valu indic number negat sourc valu convert valu maximumdigit fraction total digit convert fixedpoint maximumdigit maximum fraction digit convert fals total digit
DigitList::set Set::Set digit list represent given BigInteger::BigInteger valu isneg Boolean::Boolean valu indic number negat sourc valu convert maximumdigit digit convert maximumdigit lower number signific digit sourc represent ignor
SimpleDateFormat::SimpleDateFormat SimpleDateFormat::SimpleDateFormat concret format pars date local sensit manner allow format date rarr text pars text rarr date normal SimpleDateFormat::SimpleDateFormat allow start choos user defin pattern date time format encourag creat date time formatt gettimeinst getdateinst getdatetimeinst DateFormat::DateFormat return date time formatt initi default format pattern modifi format pattern use applypattern desir use see date Time::Time pattern Date::Date time format specifi date time pattern string date time pattern string unquot letter interpret pattern letter repres compon date time string text quot use singl quot avoid interpret repres singl quot charact interpret simpli copi output string format match input string pars pattern letter defin charact reserv Pattern::Pattern letter repeat number determin exact format number pattern letter full form abbrevi form avail pars form accept independ number pattern letter format number pattern letter minimum number digit shorter number zero pad amount pars number pattern letter ignor separ adjac field formatt gregorian calendar rule appli format number pattern letter year truncat digit interpret pars number pattern letter year interpret liter regardless number digit use pattern mm dd yyyi 01 11 12 pars jan 11 12 pars abbrevi year pattern yy SimpleDateFormat::SimpleDateFormat interpret abbrevi year relat centuri adjust date 80 year 20 year time SimpleDateFormat::SimpleDateFormat instanc creat exampl use pattern mm dd yy SimpleDateFormat::SimpleDateFormat instanc creat jan 1997 string 01 11 12 interpret jan 11 2012 string 05 04 64 interpret 1964 pars string consist exact digit defin pars default centuri numer string digit string digit string digit string isn digit exampl interpret liter 01 02 01 02 003 pars use pattern jan ad 01 02 pars jan bc calendar system specif form appli format pars number pattern letter calendar specif calendar specif week year specifi doesn support calendar year instead support week year test call number pattern letter month interpret interpret letter produc context sensit month name embed form name DateFormatSymbols::DateFormatSymbols set explicit constructor month name given DateFormatSymbols::DateFormatSymbols letter produc standalon form month name Time::Time zone interpret name time zone repres gmt offset valu syntax use hour 23 minut 00 59 format local independ digit taken basic latin block unicod standard pars accept format rfc 822 digit time zone format use twodigithour 00 23 definit pars accept number pattern letter design format format pars follow definit format offset valu gmt produc number pattern letter fraction hour ignor exampl pattern time zone gmt 0530 05 produc pars pars utc time zone design accept number pattern letter thrown construct SimpleDateFormat::SimpleDateFormat SimpleDateFormat::SimpleDateFormat support local date time pattern string string pattern letter describ replac local depend pattern letter SimpleDateFormat::SimpleDateFormat deal local text pattern letter client exampl exampl show date time pattern interpret local given date time 2001 07 04 120856 local time pacif Time::Time time zone Date::Date format synchron recommend creat separ format instanc thread multipl thread access format concurr synchron extern
SimpleDateFormat::SimpleDateFormat construct SimpleDateFormat::SimpleDateFormat use default pattern date format symbol default local note constructor support local full coverag use factori
SimpleDateFormat::SimpleDateFormat construct SimpleDateFormat::SimpleDateFormat use given pattern default date format symbol default local note constructor support local full coverag use factori equival call pattern pattern describ date time format
SimpleDateFormat::SimpleDateFormat construct SimpleDateFormat::SimpleDateFormat use given pattern default date format symbol given local note constructor support local full coverag use factori pattern pattern describ date time format local local date format symbol
SimpleDateFormat::SimpleDateFormat construct SimpleDateFormat::SimpleDateFormat use given pattern date format symbol pattern pattern describ date time format formatsymbol date format symbol format
SimpleDateFormat::format format given Date::Date date time string append result given StringBuffer::StringBuffer date date time valu format date time string toappendto where date time text append pos format posit input align field desir output offset align field format date time string
SimpleDateFormat::formatToCharacterIterator format Object::Object produc AttributedCharacterIterator::AttributedCharacterIterator use return AttributedCharacterIterator::AttributedCharacterIterator build result String::String determin result String::String attribut key AttributedCharacterIterator::AttributedCharacterIterator type dateformat field correspond attribut valu attribut key obj object format AttributedCharacterIterator::AttributedCharacterIterator describ format valu
SimpleDateFormat::parse pars text string produc Date::Date attempt pars text start index given pos pars succeed index pos updat index last charact pars necessarili use charact end string pars date return updat pos indic start point call error occur index pos chang error index pos set index charact where error occur null return pars oper use produc Date::Date calendar date time field pars calendar default valu date time field miss date time exampl year valu pars Date::Date 1970 year valu given pars oper TimeZone::TimeZone valu overwritten depend given pattern time zone valu text TimeZone::TimeZone valu previous set call restor further oper text String::String part pars pos ParsePosition::ParsePosition object index error index describ Date::Date pars string case error return null
SimpleDateFormat::matchString perform matchstr string int int String::String take map string Integer::Integer instead String::String
SimpleDateFormat::useDateFormatSymbols return DateFormatSymbols::DateFormatSymbols set explicit local null
SimpleDateFormat::toPattern return pattern string describ date format pattern string describ date format
SimpleDateFormat::applyLocalizedPattern appli given local pattern string date format pattern String::String map date time format pattern format
SimpleDateFormat::clone creat copi SimpleDateFormat::SimpleDateFormat clone format date format symbol clone SimpleDateFormat::SimpleDateFormat
SimpleDateFormat::hashCode return hash valu SimpleDateFormat::SimpleDateFormat object hash valu SimpleDateFormat::SimpleDateFormat object
SimpleDateFormat::equals compar given object SimpleDateFormat::SimpleDateFormat equal given object equal SimpleDateFormat::SimpleDateFormat
SimpleDateFormat::checkNegativeNumberExpression analyz negat subpattern DecimalFormat::DecimalFormat set updat valu necessari
AttributedString::appendContents append content CharacterIterator::CharacterIterator iter StringBuffer::StringBuffer buf
DateFormatSymbolsProvider::getInstance return DateFormatSymbols::DateFormatSymbols instanc specifi local local desir local DateFormatSymbols::DateFormatSymbols instanc
CollatorProvider::getInstance return Collator::Collator instanc specifi local local desir local Collator::Collator desir local
DateFormatProvider::getTimeInstance return DateFormat::DateFormat instanc format time given format style specifi local style given format style local desir local time formatt
DateFormatProvider::getDateInstance return DateFormat::DateFormat instanc format date given format style specifi local style given format style local desir local date formatt
DateFormatProvider::getDateTimeInstance return DateFormat::DateFormat instanc format date time given format style specifi local datestyl given date format style timestyl given time format style local desir local date time formatt
DecimalFormatSymbolsProvider::DecimalFormatSymbolsProvider abstract servic provid provid instanc request Locale::Locale contain specifi desir number system exampl ar nu arab bcp 47 languag tag form specifi arab arab indic digit symbol ar nu latn specifi arab latin digit symbol refer unicod Locale::Locale data markup languag ldml specif number system
DecimalFormatSymbolsProvider::getInstance return DecimalFormatSymbols::DecimalFormatSymbols instanc specifi local local desir local DecimalFormatSymbols::DecimalFormatSymbols instanc
BreakIteratorProvider::getWordInstance return BreakIterator::BreakIterator instanc given local local desir local break iter word break
BreakIteratorProvider::getLineInstance return BreakIterator::BreakIterator instanc given local local desir local break iter line break
BreakIteratorProvider::getCharacterInstance return BreakIterator::BreakIterator instanc given local local desir local break iter charact break
BreakIteratorProvider::getSentenceInstance return BreakIterator::BreakIterator instanc given local local desir local break iter sentenc break
NumberFormatProvider::getCurrencyInstance return NumberFormat::NumberFormat instanc format monetari valu specifi local local desir local currenc formatt
NumberFormatProvider::getIntegerInstance return NumberFormat::NumberFormat instanc format integ valu specifi local return number format configur float point number nearest integ use half see format pars integ part input string see local desir local number format integ valu
NumberFormatProvider::getNumberInstance return general purpos NumberFormat::NumberFormat instanc specifi local local desir local general purpos number formatt
NumberFormatProvider::getPercentInstance return NumberFormat::NumberFormat instanc format percentag valu specifi local local desir local percent formatt
StringCharacterIterator::StringCharacterIterator StringCharacterIterator::StringCharacterIterator implement CharacterIterator::CharacterIterator protocol String::String StringCharacterIterator::StringCharacterIterator iter entir String::String
StringCharacterIterator::StringCharacterIterator construct iter initi index text String::String iter
StringCharacterIterator::StringCharacterIterator construct iter specifi initi index text String::String iter pos initi iter posit
StringCharacterIterator::StringCharacterIterator construct iter given rang given string index set specifi posit text String::String iter begin ConcurrentSkipListMap::Index first charact end ConcurrentSkipListMap::Index charact last charact pos initi iter posit
StringCharacterIterator::setText reset iter point string packag visibl text want avoid alloc StringCharacterIterator::StringCharacterIterator object time settext call text String::String iter
StringCharacterIterator::first implement characteriter first String::String
StringCharacterIterator::last implement characteriter last String::String
StringCharacterIterator::setIndex implement characteriter setindex String::String
StringCharacterIterator::current implement characteriter current String::String
StringCharacterIterator::next implement characteriter String::String
StringCharacterIterator::previous implement characteriter previous String::String
StringCharacterIterator::getBeginIndex implement characteriter getbeginindex String::String
StringCharacterIterator::getEndIndex implement characteriter getendindex String::String
StringCharacterIterator::getIndex implement characteriter getindex String::String
StringCharacterIterator::equals compar equal StringCharacterIterator::StringCharacterIterator object obj StringCharacterIterator::StringCharacterIterator object compar given obj StringCharacterIterator::StringCharacterIterator object fals
CharacterIteratorFieldDelegate::getIterator return AttributedCharacterIterator::AttributedCharacterIterator iter result format String::String string result format
DateFormatSymbols::DateFormatSymbols DateFormatSymbols::DateFormatSymbols encapsul localiz date time format data name month name day week time zone data SimpleDateFormat::SimpleDateFormat use DateFormatSymbols::DateFormatSymbols encapsul typic shouldn use DateFormatSymbols::DateFormatSymbols encourag creat date time formatt DateFormat::DateFormat factori gettimeinst getdateinst getdatetimeinst automat creat DateFormatSymbols::DateFormatSymbols formatt don formatt creat modifi format pattern use MergeCollation::setPattern creat formatt use DateFormat::DateFormat factori see decid creat date time formatt specif format pattern specif local DateFormatSymbols::DateFormatSymbols object cloneabl obtain DateFormatSymbols::DateFormatSymbols object feel free modifi date time format data instanc replac local date time format pattern charact feel easi rememb chang repres citi favorit DateFormatSymbols::DateFormatSymbols subclass ad support SimpleDateFormat::SimpleDateFormat date time format addit local
DateFormatSymbols::DateFormatSymbols construct DateFormatSymbols::DateFormatSymbols object load format data resourc default local constructor construct instanc local support runtim environ support instal implement full local coverag use equival call
DateFormatSymbols::DateFormatSymbols construct DateFormatSymbols::DateFormatSymbols object load format data resourc given local constructor construct instanc local support runtim environ support instal implement full local coverag use local desir local
DateFormatSymbols::getAvailableLocales return array local getinst return local instanc return array repres union local support runtim instal implement contain Locale::Locale instanc equal array local local DateFormatSymbols::DateFormatSymbols instanc avail
DateFormatSymbols::getInstance get DateFormatSymbols::DateFormatSymbols instanc default local provid access DateFormatSymbols::DateFormatSymbols instanc local support runtim support instal implement equival call DateFormatSymbols::DateFormatSymbols instanc
DateFormatSymbols::getInstance get DateFormatSymbols::DateFormatSymbols instanc specifi local provid access DateFormatSymbols::DateFormatSymbols instanc local support runtim support instal implement local given local DateFormatSymbols::DateFormatSymbols instanc
DateFormatSymbols::getInstanceRef return DateFormatSymbols::DateFormatSymbols provid found cach note return cach instanc clone therefor instanc given
DateFormatSymbols::getMonths get month string exampl januari februari languag requir form format stand usag return month name format form exampl prefer month name januari czech languag ledna format form leden stand form return ledna case refer detail month string
DateFormatSymbols::setMonths set month string exampl januari februari newmonth month string
DateFormatSymbols::getShortMonths get month string exampl jan feb languag requir form format stand usag return month name format form exampl prefer abbrevi januari catalan languag de gen format form gen stand form return de gen case refer detail month string
DateFormatSymbols::setShortMonths set month string exampl jan feb newshortmonth month string
DateFormatSymbols::getWeekdays get weekday string exampl sunday monday weekday string use calendar sunday calendar monday index result array
DateFormatSymbols::setWeekdays set weekday string exampl sunday monday newweekday weekday string array index calendar sunday calendar monday
DateFormatSymbols::getShortWeekdays get weekday string exampl sun mon weekday string use calendar sunday calendar monday index result array
DateFormatSymbols::setShortWeekdays set weekday string exampl sun mon newshortweekday weekday string array index calendar sunday calendar monday
DateFormatSymbols::getZoneStrings get time zone string use discourag use instead valu return dimension array string size where row entri contain local name singl TimeZone::TimeZone row contain rang zonestr time zone zonestr name zone standard time zonestr name zone standard time zonestr name zone daylight time zonestr name zone daylight time zone local valid entri local name zone implement daylight time daylight time name call DateFormatSymbols::DateFormatSymbols instanc string call return return array contain name runtim instal implement time zone string
DateFormatSymbols::hashCode overrid hashcod generat hash DateFormatSymbols::DateFormatSymbols object
DateFormatSymbols::getZoneIndex Package::Package privat SimpleDateFormat::SimpleDateFormat get index given time zone obtain time zone string format time zone programmat lookup local given time zone index given time zone return given time zone locat DateFormatSymbols::DateFormatSymbols object
DateFormatSymbols::copyMembers clone data member sourc DateFormatSymbols::DateFormatSymbols target DateFormatSymbols::DateFormatSymbols subclass src sourc DateFormatSymbols::DateFormatSymbols dst target DateFormatSymbols::DateFormatSymbols
ParsePosition::setIndex Set::Set current pars posit index current pars posit
ParsePosition::setErrorIndex Set::Set index pars error occur formatt set return error parseobject default valu set ei index error occur
CollationElementIterator::CollationElementIterator CollationElementIterator::CollationElementIterator iter walk charact intern string use iter return order prioriti posit charact order prioriti charact refer key defin charact collat given collat object exampl consid spanish german key charact integ compos primari order secondari order byte tertiari order byte strict defin size signed primit data type therefor static function CollationElementIterator::primaryOrder CollationElementIterator::secondaryOrder CollationElementIterator::tertiaryOrder return int respect ensur correct key valu exampl iter usag collationelementiter return collat order charact collat order consist primari order secondari order tertiari order data type collat order int first 16 bit collat order primari order bit secondari order last bit tertiari order note CollationElementIterator::CollationElementIterator part RuleBasedCollator::RuleBasedCollator implement usabl RuleBasedCollator::RuleBasedCollator instanc
CollationElementIterator::setText Set::Set string iter sourc sourc text
CollationElementIterator::setText Set::Set string iter sourc sourc text
Annotation::toString return String::String represent Annotation::Annotation String::String represent Annotation::Annotation
ChoiceFormat::setChoices Set::Set choic format limit contain top valu want pars format ascend sort order format choic where limit le limit limit array ascend order result format incorrect format format want use limit Format::Format object string format object object NumberFormat::NumberFormat NumberFormat::NumberFormat format call tostr call
ChoiceFormat::format format call format doubl StringBuffer::StringBuffer fieldposit thus rang support equal rang store doubl practic limit
ChoiceFormat::parse pars Number::Number input text text sourc text status input output paramet input status index field indic first charact sourc text pars exit error occur status index set first unpars charact sourc text exit error occur status index unchang status errorindex set first index charact caus pars fail Number::Number repres valu number pars
AttributedCharacterIterator::hashCode return hash valu object version ident Object::Object final
CollationKey::CollationKey CollationKey::CollationKey repres String::String rule specif Collator::Collator object compar CollationKey::CollationKey return relat order String::String repres use CollationKey::CollationKey compar String::String general faster use collat compar thus String::String compar multipl time exampl sort list String::String effici use CollationKey::CollationKey creat CollationKey::CollationKey generat call collat getcollationkey compar CollationKey::CollationKey generat Collator::Collator object generat CollationKey::CollationKey String::String involv examin entir String::String convert seri bit compar bitwis allow fast comparison key generat cost generat key recoup faster comparison String::String compar time hand result comparison determin first coupl charact String::String collat compar examin charact allow faster singl comparison exampl show CollationKey::CollationKey sort list String::String
CollationKey::compareTo compar CollationKey::CollationKey target CollationKey::CollationKey collat rule Collator::Collator object creat key appli note collationkey creat collat compar target target CollationKey::CollationKey return integ valu valu zero target valu zero target equal valu greater zero greater target
CollationKey::getSourceString return String::String CollationKey::CollationKey repres sourc string CollationKey::CollationKey
CollationKey::toByteArray convert CollationKey::CollationKey sequenc bit collationkey legitim compar compar byte array key obtain result Byte::Byte array organ signific byte first byte array represent CollationKey::CollationKey
CollationKey::CollationKey CollationKey::CollationKey constructor sourc sourc string
PatternEntry::equals warn search Vector::Vector vector indexof doesn take compar defin ignor strength
CalendarBuilder::CalendarBuilder CalendarBuilder::CalendarBuilder keep field valu pair set calendar field given Calendar::Calendar th field week year support iso day week specifi day week iso day week number CalendarBuilder::CalendarBuilder retain semant pseudo timestamp field CalendarBuilder::CalendarBuilder use singl int array combin field stamp Calendar::Calendar
DateFormat::DateFormat DateFormat::DateFormat abstract date time format subclass format pars date time languag independ manner date time format subclass allow format date rarr text pars text rarr date normal date repres Date::Date object millisecond januari 1970 000000 gmt DateFormat::DateFormat provid obtain default date time formatt base default given local number format style format style includ detail exampl use style descript DateFormat::DateFormat format pars date local complet independ local convent month day week calendar format lunar vs solar format date current Locale::Locale use static factori format multipl date effici get format use multipl time system doesn fetch local languag countri convent multipl time format date Locale::Locale specifi call use DateFormat::DateFormat pars use getdateinst get normal date format countri static factori avail use gettimeinst get time format countri use getdatetimeinst get date time format pass option factori control length result exact result depend local general complet numer 12 13 52 330pm longer jan 12 1952 longer januari 12 1952 33032pm pretti complet specifi tuesday april 12 1952 ad 33042pm pst set time zone format wish want control format pars want give user control cast DateFormat::DateFormat get factori work major countri rememb put block case encount unusu use form pars format allow progress pars piec string align particular field find where select screen Date::Date format synchron recommend creat separ format instanc thread multipl thread access format concurr synchron extern
DateFormat::format overrid Format::Format format time object time string exampl time object time valu express millisecond Date::Date object obj Number::Number Date::Date toappendto string buffer return time string string buffer pass toappendto format text append fieldposit keep track posit field return string input align field desir output offset align field exampl given time text 1996 07 10 ad 150856 pdt given fieldposit dateformat year field begin index end index fieldposit set respect notic time field appear pattern fieldposit set first occurr time field instanc format Date::Date time string pm pdt pacif daylight Time::Time use pattern zzzz align field dateformat timezon field begin index end index fieldposit set respect first occurr timezon pattern charact
DateFormat::format format Date::Date date time string date Date::Date format date time string toappendto string buffer return date time string fieldposit keep track posit field return string input align field desir output offset align field exampl given time text 1996 07 10 ad 150856 pdt given fieldposit dateformat year field begin index end index fieldposit set respect notic time field appear pattern fieldposit set first occurr time field instanc format Date::Date time string pm pdt pacif daylight Time::Time use pattern zzzz align field dateformat timezon field begin index end index fieldposit set respect first occurr timezon pattern charact string buffer pass toappendto format text append
DateFormat::format format Date::Date date time string date time valu format time string format time string
DateFormat::parse pars text begin given string produc date use entir text given string see date pars sourc String::String begin pars Date::Date pars string
DateFormat::parse pars date time string accord given pars posit exampl time text 07 10 96 45 pm pdt pars Date::Date equival date 837039900000l default pars lenient input form object format pars date pars succeed client insist strict adher format call pars oper use produc Date::Date result calendar date time field TimeZone::TimeZone valu overwritten depend subclass implement TimeZone::TimeZone valu previous set call restor further oper sourc date time string pars pos input posit start pars output posit pars termin start posit pars fail Date::Date null input pars
DateFormat::parseObject pars text string produc Date::Date attempt pars text start index given pos pars succeed index pos updat index last charact pars necessarili use charact end string pars date return updat pos indic start point call error occur index pos chang error index pos set index charact where error occur null return see date pars sourc String::String part pars pos ParsePosition::ParsePosition object index error index describ Date::Date pars string case error return null
DateFormat::getTimeInstance get time formatt default format style default local equival call time formatt
DateFormat::getTimeInstance get time formatt given format style default local equival call style given format style exampl hmm local time formatt
DateFormat::getTimeInstance get time formatt given format style given local style given format style exampl hmm local alocal given local time formatt
DateFormat::getDateInstance get date formatt default format style default local equival call date formatt
DateFormat::getDateInstance get date formatt given format style default local equival call style given format style exampl yy local date formatt
DateFormat::getDateInstance get date formatt given format style given local style given format style exampl yy local alocal given local date formatt
DateFormat::getDateTimeInstance get date time formatt default format style default local equival call date time formatt
DateFormat::getDateTimeInstance get date time formatt given date time format style default local equival call datestyl given date format style exampl yy local timestyl given time format style exampl hmm local date time formatt
DateFormat::getDateTimeInstance get date time formatt given format style given local datestyl given date format style timestyl given time format style alocal given local date time formatt
DateFormat::getAvailableLocales return array local get instanc return local instanc return array repres union local support runtim instal implement contain Locale::Locale instanc equal array local local DateFormat::DateFormat instanc avail
DateFormat::setCalendar Set::Set calendar date format initi default calendar specifi default local valu previous set overwritten newcalendar valu newcalendar Calendar::Calendar date format
DateFormat::setNumberFormat allow set number formatt newnumberformat given NumberFormat::NumberFormat
DateFormat::setTimeZone set time zone calendar DateFormat::DateFormat object equival call TimeZone::TimeZone set overwritten call TimeZone::TimeZone set overwritten result call pars zone given time zone
DateFormat::getTimeZone get time zone equival call time zone associ calendar DateFormat::DateFormat
DateFormat::setLenient specifi date time pars lenient lenient pars parser use heurist interpret input precis match object format strict pars input match object format equival call lenienc valu overwritten call lenient pars lenient
DateFormat::get creat DateFormat::DateFormat given time date style given local timestyl valu indic time format ignor flag datestyl valu indic time format ignor flag flag time format date format date time format loc local format
DateFormat::DateFormat creat date format
DateFormat::ofCalendarField return field constant correspond Calendar::Calendar constant calendarfield direct map Calendar::Calendar constant field null return calendarfield Calendar::Calendar field constant Field::Field instanc repres calendarfield
DateFormat::Field creat field name name field calendarfield Calendar::Calendar constant field correspond valu rang legal Calendar::Calendar valu valu don correspond legal Calendar::Calendar valu
DateFormat::getCalendarField return Calendar::Calendar field associ attribut exampl repres hour field Calendar::Calendar return calendar hour correspond Calendar::Calendar constant return Calendar::Calendar constant field
DecimalFormat::DecimalFormat DecimalFormat::DecimalFormat concret subclass NumberFormat::NumberFormat format decim number varieti featur design make pars format number local includ support western arab indic digit support kind number includ integ 123 fix point number 123 scientif notat 23e4 percentag 12 currenc amount 123 local obtain NumberFormat::NumberFormat specif local includ default local call NumberFormat::NumberFormat factori getinst general call DecimalFormat::DecimalFormat constructor NumberFormat::NumberFormat factori return subclass DecimalFormat::DecimalFormat custom format object DecimalFormat::DecimalFormat compris pattern set symbol pattern set use applypattern indirect use symbol store DecimalFormatSymbols::DecimalFormatSymbols object use NumberFormat::NumberFormat factori pattern symbol read local ResourceBundle::ResourceBundle pattern DecimalFormat::DecimalFormat pattern syntax DecimalFormat::DecimalFormat pattern contain posit negat subpattern exampl 00 00 subpattern prefix numer part suffix negat subpattern option absent posit subpattern prefix local sign local negat subpattern 00 equival 00 00 explicit negat subpattern serv specifi negat prefix suffix number digit minim digit characterist posit pattern mean produc precis behavior prefix suffix various symbol infin digit thousand separ decim separ set arbitrari valu appear proper format care taken symbol string conflict pars unreli exampl posit negat prefix suffix distinct decimalformat pars abl distinguish posit negat valu ident DecimalFormat::DecimalFormat behav negat subpattern specifi exampl decim separ thousand separ distinct charact pars imposs group separ common thousand countri separ ten thousand group size constant number digit group charact 100 000 000 0000 0000 suppli pattern multipl group charact interv last end integ Pattern::Pattern charact charact pattern taken liter match pars output unchang format charact hand stand charact string charact quot note appear prefix suffix liter charact list non local pattern local pattern use correspond charact taken formatt DecimalFormatSymbols::DecimalFormatSymbols object instead charact lose status currenc sign quot local scientif notat number scientif notat express product mantissa power ten exampl 1234 express 234 10 mantissa rang le pattern current factori creat scientif notat format pattern expon charact follow digit charact indic scientif notat exampl e0 format number 1234 234e3 number digit charact expon charact give minimum expon digit count maximum negat expon format use local sign prefix suffix pattern allow pattern e0 minimum maximum number integ digit interpret togeth maximum number integ digit greater minimum number greater forc expon multipl maximum number integ digit minimum number integ digit interpret common use generat engin notat expon multipl e0 use pattern number 12345 format 12 345e3 123456 format 123 456e3 minimum number integ digit achiev adjust expon exampl 00123 format 00 e0 yield 12 3e number signific digit mantissa sum minimum integ maximum fraction digit unaffect maximum integ digit exampl 12345 format e0 12 3e3 show digit set signific digit count zero number signific digit affect pars exponenti pattern contain group separ DecimalFormat::DecimalFormat provid mode defin format default use digit format DecimalFormat::DecimalFormat use ten consecut charact start local zero digit defin DecimalFormatSymbols::DecimalFormatSymbols object digit pars digit unicod decim digit defin recogn valu nan format string typic singl charact 92 ufffd string determin DecimalFormatSymbols::DecimalFormatSymbols object valu prefix suffix infin format string typic singl charact 92 u221 posit negat prefix suffix appli infin string determin DecimalFormatSymbols::DecimalFormatSymbols object negat zero pars bigdecim isparsebigdecim isparsebigdecim fals isparseintegeron doubl isparsebigdecim isparseintegeron fals decim format general synchron recommend creat separ format instanc thread multipl thread access format concurr synchron extern exampl
DecimalFormat::DecimalFormat creat DecimalFormat::DecimalFormat use default pattern symbol default local conveni obtain DecimalFormat::DecimalFormat internation concern obtain standard format given local use factori NumberFormat::NumberFormat getnumberinst factori return appropri sub NumberFormat::NumberFormat given local
DecimalFormat::DecimalFormat creat DecimalFormat::DecimalFormat use given pattern symbol default local conveni obtain DecimalFormat::DecimalFormat internation concern obtain standard format given local use factori NumberFormat::NumberFormat getnumberinst factori return appropri sub NumberFormat::NumberFormat given local pattern non local pattern string
DecimalFormat::DecimalFormat creat DecimalFormat::DecimalFormat use given pattern symbol use constructor complet custom behavior format obtain standard format given local use factori NumberFormat::NumberFormat getinst getcurrencyinst minor adjust standard format modifi format return NumberFormat::NumberFormat factori pattern non local pattern string symbol set symbol
DecimalFormat::format format number append result text given string buffer number subclass implement use maximum precis permit number number format toappendto StringBuffer::StringBuffer format text append pos input align field desir output offset align field valu pass toappendto
DecimalFormat::format format doubl produc string number doubl format result where text append fieldposit input align field desir output offset align field format number string
DecimalFormat::format format doubl produc string number doubl format result where text append deleg notifi locat sub field format number string
DecimalFormat::format Format::Format produc string number format result where text append fieldposit input align field desir output offset align field format number string
DecimalFormat::format Format::Format produc string number format result where text append deleg notifi locat sub field format number string
DecimalFormat::format format BigDecimal::BigDecimal produc string number BigDecimal::BigDecimal format result where text append fieldposit input align field desir output offset align field format number string
DecimalFormat::format format BigDecimal::BigDecimal produc string number BigDecimal::BigDecimal format result where text append deleg notifi locat sub field format number string
DecimalFormat::format Format::Format BigInteger::BigInteger produc string number BigInteger::BigInteger format result where text append fieldposit input align field desir output offset align field format number string
DecimalFormat::format Format::Format BigInteger::BigInteger produc string number BigInteger::BigInteger format result where text append deleg notifi locat sub field format number string
DecimalFormat::formatToCharacterIterator format Object::Object produc AttributedCharacterIterator::AttributedCharacterIterator use return AttributedCharacterIterator::AttributedCharacterIterator build result String::String determin result String::String attribut key AttributedCharacterIterator::AttributedCharacterIterator type numberformat field attribut valu attribut key obj object format AttributedCharacterIterator::AttributedCharacterIterator describ format valu
DecimalFormat::checkAndSetFastPathStatus check valid use fast path instanc fast path valid instanc set fast path state initi fast path util field suppos call rare break fast path perform mean avoid frequent chang properti instanc properti time chang happen call format call fast path rule similar default DecimalFormat::DecimalFormat instanti case precis half mode NumberFormat::isGroupingUsed groupings multipli decim separ mandatori use exponenti notat minimumintegerdigit exact maximumintegerdigit 10 number fraction digit exact valu found default case Currency::Currency min max decim min max
DecimalFormat::fastFormat fast path shortcut format doubl call NumberFormat::NumberFormat format doubl instanc appli fast path pass doubl nan infin integ rang call DecimalFormat::fastDoubleFormat chang posit valu necessari return null convent fast path exerc doubl valu format format result string
DecimalFormat::append append String::String string result deleg notifi FieldPosition::FieldPosition posit FieldPosition::FieldPosition posit identifi NumberFormat::SIGN attribut map signattribut map NumberFormat::SIGN attribut NumberFormat::EXPONENT attribut necessari subformat add prefix suffix
DecimalFormat::parse pars text string produc Number::Number attempt pars text start index given pos pars succeed index pos updat index last charact pars necessarili use charact end string pars number return updat pos indic start point call error occur index pos chang error index pos set index charact where error occur null return subclass return depend valu string pars isparsebigdecim fals default integ valu return Long::Long object matter written 17 17 000 pars 17 valu fit Long::Long return doubl includ valu fraction part infinit valu nan valu DecimalFormat::DecimalFormat decid return doubl Long::Long base presenc decim separ sourc string prevent integ overflow mantissa doubl 223 372 036 854 775 808 00 pars accur caller use Number::Number doublevalu longvalu obtain type want isparsebigdecim valu return BigDecimal::BigDecimal object valu construct correspond string local independ format case negat posit infin nan return doubl instanc hold valu correspond doubl constant DecimalFormat::DecimalFormat pars unicod charact repres decim digit defin charact digit addit DecimalFormat::DecimalFormat recogn digit ten consecut charact start local zero digit defin DecimalFormatSymbols::DecimalFormatSymbols object text string pars pos ParsePosition::ParsePosition object index error index describ pars valu null pars fail
DecimalFormat::getBigIntegerMultiplier return BigInteger::BigInteger multipli
DecimalFormat::getBigDecimalMultiplier return BigDecimal::BigDecimal multipli
DecimalFormat::getDecimalFormatSymbols return copi decim format symbol general chang programm user copi desir DecimalFormatSymbols::DecimalFormatSymbols
DecimalFormat::setDecimalFormatSymbols set decim format symbol general chang programm user newsymbol desir DecimalFormatSymbols::DecimalFormatSymbols
DecimalFormat::setPositivePrefix Set::Set posit prefix exampl 123 123 sfr123 newvalu posit prefix
DecimalFormat::setNegativePrefix Set::Set negat prefix exampl 123 123 negat suffix sfr 123 newvalu negat prefix
DecimalFormat::setPositiveSuffix Set::Set posit suffix exampl 123 newvalu posit suffix
DecimalFormat::setNegativeSuffix Set::Set negat suffix exampl 123 newvalu negat suffix
DecimalFormat::setGroupingSize Set::Set group size group size number digit group separ integ portion number exampl number 123 456 78 group size valu pass convert byte lose newvalu group size
DecimalFormat::isParseBigDecimal return return BigDecimal::BigDecimal default valu fals pars return BigDecimal::BigDecimal fals
DecimalFormat::setParseBigDecimal set return BigDecimal::BigDecimal newvalu pars return BigDecimal::BigDecimal fals
DecimalFormat::expandAffix expand affix pattern affix string charact pattern liter prefix quot charact quot recogn pattern percent pattern mill pattern currenc sign currenc sign doubl quot currenc sign currenc sign interpret iso 4217 currenc charact quot repres quot follow charact quot occur end pattern pattern non null possibl empti pattern buffer scratch StringBuffer::StringBuffer content lost expand equival pattern
DecimalFormat::appendAffix append affix pattern given StringBuffer::StringBuffer quot charact use intern affix pattern exist liter affix intern affix pattern null append string generat affix pattern liter affix pass topattern buffer affix string append affixpattern pattern posprefixpattern null expaffix correspond expand affix positiveprefix ignor affixpattern null affixpattern null expaffix append liter affix local append pattern contain local pattern charact non local pattern char append
DecimalFormat::appendAffix append affix given StringBuffer::StringBuffer use quot charact singl quot escap case
DecimalFormat::applyPattern appli given pattern Format::Format object pattern hand specif various format properti properti chang individu various setter limit integ digit set routin typic end user desir use setmaximuminteg want set valu negat number use pattern separ semicolon exampl 00 rarr 234 56 mean minimum integ digit fraction digit maximum fraction digit exampl 00 00 negat parenthes negat pattern minimum maximum count ignor presum set posit pattern pattern pattern
DecimalFormat::applyPattern work appli pattern
DecimalFormat::setMaximumIntegerDigits set maximum number digit allow integ portion number format number BigInteger::BigInteger BigDecimal::BigDecimal object lower newvalu 309 negat input valu replac
DecimalFormat::setMinimumIntegerDigits set minimum number digit allow integ portion number format number BigInteger::BigInteger BigDecimal::BigDecimal object lower newvalu 309 negat input valu replac
DecimalFormat::setMaximumFractionDigits set maximum number digit allow fraction portion number format number BigInteger::BigInteger BigDecimal::BigDecimal object lower newvalu 340 negat input valu replac
DecimalFormat::setMinimumFractionDigits set minimum number digit allow fraction portion number format number BigInteger::BigInteger BigDecimal::BigDecimal object lower newvalu 340 negat input valu replac
DecimalFormat::getMaximumIntegerDigits get maximum number digit allow integ portion number format number BigInteger::BigInteger BigDecimal::BigDecimal object lower return valu 309
DecimalFormat::getMinimumIntegerDigits get minimum number digit allow integ portion number format number BigInteger::BigInteger BigDecimal::BigDecimal object lower return valu 309
DecimalFormat::getMaximumFractionDigits get maximum number digit allow fraction portion number format number BigInteger::BigInteger BigDecimal::BigDecimal object lower return valu 340
DecimalFormat::getMinimumFractionDigits get minimum number digit allow fraction portion number format number BigInteger::BigInteger BigDecimal::BigDecimal object lower return valu 340
DecimalFormat::getRoundingMode get DecimalFormat::DecimalFormat RoundingMode::RoundingMode DecimalFormat::DecimalFormat
DecimalFormat::setRoundingMode set DecimalFormat::DecimalFormat roundingmod RoundingMode::RoundingMode
DecimalFormat::readObject read default serializ field stream perform valid adjust older serial version valid adjust verifi superclass digit count field correct reflect limit impos format number BigInteger::BigInteger BigDecimal::BigDecimal object limit store superclass serial compat older version limit BigInteger::BigInteger BigDecimal::BigDecimal object kept superclass minimum maximum integ digit count larger doubl integ digit minimum maximum fraction digit count larger doubl fraction digit stream data invalid throw InvalidObjectException::InvalidObjectException serialversiononstream initi roundingmod field version serialversiononstream call setter minimum maximum integ fraction digit valu correspond superclass getter initi field field version serialversiononstream indic stream written jdk initi useexponentialnot fals jdk Set::Set serialversiononstream maximum allow valu default serial work proper object stream stream version older affix pattern variabl posprefixpattern result initi null mean affix string taken liter valu exact want correspond pre version behavior
MergeCollation::MergeCollation util normal merg pattern collat pattern string form where form arbitrari string unquot whitespac ignor xxx quot charact differ Collator::Collator reset current point word introduc sequenc ad old xxx make singl quot
NumberFormat::NumberFormat NumberFormat::NumberFormat abstract base number format provid interfac format pars number NumberFormat::NumberFormat provid determin local number format name NumberFormat::NumberFormat format pars number local complet independ local convent decim point thousand separ particular decim digit number format decim format number current Locale::Locale use factori format multipl number effici get format use multipl time system doesn fetch local languag countri convent multipl time format number Locale::Locale specifi call getinst use NumberFormat::NumberFormat pars number use getinst getnumberinst get normal number format use getintegerinst get integ number format use getcurrencyinst get currenc number format use getpercentinst get format display percentag format fraction 53 display 53 control display number setminimumfractiondigit want control format pars want give user control cast NumberFormat::NumberFormat get factori DecimalFormat::DecimalFormat work vast major local rememb put block case encount unusu NumberFormat::NumberFormat DecimalFormat::DecimalFormat design control work format work pars detail descript control NumberFormat::setParseIntegerOnly affect pars 3456 78 rarr 3456 leav pars posit index fals 3456 78 rarr 3456 78 leav pars posit index independ format want show decim point where digit decim point use DecimalFormat::setDecimalSeparatorAlwaysShown DecimalFormat::setDecimalSeparatorAlwaysShown affect format where digit decim point pattern 3456 00 rarr 456 fals 3456 00 rarr 3456 independ pars want pars stop decim point use NumberFormat::setParseIntegerOnly use form pars format ParsePosition::ParsePosition FieldPosition::FieldPosition allow progress pars piec string align decim point area exampl align number use monospac font space align pass FieldPosition::FieldPosition format call field NumberFormat::INTEGER field output getendindex set offset last charact integ decim add desiredspacecount getendindex space front string use proport font instead pad space measur width string pixel start getendindex move pen desiredpixelwidth widthtoalignmentpoint draw text work where decim possibl addit charact end parenthes negat number 12 12 Number::Number format general synchron recommend creat separ format instanc thread multipl thread access format concurr synchron extern
NumberFormat::INTEGER field Field::Field constant construct FieldPosition::FieldPosition object signifi posit integ part format number return
NumberFormat::FRACTION field Field::Field constant construct FieldPosition::FieldPosition object signifi posit fraction part format number return
NumberFormat::NumberFormat sole constructor invoc subclass constructor typic implicit
NumberFormat::format format number append result text given string buffer number subclass implement extract number valu use integr type valu convert loss includ BigInteger::BigInteger valu 64 type call result loss magnitud precis BigInteger::BigInteger BigDecimal::BigDecimal valu number number format toappendto StringBuffer::StringBuffer format text append pos input align field desir output offset align field valu pass toappendto
NumberFormat::parseObject pars text string produc Number::Number attempt pars text start index given pos pars succeed index pos updat index last charact pars necessarili use charact end string pars number return updat pos indic start point call error occur index pos chang error index pos set index charact where error occur null return see number pars sourc String::String part pars pos ParsePosition::ParsePosition object index error index describ Number::Number pars string case error return null
NumberFormat::format format number doubl number format format String::String
NumberFormat::format format number number format format String::String
NumberFormat::format format number doubl number format toappendto StringBuffer::StringBuffer format text append pos field posit format StringBuffer::StringBuffer
NumberFormat::format format number number format toappendto StringBuffer::StringBuffer format text append pos field posit format StringBuffer::StringBuffer
NumberFormat::parse return Long::Long rang min valu max valu decim Point2D::Double integeron set stop decim point equival ration number stop throw object pars index unchang sourc String::String pars parseposit pars posit pars valu
NumberFormat::parse pars text begin given string produc number use entir text given string see number pars sourc String::String begin pars Number::Number pars string
NumberFormat::isParseIntegerOnly return format pars number integ exampl local parseintegeron string 1234 pars integ valu 1234 pars stop charact cours exact format accept pars oper local depend determin sub NumberFormat::NumberFormat number pars integ fals
NumberFormat::getInstance return general purpos number format current default local call NumberFormat::NumberFormat instanc general purpos number format
NumberFormat::getInstance return general purpos number format specifi local call inlocal desir local NumberFormat::NumberFormat instanc general purpos number format
NumberFormat::getNumberInstance return general purpos number format current default local equival call NumberFormat::NumberFormat instanc general purpos number format
NumberFormat::getNumberInstance return general purpos number format specifi local inlocal desir local NumberFormat::NumberFormat instanc general purpos number format
NumberFormat::getCurrencyInstance return currenc format current default local equival call NumberFormat::NumberFormat instanc currenc format
NumberFormat::getCurrencyInstance return currenc format specifi local inlocal desir local NumberFormat::NumberFormat instanc currenc format
NumberFormat::getPercentInstance return percentag format current default local equival call NumberFormat::NumberFormat instanc percentag format
NumberFormat::getPercentInstance return percentag format specifi local inlocal desir local NumberFormat::NumberFormat instanc percentag format
NumberFormat::getAvailableLocales return array local get instanc return local instanc return array repres union local support runtim instal implement contain Locale::Locale instanc equal array local local NumberFormat::NumberFormat instanc avail
NumberFormat::isGroupingUsed return group format exampl local group number 1234567 format 234 567 group separ size group local depend determin sub NumberFormat::NumberFormat group fals
NumberFormat::setGroupingUsed Set::Set group format newvalu group fals
NumberFormat::getRoundingMode get NumberFormat::NumberFormat default implement NumberFormat::NumberFormat throw subclass handl mode overrid RoundingMode::RoundingMode NumberFormat::NumberFormat
NumberFormat::setRoundingMode set NumberFormat::NumberFormat default implement NumberFormat::NumberFormat throw subclass handl mode overrid roundingmod RoundingMode::RoundingMode
NumberFormat::Field creat Field::Field instanc specifi name name Attributes::Name attribut
RBTableBuilder::RBTableBuilder contain pars RuleBasedCollator::RuleBasedCollator pattern build rbcollationt object particular instanc tis exist actual build process rbcollationt object built rbtablebuild object goe object carri state build process shadow copi state go tabl object object communic rbcollationt separ rbcollationt buildapi inner rbcollationt provid separ privat communic rbtablebuild isn inner rbcollationt size sourc readabl seem builder sourc file
FieldPosition::FieldPosition FieldPosition::FieldPosition Format::Format subclass identifi field format output field identifi integ constant name typic end field constant defin various subclass Format::Format format field constant see DateFormat::ERA field friend DateFormat::DateFormat exampl FieldPosition::FieldPosition keep track posit field format output indic index first charact field index last charact field version format various Format::Format requir FieldPosition::FieldPosition object argument use format perform partial format get format output posit field interest posit attribut format string use Format::Format formattocharacteriter
ElementType::TYPE Class::Class interfac includ annot type enum declar
ElementType::FIELD Field::Field declar includ enum constant
ElementType::METHOD Method::Method declar
ElementType::CONSTRUCTOR Constructor::Constructor declar
ElementType::PACKAGE Package::Package declar
IncompleteAnnotationException::IncompleteAnnotationException construct IncompleteAnnotationException::IncompleteAnnotationException indic name element miss specifi annot type annotationtyp Class::Class object annot type IncompleteAnnotationException::elementName name miss element
IncompleteAnnotationException::annotationType return Class::Class object annot type miss element Class::Class object annot type miss element
String::String String::String repres charact string string liter program abc implement instanc string constant valu chang creat String::String buffer support mutabl string String::String object immut share exampl equival exampl string use String::String includ examin individu charact sequenc compar string search string extract substr creat copi string charact translat uppercas lowercas case map base unicod standard version specifi languag provid support string concaten oper nbsp nbsp convers object string String::String concaten implement StringBuilder::StringBuilder StringBuffer::StringBuffer append String::String convers implement tostr defin Object::Object inherit addit string concaten convers see gosl joy steel languag specif note pass null argument constructor caus thrown String::String repres string utf 16 format supplementari charact repres surrog pair see section Character::Character ConcurrentSkipListMap::Index valu refer char unit supplementari charact use posit String::String String::String provid deal unicod point charact addit deal unicod unit char valu
String::String initi newli creat String::String object repres empti charact sequenc note use constructor unnecessari string immut
String::String initi newli creat String::String object repres sequenc charact argument word newli creat string copi argument string explicit copi origin use constructor unnecessari string immut origin String::String
String::String alloc String::String repres sequenc charact current contain charact array argument content charact array copi subsequ modif charact array affect newli creat string valu initi valu string
String::String alloc String::String contain charact subarray charact array argument offset argument index first charact subarray count argument specifi length subarray content subarray copi subsequ modif charact array affect newli creat string valu Array::Array sourc charact offset initi offset count length
String::String alloc String::String contain charact subarray array argument offset argument index first point subarray count argument specifi length subarray content subarray convert char subsequ modif int array affect newli creat string CharSequence::codePoints Array::Array sourc unicod point offset initi offset count length
String::String alloc String::String construct subarray array bit integ valu offset argument index first byte subarray count argument specifi length subarray byte subarray convert char specifi ascii byte convert charact hibyt top bit 16 bit unicod unit offset initi offset count length
String::String alloc String::String contain charact construct array bit integ valu charact result string construct correspond compon byte array ascii byte convert charact hibyt top bit 16 bit unicod unit
String::String construct String::String decod specifi subarray byte use specifi charset length String::String function charset henc equal length subarray behavior constructor given byte valid given charset unspecifi control decod process requir byte byte decod charact offset index first byte decod length number byte decod charsetnam name support
String::String construct String::String decod specifi subarray byte use specifi length String::String function charset henc equal length subarray replac malform input unmapp charact sequenc charset default replac string control decod process requir byte byte decod charact offset index first byte decod length number byte decod charset decod byte
String::String construct String::String decod specifi array byte use specifi length String::String function charset henc equal length byte array behavior constructor given byte valid given charset unspecifi control decod process requir byte byte decod charact charsetnam name support
String::String construct String::String decod specifi array byte use specifi length String::String function charset henc equal length byte array replac malform input unmapp charact sequenc charset default replac string control decod process requir byte byte decod charact charset decod byte
String::String construct String::String decod specifi subarray byte use platform default charset length String::String function charset henc equal length subarray behavior constructor given byte valid default charset unspecifi control decod process requir byte byte decod charact offset index first byte decod length number byte decod
String::String construct String::String decod specifi array byte use platform default charset length String::String function charset henc equal length byte array behavior constructor given byte valid default charset unspecifi control decod process requir byte byte decod charact
String::String alloc string contain sequenc charact current contain string buffer argument content string buffer copi subsequ modif string buffer affect newli creat string buffer StringBuffer::StringBuffer
String::String alloc string contain sequenc charact current contain string builder argument content string builder copi subsequ modif string builder affect newli creat string constructor eas migrat StringBuilder::StringBuilder obtain string string builder tostr run faster general prefer builder StringBuilder::StringBuilder
String::length return length string length equal number string length sequenc charact repres object
String::charAt return char valu specifi index index rang length first char valu sequenc index index array index char valu specifi index surrog valu return index index char valu char valu specifi index string first char valu index
String::codePointAt return charact unicod point specifi index index refer char valu unicod unit rang char valu specifi given index surrog rang index length String::String char valu index low surrog rang supplementari point correspond surrog pair return char valu given index return index index char valu point valu charact index
String::codePointCount return number unicod point specifi text rang String::String text rang begin specifi beginindex extend char index endindex thus length char text rang endindex beginindex unpair surrog text rang count point beginindex index first char text rang endindex index last char text rang number unicod point specifi text rang
String::offsetByCodePoints return index String::String offset given index codepointoffset point unpair surrog text rang given index codepointoffset count point index index offset codepointoffset offset point index String::String
String::getBytes copi charact string destin byte array byte receiv low order bit correspond charact eight order bit charact copi particip transfer first charact copi index srcbegin last charact copi index srcend total number charact copi srcend srcbegin charact convert byte copi subarray dst start index dstbegin end index srcbegin ConcurrentSkipListMap::Index first charact string copi srcend ConcurrentSkipListMap::Index last charact string copi dst destin array dstbegin start offset destin array
String::getBytes encod String::String sequenc byte use name charset store result byte array behavior string encod given charset unspecifi control encod process requir charsetnam name support result byte array
String::getBytes encod String::String sequenc byte use given store result byte array replac malform input unmapp charact sequenc charset default replac byte array control encod process requir charset encod String::String result byte array
String::getBytes encod String::String sequenc byte use platform default charset store result byte array behavior string encod default charset unspecifi control encod process requir result byte array
String::equals compar string specifi object result argument null String::String object repres sequenc charact object anobject object compar String::String given object repres String::String equival string fals
String::contentEquals compar string specifi StringBuffer::StringBuffer result String::String repres sequenc charact specifi StringBuffer::StringBuffer synchron StringBuffer::StringBuffer sb StringBuffer::StringBuffer compar String::String String::String repres sequenc charact specifi StringBuffer::StringBuffer fals
String::contentEquals compar string specifi CharSequence::CharSequence result String::String repres sequenc char valu specifi sequenc note CharSequence::CharSequence StringBuffer::StringBuffer synchron cs sequenc compar String::String String::String repres sequenc char valu specifi sequenc fals
String::equalsIgnoreCase compar String::String String::String ignor case consider string consid equal ignor case length correspond charact string equal ignor case charact c1 c2 consid ignor case charact compar oper appli charact produc result appli charact produc result anotherstr String::String compar String::String argument null repres equival String::String ignor case fals
String::compareTo compar string lexicograph comparison base unicod valu charact string charact sequenc repres String::String object compar lexicograph charact sequenc repres argument string result negat integ String::String object lexicograph preced argument string result posit integ String::String object lexicograph follow argument string result zero string equal compareto return exact return definit lexicograph order string charact index valid index string length charact index posit let smallest index string charact posit smaller valu determin use lt oper lexicograph preced string case compareto return differ charact valu posit string valu index posit differ shorter string lexicograph preced longer string case compareto return differ length string valu anotherstr String::String compar valu argument string equal string valu string lexicograph string argument valu greater string lexicograph greater string argument
String::CASE insensit order Comparator::Comparator order String::String object comparetoignorecas compar serializ note Comparator::Comparator take local account result unsatisfactori order local text packag provid collat allow local sensit order
String::compareToIgnoreCase compar string lexicograph ignor case differ return integ sign call compareto normal version string where case differ elimin call charact tolowercas charact touppercas charact charact note take local account result unsatisfactori order local text packag provid collat allow local sensit order str String::String compar negat integ zero posit integ specifi String::String greater equal String::String ignor case consider
String::regionMatches test string region equal substr String::String object compar substr argument result substr repres ident charact sequenc substr String::String object compar begin index toffset length len substr compar begin index ooffset length len result fals toffset negat ooffset negat toffset len greater length String::String object ooffset len greater length argument nonneg integ len charat toffset charat ooffset toffset start offset subregion string string argument ooffset start offset subregion string argument len number charact compar specifi subregion string exact match specifi subregion string argument fals
String::regionMatches test string region equal substr String::String object compar substr argument result substr repres charact sequenc ignor case ignorecas substr String::String object compar begin index toffset length len substr compar begin index ooffset length len result fals toffset negat ooffset negat toffset len greater length String::String object ooffset len greater length argument ignorecas fals nonneg integ len ignorecas nonneg integ len ignorecas ignor case compar charact toffset start offset subregion string string argument ooffset start offset subregion string argument len number charact compar specifi subregion string match specifi subregion string argument fals match exact case insensit depend ignorecas argument
String::startsWith test substr string begin specifi index start specifi prefix prefix prefix toffset where begin look string charact sequenc repres argument prefix substr object start index toffset fals result fals toffset negat greater length String::String object result result express
String::startsWith test string start specifi prefix prefix prefix charact sequenc repres argument prefix charact sequenc repres string fals note return argument empti string equal String::String object determin
String::endsWith test string end specifi suffix suffix suffix charact sequenc repres argument suffix charact sequenc repres object fals note result argument empti string equal String::String object determin
String::hashCode return hash string hash String::String object comput use int arithmet where th charact string length string indic exponenti hash valu empti string zero hash valu object
String::indexOf return index string first occurr specifi charact charact valu ch occur charact sequenc repres String::String object index unicod unit first occurr return valu ch rang 0xffff inclus smallest valu valu ch smallest valu case charact occur string return ch charact unicod point index first occurr charact charact sequenc repres object charact occur
String::indexOf return index string first occurr specifi charact start search specifi index charact valu ch occur charact sequenc repres String::String object index smaller fromindex index first occurr return valu ch rang 0xffff inclus smallest valu valu ch smallest valu case charact occur string posit fromindex return restrict valu fromindex negat effect zero entir string search greater length string effect equal length string return indic specifi char valu unicod unit ch charact unicod point fromindex index start search index first occurr charact charact sequenc repres object greater equal fromindex charact occur
String::lastIndexOf return index string last occurr specifi charact valu ch rang 0xffff inclus index unicod unit return largest valu valu ch largest valu case charact occur string return String::String search backward start last charact ch charact unicod point index last occurr charact charact sequenc repres object charact occur
String::indexOf return index string first occurr specifi substr return index smallest valu valu exist return str substr search index first occurr specifi substr occurr
String::indexOf return index string first occurr specifi substr start specifi index return index smallest valu valu exist return str substr search fromindex index start search index first occurr specifi substr start specifi index occurr
String::indexOf share String::String AbstractStringBuilder::AbstractStringBuilder search sourc charact array search target string search sourc charact search sourceoffset offset sourc string sourcecount count sourc string target charact search fromindex index begin search
String::indexOf share String::String StringBuffer::StringBuffer search sourc charact array search target string search sourc charact search sourceoffset offset sourc string sourcecount count sourc string target charact search targetoffset offset target string targetcount count target string fromindex index begin search
String::lastIndexOf share String::String AbstractStringBuilder::AbstractStringBuilder search sourc charact array search target string search sourc charact search sourceoffset offset sourc string sourcecount count sourc string target charact search fromindex index begin search
String::lastIndexOf share String::String StringBuffer::StringBuffer search sourc charact array search target string search sourc charact search sourceoffset offset sourc string sourcecount count sourc string target charact search targetoffset offset target string targetcount count target string fromindex index begin search
String::substring return string substr string substr begin charact specifi index extend end string exampl beginindex begin index inclus specifi substr
String::substring return string substr string substr begin specifi beginindex extend charact index endindex thus length substr endindex beginindex exampl beginindex begin index inclus endindex end index exclus specifi substr
String::subSequence return charact sequenc subsequ sequenc invoc form behav exact invoc defin String::String implement interfac beginindex begin index inclus endindex end index exclus specifi subsequ jsr 51
String::concat concaten specifi string end string length argument string String::String object return String::String object return repres charact sequenc concaten charact sequenc repres String::String object charact sequenc repres argument string exampl str String::String concaten end String::String string repres concaten object charact follow string argument charact
String::replace return string result replac occurr oldchar string newchar charact oldchar occur charact sequenc repres String::String object refer String::String object return String::String object return repres charact sequenc ident charact sequenc repres String::String object occurr oldchar replac occurr newchar exampl oldchar old charact newchar charact string deriv string replac occurr oldchar newchar
String::contains return string contain specifi sequenc char valu sequenc search string contain fals
String::replaceFirst replac first substr string match given given replac invoc form str replacefirst regex repl yield exact result express regex str repl note backslash dollar sign replac string caus result treat liter replac string see use suppress mean charact desir regex regular express string match replac string substitut first match result String::String jsr 51
String::replaceAll replac substr string match given given replac invoc form str replaceal regex repl yield exact result express regex str repl note backslash dollar sign replac string caus result treat liter replac string see use suppress mean charact desir regex regular express string match replac string substitut match result String::String jsr 51
String::replace replac substr string match liter target sequenc specifi liter replac sequenc replac proceed begin string end exampl replac aa string aaa result ba ab target sequenc char valu replac replac replac sequenc char valu result string
String::split split string match given array return contain substr string termin substr match given express termin end string substr array order occur string express match part input result array element name string posit width match begin string empti lead substr includ begin result array zero width match begin produc empti lead substr limit paramet control number time pattern appli therefor affect length result array limit greater zero pattern appli nbsp nbsp time array length greater array last entri contain input last match delimit non posit pattern appli time array length zero pattern appli time array length trail empti string discard string booandfoo exampl yield result paramet invoc form str split regex nbsp yield result express regex str nbsp regex delimit regular express limit result threshold describ array string comput split string match given regular express jsr 51
String::split split string match given work invok argument given express limit argument zero trail empti string therefor includ result array string booandfoo exampl yield result express regex delimit regular express array string comput split string match given regular express jsr 51
String::join return String::String compos copi CharSequence::CharSequence element join copi specifi delimit exampl note element null null ad delimit delimit separ element element element join String::String compos element separ delimit
String::join return String::String compos copi CharSequence::CharSequence element join copi specifi delimit exampl note individu element null null ad delimit sequenc charact separ element result String::String element Iterable::Iterable element join String::String compos element argument
String::toLowerCase convert charact String::String lower case use rule given Locale::Locale case map base unicod standard version specifi case map 11 char map result String::String length origin String::String exampl lowercas map tabl local use case transform rule local String::String convert lowercas
String::toLowerCase convert charact String::String lower case use rule default local equival call tolowercas local getdefault note local sensit produc unexpect result string intend interpret local independ exampl program languag identifi protocol key html tag instanc titl tolowercas turkish local return u005cu0131tl where u005cu0131 latin letter dotless charact obtain correct result local insensit string use tolowercas local root String::String convert lowercas
String::toUpperCase convert charact String::String upper case use rule given Locale::Locale case map base unicod standard version specifi case map 11 char map result String::String length origin String::String exampl local sensit 1m case map tabl local use case transform rule local String::String convert uppercas
String::toUpperCase convert charact String::String upper case use rule default local equival touppercas local getdefault note local sensit produc unexpect result string intend interpret local independ exampl program languag identifi protocol key html tag instanc titl touppercas turkish local return u005cu0130tl where u005cu0130 latin capit letter dot charact obtain correct result local insensit string use touppercas local root String::String convert uppercas
String::trim return string valu string lead trail whitespac remov String::String object repres empti charact sequenc first last charact charact sequenc repres String::String object greater u005cu0020 space charact refer String::String object return charact greater u005cu0020 string String::String object repres empti string return let index first charact string greater u005cu0020 let index last charact string greater u005cu0020 String::String object return repres substr string begin charact index end charact index result substr trim whitespac defin begin end string string valu string lead trail white space remov string lead trail white space
String::toCharArray convert string charact array newli alloc charact array length length string content initi contain charact sequenc repres string
String::format return format string use specifi format string argument local return format arg argument referenc format specifi format string argument format specifi extra argument ignor number argument variabl zero maximum number argument limit maximum dimens array defin trade virtual machin specif behaviour null argument depend format string
String::format return format string use specifi local format string argument appli format null local appli format arg argument referenc format specifi format string argument format specifi extra argument ignor number argument variabl zero maximum number argument limit maximum dimens array defin trade virtual machin specif behaviour null argument depend format string
String::valueOf return string represent Object::Object argument obj Object::Object argument null string equal null valu obj tostr return
String::valueOf return string represent char array argument content charact array copi subsequ modif charact array affect return string data charact array String::String contain charact charact array
String::valueOf return string represent specif subarray char array argument offset argument index first charact subarray count argument specifi length subarray content subarray copi subsequ modif charact array affect return string data charact array offset initi offset subarray count length subarray String::String contain charact specifi subarray charact array
String::copyValueOf equival data charact array offset initi offset subarray count length subarray String::String contain charact specifi subarray charact array
String::copyValueOf equival data charact array String::String contain charact charact array
String::valueOf return string represent boolean argument boolean argument string equal return string equal fals return
String::valueOf return string represent char argument char string length contain singl charact argument
String::valueOf return string represent int argument represent exact return integ tostr argument int string represent int argument
String::valueOf return string represent argument represent exact return tostr argument string represent argument
String::valueOf return string represent float argument represent exact return float tostr argument float string represent float argument
String::valueOf return string represent doubl argument represent exact return doubl tostr argument doubl string represent doubl argument
String::intern return canon represent string object pool string initi empti maintain privat String::String intern invok pool contain string equal String::String object determin string pool return String::String object ad pool refer String::String object return follow string intern intern equal liter string string valu constant express intern String::String liter defin section 10 trade languag specif string content string guarante pool uniqu string
AccessibleObject::AccessibleObject AccessibleObject::AccessibleObject base Field::Field Method::Method Constructor::Constructor object provid abil flag reflect object suppress default languag access control check access check default packag access protect privat member perform field constructor set get field invok creat initi instanc respect set access flag reflect object permit sophist applic suffici privileg Object::Object serial persist mechan manipul object manner normal prohibit default reflect object access
AccessibleObject::setAccessible Set::Set access flag object indic boolean valu valu indic reflect object suppress languag access check valu fals indic reflect object enforc languag access check first secur manag checkpermiss call reflectpermiss suppressaccesscheck permiss SecurityException::SecurityException rais flag access object chang exampl element object object SecurityException::SecurityException rais object object lang flag flag valu access flag
Member::getDeclaringClass return Class::Class object repres interfac declar member constructor repres Member::Member object repres declar member
AnnotatedElement::AnnotatedElement repres annot element program current run vm interfac allow annot read reflect annot return interfac immut serializ array return interfac modifi caller affect array return caller support multipl annot type element argument repeat annot type jls look contain annot jls return annot contain Container::Container annot generat compil time wrap multipl annot argument type term indirect associ interfac describ precis annot return annot element runtimevisibleannot runtimevisibleparameterannot runtimevisibletypeannot attribut attribut contain annot indirect element runtimevisibleannot runtimevisibleparameterannot runtimevisibletypeannot attribut type repeat attribut contain exact annot valu element contain type contain annot type type annot element annot type type inherit superclass annot associ element indirect annot type indirect type inherit associ superclass tabl summar kind annot presenc interfac examin invoc get declar annotationsbytyp Class::Class order annot indirect element comput indirect annot place contain annot order appear valu element contain annot compat concern keep mind annot type origin repeat modifi repeat contain annot type tc modifi repeat sourc binari compat exist use exist use tc sourc compat sourc annot type type tc compil binari compat file annot type type tc kind use type type tc link modifi version link earlier version annot type tc inform serv act contain annot type modifi formal repeat altern made repeat tc introduc type annot type tc element modifi repeat tc contain annot type chang behavior compat respect get declar annot call argument tc get declar annot result chang due tc becom contain annot type chang chang result get declar annotationsbytyp call argument recogn annot type tc contain annot look expos annot type annot type element made repeat annot type ad element addit annot type sourc compat binari compat addit annot type chang result get declar annot get declar annot see contain annot element see annot type addit annot type chang result get declar annotationsbytyp result expos addit annot type previous expos singl annot type annot return interfac contain indirect valu member refer access vm attempt read call relev return return annot result similar attempt read enum valu member result enum constant annot longer enum type annot type meta annot repeat annot valu element indic type tc tc declar valu return type type thrown final attempt read member definit evolv incompat result
AnnotatedElement::isAnnotationPresent return annot specifi type element els fals design primarili conveni access marker annot truth valu return equival getannot annotationclass null bodi default specifi annotationclass Class::Class object correspond annot type annot specifi annot type element els fals
AnnotatedElement::getAnnotation return element annot specifi type annot els null type annot queri return annotationclass Class::Class object correspond annot type element annot specifi annot type element els null
AnnotatedElement::getAnnotationsByType return annot associ element annot associ element return valu array length differ detect argument repeat annot type jls attempt find annot type look contain annot caller free modifi return array effect array return caller default implement first call pass annotationclass argument return array length greater zero array return return array zero length AnnotatedElement::AnnotatedElement argument type inherit annot type superclass AnnotatedElement::AnnotatedElement non null return result result call superclass annotationclass argument zero length array return type annot queri return annotationclass Class::Class object correspond annot type element annot specifi annot type associ element els array length zero
AnnotatedElement::getDeclaredAnnotation return element annot specifi type annot els null ignor inherit annot return null annot element default implement first perform null check loop result return first annot annot type match argument type type annot queri return annotationclass Class::Class object correspond annot type element annot specifi annot type element els null
AnnotatedElement::getDeclaredAnnotationsByType return element annot specifi type annot indirect ignor inherit annot specifi annot indirect element return valu array length differ detect argument repeat annot type jls attempt find annot type look contain annot caller free modifi return array effect array return caller default implement call time find annot annot type repeat find contain annot annot annot type annotationclass found indirect get call determin order element return array altern default implement call singl time return array examin indirect annot result call assum consist result call type annot queri return indirect annotationclass Class::Class object correspond annot type element annot specifi annot type indirect element els array length zero
Method::Method Method::Method provid access singl interfac reflect instanc includ abstract Method::Method permit widen convers occur match actual paramet invok formal paramet throw IllegalArgumentException::IllegalArgumentException narrow convers occur
Method::Method packag privat constructor ReflectAccess::ReflectAccess enabl instanti object lang packag sun reflect langreflectaccess
Method::copy packag privat routin expos lang ReflectAccess::ReflectAccess return copi Method::Method copi root field point Method::Method
Method::getName return name repres Method::Method object String::String
Method::getReturnType return Class::Class object repres formal return type repres Method::Method object return type object repres
Method::getGenericReturnType return Window::Type object repres formal return type repres Method::Method object return type parameter type Window::Type object return accur reflect actual type paramet sourc return type type variabl parameter type creat resolv Window::Type object repres formal return type
Method::equals compar Method::Method specifi object return object declar name formal paramet type return type
Method::hashCode return hashcod Method::Method hashcod comput exclus hashcod declar name name
Method::toString return string describ Method::Method string format access modifi follow return type follow space follow declar follow period follow name follow parenthes comma separ list formal paramet type throw check paramet list follow space follow word throw follow comma separ list thrown type exampl access modifi place canon order specifi languag specif protect privat first modifi order abstract default static final synchron nativ strictfp string describ Method::Method Method::Method modifi
Method::toGenericString return string describ Method::Method includ type paramet string format access modifi follow angl bracket comma separ list type paramet follow generic return type follow space follow declar follow period follow name follow parenthes comma separ list generic formal paramet type declar take variabl number argument instead denot last paramet type denot type space separ access modifi type paramet return type type paramet type paramet list elid type paramet list space separ list name declar throw paramet list follow space follow word throw follow comma separ list generic thrown type access modifi place canon order specifi languag specif protect privat first modifi order abstract default static final synchron nativ strictfp string describ Method::Method includ type paramet Method::Method modifi
Method::invoke invok repres Method::Method object specifi object specifi paramet individu paramet automat unwrap match primit formal paramet primit refer paramet subject invoc convers necessari static specifi obj argument ignor null number formal paramet requir suppli arg array length null instanc invok use dynam lookup document languag specif edit section 15 12 particular overrid base runtim type target object occur static declar initi initi complet normal valu return return caller invok valu primit type first appropri wrap object valu type array primit type element array wrap object word array primit type return return type invoc return null obj object invok arg argument call result dispatch repres object obj paramet arg
Method::getDefaultValue return default valu annot member repres Method::Method instanc member primit type instanc correspond wrapper type return return null default associ member instanc repres declar member annot type default valu annot member repres Method::Method instanc
Constructor::Constructor Constructor::Constructor provid access singl constructor Constructor::Constructor permit widen convers occur match actual paramet newinst constructor formal paramet throw IllegalArgumentException::IllegalArgumentException narrow convers occur constructor declar
Constructor::Constructor packag privat constructor ReflectAccess::ReflectAccess enabl instanti object lang packag sun reflect langreflectaccess
Constructor::copy packag privat routin expos lang ReflectAccess::ReflectAccess return copi Constructor::Constructor copi root field point Constructor::Constructor
Constructor::getName return name constructor string binari name constructor declar
Constructor::equals compar Constructor::Constructor specifi object return object Constructor::Constructor object declar formal paramet type
Constructor::hashCode return hashcod Constructor::Constructor hashcod hashcod constructor declar name
Constructor::toString return string describ Constructor::Constructor string format constructor access modifi follow fulli qualifi name declar follow parenthes comma separ list constructor formal paramet type exampl modifi constructor access modifi protect privat appear constructor default packag access string describ Constructor::Constructor Constructor::Constructor modifi
Constructor::toGenericString return string describ Constructor::Constructor includ type paramet string format constructor access modifi follow angl bracket comma separ list constructor type paramet follow fulli qualifi name declar follow parenthes comma separ list constructor generic formal paramet type constructor declar take variabl number argument instead denot last paramet type denot type space separ access modifi type paramet return type type paramet type paramet list elid type paramet list space separ list name constructor declar throw paramet list follow space follow word throw follow comma separ list thrown type modifi constructor access modifi protect privat appear constructor default packag access string describ Constructor::Constructor includ type paramet Constructor::Constructor modifi
Constructor::newInstance use constructor repres Constructor::Constructor object creat initi instanc constructor declar specifi initi paramet individu paramet automat unwrap match primit formal paramet primit refer paramet subject invoc convers necessari number formal paramet requir constructor suppli initarg array length null constructor declar inner non static context first argument constructor enclos instanc see section 15 trade languag specif requir access argument check succeed instanti proceed constructor declar initi initi constructor complet normal return newli creat initi instanc initarg array object pass argument constructor call valu primit type wrap wrapper object appropri type float object creat call constructor object repres
Field::Field Field::Field provid dynam access singl field interfac reflect field static field instanc field Field::Field permit widen convers occur get set access oper throw IllegalArgumentException::IllegalArgumentException narrow convers occur
Field::Field packag privat constructor ReflectAccess::ReflectAccess enabl instanti object lang packag sun reflect langreflectaccess
Field::copy packag privat routin expos lang ReflectAccess::ReflectAccess return copi Field::Field copi root field point Field::Field
Field::getDeclaringClass return Class::Class object repres interfac declar field repres Field::Field object
Field::getName return name field repres Field::Field object
Field::getModifiers return languag modifi field repres Field::Field object integ Modifier::Modifier decod modifi
Field::getType return Class::Class object identifi declar type field repres Field::Field object Class::Class object identifi declar type field repres object
Field::getGenericType return Window::Type object repres declar type field repres Field::Field object Window::Type parameter type Window::Type object return accur reflect actual type paramet sourc type field type variabl parameter type creat resolv Window::Type object repres declar type field repres Field::Field object
Field::equals compar Field::Field specifi object return object Field::Field object declar name type
Field::hashCode return hashcod Field::Field comput exclus hashcod field declar name name
Field::toString return string describ Field::Field format access modifi field follow field type follow space follow fulli qualifi name declar field follow period follow name field exampl modifi place canon order specifi languag specif protect privat first modifi order static final transient volatil string describ Field::Field Field::Field modifi
Field::toGenericString return string describ Field::Field includ generic type format access modifi field follow generic field type follow space follow fulli qualifi name declar field follow period follow name field modifi place canon order specifi languag specif protect privat first modifi order static final transient volatil string describ Field::Field includ generic type Field::Field modifi
Field::get return valu field repres Field::Field specifi object valu automat wrap object primit type field valu obtain follow field static field obj argument ignor null field instanc field specifi obj argument null throw NullPointerException::NullPointerException specifi object instanc interfac declar field throw IllegalArgumentException::IllegalArgumentException Field::Field object enforc languag access control field inaccess throw IllegalAccessException::IllegalAccessException field static declar field initi initi valu retriev instanc static field field primit type valu wrap object return return field hidden type obj field valu obtain accord preced rule obj object repres field valu extract valu repres field object obj primit valu wrap appropri object return
Field::set set field repres Field::Field object specifi object argument specifi valu valu automat unwrap field primit type oper proceed follow field static obj argument ignor null field instanc field specifi object argument null throw NullPointerException::NullPointerException specifi object argument instanc interfac declar field throw IllegalArgumentException::IllegalArgumentException Field::Field object enforc languag access control field inaccess throw IllegalAccessException::IllegalAccessException field final throw IllegalAccessException::IllegalAccessException setaccess succeed Field::Field object field non static set final field meaning deseri reconstruct instanc blank final field made avail access part program use context unpredict effect includ case part program continu use origin valu field field primit type unwrap convers attempt convert valu valu primit type attempt fail throw IllegalArgumentException::IllegalArgumentException unwrap valu convert type field ident widen convers throw IllegalArgumentException::IllegalArgumentException field static declar field initi initi field set possibl unwrap widen valu field hidden type obj field valu set accord preced rule obj object field modifi valu valu field obj modifi
Field::setBoolean set valu field boolean specifi object equival set obj zobj where zobj Boolean::Boolean object zobj booleanvalu obj object field modifi valu field obj modifi
Field::setInt set valu field int specifi object equival set obj iobj where iobj Integer::Integer object iobj intvalu obj object field modifi valu field obj modifi
Field::setLong set valu field specifi object equival set obj lobj where lobj Long::Long object lobj longvalu obj object field modifi valu field obj modifi
Field::getAnnotatedType return AnnotatedType::AnnotatedType object repres use type specifi declar type field repres Field::Field object repres declar type field repres Field::Field
InvocationHandler::invoke process invoc proxi instanc return result invok invoc handler invok proxi instanc associ proxi proxi instanc invok Method::Method instanc correspond interfac invok proxi instanc declar Method::Method object interfac declar superinterfac proxi interfac proxi inherit arg array object contain valu argument pass invoc proxi instanc null interfac take argument argument primit type wrap instanc appropri primit wrapper lang integ lang boolean valu return invoc proxi instanc declar return type interfac primit type valu return instanc correspond primit wrapper type assign declar return type valu return null interfac return type primit NullPointerException::NullPointerException thrown invoc proxi instanc valu return compat interfac declar return type describ ClassCastException::ClassCastException thrown invoc proxi instanc
Array::Array Constructor::Constructor Class::Class Array::Array instanti
Array::newInstance creat array specifi compon type length invok equival creat array follow number dimens array exceed 255 componenttyp Class::Class object repres compon type array length length array array
Array::newInstance creat array specifi compon type dimens componenttyp repres non array interfac array dimens length dimens componenttyp compon type componenttyp repres array number dimens array equal sum dimens length number dimens componenttyp case compon type array compon type componenttyp number dimens array exceed 255 componenttyp Class::Class object repres compon type array dimens array int repres dimens array array
Executable::getDeclaringClass return Class::Class object repres interfac declar execut repres object
Executable::getParameterTypes return array Class::Class object repres formal paramet type declar order execut repres object return array length execut take paramet paramet type execut object repres
Executable::getExceptionTypes return array Class::Class object repres type declar thrown execut repres object return array length execut declar throw claus type declar thrown execut object repres
Parameter::getType return Class::Class object identifi declar type paramet repres Parameter::Parameter object Class::Class object identifi declar type paramet repres object
Modifier::isPublic return integ argument includ modifi fals mod set modifi mod includ modifi fals
Modifier::isPrivate return integ argument includ privat modifi fals mod set modifi mod includ privat modifi fals
Modifier::isProtected return integ argument includ protect modifi fals mod set modifi mod includ protect modifi fals
Modifier::isStatic return integ argument includ static modifi fals mod set modifi mod includ static modifi fals
Modifier::isFinal return integ argument includ final modifi fals mod set modifi mod includ final modifi fals
Modifier::isAbstract return integ argument includ abstract modifi fals mod set modifi mod includ abstract modifi fals
Modifier::classModifiers return int valu ing sourc languag modifi appli int valu ing sourc languag modifi appli Class::Class modifi
Modifier::constructorModifiers return int valu ing sourc languag modifi appli constructor int valu ing sourc languag modifi appli constructor Constructor::Constructor modifi
Modifier::methodModifiers return int valu ing sourc languag modifi appli int valu ing sourc languag modifi appli Method::Method modifi
Modifier::fieldModifiers return int valu ing sourc languag modifi appli field int valu ing sourc languag modifi appli field Field::Field modifi
Proxy::Proxy Proxy::Proxy provid static creat dynam proxi instanc superclass dynam proxi creat creat proxi interfac foo simpli dynam proxi simpli refer proxi implement list interfac specifi runtim creat behavior describ proxi interfac interfac implement proxi proxi instanc instanc proxi proxi instanc associ invoc handler object implement interfac invoc proxi instanc proxi interfac dispatch instanc invoc handler pass proxi instanc lang reflect object identifi invok array type Object::Object contain argument invoc handler process encod invoc appropri result return return result invoc proxi instanc proxi properti proxi final abstract proxi interfac proxi non final abstract proxi interfac non unqualifi name proxi unspecifi space name begin string Proxy::Proxy reserv proxi proxi extend lang reflect proxi proxi implement exact interfac specifi creation order proxi implement non interfac defin packag interfac packag proxi unspecifi note packag seal prevent proxi success defin particular packag runtim defin loader packag particular signer proxi implement interfac specifi creation invok Class::getInterfaces Class::Class object return array contain list interfac order specifi creation invok getmethod Class::Class object return array Method::Method object includ interfac invok getmethod find proxi interfac expect return pass proxi return proxi getproxyclass object return proxi newproxyinst fals secur protectiondomain proxi system load bootstrap loader lang object proxi generat trust system protect domain typic grant secur allpermiss proxi constructor take argument implement interfac set invoc handler proxi instanc use reflect access constructor proxi instanc creat call combin action call invok constructor invoc handler proxi instanc properti given proxi instanc proxi interfac implement proxi foo express return cast oper succeed throw ClassCastException::ClassCastException proxi instanc associ invoc handler pass constructor static return invoc handler associ proxi instanc pass argument interfac invoc proxi instanc encod dispatch invoc handler describ document invoc hashcod equal tostr declar lang object proxi instanc encod dispatch invoc handler invok manner interfac invoc encod dispatch describ declar Method::Method object pass invok lang object proxi instanc inherit lang object overridden proxi invoc behav instanc lang object duplic multipl Proxy::Proxy interfac interfac proxi contain name paramet signatur order proxi interfac becom signific duplic invok proxi instanc Method::Method object pass invoc handler necessarili declar assign refer type interfac proxi invok limit exist correspond implement generat proxi determin interfac invok therefor duplic invok proxi instanc Method::Method object foremost interfac contain inherit superinterfac proxi list interfac pass invoc handler invok regardless refer type invoc occur proxi interfac contain name paramet signatur hashcod equal tostr lang object invok proxi instanc Method::Method object pass invoc handler lang object declar word non final lang object logic preced proxi interfac determin Method::Method object pass invoc handler note duplic dispatch invoc handler invok throw check type assign type throw claus proxi interfac invok invok throw check assign type declar proxi interfac invok uncheck UndeclaredThrowableException::UndeclaredThrowableException thrown invoc proxi instanc restrict mean type return invok getexceptiontyp Method::Method object pass invok necessarili thrown success invok
Proxy::getProxyClass return lang object proxi given loader array interfac proxi defin specifi loader implement suppli interfac given interfac non proxi non proxi permut interfac defin loader exist proxi return proxi interfac generat dynam defin loader restrict paramet pass proxi getproxyclass Class::Class object interfac array repres interfac primit type element interfac array refer ident Class::Class object interfac type visibl name specifi loader word loader cl interfac express non interfac packag proxi implement interfac regardless packag defin set member specifi interfac signatur return type primit type return type return type assign return type rest result proxi exceed limit impos virtual machin exampl vm limit number interfac implement 65535 case size interfac array exceed 65535 restrict violat proxi getproxyclass throw IllegalArgumentException::IllegalArgumentException interfac array argument element null NullPointerException::NullPointerException thrown note order specifi proxi interfac signific request proxi combin interfac order result distinct proxi loader loader defin proxi interfac list interfac proxi implement proxi defin specifi loader implement specifi interfac
TypeVariable::getBounds return array Window::Type object repres upper bound type variabl note upper bound explicit declar upper bound Object::Object upper bound parameter type type variabl creat see detail creation process parameter type resolv array Window::Type repres upper bound type variabl
WildcardType::WildcardType WildcardType::WildcardType repres wildcard type express extend Number::Number super Integer::Integer
WildcardType::getUpperBounds return array Window::Type object repres upper bound type variabl note upper bound explicit declar upper bound Object::Object upper bound parameter type type variabl creat see detail creation process parameter type resolv array Types::Types repres upper bound type variabl
ClassValue::removeStaleEntries remov stale entri given rang execut Map::Map lock
RuntimePermission::RuntimePermission creat RuntimePermission::RuntimePermission object specifi name name symbol name RuntimePermission::RuntimePermission action String::String current unus null name name RuntimePermission::RuntimePermission action null
Float::Float Float::Float wrap valu primit type float object object type Float::Float contain singl field type float addit provid convert float String::String String::String float constant use deal float
Float::TYPE Class::Class instanc repres primit type float
Float::valueOf return Float::Float object hold float valu repres argument string null NullPointerException::NullPointerException thrown lead trail whitespac charact ignor whitespac remov ascii space control charact remov rest constitut floatvalu describ lexic syntax rule floatvalu sign opt nan sign opt infin sign opt floatingpointliter sign opt hexfloatingpointliter signedinteg hexfloatingpointliter hexsignificand binaryexpon floattypesuffix opt hexsignificand hexnumer hexnumer 0x hexdigit opt hexdigit 0x hexdigit opt hexdigit binaryexpon binaryexponentind signedinteg binaryexponentind where sign floatingpointliter hexnumer hexdigit signedinteg floattypesuffix defin lexic structur section trade languag specif underscor accept digit form floatvalu NumberFormatException::NumberFormatException thrown regard repres exact decim valu usual computer scientif notat exact hexadecim valu exact numer valu conceptu convert infinit precis binari valu type float usual nearest rule ieee 754 float point arithmet includ preserv sign zero valu note nearest rule impli overflow underflow behaviour exact valu magnitud greater equal float result infin exact valu magnitud equal float result zero final Float::Float object repres float valu return interpret local string represent float point valu use subclass note trail format specifi specifi determin type float point liter 0f float valu 0d doubl valu influenc result word numer valu input string convert target float point type general step sequenc convers string doubl follow doubl float equival convert string float exampl first convert intermedi doubl float string 00000017881393421514957253748434595763683319091796875001d result float valu 0000002f string convert float 000000 result avoid call invalid string NumberFormatException::NumberFormatException thrown document list regular express screen input string pars Float::Float object hold valu repres String::String argument
Float::parseFloat return float initi valu repres specifi String::String perform valueof Float::Float string pars float valu repres string argument
Float::toString return string represent Float::Float object primit float valu repres object convert String::String exact tostr argument String::String represent object
ExceptionInInitializerError::ExceptionInInitializerError construct ExceptionInInitializerError::ExceptionInInitializerError null detail messag string save throwabl object detail messag String::String describ particular
ExceptionInInitializerError::ExceptionInInitializerError construct ExceptionInInitializerError::ExceptionInInitializerError specifi detail messag string detail messag String::String describ particular detail messag string save retriev save throwabl object detail messag
Exception::Exception Exception::Exception subclass form Throwable::Throwable indic condit reason want catch Exception::Exception subclass subclass check check declar constructor throw claus thrown execut constructor propag constructor boundari 11 compil time check
Exception::Exception construct null detail messag caus initi subsequ initi call
Exception::Exception construct specifi detail messag caus initi subsequ initi call messag detail messag detail messag save retriev
Exception::Exception construct specifi detail messag caus note detail messag associ caus automat incorpor detail messag messag detail messag save retriev caus caus save retriev null valu permit indic caus nonexist unknown
Exception::Exception construct specifi caus detail messag caus null null caus tostr typic contain detail messag caus constructor use wrapper throwabl exampl caus caus save retriev null valu permit indic caus nonexist unknown
Exception::Exception construct specifi detail messag caus suppress enabl disabl writabl stack trace enabl disabl messag detail messag caus caus null valu permit indic caus nonexist unknown enablesuppress suppress enabl disabl writablestacktrac stack trace writabl
InstantiationException::InstantiationException thrown tri creat instanc use newinst Class::Class specifi object instanti instanti fail varieti reason includ limit object repres abstract interfac array primit type nullari constructor
ClassDefinition::ClassDefinition serv paramet block instrument redefineclass serv bind Class::Class redefin file byte
ClassDefinition::ClassDefinition creat ClassDefinition::ClassDefinition bind use suppli file byte copi suppli buffer captur refer theclass Class::Class redefin theclassfil file byte
ClassDefinition::getDefinitionClass return Class::Class object refer
Package::Package Package::Package object contain version implement specif packag version retriev made avail instanc load es typic store manifest distribut set make packag implement particular specif specif titl version number vendor string identifi specif ask packag compat particular version see detail specif version number use syntax consist nonneg decim integ separ period exampl allow extens number repres major minor micro version version specif describ formal grammar specificationvers digit refinedvers opt refinedvers digit digit refinedvers digit digit digit digit charact return implement titl version vendor string identifi implement made avail conveni enabl accur report packag involv occur content implement string vendor specif implement version string specifi syntax compar equal desir version identifi ClassLoader::ClassLoader instanc packag Package::Package object static allow packag found name set packag known current loader found
Package::getName return name packag fulli qualifi name packag defin section trade languag specif exampl lang
Package::getPackage find packag name caller ClassLoader::ClassLoader instanc caller ClassLoader::ClassLoader instanc find packag instanc correspond name caller ClassLoader::ClassLoader instanc null set packag load system ClassLoader::ClassLoader instanc search find name packag packag attribut version specif loader creat packag instanc appropri attribut typic attribut defin manifest accompani name packag name exampl lang packag request name null packag avail archiv codebas
Package::getPackages get packag current known caller ClassLoader::ClassLoader instanc packag correspond load access name ClassLoader::ClassLoader instanc caller ClassLoader::ClassLoader instanc bootstrap ClassLoader::ClassLoader instanc repres null implement packag correspond load bootstrap ClassLoader::ClassLoader instanc return array packag known caller ClassLoader::ClassLoader instanc zero length array return known
Package::toString return string represent Package::Package valu string packag packag name packag titl defin append packag version defin append string represent packag
Package::Package construct packag instanc specifi version name name packag spectitl titl specif specvers version specif specvendor organ maintain specif impltitl titl implement implvers version implement implvendor organ maintain implement
Boolean::Boolean Boolean::Boolean wrap valu primit type boolean object object type Boolean::Boolean contain singl field type boolean addit provid convert boolean String::String String::String boolean constant use deal boolean
Boolean::TRUE Boolean::Boolean object correspond primit valu
Boolean::FALSE Boolean::Boolean object correspond primit valu fals
Boolean::TYPE Class::Class object repres primit type boolean
Boolean::Boolean alloc Boolean::Boolean object repres valu argument note rare appropri use constructor instanc requir static factori general choic yield signific space time perform valu valu Boolean::Boolean
Boolean::Boolean alloc Boolean::Boolean object repres valu string argument null equal ignor case string alloc Boolean::Boolean object repres valu fals exampl boolean produc Boolean::Boolean object repres boolean yes produc Boolean::Boolean object repres fals string convert Boolean::Boolean
Boolean::parseBoolean pars string argument boolean boolean return repres valu string argument null equal ignor case string exampl boolean parseboolean return exampl boolean parseboolean yes return fals String::String contain boolean represent pars boolean repres string argument
Boolean::booleanValue return valu Boolean::Boolean object boolean primit primit boolean valu object
Boolean::valueOf return Boolean::Boolean instanc repres specifi boolean valu specifi boolean valu return boolean fals return boolean fals Boolean::Boolean instanc requir general prefer constructor yield signific space time perform boolean valu Boolean::Boolean instanc repres
Boolean::valueOf return Boolean::Boolean valu repres specifi string Boolean::Boolean return repres valu string argument null equal ignor case string string Boolean::Boolean valu repres string
Boolean::toString return String::String object repres specifi boolean specifi boolean string return string fals return boolean convert string represent specifi boolean
Boolean::toString return String::String object repres boolean valu object repres valu string equal return string equal fals return string represent object
Boolean::hashCode return hash Boolean::Boolean object integ 1231 object repres return integ 1237 object repres fals
Boolean::equals return argument null Boolean::Boolean object repres boolean valu object obj object compar Boolean::Boolean object repres valu fals
Boolean::compareTo compar Boolean::Boolean instanc Boolean::Boolean instanc compar zero object repres boolean valu argument posit valu object repres argument repres fals negat valu object repres fals argument repres
AutoCloseable::close close resourc relinquish resourc invok automat object manag resourc statement interfac declar throw Exception::Exception implement strong encourag declar concret implement close throw specif throw close oper fail case where close oper fail requir care attent implement strong advis relinquish resourc intern mark resourc close prior throw close unlik invok ensur resourc releas time manner furthermor reduc aris resourc wrap wrap resourc implement interfac strong advis close throw interact thread interrupt status runtim misbehavior occur InterruptedException::InterruptedException general caus suppress autoclos close throw note close requir idempot word call close visibl side effect closeabl close requir effect call implement interfac strong encourag make close idempot
Byte::Byte Byte::Byte wrap valu primit type byte object object type Byte::Byte contain singl field type byte addit provid convert byte String::String String::String byte constant use deal byte
Byte::TYPE Class::Class instanc repres primit type byte
Byte::toString return String::String object repres specifi byte radix assum 10 byte convert string represent specifi byte
Byte::parseByte pars string argument sign byte radix specifi argument charact string digit specifi radix determin return nonneg valu first charact ascii sign u005cu002d indic negat valu ascii sign u005cu002b indic posit valu result byte valu return type NumberFormatException::NumberFormatException thrown situat occur first argument null string length zero radix smaller larger charact string digit specifi radix first charact sign u005cu002d sign u005cu002b string longer length valu repres string valu type byte String::String contain byte represent pars radix radix pars byte valu repres string argument specifi radix
Byte::parseByte pars string argument sign decim byte charact string decim digit first charact ascii sign u005cu002d indic negat valu ascii sign u005cu002b indic posit valu result byte valu return exact argument radix 10 given argument String::String contain byte represent pars byte valu repres argument decim
Byte::valueOf return Byte::Byte object hold valu extract specifi String::String pars radix given argument first argument interpret repres sign byte radix specifi argument exact argument given result Byte::Byte object repres byte valu specifi string word return Byte::Byte object equal valu byte byte parsebyt radix string pars radix radix interpret Byte::Byte object hold valu repres string argument specifi radix
Byte::valueOf return Byte::Byte object hold valu given specifi String::String argument interpret repres sign decim byte exact argument given result Byte::Byte object repres byte valu specifi string word return Byte::Byte object equal valu byte byte parsebyt string pars Byte::Byte object hold valu repres string argument
Byte::decode decod String::String Byte::Byte accept decim hexadecim octal number given grammar decodablestr sign opt decimalnumer sign opt 0x hexdigit sign opt 0x hexdigit sign opt hexdigit sign opt octaldigit sign decimalnumer hexdigit octaldigit defin section 10 trade languag specif underscor accept digit sequenc charact option sign radix specifi 0x 0x lead zero pars byte parsebyt indic radix 10 16 sequenc charact repres posit valu thrown result negat first charact specifi String::String sign whitespac charact permit String::String nm String::String decod Byte::Byte object hold byte valu repres nm
Byte::Byte construct newli alloc Byte::Byte object repres byte valu indic String::String paramet string convert byte valu exact manner Byte::parseByte radix 10 String::String convert Byte::Byte
Byte::toString return String::String object repres Byte::Byte valu valu convert sign decim represent return string exact byte valu given argument string represent valu object base nbsp 10
Integer::Integer Integer::Integer wrap valu primit type int object object type Integer::Integer contain singl field type int addit provid convert int String::String String::String int constant use deal int implement note implement bit twiddl base materi henri warren jr hacker delight addison wesley 2002
Integer::TYPE Class::Class instanc repres primit type int
Integer::toHexString return string represent integ argument unsign integ base nbsp 16 unsign integ valu argument 32 argument negat equal argument valu convert string ascii digit hexadecim base nbsp 16 extra lead valu argument recov return string call unsign magnitud zero repres singl zero charact u005cu0030 first charact represent unsign magnitud zero charact charact hexadecim digit 0123456789abcdef charact u005cu0030 u005cu0039 u005cu0061 u005cu0066 uppercas letter desir call result integ tohexstr touppercas integ convert string string represent unsign integ valu repres argument hexadecim base nbsp 16
Integer::toOctalString return string represent integ argument unsign integ base nbsp unsign integ valu argument 32 argument negat equal argument valu convert string ascii digit octal base nbsp extra lead valu argument recov return string call unsign magnitud zero repres singl zero charact u005cu0030 first charact represent unsign magnitud zero charact charact octal digit 01234567 charact u005cu0030 u005cu0037 integ convert string string represent unsign integ valu repres argument octal base nbsp
Integer::toBinaryString return string represent integ argument unsign integ base nbsp unsign integ valu argument 32 argument negat equal argument valu convert string ascii digit binari base nbsp extra lead valu argument recov return string call unsign magnitud zero repres singl zero charact u005cu0030 first charact represent unsign magnitud zero charact charact u005cu0030 u005cu0031 binari digit integ convert string string represent unsign integ valu repres argument binari base nbsp
Integer::toString return String::String object repres specifi integ argument convert sign decim represent return string exact argument radix 10 given argument integ convert string represent argument base nbsp 10
Integer::parseInt pars string argument sign integ radix specifi argument charact string digit specifi radix determin return nonneg valu first charact ascii sign u005cu002d indic negat valu ascii sign u005cu002b indic posit valu result integ valu return type NumberFormatException::NumberFormatException thrown situat occur first argument null string length zero radix smaller larger charact string digit specifi radix first charact sign u005cu002d sign u005cu002b string longer length valu repres string valu type int exampl String::String contain integ represent pars radix radix pars integ repres string argument specifi radix
Integer::parseInt pars string argument sign decim integ charact string decim digit first charact ascii sign u005cu002d indic negat valu ascii sign u005cu002b indic posit valu result integ valu return exact argument radix 10 given argument String::String contain int represent pars integ valu repres argument decim
Integer::parseUnsignedInt pars string argument unsign integ radix specifi argument unsign integ map valu associ negat number posit number larger max valu charact string digit specifi radix determin return nonneg valu first charact ascii sign u005cu002b result integ valu return type NumberFormatException::NumberFormatException thrown situat occur first argument null string length zero radix smaller larger charact string digit specifi radix first charact sign u005cu002b string longer length valu repres string larger largest unsign int 32 String::String contain unsign integ represent pars radix radix pars integ repres string argument specifi radix
Integer::parseUnsignedInt pars string argument unsign decim integ charact string decim digit first charact ascii sign u005cu002b result integ valu return exact argument radix 10 given argument String::String contain unsign int represent pars unsign integ valu repres argument decim
Integer::valueOf return Integer::Integer object hold valu extract specifi String::String pars radix given argument first argument interpret repres sign integ radix specifi argument exact argument given result Integer::Integer object repres integ valu specifi string word return Integer::Integer object equal valu integ integ parseint radix string pars radix radix interpret Integer::Integer object hold valu repres string argument specifi radix
Integer::valueOf return Integer::Integer object hold valu specifi String::String argument interpret repres sign decim integ exact argument given result Integer::Integer object repres integ valu specifi string word return Integer::Integer object equal valu integ integ parseint string pars Integer::Integer object hold valu repres string argument
Integer::valueOf return Integer::Integer instanc repres specifi int valu Integer::Integer instanc requir general prefer constructor yield signific space time perform cach frequent request valu cach valu rang 128 127 inclus cach valu rang int valu Integer::Integer instanc repres
Integer::Integer construct newli alloc Integer::Integer object repres specifi int valu valu valu repres Integer::Integer object
Integer::Integer construct newli alloc Integer::Integer object repres int valu indic String::String paramet string convert int valu exact manner Integer::parseInt radix 10 String::String convert Integer::Integer
Integer::byteValue return valu Integer::Integer byte narrow primit convers narrow primit convers
Integer::shortValue return valu Integer::Integer narrow primit convers narrow primit convers
Integer::intValue return valu Integer::Integer int
Integer::longValue return valu Integer::Integer widen primit convers widen primit convers
Integer::floatValue return valu Integer::Integer float widen primit convers widen primit convers
Integer::doubleValue return valu Integer::Integer doubl widen primit convers widen primit convers
Integer::toString return String::String object repres Integer::Integer valu valu convert sign decim represent return string exact integ valu given argument string represent valu object base nbsp 10
Integer::hashCode return hash Integer::Integer hash valu object equal primit int valu repres Integer::Integer object
Integer::equals compar object specifi object result argument null Integer::Integer object contain int valu object obj object compar object fals
Integer::getInteger determin integ valu system properti specifi name first argument treat name system properti System::System properti access string valu properti interpret integ valu use grammar support Integer::Integer object repres valu return properti specifi name specifi name empti null properti correct numer format null return word return Integer::Integer object equal valu getinteg nm null nm properti name Integer::Integer valu properti
Integer::getInteger determin integ valu system properti specifi name first argument treat name system properti System::System properti access string valu properti interpret integ valu use grammar support Integer::Integer object repres valu return argument default valu Integer::Integer object repres valu argument return properti specifi name properti correct numer format specifi name empti null word return Integer::Integer object equal valu getinteg nm integ val practic implement manner avoid unnecessari alloc Integer::Integer object default valu nm properti name val default valu Integer::Integer valu properti
Integer::getInteger return integ valu system properti specifi name first argument treat name system properti System::System properti access string valu properti interpret integ valu Integer::Integer object repres valu return summari properti valu begin ascii charact 0x ascii charact follow sign rest pars hexadecim integ exact radix 16 properti valu begin ascii charact follow charact pars octal integ exact radix properti valu pars decim integ exact radix 10 argument default valu default valu return properti specifi name properti correct numer format specifi name empti null nm properti name val default valu Integer::Integer valu properti
Integer::decode decod String::String Integer::Integer accept decim hexadecim octal number given grammar decodablestr sign opt decimalnumer sign opt 0x hexdigit sign opt 0x hexdigit sign opt hexdigit sign opt octaldigit sign decimalnumer hexdigit octaldigit defin section 10 trade languag specif underscor accept digit sequenc charact option sign radix specifi 0x 0x lead zero pars integ parseint indic radix 10 16 sequenc charact repres posit valu thrown result negat first charact specifi String::String sign whitespac charact permit String::String nm String::String decod Integer::Integer object hold int valu repres nm
Integer::compareTo compar Integer::Integer object numer anotherinteg Integer::Integer compar valu Integer::Integer equal argument Integer::Integer valu Integer::Integer numer argument Integer::Integer valu greater Integer::Integer numer greater argument Integer::Integer sign comparison
NoClassDefFoundError::NoClassDefFoundError thrown virtual machin ClassLoader::ClassLoader instanc tri load definit part normal call part creat instanc use express definit found search definit exist current execut compil definit longer found
ClassNotFoundException::ClassNotFoundException thrown tri load string name use fornam Class::Class ClassLoader::findSystemClass ClassLoader::ClassLoader loadclass ClassLoader::ClassLoader definit specifi name found releas retrofit conform general purpos chain mechan option rais load construct time access known caus access aforement legaci
ClassNotFoundException::getException return rais error occur attempt load return null predat general purpos chain facil prefer mean obtain Exception::Exception rais load
Process::Process creat nativ process return instanc subclass Process::Process control process obtain Process::Process provid perform input process perform output process wait process complet check exit status process destroy kill process creat process work process nativ platform nativ window process daemon process win16 dos process microsoft window script default creat subprocess termin consol standard stdin stdout stderr oper redirect parent process where access stream obtain use parent process use stream feed input get output subprocess nativ platform provid limit buffer size standard input output stream failur prompt write input stream read output stream subprocess caus subprocess block deadlock where desir use subprocess kill refer Process::Process object subprocess continu execut asynchron requir process repres Process::Process object execut asynchron concurr respect process Process::Process object prefer creat Process::Process
Process::getOutputStream return output stream connect normal input subprocess output stream pipe standard input process repres Process::Process object standard input subprocess redirect use return implement note return output stream buffer output stream connect normal input subprocess
Process::getInputStream return input stream connect normal output subprocess stream obtain data pipe standard output process repres Process::Process object standard output subprocess redirect use return standard error subprocess redirect use input stream return receiv merg standard output standard error subprocess implement note return input stream buffer input stream connect normal output subprocess
Process::getErrorStream return input stream connect error output subprocess stream obtain data pipe error output process repres Process::Process object standard error subprocess redirect use return implement note return input stream buffer input stream connect error output subprocess
Process::waitFor caus current thread wait necessari process repres Process::Process object termin return subprocess termin subprocess termin call thread block subprocess exit exit valu subprocess repres Process::Process object convent valu indic normal termin
Process::waitFor caus current thread wait necessari subprocess repres Process::Process object termin specifi wait time elaps subprocess termin return valu process termin timeout valu equal zero return valu fals default implement poll Process::exitValue check process termin concret implement strong encourag overrid effici implement timeout maximum time wait unit time unit timeout argument subprocess exit fals wait time elaps subprocess exit
Process::exitValue return exit valu subprocess exit valu subprocess repres Process::Process object convent valu indic normal termin
Process::destroy kill subprocess subprocess repres Process::Process object forcibl termin implement depend
Process::destroyForcibly kill subprocess subprocess repres Process::Process object forcibl termin default implement invok forcibl termin process concret implement strong encourag overrid compliant implement invok Process::Process object return forcibl termin process note subprocess termin isal return brief period Process::destroyForcibly call chain Process::waitFor Process::Process object repres subprocess forcibl destroy
Process::isAlive test subprocess repres Process::Process aliv subprocess repres Process::Process object termin
StringIndexOutOfBoundsException::StringIndexOutOfBoundsException thrown String::String indic index negat greater size string charat thrown index equal size string
StringIndexOutOfBoundsException::StringIndexOutOfBoundsException construct StringIndexOutOfBoundsException::StringIndexOutOfBoundsException detail messag
StringIndexOutOfBoundsException::StringIndexOutOfBoundsException construct StringIndexOutOfBoundsException::StringIndexOutOfBoundsException specifi detail messag detail messag
StringIndexOutOfBoundsException::StringIndexOutOfBoundsException construct StringIndexOutOfBoundsException::StringIndexOutOfBoundsException argument indic illeg index index illeg index
ThreadMXBean::ThreadMXBean manag interfac thread system virtual machin virtual machin singl instanc implement interfac instanc implement interfac obtain call objectnam uniqu identifi mxbean thread system mbeanserv obtain call thread Thread::Thread posit valu return call thread thread uniqu lifetim thread termin thread reus interfac take thread array thread input paramet return thread thread cpu time virtual machin implement support measur cpu time current thread thread thread determin virtual machin support measur cpu time thread determin virtual machin support measur cpu time current thread virtual machin implement support cpu time measur thread support current thread cpu time interfac nanosecond precis necessarili nanosecond accuraci virtual machin disabl cpu time measur default test cpu time measur enabl enabl disabl support respect enabl thread cpu measur expens virtual machin implement thread content monitor virtual machin support thread content monitor thread content monitor enabl accumul elaps time thread block synchron wait notif collect return object determin virtual machin support thread content monitor thread content monitor disabl default enabl thread content monitor synchron deadlock detect virtual machin support monitor obtain thread stack trace synchron includ thread block acquir wait lock thread current threadmxbean interfac provid find deadlock run
ThreadMXBean::getThreadCount return current number live thread includ daemon non daemon thread current number live thread
ThreadMXBean::getPeakThreadCount return peak live thread count virtual machin start peak reset peak live thread count
ThreadMXBean::setThreadContentionMonitoringEnabled enabl disabl thread content monitor Thread::Thread content monitor disabl default enabl enabl fals disabl
ThreadInfo::ThreadInfo Thread::Thread threadinfo contain thread includ general thread thread name thread execut thread state object thread block due wait enter synchron block wait notifi park due call thread object thread block stack trace thread list object monitor lock thread list lock thread number time thread block synchron wait notif accumul elaps time thread block synchron wait notif enabl virtual machin implement support determin virtual machin support thread design use monitor system synchron control mxbean map threadinfo map attribut specifi
ThreadInfo::ThreadInfo Constructor::Constructor ThreadInfo::ThreadInfo creat jvm Thread::Thread state Thread::Thread state lockobj Object::Object thread block lockown thread hold lock blockedcount Number::Number time block enter lock blockedtim approx time block enter lock waitedcount Number::Number time wait lock waitedtim approx time wait lock stacktrac Thread::Thread stack trace
ThreadInfo::ThreadInfo Constructor::Constructor ThreadInfo::ThreadInfo creat jvm Thread::Thread state Thread::Thread state lockobj Object::Object thread block lockown thread hold lock blockedcount Number::Number time block enter lock blockedtim approx time block enter lock waitedcount Number::Number time wait lock waitedtim approx time wait lock stacktrac Thread::Thread stack trace monitor List::List lock monitor stackdepth List::List stack depth synchron List::List lock synchron
ThreadInfo::initialize initi ThreadInfo::ThreadInfo object Thread::Thread state Thread::Thread state lockobj Object::Object thread block lockown thread hold lock blockedcount Number::Number time block enter lock blockedtim approx time block enter lock waitedcount Number::Number time wait lock waitedtim approx time wait lock stacktrac Thread::Thread stack trace lockedmonitor List::List lock monitor lockedsynchron List::List lock synchron
ManagementFactory::CLASS load mxbean name String::String represent objectnam
ManagementFactory::COMPILATION mxbean name String::String represent objectnam
ManagementFactory::MEMORY mxbean name String::String represent objectnam
ManagementFactory::OPERATING system mxbean name String::String represent objectnam
ManagementFactory::RUNTIME mxbean name String::String represent objectnam
ManagementFactory::THREAD mxbean name String::String represent objectnam
ManagementFactory::getThreadMXBean return manag bean thread system virtual machin object virtual machin
ManagementFactory::getRuntimeMXBean return manag bean runtim system virtual machin object virtual machin
ManagementFactory::getPlatformManagementInterfaces return set Class::Class object subinterfac repres manag interfac monitor manag platform set Class::Class object subinterfac repres manag interfac monitor manag platform
PlatformComponent::CLASS load Class::Class load system virtual machin
RuntimeMXBean::RuntimeMXBean manag interfac runtim system virtual machin virtual machin singl instanc implement interfac instanc implement interfac obtain call objectnam uniqu identifi mxbean runtim system mbeanserv obtain call interfac defin conveni access system properti virtual machin
RuntimeMXBean::getName return name repres run virtual machin return name string arbitrari string virtual machin implement choos emb platform specif use return name string run virtual machin name name repres run virtual machin
RuntimeMXBean::getClassPath return path system loader search file equival multipl path path separ path separ charact platform virtual machin monitor path
RuntimeMXBean::getUptime return uptim virtual machin millisecond uptim virtual machin millisecond
RuntimeMXBean::getStartTime return start time virtual machin millisecond return approxim time virtual machin start start time virtual machin millisecond
RuntimeMXBean::getSystemProperties return map name valu system properti call get system properti Properties::Properties name valu string omit mbeanserv access map type map item row follow map name valu system properti
PlatformLoggingMXBean::getLoggerNames return list current regist name call return list logger name list String::String current regist Logger::Logger name
PlatformLoggingMXBean::getLoggerLevel get name log associ specifi logger specifi logger exist null return first find logger given name return name log level call Level::Level specifi logger null mean logger effect level inherit parent empti string return loggernam name Logger::Logger retriev name log level specifi logger empti string log level specifi logger null specifi logger exist null return
PlatformLoggingMXBean::setLoggerLevel set specifi logger specifi levelnam null level specifi logger set pars match levelnam levelnam null level specifi logger set null effect level logger inherit nearest ancestor specif non null level valu loggernam name Logger::Logger set non null levelnam name level set specifi logger null set level inherit nearest ancestor
PlatformLoggingMXBean::getParentLoggerName return name specifi logger specifi logger exist null return specifi logger root Logger::Logger namespac result empti string loggernam name Logger::Logger name nearest exist parent logger empti string specifi logger root logger specifi logger exist null return
Short::Short Short::Short wrap valu primit type object object type Short::Short contain singl field type addit provid convert String::String String::String constant use deal
Short::TYPE Class::Class instanc repres primit type
Short::toString return String::String object repres specifi radix assum 10 convert string represent specifi
Short::parseShort pars string argument sign radix specifi argument charact string digit specifi radix determin return nonneg valu first charact ascii sign u005cu002d indic negat valu ascii sign u005cu002b indic posit valu result valu return type NumberFormatException::NumberFormatException thrown situat occur first argument null string length zero radix smaller larger charact string digit specifi radix first charact sign u005cu002d sign u005cu002b string longer length valu repres string valu type String::String contain represent pars radix radix pars repres string argument specifi radix
Short::parseShort pars string argument sign decim charact string decim digit first charact ascii sign u005cu002d indic negat valu ascii sign u005cu002b indic posit valu result valu return exact argument radix 10 given argument String::String contain represent pars valu repres argument decim
Short::valueOf return Short::Short object hold valu extract specifi String::String pars radix given argument first argument interpret repres sign radix specifi argument exact argument given result Short::Short object repres valu specifi string word return Short::Short object equal valu parseshort radix string pars radix radix interpret Short::Short object hold valu repres string argument specifi radix
Short::valueOf return Short::Short object hold valu given specifi String::String argument interpret repres sign decim exact argument given result Short::Short object repres valu specifi string word return Short::Short object equal valu parseshort string pars Short::Short object hold valu repres string argument
Short::decode decod String::String Short::Short accept decim hexadecim octal number given grammar decodablestr sign opt decimalnumer sign opt 0x hexdigit sign opt 0x hexdigit sign opt hexdigit sign opt octaldigit sign decimalnumer hexdigit octaldigit defin section 10 trade languag specif underscor accept digit sequenc charact option sign radix specifi 0x 0x lead zero pars parseshort indic radix 10 16 sequenc charact repres posit valu thrown result negat first charact specifi String::String sign whitespac charact permit String::String nm String::String decod Short::Short object hold valu repres nm
Short::Short construct newli alloc Short::Short object repres valu indic String::String paramet string convert valu exact manner Short::parseShort radix 10 String::String convert Short::Short
Short::toString return String::String object repres Short::Short valu valu convert sign decim represent return string exact valu given argument string represent valu object base nbsp 10
StringBuffer::StringBuffer thread safe mutabl sequenc charact string buffer modifi point time contain particular sequenc charact length content sequenc chang call String::String buffer safe use multipl thread synchron where necessari oper particular instanc behav occur serial order consist order call made individu thread involv princip oper StringBuffer::StringBuffer append insert overload accept data type effect convert given datum string append insert charact string string buffer append add charact end buffer insert add charact specifi point exampl refer string buffer object current content start call append le caus string buffer contain startl insert le alter string buffer contain starlet general sb refer instanc StringBuffer::StringBuffer sb append effect sb insert sb length oper occur involv sourc sequenc append insert sourc sequenc synchron string buffer perform oper sourc note StringBuffer::StringBuffer design safe use concurr multipl thread constructor append insert oper pass sourc sequenc share thread call ensur oper consist unchang view sourc sequenc durat oper satisfi caller hold lock oper call use immut sourc sequenc share sourc sequenc thread string buffer capac length charact sequenc contain string buffer exceed capac necessari alloc intern buffer array intern buffer overflow automat made larger note pass null argument constructor caus thrown releas jdk supplement equival design use singl thread StringBuilder::StringBuilder general prefer support oper faster perform synchron
StringBuffer::StringBuffer construct string buffer charact initi capac 16 charact
StringBuffer::StringBuffer construct string buffer charact specifi initi capac capac initi capac
StringBuffer::StringBuffer construct string buffer initi content specifi string initi capac string buffer 16 length string argument str initi content buffer
StringBuffer::StringBuffer construct string buffer contain charact specifi CharSequence::CharSequence initi capac string buffer 16 length CharSequence::CharSequence argument length specifi CharSequence::CharSequence equal zero empti buffer capac 16 return seq sequenc copi
StringBuffer::append append specifi StringBuffer::StringBuffer sequenc charact StringBuffer::StringBuffer argument append order content StringBuffer::StringBuffer increas length StringBuffer::StringBuffer length argument sb null charact null append StringBuffer::StringBuffer let length old charact sequenc contain StringBuffer::StringBuffer prior execut append charact index charact sequenc equal charact index old charact sequenc equal charact index argument sb synchron destin object synchron sourc sb sb StringBuffer::StringBuffer append refer object
StringBuffer::append append specifi CharSequence::CharSequence sequenc charact CharSequence::CharSequence argument append order increas length sequenc length argument result exact invoc append length synchron destin object synchron sourc null charact null append CharSequence::CharSequence append refer object
StringBuffer::writeObject readobject call restor state StringBuffer::StringBuffer stream
StringBuffer::readObject readobject call restor state StringBuffer::StringBuffer stream
Void::Void Void::Void uninstanti placehold hold refer Class::Class object repres keyword
Void::TYPE Class::Class object repres pseudo type correspond keyword
ProcessBuilder::equals compar specifi object Type::Redirect equal return object ident object Type::Redirect instanc type associ non null equal File::File instanc
Character::Character Character::Character wrap valu primit type char object object type Character::Character contain singl field type char addit provid determin charact categori lowercas letter digit convert charact uppercas lowercas versa Character::Character base unicod standard version data Character::Character defin unicodedata file part unicod Character::Character databas maintain unicod consortium file specifi various properti includ name general categori defin unicod point charact rang file descript avail unicod consortium char data type therefor valu Character::Character object encapsul base origin unicod specif defin charact fix width 16 bit entiti unicod standard chang allow charact represent requir 16 bit rang legal point 0000 10ffff known unicod scalar valu refer notat unicod standard refer basic multilingu plane bmp point greater ffff call supplementari charact platform use utf 16 represent char array String::String StringBuffer::StringBuffer represent supplementari charact repres pair char valu first surrog rang 92 ud800 92 udbff low surrog rang 92 udc00 92 udfff char valu therefor repres basic multilingu plane bmp point includ surrog point unit utf 16 encod int valu repres unicod point includ supplementari point lower signific 21 bit int repres unicod point upper signific 11 bit zero specifi behavior respect supplementari charact surrog char valu follow accept char valu support supplementari charact treat char valu surrog rang undefin charact exampl charact islett u005cud840 return fals specif valu follow low surrog valu string repres letter accept int valu support unicod charact includ supplementari charact exampl charact islett 0x2f81a return point valu repres letter cjk ideograph se document unicod point charact valu rang 0000 10ffff unicod unit 16 bit char valu unit utf 16 encod unicod terminolog refer
Character::MIN radix minimum radix avail convers string constant valu field smallest valu permit radix argument radix convers digit fordigit tostr Integer::Integer
Character::MAX radix maximum radix avail convers string constant valu field largest valu permit radix argument radix convers digit fordigit tostr Integer::Integer
Character::TYPE Class::Class instanc repres primit type char
Character::CURRENCY symbol constant Currency::Currency symbol unicod charact block
Character::NUMBER form constant Number::Number form unicod charact block
Character::COMMON indic number form constant common indic Number::Number form unicod charact block
Character::TRANSPORT map symbol constant transport Map::Map symbol unicod charact block
Character::toString return String::String object repres Character::Character valu result string length sole compon primit char valu repres Character::Character object string represent object
Character::toString return String::String object repres specifi char result string length consist sole specifi char char convert string represent specifi char
Character::isLowerCase determin specifi charact lowercas charact charact lowercas general categori type charact gettyp ch lowercas letter contributori properti lowercas defin unicod standard exampl lowercas charact unicod charact lowercas note handl support unicod charact includ supplementari charact use ch charact test charact lowercas fals
Character::isLowerCase determin specifi charact unicod point lowercas charact charact lowercas general categori type lowercas letter contributori properti lowercas defin unicod standard exampl lowercas charact unicod charact lowercas codepoint charact unicod point test charact lowercas fals
Character::isUpperCase determin specifi charact uppercas charact charact uppercas general categori type charact gettyp ch uppercas letter contributori properti uppercas defin unicod standard exampl uppercas charact unicod charact uppercas note handl support unicod charact includ supplementari charact use ch charact test charact uppercas fals
Character::isUpperCase determin specifi charact unicod point uppercas charact charact uppercas general categori type uppercas letter contributori properti uppercas defin unicod standard exampl uppercas charact unicod charact uppercas codepoint charact unicod point test charact uppercas fals
Character::isDigit determin specifi charact digit charact digit general categori type charact gettyp ch decim digit number unicod charact rang contain digit u005cu0030 u005cu0039 iso latin digit u005cu0660 u005cu0669 arab indic digit u005cu06f0 u005cu06f9 extend arab indic digit u005cu0966 u005cu096f devanagari digit u005cuff10 u005cuff19 fullwidth digit charact rang contain digit note handl support unicod charact includ supplementari charact use ch charact test charact digit fals
Character::isDigit determin specifi charact unicod point digit charact digit general categori type decim digit number unicod charact rang contain digit u005cu0030 u005cu0039 iso latin digit u005cu0660 u005cu0669 arab indic digit u005cu06f0 u005cu06f9 extend arab indic digit u005cu0966 u005cu096f devanagari digit u005cuff10 u005cuff19 fullwidth digit charact rang contain digit codepoint charact unicod point test charact digit fals
Character::isLetter determin specifi charact letter charact consid letter general categori type charact gettyp ch follow uppercas letter lowercas letter titlecas letter modifi letter letter letter case charact letter uppercas lowercas titlecas note handl support unicod charact includ supplementari charact use ch charact test charact letter fals
Character::isLetter determin specifi charact unicod point letter charact consid letter general categori type follow uppercas letter lowercas letter titlecas letter modifi letter letter letter case charact letter uppercas lowercas titlecas codepoint charact unicod point test charact letter fals
Character::isLetterOrDigit determin specifi charact letter digit charact consid letter digit charact islett char ch charact isdigit char ch return charact note handl support unicod charact includ supplementari charact use ch charact test charact letter digit fals
Character::isLetterOrDigit determin specifi charact unicod point letter digit charact consid letter digit return charact codepoint charact unicod point test charact letter digit fals
Character::toLowerCase convert charact argument lowercas use case map unicodedata file note charact islowercas charact tolowercas ch return rang charact particular symbol ideograph general map charact lowercas String::String case map benefit Character::Character case map String::String case map perform local sensit map context sensit map 1m charact map Character::Character case map note handl support unicod charact includ supplementari charact use ch charact convert lowercas equival charact charact
Character::toLowerCase convert charact unicod point argument lowercas use case map unicodedata file note charact islowercas charact tolowercas codepoint return rang charact particular symbol ideograph general map charact lowercas String::String case map benefit Character::Character case map String::String case map perform local sensit map context sensit map 1m charact map Character::Character case map codepoint charact unicod point convert lowercas equival charact unicod point charact
Character::toUpperCase convert charact argument uppercas use case map unicodedata file note charact isuppercas charact touppercas ch return rang charact particular symbol ideograph general map charact uppercas String::String case map benefit Character::Character case map String::String case map perform local sensit map context sensit map 1m charact map Character::Character case map note handl support unicod charact includ supplementari charact use ch charact convert uppercas equival charact charact
Character::toUpperCase convert charact unicod point argument uppercas use case map unicodedata file note charact isuppercas charact touppercas codepoint return rang charact particular symbol ideograph general map charact uppercas String::String case map benefit Character::Character case map String::String case map perform local sensit map context sensit map 1m charact map Character::Character case map codepoint charact unicod point convert uppercas equival charact charact
Character::getType return valu indic charact general categori note handl support unicod charact includ supplementari charact use ch charact test valu type int repres charact general categori
Character::getType return valu indic charact general categori codepoint charact unicod point test valu type int repres charact general categori
CloneNotSupportedException::CloneNotSupportedException thrown indic clone Object::Object call clone object object implement Cloneable::Cloneable interfac applic overrid clone throw indic object clone
StackTraceElement::getClassName return fulli qualifi name contain execut point repres stack trace element fulli qualifi name Class::Class contain execut point repres stack trace element
StackTraceElement::toString return string represent stack trace element format string depend implement exampl regard typic myclass mash myclass java9 myclass fulli qualifi name contain execut point repres stack trace element mash name contain execut point myclass sourc file contain execut point line number sourc line contain execut point myclass mash myclass line number unavail myclass mash unknown sourc file name line number avail myclass mash nativ Method::Method file name line number avail contain execut point known nativ
System::console return uniqu object associ current virtual machin system consol null
System::currentTimeMillis return current time millisecond note unit time return valu millisecond granular valu depend oper system larger exampl oper system measur time unit ten millisecond see descript Date::Date discuss slight discrep aris comput time coordin univers time utc differ measur millisecond current time midnight januari 1970 utc
System::nanoTime return current valu run virtual machin resolut time sourc nanosecond measur elaps time relat notion system wall clock time valu return repres nanosecond fix arbitrari origin time futur valu negat origin invoc instanc virtual machin virtual machin instanc use origin provid nanosecond precis necessarili nanosecond resolut frequent valu chang guarante made resolut differ success call span greater approxim 292 year 63 nanosecond correct comput elaps time due numer overflow valu return becom meaning differ valu obtain instanc virtual machin comput exampl measur take execut compar System::nanoTime valu use t1 t0 t1 t0 possibl numer overflow current valu run virtual machin resolut time sourc nanosecond
System::arraycopy copi array specifi sourc array begin specifi posit specifi posit destin array subsequ array compon copi sourc array referenc src destin array referenc dest number compon copi equal length argument compon posit srcpos srcpos length sourc array copi posit destpo destpo length respect destin array src dest argument refer array object copi perform compon posit srcpos srcpos length first copi temporari array length compon content temporari array copi posit destpo destpo length destin array dest null NullPointerException::NullPointerException thrown src null NullPointerException::NullPointerException thrown destin array modifi ArrayStoreException::ArrayStoreException thrown destin modifi src argument refer object array dest argument refer object array src argument dest argument refer array compon type primit type src argument refer array primit compon type dest argument refer array refer compon type src argument refer array refer compon type dest argument refer array primit compon type IndexOutOfBoundsException::IndexOutOfBoundsException thrown destin modifi srcpos argument negat destpo argument negat length argument negat srcpos length greater src length length sourc array destpo length greater dest length length destin array actual compon sourc array posit srcpos srcpos length convert compon type destin array assign convers ArrayStoreException::ArrayStoreException thrown case let smallest nonneg integ length convert compon type destin array thrown sourc array compon posit srcpos copi destin array posit destpo posit destin array modifi restrict item paragraph effect appli situat where array compon type refer type src sourc array srcpos start posit sourc array dest destin array destpo start posit destin data length number array element copi
System::getProperties determin current system properti first secur manag SecurityManager::checkPropertiesAccess call argument result secur current set system properti use return Properties::Properties object current set system properti set system properti first creat initi set system properti includ valu key multipl path system properti valu separ path separ charact platform note secur manag permit System::getProperties oper choos permit oper system properti
System::setProperties set system properti Properties::Properties argument first secur manag SecurityManager::checkPropertiesAccess call argument result secur argument becom current set system properti use argument null current set system properti forgotten prop system properti
System::getProperty get system properti indic specifi key first secur manag SecurityManager::checkPropertyAccess call key argument result SecurityException::SecurityException current set system properti set system properti first creat initi manner System::getProperties key name system properti string valu system properti null properti key
System::getProperty get system properti indic specifi key first secur manag SecurityManager::checkPropertyAccess call key argument current set system properti set system properti first creat initi manner System::getProperties key name system properti def default valu string valu system properti default valu properti key
System::setProperty set system properti indic specifi key first secur manag exist securitymanag checkpermiss call propertypermiss key write permiss result SecurityException::SecurityException thrown thrown specifi properti set given valu key name system properti valu valu system properti previous valu system properti null
System::clearProperty remov system properti indic specifi key first secur manag exist securitymanag checkpermiss call propertypermiss key write permiss result SecurityException::SecurityException thrown thrown specifi properti remov key name system properti remov previous string valu system properti null properti key
System::getenv get valu specifi environ variabl environ variabl system depend extern name valu secur manag exist call getenv name permiss result thrown thrown valu variabl name return conceptu map name valu mechan pass user defin process environ variabl global effect visibl descend process defin immedi subprocess subt semant case insensit oper system reason environ variabl unintend side effect use system properti where environ variabl global effect desir extern system interfac requir environ variabl path unix system alphabet case name typic signific microsoft window system typic exampl express system getenv foo equal system getenv foo microsoft window name name environ variabl string valu variabl null variabl defin system environ
System::getenv return unmodifi string map view current system environ environ system depend map name valu pass parent child process system support environ variabl empti map return return map contain null key valu attempt queri presenc null key valu throw attempt queri presenc key valu type throw return map collect view obey general contract return map typic case sensit platform secur manag exist call getenv permiss result thrown pass subprocess general prefer environ variabl environ map variabl name valu
System::exit termin current run virtual machin argument serv status convent nonzero status indic abnorm termin call exit Runtime::Runtime return normal call system exit effect equival call status exit status
Runnable::Runnable Runnable::Runnable interfac implement instanc intend execut thread defin argument call run interfac design provid common protocol object wish execut activ exampl Runnable::Runnable implement Thread::Thread activ simpli mean thread start stop addit Runnable::Runnable provid mean activ subclass Thread::Thread implement Runnable::Runnable run subclass Thread::Thread instanti Thread::Thread instanc pass target case Runnable::Runnable interfac plan overrid run Thread::Thread subclass programm intend modifi enhanc fundament behavior
IllegalStateException::IllegalStateException construct IllegalStateException::IllegalStateException detail messag detail messag String::String describ particular
IllegalStateException::IllegalStateException construct IllegalStateException::IllegalStateException specifi detail messag detail messag String::String describ particular String::String contain detail messag
Enum::name return name enum constant exact declar enum declar programm use prefer tostr return user friend name design primarili use situat where correct depend get exact name vari releas releas name enum constant
Enum::getDeclaringClass return Class::Class object correspond enum constant enum type enum constant e1 e2 enum type e1 getdeclaringclass e2 getdeclaringclass valu return differ return enum constant constant specif bodi Class::Class object correspond enum constant enum type
Enum::valueOf return enum constant specifi enum type specifi name name match exact identifi declar enum constant type extran whitespac charact permit note particular enum type implicit declar static valueof string enum instead map name correspond enum constant constant enum type obtain call implicit static valu type enum type constant return EnumConstantNotPresentException::enumType Class::Class object enum type return constant name name constant return enum constant specifi enum type specifi name
Throwable::Throwable Throwable::Throwable superclass error languag object instanc subclass thrown virtual machin thrown throw statement similar subclass argument type catch claus purpos compil time check Throwable::Throwable subclass Throwable::Throwable subclass regard check instanc subclass convent indic situat occur typic instanc fresh creat context situat includ relev stack trace data throwabl contain snapshot execut stack thread time creat contain messag string give error time throwabl throwabl propag final throwabl contain caus throwabl caus throwabl construct record causal refer chain facil caus caus lead chain caus reason throwabl caus throw built atop lower layer abstract oper upper layer fail due failur lower layer bad design let throwabl thrown lower layer propag outward general unrel abstract upper layer further tie upper layer detail implement assum lower layer check throw wrap contain caus allow upper layer communic detail failur caller incur shortcom preserv flexibl chang implement upper layer chang particular set thrown reason throwabl caus throw conform general purpos interfac permit throw caus exampl suppos persist collect conform interfac persist implement atop io suppos intern add throw implement communic detail ioexcept caller conform Collection::Collection interfac wrap ioexcept appropri uncheck specif persist collect indic capabl throw caus associ throwabl constructor take caus argument throwabl wish allow caus associ provid constructor take caus deleg indirect Throwable::Throwable constructor take caus Throwable::initCause allow caus associ throwabl legaci throwabl implement predat addit chain mechan Throwable::Throwable convent Throwable::Throwable subclass constructor take argument take String::String argument produc detail messag further subclass caus associ constructor take Throwable::Throwable caus take String::String detail messag Throwable::Throwable caus 11 compil time check
Throwable::printStackTrace print throwabl backtrac standard error stream print stack trace Throwable::Throwable object error output stream valu field system err first line output contain result object remain line repres data previous record format depend implement exampl regard typic exampl produc run program backtrac throwabl initi non null caus general includ backtrac caus format depend implement exampl regard typic note presenc line contain charact line indic remaind stack trace match indic number frame bottom stack trace caus enclos shorthand great reduc length output common case where wrap thrown causat caught exampl produc run program releas platform support notion suppress conjunct resourc statement suppress order deliv print stack trace format depend implement exampl regard typic note notat suppress caus caus suppress indent contain caus suppress suppress caus
Throwable::printStackTrace print throwabl backtrac specifi print stream PrintStream::PrintStream use output
Throwable::printStackTrace print throwabl backtrac specifi print writer PrintWriter::PrintWriter use output
Throwable::getStackTrace provid programmat access stack trace print return array stack trace element repres stack frame zeroth element array assum array length non zero repres top stack last invoc sequenc typic point throwabl creat thrown last element array assum array length non zero repres bottom stack first invoc sequenc virtual machin circumst omit stack frame stack trace extrem case virtual machin stack trace throwabl permit return zero length array general speak array return contain element frame print Throwable::printStackTrace write return array affect futur call array stack trace element repres stack trace pertain throwabl
Runtime::Runtime singl instanc Runtime::Runtime allow interfac environ run current runtim obtain Runtime::getRuntime creat instanc
Runtime::getRuntime return runtim object associ current Runtime::Runtime instanc invok respect current runtim object Runtime::Runtime object associ current
Runtime::exec execut specifi string command separ process conveni invoc form exec command behav exact invoc command null null command specifi system command object manag subprocess
Runtime::exec execut specifi string command separ process specifi environ conveni invoc form exec command envp behav exact invoc command envp null command specifi system command envp array string element environ variabl set format name valu null subprocess inherit environ current process object manag subprocess
Runtime::exec execut specifi string command separ process specifi environ work directori conveni invoc form exec command envp dir behav exact invoc cmdarray envp dir where cmdarray array token command precis command string broken token use creat call command further modif charact categori token produc token place string array cmdarray order command specifi system command envp array string element environ variabl set format name valu null subprocess inherit environ current process dir work directori subprocess null subprocess inherit work directori current process object manag subprocess
Runtime::exec execut specifi command argument separ process conveni invoc form exec cmdarray behav exact invoc cmdarray null null cmdarray array contain command call argument object manag subprocess
Runtime::exec execut specifi command argument separ process specifi environ conveni invoc form exec cmdarray envp behav exact invoc cmdarray envp null cmdarray array contain command call argument envp array string element environ variabl set format name valu null subprocess inherit environ current process object manag subprocess
Runtime::exec execut specifi command argument separ process specifi environ work directori given array string cmdarray repres token command line array string envp repres environ variabl set creat process execut specifi command check cmdarray valid oper system command command valid system depend command non empti list non null string envp null subprocess inherit environ set current process minim set system depend environ variabl requir start process oper system result subprocess inherit addit environ variabl set specifi environ prefer start process modifi environ work directori subprocess specifi dir dir null subprocess inherit current work directori current process secur manag exist invok first compon array cmdarray argument result thrown start oper system process system depend go wrong oper system program file found access program file deni work directori exist case thrown exact natur system depend subclass cmdarray array contain command call argument envp array string element environ variabl set format name valu null subprocess inherit environ current process dir work directori subprocess null subprocess inherit work directori current process object manag subprocess
Runtime::freeMemory return amount free memori virtual machin call gc result increas valu return freememori approxim total amount memori current avail futur alloc object measur byte
Runtime::totalMemory return total amount memori virtual machin valu return vari time depend host environ note amount memori requir hold object given type implement depend total amount memori current avail current futur object measur byte
Runtime::getLocalizedInputStream creat local version input stream take InputStream::InputStream return InputStream::InputStream equival argument respect local charact local charact set read stream automat convert local charact set unicod argument local stream return result InputStream::InputStream local local input stream
Appendable::Appendable object char sequenc valu append append interfac implement instanc intend receiv format output charact append valid unicod charact describ note supplementari charact compos multipl 16 bit char valu append necessarili safe multithread access Thread::Thread safeti respons extend implement interfac interfac implement exist style error handl guarante error propag invok
SecurityManager::SecurityManager secur manag allow applic implement secur polici allow determin perform possibl unsaf sensit oper oper attempt secur context allow oper perform allow disallow oper SecurityManager::SecurityManager contain name begin word check call various librari perform potenti sensit oper invoc check typic look secur manag therebi given opportun prevent complet oper throw secur manag routin simpli return oper permit throw SecurityException::SecurityException oper permit convent SecurityManager::checkTopLevelWindow return boolean valu current secur manag set System::setSecurityManager System::System current secur manag obtain System::getSecurityManager determin access request indic specifi permiss grant deni default implement call request access allow checkpermiss return quiet deni SecurityException::SecurityException thrown sdk v1 default implement check SecurityManager::SecurityManager call securitymanag checkpermiss determin call thread permiss perform request oper note checkpermiss singl permiss argument perform secur check context current execut thread secur check made given context actual context exampl worker thread includ context argument situat getsecuritycontext return snapshot current call context default implement return AccessControlContext::AccessControlContext object sampl call follow checkpermiss take context object addit permiss make access decis base context current execut thread context thus call pass permiss previous save context object sampl call use SecurityManager::SecurityManager sm obtain previous exampl follow permiss fall categori File::File Socket::Socket Security::Security Runtime::Runtime properti awt reflect Serializable::Serializable manag various permiss categori io filepermiss socketpermiss netpermiss secur securitypermiss lang runtimepermiss util propertypermiss awt awtpermiss lang reflect reflectpermiss io serializablepermiss first FilePermission::FilePermission SocketPermission::SocketPermission subclass secur basicpermiss abstract subclass top level permiss secur permiss BasicPermission::BasicPermission defin function permiss contain name follow hierarch properti name convent exampl exitvm setfactori queueprintjob asterisk appear end name signifi wildcard match exampl valid valid filepermiss SocketPermission::SocketPermission subclass top level permiss secur permiss complic name syntax BasicPermission::BasicPermission subclass Permission::Permission BasicPermission::BasicPermission exampl io filepermiss object permiss name path name file directori permiss action list tell action permit object exampl io filepermiss object action list read write specifi action grant specifi file file specifi directori permiss name permiss contain name action list name permiss don note secur allpermiss permiss impli permiss exist simplifi work system administr perform multipl task requir numer permiss see permiss relat document includ exampl tabl list various SecurityManager::SecurityManager check permiss default implement requir contain tabl version requir permiss tell permiss requir SecurityManager::SecurityManager chang made jdk advic regard port style secur manag see
SecurityManager::checkAccess throw SecurityException::SecurityException call thread allow modifi thread argument invok current secur manag stop suspend resum Thread::setPriority setnam setdaemon Thread::Thread thread argument system thread belong thread group null parent call checkpermiss runtimepermiss modifythread permiss thread argument system thread return silent applic want stricter polici overrid overridden overrid addit check see call thread runtimepermiss modifythread permiss return silent ensur grant permiss jdk allow manipul thread overridden super checkaccess call first statement overridden equival secur check place overridden thread check
SecurityManager::checkAccess throw SecurityException::SecurityException call thread allow modifi thread group argument invok current secur manag child thread child thread group creat setdaemon ThreadGroup::setMaxPriority stop suspend resum destroy ThreadGroup::ThreadGroup thread group argument system thread group null parent call checkpermiss runtimepermiss modifythreadgroup permiss thread group argument system thread group return silent applic want stricter polici overrid overridden overrid addit check see call thread runtimepermiss modifythreadgroup permiss return silent ensur grant permiss jdk allow manipul thread overridden super checkaccess call first statement overridden equival secur check place overridden thread group check
SecurityManager::checkPropertiesAccess throw SecurityException::SecurityException call thread allow access modifi system properti System::getProperties setproperti System::System call checkpermiss propertypermiss read write permiss overrid make call super checkpropertiesaccess point overridden normal throw
SecurityManager::checkSetFactory throw SecurityException::SecurityException call thread allow set socket factori ServerSocket::ServerSocket Socket::Socket stream handler factori URL::URL call checkpermiss runtimepermiss setfactori permiss overrid make call super checksetfactori point overridden normal throw
SecurityManager::getThreadGroup return thread group instanti thread creat time call default return thread group current thread overridden specif secur manag return appropri thread group ThreadGroup::ThreadGroup thread instanti
ClassLoader::ClassLoader loader object respons load classload abstract given loader attempt locat generat data constitut definit typic strategi transform name file name read file name file system object contain classload defin object array creat loader creat automat requir runtim loader array return loader element type element type primit type array loader applic implement subclass classload order extend manner virtual machin dynam load Class::Class loader typic secur manag indic secur domain classload use deleg model search resourc instanc classload associ parent loader request find resourc classload instanc deleg search resourc parent loader attempt find resourc virtual machin built loader call bootstrap loader parent serv parent classload instanc Class::Class loader support concurr load known parallel capabl loader requir regist initi time invok note classload regist parallel capabl default subclass regist parallel capabl environ deleg model strict hierarch loader parallel capabl load lead deadlock loader lock held durat load process see normal virtual machin load local file system platform depend manner exampl unix system virtual machin load directori defin classpath environ variabl origin file origin sourc network construct convert array byte instanc instanc newli defin creat use constructor object creat loader refer determin es refer virtual machin invok loader origin creat exampl creat network loader download file server sampl look network loader subclass defin loadclassdata load network download byte make use creat instanc sampl implement name paramet classload binari name defin trade languag specif exampl valid name includ
ClassLoader::ClassLoader creat loader use specifi parent loader deleg secur manag invok result secur parent parent loader
ClassLoader::ClassLoader creat loader use classload return parent loader secur manag invok result secur
ClassLoader::getClassLoadingLock return lock object load oper backward compat default implement behav follow ClassLoader::ClassLoader object regist parallel capabl return dedic object associ specifi name return ClassLoader::ClassLoader object classnam name load lock load oper
ClassLoader::getResource find resourc given name resourc data imag audio text access independ locat name resourc separ path name identifi resourc first search parent loader resourc parent null path loader built virtual machin search invok find resourc overrid recommend implement ensur deleg consist name resourc name url object read resourc null resourc found invok doesn adequ privileg get resourc
ClassLoader::findResource find resourc given name Class::Class loader implement overrid specifi where find resourc name resourc name url object read resourc null resourc found
ClassLoader::findResources return enumer object repres resourc given name Class::Class loader implement overrid specifi where load resourc name resourc name enumer object resourc
ClassLoader::registerAsParallelCapable regist caller parallel capabl registr succeed condit met instanc caller creat super Object::Object caller regist parallel capabl note loader regist parallel capabl chang caller success regist parallel capabl fals
ClassLoader::getSystemClassLoader return system loader deleg default deleg parent classload instanc typic loader start first invok runtim startup sequenc point creat system loader set context loader invok thread default system loader implement depend instanc system properti system loader defin first invok valu properti taken name return system loader load use default system loader defin constructor take singl paramet type classload deleg parent instanc creat use constructor default system loader paramet result loader defin system loader secur manag invok loader null invok loader ancestor system loader invok secur manag permiss verifi access system loader securityexcept thrown system classload deleg null
ClassLoader::setPackageAssertionStatus set packag default assert status name packag packag default assert status determin assert status initi futur belong name packag subpackag subpackag packag name packag name begin exampl javax swing text subpackag javax swing util lang reflect subpackag event multipl packag default appli given packag default pertain specif packag take preced exampl javax lang javax lang reflect packag default associ latter packag default appli javax lang reflect Package::Package default take preced loader default assert status overridden basi invok packagenam name packag packag default assert status set null valu indic unnam packag current see section trade languag specif enabl load classload belong name packag subpackag assert enabl default fals assert disabl default
ThreadLocal::createInheritedMap factori creat map inherit thread local design call Thread::Thread constructor parentmap map associ parent thread map contain parent inherit bind
ThreadLocal::childValue Method::Method childvalu visibl defin subclass InheritableThreadLocal::InheritableThreadLocal intern defin sake ThreadLocal::createInheritedMap factori subclass map InheritableThreadLocal::InheritableThreadLocal techniqu prefer altern embed instanceof test
ThreadLocal::setThreshold Set::Set resiz threshold maintain worst load factor
ThreadLocal::set Set::Set valu associ key key thread local object valu valu set
Math::sin return trigonometr sine angl case argument nan infin result nan argument zero result zero sign argument comput result ulp exact result result semi monoton angl radian sine argument
Math::cos return trigonometr cosin angl case argument nan infin result nan comput result ulp exact result result semi monoton angl radian cosin argument
Math::tan return trigonometr tangent angl case argument nan infin result nan argument zero result zero sign argument comput result ulp exact result result semi monoton angl radian tangent argument
Math::asin return arc sine valu return angl rang pi pi case argument nan absolut valu greater result nan argument zero result zero sign argument comput result ulp exact result result semi monoton valu arc sine return arc sine argument
Math::acos return arc cosin valu return angl rang pi case argument nan absolut valu greater result nan comput result ulp exact result result semi monoton valu arc cosin return arc cosin argument
Math::atan return arc tangent valu return angl rang pi pi case argument nan result nan argument zero result zero sign argument comput result ulp exact result result semi monoton valu arc tangent return arc tangent argument
Math::toRadians convert angl measur degre approxim equival angl measur radian convers degre radian general inexact angdeg angl degre measur angl angdeg radian
Math::toDegrees convert angl measur radian approxim equival angl measur degre convers radian degre general inexact user expect toradian 90 exact equal angrad angl radian measur angl angrad degre
Math::exp return euler number rais power doubl valu case argument nan result nan argument posit infin result posit infin argument negat infin result posit zero comput result ulp exact result result semi monoton expon rais valu where base natur logarithm
Math::log return natur logarithm base doubl valu case argument nan zero result nan argument posit infin result posit infin argument posit zero negat zero result negat infin comput result ulp exact result result semi monoton valu valu ln nbsp natur logarithm
Math::log10 return base 10 logarithm doubl valu case argument nan zero result nan argument posit infin result posit infin argument posit zero negat zero result negat infin argument equal 10 integ result comput result ulp exact result result semi monoton valu base 10 logarithm
Math::sqrt return correct posit squar root doubl valu case argument nan zero result nan argument posit infin result posit infin argument posit zero negat zero result argument result doubl valu closest mathemat squar root argument valu valu posit squar root argument nan zero result nan
Math::cbrt return cube root doubl valu posit finit cbrt cbrt cube root negat valu negat cube root valu magnitud case argument nan result nan argument infinit result infin sign argument argument zero result zero sign argument comput result ulp exact result valu cube root
Math::ceil return smallest closest negat infin doubl valu greater equal argument equal mathemat integ case argument valu equal mathemat integ result argument argument nan infin posit zero negat zero result argument argument valu zero greater result negat zero note valu math ceil exact valu math floor valu smallest closest negat infin float point valu greater equal argument equal mathemat integ
Math::floor return largest closest posit infin doubl valu equal argument equal mathemat integ case argument valu equal mathemat integ result argument argument nan infin posit zero negat zero result argument valu largest closest posit infin float point valu equal argument equal mathemat integ
Math::pow return valu first argument rais power argument case argument posit negat zero result argument result first argument argument nan result nan first argument nan argument nonzero result nan absolut valu first argument greater argument posit infin absolut valu first argument argument negat infin result posit infin absolut valu first argument greater argument negat infin absolut valu first argument argument posit infin result posit zero absolut valu first argument equal argument infinit result nan first argument posit zero argument greater zero first argument posit infin argument zero result posit zero first argument posit zero argument zero first argument posit infin argument greater zero result posit infin first argument negat zero argument greater zero finit odd integ first argument negat infin argument zero finit odd integ result posit zero first argument negat zero argument posit finit odd integ first argument negat infin argument negat finit odd integ result negat zero first argument negat zero argument zero finit odd integ first argument negat infin argument greater zero finit odd integ result posit infin first argument negat zero argument negat finit odd integ first argument negat infin argument posit finit odd integ result negat infin first argument finit zero argument finit integ result equal result rais absolut valu first argument power argument argument finit odd integ result equal negat result rais absolut valu first argument power argument argument finit integ result nan argument integ result exact equal mathemat result rais first argument power argument result fact repres exact doubl valu forego descript float point valu consid integ finit fix point equival fix point valu fix point argument result appli valu equal valu comput result ulp exact result result semi monoton base expon valu
Math::round return closest int argument tie posit infin case argument nan result argument negat infin valu equal valu integ min valu result equal valu integ min valu argument posit infin valu greater equal valu integ max valu result equal valu integ max valu float point valu integ valu argument nearest int valu
Math::round return closest argument tie posit infin case argument nan result argument negat infin valu equal valu min valu result equal valu min valu argument posit infin valu greater equal valu max valu result equal valu max valu float point valu valu argument nearest valu
Math::random return doubl valu posit sign greater equal return valu chosen pseudorandom approxim uniform distribut rang first call creat singl pseudorandom number generat exact express util random pseudorandom number generat thereaft call nowher els proper synchron allow correct use thread thread generat pseudorandom number great rate reduc content thread pseudorandom number generat pseudorandom doubl greater equal
Math::abs return absolut valu int valu argument negat argument return argument negat negat argument return note argument equal valu negat represent int valu result valu negat argument absolut valu determin absolut valu argument
Math::abs return absolut valu valu argument negat argument return argument negat negat argument return note argument equal valu negat represent valu result valu negat argument absolut valu determin absolut valu argument
Math::abs return absolut valu float valu argument negat argument return argument negat negat argument return case argument posit zero negat zero result posit zero argument infinit result posit infin argument nan result nan word result valu express float intbitstofloat 0x7fffffff float floattointbit argument absolut valu determin absolut valu argument
Math::abs return absolut valu doubl valu argument negat argument return argument negat negat argument return case argument posit zero negat zero result posit zero argument infinit result posit infin argument nan result nan word result valu express doubl longbitstodoubl doubl doubletolongbit argument absolut valu determin absolut valu argument
Math::max return greater int valu result argument closer valu argument valu result valu argument argument larger
Math::max return greater valu result argument closer valu argument valu result valu argument argument larger
Math::max return greater float valu result argument closer posit infin argument valu result valu valu nan result nan numer comparison oper consid negat zero strict smaller posit zero argument posit zero negat zero result posit zero argument argument larger
Math::max return greater doubl valu result argument closer posit infin argument valu result valu valu nan result nan numer comparison oper consid negat zero strict smaller posit zero argument posit zero negat zero result posit zero argument argument larger
Math::min return smaller int valu result argument closer valu argument valu result valu argument argument smaller
Math::min return smaller valu result argument closer valu argument valu result valu argument argument smaller
Math::min return smaller float valu result valu closer negat infin argument valu result valu valu nan result nan numer comparison oper consid negat zero strict smaller posit zero argument posit zero negat zero result negat zero argument argument smaller
Math::min return smaller doubl valu result valu closer negat infin argument valu result valu valu nan result nan numer comparison oper consid negat zero strict smaller posit zero argument posit zero negat zero result negat zero argument argument smaller
Math::signum return signum function argument zero argument zero argument greater zero argument zero case argument nan result nan argument posit zero negat zero result argument float point valu signum return signum function argument
Math::signum return signum function argument zero argument zero 0f argument greater zero 0f argument zero case argument nan result nan argument posit zero negat zero result argument float point valu signum return signum function argument
Math::hypot return sqrt nbsp intermedi overflow underflow case argument infinit result posit infin argument nan argument infinit result nan comput result ulp exact result paramet held constant result semi monoton paramet valu valu sqrt nbsp intermedi overflow underflow
Math::expm1 return nbsp note valu exact sum expm1 nbsp nbsp closer result exp case argument nan result nan argument posit infin result posit infin argument negat infin result argument zero result zero sign argument comput result ulp exact result result semi monoton result expm1 finit input greater equal note exact result nbsp nbsp ulp limit valu return expon rais comput nbsp valu nbsp nbsp
Math::getExponent return unbias expon represent float case argument nan infinit result argument zero subnorm result float valu unbias expon argument
Math::getExponent return unbias expon represent doubl case argument nan infinit result argument zero subnorm result doubl valu unbias expon argument
Number::Number abstract Number::Number superclass platform repres numer valu convert primit type byte doubl float int specif semant convers numer valu particular Number::Number implement given primit type defin Number::Number implement question platform convers analog narrow primit convers widen primit convers defin trade languag specif convert primit type therefor convers lose overal magnitud numer valu lose precis return result sign input see document given Number::Number implement convers detail widen primit convers narrow primit convers
Number::longValue return valu specifi number involv truncat numer valu repres object convers type
Number::doubleValue return valu specifi number doubl involv numer valu repres object convers type doubl
MethodHandles::spreadInvoker produc handl invok handl given type given number trail argument replac singl trail Object::Object array result invok handl argument singl MethodHandle::MethodHandle target zero lead valu count leadingargcount Object::Object array contain trail argument invok invok target call indic type target exact given type behav MethodHandle::invokeExact behav convert target requir type type return invok given type paramet first leadingargcount replac singl array type Object::Object final paramet invok target invok spread final array appli refer cast necessari unbox widen primit argument invok call suppli array argument correct number element invok throw instead invok target equival effici throw reflect secur type desir target type leadingargcount number fix argument pass unchang target handl suitabl invok handl given type
MethodHandles::invoker produc invok handl invok handl compat given type result invok type exact equal desir type accept addit lead argument type MethodHandle::MethodHandle invok target target differ expect type invok appli refer cast necessari box unbox widen primit valu similar return valu convert necessari target requir ariti convers made equival effici publiclookup findvirtu methodhandl invok type discuss mention Object::Object argument return valu invok type capabl call handl ariti general type note invok avail core reflect attempt call declar MethodHandle::invokeExact invok rais throw reflect secur type desir target type handl suitabl invok handl convert given type
MethodHandleInfo::MethodHandleInfo symbol refer obtain crack direct handl consitut symbol part crack direct handl call direct Method::Method handl direct handl repres constructor field interven argument bind transform constructor field refer direct handl call member direct handl obtain execut ldc instruct constant methodhandl constant see virtual machin specif section call resolv symbol refer handl symbol refer consist name string type call factori convert handl call factori convert handl call factori convert handl restrict crack given suitabl MethodHandles::Lookup object crack direct handl recov symbol refer constructor field crack MethodHandles::Lookup object equival creat target handl access permiss recreat equival handl direct handl bound particular caller lookup object creat crack handl lookup fail fornam requir lookup object match provid fast fail behavior program trust erron revel handl symbol caller bind unexpect scope use overrid limit refer kind correspond major use case constructor field use case distinguish use integ follow
MethodHandleInfo::reflectAs reflect member constructor field object member reflect getmethod Class::getConstructor getfield reflect Class::getDeclaredMethod Class::getDeclaredConstructor Class::getDeclaredField member access given lookup object desir type result subtyp expect object repres desir result type lookup lookup object creat MethodHandleInfo::MethodHandleInfo equival access privileg refer constructor field object
MethodHandleNatives::linkMethod jvm want link call site requir dynam type check Attributes::Name type check invok MethodHandle::invokeExact invok return jvm MemberName::MemberName handl invok assum argument stack 0 handl invok argument handl invoc 1 option implicit ad argument typic given MethodType::MethodType nomin call site instanc signatur polymorph see polymorphicsignatur instanc user visibl entiti split generic placehold MethodHandle::MethodHandle note placehold ident instanc invok reflect guarante throw UnsupportedOperationException::UnsupportedOperationException signatur polymorph instanc reifi appear copi origin placehold nativ final member MethodHandle::MethodHandle type descriptor shape requir instanc instanc vararg instanc mark synthet definit appear sourc jvm allow reifi instanc metadata exampl MethodHandle::invokeBasic reifi jvm instead call MethodHandleNatives::linkMethod result order pair appendix get argument inclus appendix use appendix complet call reusabl call linker perform function number polymorph instanc linker allow weak type refer rewritten Object::Object primit float doubl rewritten int linker trust return strong type result accord specif type descriptor signatur polymorph instanc emul involv necessari dynam check use data extract appendix argument jvm inspect appendix pass verbatim linker call mean jdk runtim wide latitud choos shape linker correspond appendix linker generat LambdaForm::LambdaForm becom visibl stack trace MethodHandleNatives::linkMethod call free omit appendix return null instead emul requir function complet linker corner case 255 appendix case return custom generat perform type check jvm reifi call site instead call MethodHandleNatives::linkMethod correspond call repres bytecod mention valid represent MemberName::MemberName therefor use case MethodHandleNatives::linkMethod tend correspond case reflect MethodHandles::findVirtual MethodHandles::revealDirect
MethodHandleNatives::linkMethodHandleConstant jvm resolv constant methodhandl cp entri want make call chang name signatur type argument Class::Class field request MethodType::MethodType non field recent version jvm pass resolv MemberName::MemberName type case name ignor null
MethodType::MethodType type repres argument return type accept return handl argument return type pass expect handl caller Method::Method type proper match handl caller jvm oper enforc match specif call execut invokedynam instruct structur return type accompani number paramet type type primit refer repres object eas exposit treat type fact denot absenc return type instanc MethodType::MethodType immut instanc complet interchang compar equal equal depend pairwis correspond return paramet type els type creat factori factori cach valu cach guarante factori static virtual modifi precursor type chang select paramet factori oper group paramet type systemat version array list work group paramet type queri MethodType::parameterArray MethodType::parameterList provid choic array list MethodType::MethodType object deriv bytecod instruct invokedynam specif type descriptor string associ instruct file constant pool string type repres file constant pool constant type load ldc instruct refer suitabl constant methodtyp constant pool entri entri refer constant utf8 spell descriptor string full detail type constant see section virtual machin specif jvm materi MethodType::MethodType descriptor string name descriptor access load initi case constant load occur time MethodType::MethodType object first deriv
MethodType::genericMethodType find creat type compon Object::Object option trail Object::Object array conveni paramet return type Object::Object final array paramet Object::Object objectargcount number paramet exclud final array paramet finalarray trail array paramet type Object::Object general applic type call given fix argument count collect array further argument
MethodType::genericMethodType find creat type compon Object::Object conveni paramet return type Object::Object objectargcount number paramet general applic type call given argument count
MethodType::erase eras refer type Object::Object conveni primit type includ remain unchang version origin type refer type replac
MethodType::basicType eras refer type Object::Object subword type int reduc type polymorph privat version origin type refer subword type replac
MethodType::generic convert type refer primit Object::Object conveni express type wrap eras produc valu type generic version origin type type replac
MethodType::hashCode return hash valu type defin hashcod List::List element return type follow paramet type hash valu type
MethodTypeForm::MethodTypeForm build mtf given type refer eras Object::Object mtf stand type un eras variat eager comput basic properti type common variat
MethodTypeForm::RAW return eras mean chang refer Object::Object wrap mean convert primit includ correspond wrapper type unwrap mean revers wrap int mean convert non primit type int accord size mean convert non primit regardless size raw return mean convert type assum return type int smaller int
AbstractValidatingLambdaMetafactory::AbstractValidatingLambdaMetafactory meta factori constructor caller stack automat vm repres lookup context access privileg caller invokedtyp stack automat vm signatur invok includ expect static type return lambda object static type captur argument lambda event implement instanc first argument invoc signatur correspond receiv sammethodnam Attributes::Name function interfac lambda refer convert repres String::String sammethodtyp Window::Type function interfac lambda refer convert repres MethodType::MethodType implmethod implement call suitabl adapt argument type return type adjust captur argument result function interfac instanc invok instantiatedmethodtyp signatur primari function interfac type variabl substitut instanti captur site ObjectStreamClass::isSerializable lambda made serializ set target type addit sam type extend Serializable::Serializable markerinterfac addit interfac lambda object implement additionalbridg Method::Method type addit signatur bridg implement
BoundMethodHandle::makeFieldName Field::Field name concret bmhs adher pattern arg type index where type singl charact
InvokerBytecodeGenerator::classFilePrologue Set::Set file generat
InnerClassLambdaMetafactory::InnerClassLambdaMetafactory general meta factori constructor support standard case allow uncommon option serial bridg caller stack automat vm repres lookup context access privileg caller invokedtyp stack automat vm signatur invok includ expect static type return lambda object static type captur argument lambda event implement instanc first argument invoc signatur correspond receiv sammethodnam Attributes::Name function interfac lambda refer convert repres String::String sammethodtyp Window::Type function interfac lambda refer convert repres MethodType::MethodType implmethod implement call suitabl adapt argument type return type adjust captur argument result function interfac instanc invok instantiatedmethodtyp signatur primari function interfac type variabl substitut instanti captur site ObjectStreamClass::isSerializable lambda made serializ set target type addit sam type extend Serializable::Serializable markerinterfac addit interfac lambda object implement additionalbridg Method::Method type addit signatur bridg implement
MemberName::MemberName MemberName::MemberName compact symbol datum fulli character field refer member name refer field constructor member type member name name string type Class::Class MethodType::MethodType member name non null declar simpli nake name type pair member name non zero modifi flag final member name resolv unresolv resolv exist name resolv member name provid access invoc capabl possessor mere compact represent symbol necessari link proper use name member resolv member name intern implement includ refer jvm metadata represent stateless decript provid privat capabl use member contrast contain fuller intern bytecod allow invoc MemberName::MemberName lighter Method::Method contain field 16 Method::Method sub array seven field omit Method::Method
TypeConvertingMethodAdapter::hashWrapperName Class::Class name Wrapper::Wrapper hash deriv wrapper hashwrap xn hash 15
SerializedLambda::SerializedLambda creat SerializedLambda::SerializedLambda low level lambda factori site capturingclass lambda express appear functionalinterfaceclass Attributes::Name slash delimit form static type return lambda object functionalinterfacemethodnam Attributes::Name function interfac lambda factori site functionalinterfacemethodsignatur Signature::Signature function interfac lambda factori site implmethodkind Method::Method handl kind implement implclass Attributes::Name slash delimit form hold implement implmethodnam Attributes::Name implement implmethodsignatur Signature::Signature implement instantiatedmethodtyp signatur primari function interfac type variabl substitut instanti captur site capturedarg dynam argument lambda factori site repres variabl captur lambda
MethodHandle::MethodHandle handl type execut refer constructor field similar low level oper option transform argument return valu transform general includ pattern handl content Method::Method handl dynam strong type accord paramet return type distinguish name defin handl invok use symbol type descriptor match handl handl report type descriptor accessor type descriptor object structur seri return type handl type control type invoc accept kind transform appli handl contain pair invok call invok provid direct access handl constructor field oper modifi transform argument return valu invok accept call exact match handl type plain inexact invok accept rang call type Method::Method handl immut visibl state cours bound data exhibit state respect memori model handl behav intern field final variabl mean handl made visibl fulli form handl publish share variabl data race Method::Method handl subclass user implement creat intern subclass MethodHandle::MethodHandle visibl oper programm draw conclus handl specif handl hierarchi chang time time implement vendor handl compil call express name MethodHandle::invokeExact invok invok handl sourc viewpoint sourc take argument result cast return type formal accomplish give invok Object::Object return type variabl ariti Object::Object argument addit qualiti call signatur polymorph connect freedom invoc jvm execut stack usual virtual sourc level call MethodHandle::invokeExact invok compil invokevirtu instruct unusu compil record actual argument type perform invoc convers argument instead push stack accord unconvert type handl object push stack argument compil call handl symbol type descriptor describ argument return type issu complet symbol type descriptor compil determin return type base cast invoc express els Object::Object invoc express els invoc statement cast primit type corner case uncast null argument given symbol type descriptor lang ambigu type Void::Void harmless refer type Void::Void null refer handl invoc first time invokevirtu instruct execut link symbol resolv name instruct verifi call static legal call MethodHandle::invokeExact invok case symbol type descriptor emit compil check correct syntax name contain resolv thus invokevirtu instruct invok handl link symbol type descriptor syntact form type exist invokevirtu execut link receiv handl type first check jvm ensur match symbol type descriptor type match fail mean caller invok individu handl invok case MethodHandle::invokeExact type descriptor invoc resolv symbol type name exact match type receiv handl case plain inexact invok resolv type descriptor valid argument receiv thus plain invok permiss MethodHandle::invokeExact type match call MethodHandle::invokeExact invok handl behavior case call plain invok work call MethodHandle::invokeExact symbol type descriptor specifi caller exact match handl type type mismatch invok attempt adjust type receiv handl call obtain exact invok handl m2 allow power negoti type caller calle note adjust handl m2 observ implement therefor requir materi invoc check typic program handl type match succeed match fail jvm throw case MethodHandle::invokeExact indirect fail call MethodHandle::asType case invok thus type mismatch show linkag error static type program show dynam WrongMethodTypeException::WrongMethodTypeException program use handl type contain live Class::Class object type match take account type name loader thus handl creat loader l1 l2 handl call type safe caller symbol type descriptor resolv l2 match origin calle symbol type descriptor resolv l1 resolut l1 happen creat type assign resolut l2 happen invokevirtu instruct link apart check type descriptor handl capabl call unrestrict handl form non access result handl place caller receiv refer core reflect where access check time reflect invok handl access check perform case ldc see access check perform part link constant pool entri constant handl thus handl non non general kept secret pass untrust use untrust harmless handl creation creat handl access constructor field access reflect capabl base call exampl static handl obtain convers core reflect object string handl correspond access field constructor repres file constant pool constant load ldc bytecod type constant pool entri constant methodhandl refer associ constant methodref constant interfacemethodref constant fieldref constant pool entri full detail handl constant see section virtual machin specif Method::Method handl produc lookup constant load constructor variabl ariti modifi bit 0x0080 correspond variabl ariti defin refer refer static non static non static case handl type includ explicit receiv argument prepend argument handl type initi receiv argument type accord initi request non static handl obtain ldc type receiv name constant pool entri Method::Method handl constant subject link time access check correspond bytecod instruct ldc instruct throw correspond linkag error bytecod behavior throw error corollari access protect member restrict receiv access subclass access turn subclass packag sibl protect member defin refer refer protect non static field current packag receiv argument narrow type access handl virtual invok look receiv first argument non virtual handl specif virtual implement creat perform virtual lookup base receiv type handl simul effect invokespeci instruct usag exampl exampl usag call MethodHandle::invokeExact plain invok generat singl invokevirtu instruct symbol type descriptor indic comment exampl helper assertequ assum call argument assert result MethodHandle::invokeExact invok declar throw say static restrict handl throw jvm distinguish check uncheck cours particular effect bytecod shape ascrib check handl invoc sourc perform handl call explicit throw Throwable::Throwable els catch throwabl local rethrow legal context wrap illeg signatur polymorph unusu compil linkag behavior MethodHandle::invokeExact plain invok referenc term signatur polymorph defin languag specif signatur polymorph oper wide rang call signatur return type sourc call signatur polymorph compil regardless request symbol type descriptor usual compil emit invokevirtu instruct given symbol type descriptor name unusu part symbol type descriptor deriv actual argument return type declar jvm process bytecod contain signatur polymorph call success link call regardless symbol type descriptor order retain type safeti jvm guard call suitabl dynam type check describ elsewher bytecod generat includ compil end requir emit untransform symbol type descriptor tool determin symbol linkag requir accept untransform descriptor report linkag error interoper handl core reflect use factori member repres core reflect object convert behavior equival handl exampl reflect convert handl use result handl general provid direct effici access member case core reflect view signatur polymorph MethodHandle::invokeExact plain invok appear ordinari non polymorph reflect appear view unaffect status exampl report exact modifi bit requir similar declar includ case nativ vararg bit reflect reflect invok reflect call result handl invoc call pass requir argument singl type Object::Object ignor argument throw UnsupportedOperationException::UnsupportedOperationException invokevirtu instruct nativ invok handl symbol type descriptor reflect view conflict normal bytecod thus nativ reflect view getdeclaredmethod regard placehold order obtain invok particular type descriptor use abl return handl call MethodHandle::invokeExact plain invok specifi type descriptor interoper handl generic handl obtain constructor field declar generic type core reflect type handl construct erasur sourc level type handl invok type argument return valu cast type generic type type instanc occur compil replac type erasur construct symbol type descriptor invokevirtu instruct Method::Method handl repres function type term parameter generic type mismatch function type parameter type type rang ariti argument allow argument generic variad repres type specifi argument primit type generic type rang higher order function handl combin generic wide rang function type includ multipl ariti imposs repres generic type paramet ariti limit jvm impos constructor kind absolut limit 255 stack argument limit appear restrict case doubl argument count purpos ariti limit argument slot non static consum extra argument object call constructor consum extra argument object construct handl rsquo invok signatur polymorph non virtual consum extra argument handl addit non virtual receiv object limit impli handl creat sole jvm limit stack argument exampl static jvm accept exact 255 argument handl creat attempt creat handl imposs type lead particular handl rsquo type ariti exact maximum 255
MethodHandle::MethodHandle packag privat constructor handl implement hierarchi Method::Method handl inherit contain complet lang invok packag
MethodHandle::invokeExact invok handl allow caller type descriptor requir exact type match symbol type descriptor call site MethodHandle::invokeExact exact match handl convers allow argument return valu observ core reflect appear singl nativ take object array return object nativ invok jni indirect throw UnsupportedOperationException::UnsupportedOperationException arg signatur polymorph paramet list static repres use vararg signatur polymorph result static repres use Object::Object
MethodHandle::invoke invok handl allow caller type descriptor option perform convers argument return valu call site symbol type descriptor exact match handl call proceed call proceed handl first adjust call adjust handl requir type call proceed adjust handl guarante MethodHandle::asType call actual made jvm predict result make call perform adapt caller argument call target handl accord exact type resolv type descriptor call site invok valid argument receiv MethodHandle::asType particular caller specifi argument ariti calle type calle observ core reflect appear singl nativ take object array return object nativ invok jni indirect throw UnsupportedOperationException::UnsupportedOperationException arg signatur polymorph paramet list static repres use vararg signatur polymorph result static repres use Object::Object
MethodHandle::invokeBasic privat trust invoc handl simplifi signatur Window::Type mismatch throw WrongMethodTypeException::WrongMethodTypeException crash jvm caller signatur restrict basic type Object::Object int float doubl return caller respons maintain type correct ensur outgo argument valu member rang correspond calle argument type caller therefor issu appropri cast integ narrow oper outgo argument valu caller assum incom result valu part rang calle return type arg signatur polymorph paramet list static repres use vararg signatur polymorph result static repres use Object::Object
MethodHandle::linkToVirtual privat trust invoc MemberName::MemberName kind ref invokevirtu caller signatur restrict basic type MethodHandle::invokeBasic trail lead argument MemberName::MemberName arg signatur polymorph paramet list static repres use vararg signatur polymorph result static repres use Object::Object
MethodHandle::linkToStatic privat trust invoc MemberName::MemberName kind ref invokestat caller signatur restrict basic type MethodHandle::invokeBasic trail lead argument MemberName::MemberName arg signatur polymorph paramet list static repres use vararg signatur polymorph result static repres use Object::Object
MethodHandle::linkToSpecial privat trust invoc MemberName::MemberName kind ref invokespeci caller signatur restrict basic type MethodHandle::invokeBasic trail lead argument MemberName::MemberName arg signatur polymorph paramet list static repres use vararg signatur polymorph result static repres use Object::Object
MethodHandle::linkToInterface privat trust invoc MemberName::MemberName kind ref invokeinterfac caller signatur restrict basic type MethodHandle::invokeBasic trail lead argument MemberName::MemberName arg signatur polymorph paramet list static repres use vararg signatur polymorph result static repres use Object::Object
MethodHandle::invokeWithArguments perform variabl ariti invoc pass argument given list handl inexact call site mention type Object::Object ariti length argument list specif execut proceed step guarante call jvm predict effect determin length argument array null refer determin general type tn argument tn methodtyp genericmethodtyp forc origin target handl mh0 requir type mh1 mh0 astyp tn spread array separ argument PageAttributes::A0 invok type adjust handl unpack argument mh1 invokeexact a0 take return valu Object::Object refer action MethodHandle::asType step argument convers appli necessari refer cast unbox widen primit convers result return call box primit forc null return type call equival signatur polymorph MethodHandle::invokeExact invok MethodHandle::invokeWithArguments access normal core reflect jni therefor bridg nativ reflect handl argument argument pass target result return target
MethodHandle::invokeWithArguments perform variabl ariti invoc pass argument given array handl inexact call site mention type Object::Object ariti length argument array equival argument argument pass target result return target
MethodHandle::asType produc adapt handl adapt type current handl type result handl guarante report type equal desir type origin type type equal return handl invok perform step convert incom argument list match origin handl argument list invok origin handl convert argument list convert result return origin handl return type handl provid crucial behavior differ plain inexact perform step caller type descriptor exact atch calle type differ plain call MethodHandle::asType intern equival order match caller calle type current variabl ariti handl argument list convers involv convers collect argument array case convers appli pairwis mean argument return valu convert exact argument return valu return valu appli convers defin consult correspond compon type old handl type let t0 t1 correspond old paramet type old return type specif valid index let t0 newtyp parametertyp t1 type parametertyp els go return valu let t0 type returntyp t1 newtyp returntyp type handl make chang correspond argument return valu convers appli possibl t0 t1 refer cast t1 appli type relat particular dynam valu null convert refer type t0 t1 primit invoc convers jls appli exist specif t0 convert t1 widen primit convers t0 primit t1 refer cast convers jls appli exist specif valu box t0 wrapper widen t1 t0 refer t1 primit unbox convers appli runtim possibl follow invoc convers jls primit valu primit widen convers t0 wrapper supertyp case where t0 Object::Object convers allow unbox convers possibl success mean t0 wrapper exist wrapper tw subtyp t0 unbox primit valu widen t1 return type t1 mark return valu discard return type t0 t1 refer null valu introduc return type t0 t1 primit zero valu introduc note t0 t1 regard static type correspond specif dynam type actual argument return valu handl convers made requir pairwis convers made runtim convers appli refer argument return valu requir addit runtim check fail unbox oper fail origin refer null caus unbox oper refer cast fail refer object wrong type caus unbox oper accept kind wrapper avail ClassCastException::ClassCastException thrown newtyp expect type handl handl deleg perform necessari argument convers arrang necessari return valu convers
MethodHandle::asSpreader make array spread handl accept trail array argument spread element posit argument handl adapt target current handl type adapt type target final SpinedBuffer::arrayLength paramet target type replac singl array paramet type arraytyp array element type differ correspond argument type origin target origin target adapt take array element call call adapt replac trail array argument array element argument target order argument preserv convert pairwis cast unbox type trail paramet target final target call target eventu return return unchang adapt call target adapt verifi array contain exact element provid correct argument count target handl array null zero element requir adapt call suppli array argument correct number element adapt throw instead invok target exampl array spread handl arraytyp Object::Object type array argument extract spread argument SpinedBuffer::arrayLength number argument spread incom array argument handl spread final array argument call origin handl
MethodHandle::asCollector make array collect handl accept given number trail posit argument collect array argument handl adapt target current handl type adapt type target singl trail paramet type arraytyp replac SpinedBuffer::arrayLength paramet type element type arraytyp array type differ final argument type origin target origin target adapt take array type call call adapt replac trail SpinedBuffer::arrayLength argument singl array type arraytyp element compris order replac argument final target call target eventu return return unchang adapt array share constant SpinedBuffer::arrayLength zero note arraytyp ident last paramet type origin target explicit argument symmetri MethodHandle::asSpreader allow target use Object::Object last paramet type order creat collect adapt restrict particular number collect argument use instead exampl array collect handl arraytyp Object::Object type array argument collect argument SpinedBuffer::arrayLength number argument collect array argument handl collect trail argument array call origin handl
MethodHandle::asVarargsCollector make variabl ariti adapt abl accept number trail posit argument collect array argument type behavior adapt type behavior target invok MethodHandle::asType request lead trail posit argument collect target trail paramet last paramet type adapt arraytyp target last paramet type transform return handl variabl ariti trail paramet type ident arraytyp call adapt invok target argument chang note behavior accept array indetermin length fix number argument call plain inexact caller type adapt adapt invok target MethodHandle::invokeExact normal behavior invok type match caller adapt ariti trail paramet type caller refer type ident assign trail paramet type adapt argument return valu convert pairwis fix ariti handl ariti differ adapt trail paramet type assign correspond caller type case adapt replac trail argument origin trail argument posit onward array type arraytyp element compris order replac argument caller type provid argument correct type satisfi target requir posit argument trail array argument thus caller suppli minimum argument where ariti target exist convers incom argument target argument use plain invok basic requir fulfil WrongMethodTypeException::WrongMethodTypeException thrown case target eventu return return unchang adapt final case exact target handl temporarili adapt ariti requir caller type MethodHandle::asCollector array length zero share constant instead array impli call MethodHandle::asCollector throw IllegalArgumentException::IllegalArgumentException WrongMethodTypeException::WrongMethodTypeException call variabl ariti adapt throw WrongMethodTypeException::WrongMethodTypeException behavior variabl ariti adapt maintain invari plain inexact invok equival MethodHandle::asType call adjust target type follow MethodHandle::invokeExact therefor variabl ariti adapt respond MethodHandle::asType request build fix ariti collector adapt request type differ ariti trail argument type result fix ariti collector type further adjust necessari request type pairwis convers MethodHandle::asType handl obtain execut ldc instruct constant methodhandl constant target mark variabl ariti modifi bit 0x0080 handl accept multipl ariti handl constant creat mean call MethodHandle::asVarargsCollector order creat collect adapt collect predetermin number argument type reflect predetermin number use instead handl transform produc handl variabl ariti document therefor MethodHandle::asVarargsCollector MethodHandle::MethodHandle MethodHandles::MethodHandles return handl fix ariti case where specifi return origin operand MethodHandle::asType handl type call MethodHandle::asVarargsCollector handl variabl ariti produc handl type behavior return origin variabl ariti handl exampl list make variabl ariti handl discuss rule design dynam type variat rule variabl ariti case caller variabl ariti handl pass zero posit argument els pass pre collect array length user awar role final argument effect type match final argument determin singl trail argument interpret array singl element array collect note dynam type trail argument effect decis comparison symbol type descriptor call site type descriptor handl arraytyp Object::Object type array argument collect argument handl collect number trail argument array call origin handl
LambdaForm::LambdaForm symbol non execut form handl invoc semant consist seri name first ariti name paramet remain name temporari valu temporari specifi function argument function handl argument mix constant valu local name result lambda defin name last approxim grammar name number consecut start zero letter mere tast syntax sugar thus first temporari number where ariti occurr name refer argument list refer name previous defin lambda lambda result result index temporari type subject nameref possess number note refer type eras stand Object::Object subword type boolean byte char eras int type stand usual primit type Function::Function invoc close follow static rule verifi argument return valu exact match Attributes::Name type consid convers allow chang eras type object cast freeli convert refer type int subword type forcibl narrow pass argument see MethodHandles::explicitCastArguments implicit convers float implicit convers doubl implicit convers function result Attributes::Name type implicit convers allow explicit easili encod use temporari express call type transform ident function exampl
LambdaForm::invoke Object::Object return type invok
LambdaMetafactory::LambdaMetafactory facilit creation function object implement interfac deleg possibl type adapt partial evalu argument typic bootstrap invokedynam call site support lambda express refer express featur program languag indirect access behavior specifi MethodHandle::MethodHandle proceed order phase linkag occur invok take argument interfac implement typic function interfac singl abstract name signatur interfac implement handl describ desir implement behavior possibl addit metadata produc target creat suitabl function object linkag involv dynam load implement target interfac CallSite::CallSite consid factori function object linkag refer metafactori captur occur CallSite::CallSite target invok typic invokedynam call site produc function object occur time singl factori CallSite::CallSite captur involv alloc function object return exist function object behavior MethodHandle::MethodHandle addit paramet specifi interfac refer captur paramet argument CallSite::CallSite target bound behavior MethodHandle::MethodHandle number captur paramet type determin linkag invoc occur implement interfac invok function object occur time singl function object referenc behavior MethodHandle::MethodHandle invok captur argument addit argument invoc use restrict set input result permit invoc exampl generic interfac predic parameter predic input String::String implement allow Object::Object linkag time addit paramet describ instanti type invoc argument eventu result check MethodType::MethodType provid form linkag standard version use optim protocol altern version altern version general standard version addit control behavior generat function object flag addit argument altern version add abil manag attribut function object bridg use implement multipl variat signatur involv argument return type adapt occur multipl distinct vm signatur logic consid languag flag flag bridg indic list addit MethodType::MethodType implement result function object share name instanti type multipl interfac interfac implement function object addit interfac typic marker interfac flag flag marker indic list addit interfac implement result function object serializ generat function object general support serial desir flag serializ indic function object serializ Serializable::Serializable function object use serial form instanc SerializedLambda::SerializedLambda requir addit assist captur describ paramet caller see detail assum linkag argument follow invokedtyp describ CallSite::CallSite signatur paramet type d1 dk return type rd sammethodtyp describ implement type paramet type u1 un return type ru implmethod MethodHandle::MethodHandle implement paramet type a1 return type ra describ instanc type handl includ extra first argument correspond receiv instantiatedmethodtyp allow restrict invoc paramet type t1 tn return type rt linkag invari hold rd interfac implmethod direct handl sammethodtyp instantiatedmethodtyp ariti ti ui type ti ui refer type ti subtyp ui rt ru type refer type rt subtyp ru di ai ti adapt aj where return type rt return type ra adapt rt further captur time implmethod correspond instanc captur argument first captur argument correspond receiv non null type consid adapt follow linkag design support evalu lambda express refer languag lambda express refer sourc target type function interfac evalu lambda express produc object target type recommend mechan evalu lambda express desugar lambda bodi invok invokedynam call site static argument list describ sole function interfac desugar implement return object lambda object implement target type refer implement simpli referenc desugar argument list implement argument list interfac differ implement addit argument accommod argument captur lambda express differ result permit adapt argument cast box unbox primit widen vararg adapt handl metafactori expect handl caller invokedynam call site argument list static argument list dynam argument list static argument list store constant pool dynam argument push operand stack captur time bootstrap access entir static argument list case includ describ implement target interfac target interfac signatur describ number static type valu dynam argument static return type invokedynam site implement describ handl theori handl current support direct handl repres invoc virtual interfac constructor static
LambdaMetafactory::metafactory facilit creation function object implement interfac deleg appropri type adapt partial evalu argument typic bootstrap invokedynam call site support lambda express refer express featur program languag standard streamlin metafactori addit flexibl general descript behavior target CallSite::CallSite return invok result function object instanc implement interfac name return type invokedtyp declar name given invokednam signatur given sammethodtyp overrid addit Object::Object caller repres lookup context access privileg caller invokedynam stack automat vm invokednam name implement invokedynam nameandtyp InvokeDynamic::InvokeDynamic structur stack automat vm invokedtyp expect signatur CallSite::CallSite paramet type repres type captur variabl return type interfac implement invokedynam nameandtyp InvokeDynamic::InvokeDynamic structur stack automat vm event implement instanc signatur paramet first paramet invoc signatur correspond receiv sammethodtyp Signature::Signature return type implement function object implmethod direct handl describ implement call suitabl adapt argument type return type captur argument prepend invoc argument invoc time instantiatedmethodtyp signatur return type enforc dynam invoc time sammethodtyp CallSite::CallSite target perform captur generat instanc interfac name invokedtyp
LambdaMetafactory::altMetafactory facilit creation function object implement interfac deleg appropri type adapt partial evalu argument typic bootstrap invokedynam call site support lambda express refer express featur program languag general flexibl metafactori streamlin version general descript behavior argument list includ fix paramet correspond paramet automat stack vm bootstrap invokedynam invoc Object::Object paramet contain addit paramet declar argument list behav argument list follow argument appear argument list specif addit argument interpret follow flag indic addit option bitwis desir flag defin flag markerinterfacecount number addit interfac function object implement flag marker flag set markerinterfac variabl length list addit interfac implement length equal markerinterfacecount flag marker flag set bridgecount number addit signatur function object implement flag bridg flag set bridg variabl length list addit signatur implement length equal bridgecount flag bridg flag set name markerinterfac subject restrict rd return type invokedtyp describ MethodType::MethodType name bridg subject restrict sammethodtyp describ flag serializ set flag function object implement Serializable::Serializable writereplac return appropri caller appropri deserializelambda describ target CallSite::CallSite return invok result function object instanc properti implement interfac name return type invokedtyp interfac name markerinterfac declar name given invokednam signatur given sammethodtyp addit signatur given bridg overrid Object::Object implement relat serial caller repres lookup context access privileg caller invokedynam stack automat vm invokednam name implement invokedynam nameandtyp InvokeDynamic::InvokeDynamic structur stack automat vm invokedtyp expect signatur CallSite::CallSite paramet type repres type captur variabl return type interfac implement invokedynam nameandtyp InvokeDynamic::InvokeDynamic structur stack automat vm event implement instanc signatur paramet first paramet invoc signatur correspond receiv arg Object::Object array contain requir argument sammethodtyp implmethod instantiatedmethodtyp flag option argument describ CallSite::CallSite target perform captur generat instanc interfac name invokedtyp
ThreadGroup::ThreadGroup thread group repres set thread addit thread group includ thread group thread group form tree thread group initi thread group parent thread allow access thread group access thread group parent thread group thread group
ThreadGroup::ThreadGroup creat empti Thread::Thread group Thread::Thread group creat system Thread::Thread group
ThreadGroup::ThreadGroup construct thread group parent group thread group current run thread checkaccess parent thread group call argument result secur name name thread group
ThreadGroup::ThreadGroup creat thread group parent group specifi thread group checkaccess parent thread group call argument result secur parent parent thread group name name thread group
ThreadGroup::getName return name thread group name thread group
ThreadGroup::isDestroyed test thread group destroy object destroy
ThreadGroup::setMaxPriority set maximum prioriti group thread thread group higher prioriti affect first checkaccess thread group call argument result secur pri argument greater maximum prioriti group remain unchang prioriti ThreadGroup::ThreadGroup object set smaller specifi pri maximum permit prioriti parent thread group thread group system thread group parent maximum prioriti simpli set pri call recurs pri argument thread group belong thread group pri prioriti thread group
ThreadGroup::activeCount return estim number activ thread thread group subgroup recurs iter subgroup thread group valu return estim number thread chang dynam travers intern data structur affect presenc system thread intend primarili debug monitor purpos estim number activ thread thread group thread group thread group ancestor
ThreadGroup::activeGroupCount return estim number activ group thread group subgroup recurs iter subgroup thread group valu return estim number thread group chang dynam travers intern data structur intend primarili debug monitor purpos number activ thread group thread group ancestor
ThreadGroup::destroy destroy thread group subgroup thread group empti indic thread thread group stop first checkaccess thread group call argument result secur
ThreadGroup::add add specifi Thread::Thread group group specifi Thread::Thread group ad
ThreadGroup::remove remov specifi Thread::Thread group group Thread::Thread group remov Thread::Thread destroy
ThreadGroup::add add specifi thread thread group note call librari virtual machin call vm add system thread system thread group Thread::Thread ad
ThreadGroup::threadStartFailed notifi group thread fail attempt start state thread group roll attempt start thread occur thread consid unstart member thread group subsequ attempt start thread permit Thread::Thread start invok
ThreadGroup::threadTerminated notifi group thread termin destroy group condit daemon thread group aliv unstart thread group subgroup thread group Thread::Thread termin
ThreadGroup::remove remov specifi Thread::Thread group invok thread group destroy effect Thread::Thread remov
ThreadGroup::uncaughtException call virtual machin thread thread group stop uncaught thread specif instal uncaughtexcept ThreadGroup::ThreadGroup follow thread group parent thread group uncaughtexcept parent call argument check see instal uncaughtexcept call argument determin Throwable::Throwable argument instanc messag contain thread name return thread stack backtrac use Throwable::Throwable print applic overrid subclass ThreadGroup::ThreadGroup provid altern handl uncaught thread exit uncaught
ThreadGroup::toString return string represent Thread::Thread group string represent thread group
Class::Class instanc Class::Class repres interfac run enum kind annot kind interfac array belong reflect Class::Class object share array element type number dimens primit type boolean byte char int float doubl keyword repres Class::Class object Class::Class constructor instead Class::Class object construct automat virtual machin load call defineclass loader exampl use Class::Class object print name object get Class::Class object name type use liter see section 15 trade languag specif exampl system println name foo foo getnam type model Class::Class object exampl type string use Class::Class model unknown
Class::toString convert object string string represent string interfac follow space fulli qualifi name format return getnam Class::Class object repres primit type return name primit type Class::Class object repres return string represent object
Class::toGenericString return string describ Class::Class includ modifi type paramet string format list type modifi follow kind type empti string primit type enum interfac 64 interfac appropri follow type name follow angl bracket comma separ list type type paramet space separ modifi separ modifi kind type modifi occur canon order type paramet type paramet list elid note runtim represent type generat modifi origin sourc illeg origin sourc string describ Class::Class includ modifi type paramet
Class::forName return Class::Class object associ interfac given string name invok equival fornam classnam currentload where currentload denot defin loader current exampl fragment return runtim Class::Class descriptor name lang thread Class::Class fornam lang thread call fornam caus name initi classnam fulli qualifi name desir Class::Class object specifi name
Class::forName return Class::Class object associ interfac given string name use given loader given fulli qualifi name interfac format return getnam attempt locat load link interfac specifi loader load interfac paramet loader null load bootstrap loader initi initi paramet initi earlier name denot primit type attempt made locat user defin unnam packag name name therefor obtain Class::Class object repres primit type name denot array compon type array load initi exampl instanc express fornam foo equival fornam foo getclass getclassload note throw error relat load link initi specifi section 12 12 12 languag specif note check request access caller loader null secur manag caller loader null call secur manag checkpermiss runtimepermiss getclassload permiss ensur ok access bootstrap loader name fulli qualifi name desir initi initi see section 12 languag specif loader loader load object repres desir
Class::isInstance determin specifi Object::Object assign compat object repres Class::Class dynam equival languag instanceof oper return specifi Object::Object argument non null cast refer type repres Class::Class object rais ClassCastException::ClassCastException return fals specif Class::Class object repres declar return specifi Object::Object argument instanc repres subclass return fals Class::Class object repres array return specifi Object::Object argument convert object array ident convers widen refer convers return fals Class::Class object repres interfac return superclass specifi Object::Object argument implement interfac return fals Class::Class object repres primit type return fals obj object check obj instanc
Class::isAssignableFrom determin interfac repres Class::Class object superclass superinterfac interfac repres specifi Class::Class paramet return return fals Class::Class object repres primit type return specifi Class::Class paramet exact Class::Class object return fals specif test type repres specifi Class::Class paramet convert type repres Class::Class object ident convers widen refer convers see languag specif section detail cls Class::Class object check boolean valu indic object type cls assign object
Class::isInterface determin specifi Class::Class object repres interfac type object repres interfac fals
Class::isArray determin Class::Class object repres array object repres array fals
Class::isPrimitive determin specifi Class::Class object repres primit type nine predefin Class::Class object repres eight primit type creat virtual machin name primit type repres name boolean byte char int float doubl object access static final variabl Class::Class object return repres primit type
Class::isAnnotation return Class::Class object repres annot type note return return annot type interfac object repres annot type fals
Class::getName return name entiti interfac array primit type repres Class::Class object String::String object repres refer type array type binari name return specifi trade languag specif object repres primit type name return String::String equal languag keyword correspond primit type object repres array intern form name consist name element type preced charact repres depth array nest encod element type name follow interfac name classnam binari name specifi exampl name interfac repres object
Class::getClassLoader return loader implement use null repres bootstrap loader return null implement load bootstrap loader secur manag caller loader null caller loader ancestor loader loader request call secur manag checkpermiss runtimepermiss getclassload permiss ensur ok access loader object repres primit type null return loader load interfac repres object
Class::getSuperclass return Class::Class repres superclass entiti interfac primit type repres Class::Class Class::Class repres Object::Object interfac primit type null return object repres array Class::Class object repres Object::Object return superclass repres object
Class::getGenericSuperclass return Window::Type repres direct superclass entiti interfac primit type repres Class::Class superclass parameter type Window::Type object return accur reflect actual type paramet sourc parameter type repres superclass creat creat see declar semant creation process parameter type Class::Class repres Object::Object interfac primit type null return object repres array Class::Class object repres Object::Object return superclass repres object
Class::getPackage get packag loader find packag load bootstrap loader set packag load classpath search find packag null return packag object creat loader packag attribut version specif defin manifest accompani loader creat packag instanc attribut manifest packag null packag avail archiv codebas
Class::getInterfaces determin interfac implement interfac repres object object repres return valu array contain object repres interfac implement order interfac object array correspond order interfac name implement claus declar repres object exampl given declar shimmer implement floorwax desserttop suppos valu instanc shimmer valu express getclass getinterfac Class::Class object repres interfac floorwax valu getclass getinterfac Class::Class object repres interfac desserttop object repres interfac array contain object repres interfac extend interfac order interfac object array correspond order interfac name extend claus declar interfac repres object object repres interfac implement interfac return array length object repres primit type return array length Class::Class object repres array type interfac Cloneable::Cloneable io serializ return order array interfac implement
Class::getComponentType return Class::Class repres compon type array repres array return null Class::Class repres compon type array
Class::getModifiers return languag modifi interfac encod integ modifi consist virtual machin constant protect privat final static abstract interfac decod use Modifier::Modifier array privat protect modifi compon type Class::Class repres primit type modifi protect privat modifi fals object repres array primit type final modifi interfac modifi fals valu modifi determin specif modifi encod defin virtual machin specif tabl int repres modifi
Class::setSigners Set::Set signer
Class::getEnclosingMethod Class::Class object repres local anonym return object repres enclos return null particular return null local anonym enclos type declar instanc initi static initi enclos local anonym null
Class::getEnclosingConstructor Class::Class object repres local anonym constructor return object repres enclos constructor return null particular return null local anonym enclos type declar instanc initi static initi enclos constructor local anonym null
Class::getDeclaringClass interfac repres Class::Class object member return Class::Class object repres declar return null interfac member Class::Class object repres array primit type return null declar
Class::getSimpleName return name given sourc return empti string anonym name array name compon type append particular name array compon type anonym name
Class::getCanonicalName return canon name defin languag specif return null canon name local anonym array compon type canon name canon name exist null
Class::getFields return array contain Field::Field object reflect access field interfac repres Class::Class object Class::Class object repres interfac access field return array length Class::Class object repres return field superclass Class::Class object repres interfac return field interfac superinterfac Class::Class object repres array type primit type return array length element return array sort particular order array Field::Field object repres field Class::Class member Field::Field declar
Class::getMethods return array contain Method::Method object reflect interfac repres Class::Class object includ declar interfac inherit superclass superinterfac Class::Class object repres type multipl name paramet type return type return array Method::Method object Class::Class object repres type initi return array correspond Method::Method object Class::Class object repres array type return array Method::Method object inherit array type Object::Object contain Method::Method object clone Class::Class object repres interfac return array contain implicit declar Object::Object therefor explicit declar interfac superinterfac return array length note Class::Class object repres inherit Object::Object Class::Class object repres primit type return array length static declar superinterfac interfac repres Class::Class object consid member interfac element return array sort particular order array Method::Method object repres Class::Class member Method::Method declar
Class::getConstructors return array contain Constructor::Constructor object reflect constructor repres Class::Class object array length return constructor array reflect primit type note return array constructor object array constructor return type Constructor::Constructor constructor expect inform return type necessari return array modifi hold Constructor::Constructor object violat type guarante constructor array Constructor::Constructor object repres constructor
Class::getField return Field::Field object reflect specifi member field interfac repres Class::Class object name paramet String::String specifi name desir field field reflect determin algorithm follow let interfac repres object declar field name specifi field reflect field found step algorithm appli recurs direct superinterfac direct superinterfac search order declar field found step superclass algorithm invok recurs superclass NoSuchFieldException::NoSuchFieldException thrown Class::Class object repres array type find length field array type name field name Field::Field object specifi name Class::Class member Field::Field declar
Class::getMethod return Method::Method object reflect specifi member interfac repres Class::Class object name paramet String::String specifi name desir parametertyp paramet array Class::Class object identifi formal paramet type declar order parametertyp null treat empti array name NoSuchMethodException::NoSuchMethodException rais reflect determin algorithm follow let interfac repres object search match defin match found reflect match found step Object::Object algorithm invok recurs superclass Object::Object interfac superinterfac search match found reflect find match interfac nbsp declar exact specifi name exact formal paramet type reflect found return type specif reflect chosen arbitrarili note match languag forbid declar multipl signatur return type virtual machin increas flexibl virtual machin implement various languag featur exampl covari return implement bridg overridden signatur return type Class::Class object repres array type find clone static declar superinterfac interfac repres Class::Class object consid member interfac name name parametertyp list paramet Method::Method object match specifi name parametertyp Class::Class member Method::Method declar
Class::getConstructor return Constructor::Constructor object reflect specifi constructor repres Class::Class object parametertyp paramet array Class::Class object identifi constructor formal paramet type declar order Class::Class object repres inner declar non static context formal paramet type includ explicit enclos instanc first paramet constructor reflect constructor repres Class::Class object formal paramet type match specifi parametertyp parametertyp paramet array Constructor::Constructor object constructor match specifi parametertyp
Class::getDeclaredClasses return array Class::Class object reflect interfac declar member repres Class::Class object includ protect default packag access privat interfac declar exclud inherit interfac return array length declar interfac member Class::Class object repres primit type array array Class::Class object repres declar member
Class::getDeclaredFields return array Field::Field object reflect field declar interfac repres Class::Class object includ protect default packag access privat field exclud inherit field Class::Class object repres interfac declar field return array length Class::Class object repres array type primit type return array length element return array sort particular order array Field::Field object repres declar field Class::Class member Field::Field declar
Class::getDeclaredMethods return array contain Method::Method object reflect declar interfac repres Class::Class object includ protect default packag access privat exclud inherit Class::Class object repres type multipl declar name paramet type return type return array Method::Method object Class::Class object repres type initi return array correspond Method::Method object Class::Class object repres interfac declar return array length Class::Class object repres array type primit type return array length element return array sort particular order array Method::Method object repres declar Class::Class member Method::Method declar
Class::getDeclaredConstructors return array Constructor::Constructor object reflect constructor declar repres Class::Class object protect default packag access privat constructor element array return sort particular order default constructor includ return array return array length Class::Class object repres interfac primit type array see languag specif section array Constructor::Constructor object repres declar constructor
Class::getDeclaredField return Field::Field object reflect specifi declar field interfac repres Class::Class object name paramet String::String specifi name desir field Class::Class object repres array type find length field array type name name field Field::Field object specifi field Class::Class member Field::Field declar
Class::getDeclaredMethod return Method::Method object reflect specifi declar interfac repres Class::Class object name paramet String::String specifi name desir parametertyp paramet array Class::Class object identifi formal paramet type declar order paramet type declar return type specif return chosen arbitrarili name lt init gt lt clinit gt NoSuchMethodException::NoSuchMethodException rais Class::Class object repres array type find clone name name parametertyp paramet array Method::Method object match specifi name paramet Class::Class member Method::Method declar
Class::getDeclaredConstructor return Constructor::Constructor object reflect specifi constructor interfac repres Class::Class object parametertyp paramet array Class::Class object identifi constructor formal paramet type declar order Class::Class object repres inner declar non static context formal paramet type includ explicit enclos instanc first paramet parametertyp paramet array Constructor::Constructor object constructor specifi paramet list
Class::getResourceAsStream find resourc given name rule search resourc associ given implement defin deleg object loader object load bootstrap loader deleg deleg absolut resourc name construct given resourc name use algorithm name begin 92 u002f absolut name resourc portion name absolut name form modifi packag name name where modifi packag name packag name object substitut 92 u002 name name desir resourc object null resourc name found
Class::getEnumConstants return element enum null Class::Class object repres enum type array contain valu compris enum repres Class::Class object order declar null Class::Class object repres enum type
Class::enumConstantDirectory return map name enum constant packag privat intern Enum::Enum implement static valueof String::String effici note map return creat lazili first use typic won get creat
Class::cast cast object interfac repres Class::Class object obj object cast object cast null obj null
Class::asSubclass cast Class::Class object repres subclass repres specifi object check cast valid throw ClassCastException::ClassCastException succeed return refer object use client narrow type Class::Class object pass restrict Class::Class object accept cast generat compil time warn correct cast check runtim generic type implement erasur type cast object clazz type cast object Class::Class object cast repres subclass specifi object
Class::getAnnotatedSuperclass return AnnotatedType::AnnotatedType object repres use type specifi superclass entiti repres Class::Class object use type foo specifi superclass extend foo distinct declar type foo Class::Class object repres type declar explicit indic annot superclass return valu AnnotatedType::AnnotatedType object repres element annot Class::Class repres Object::Object interfac type array type primit type return valu null object repres superclass
Class::getAnnotatedInterfaces return array AnnotatedType::AnnotatedType object repres use type specifi superinterfac entiti repres Class::Class object use type foo specifi superinterfac implement foo distinct declar type foo Class::Class object repres return valu array contain object repres use interfac type specifi interfac implement order object array correspond order interfac type implement claus declar Class::Class object Class::Class object repres interfac return valu array contain object repres use interfac type specifi interfac extend interfac order object array correspond order interfac type extend claus declar Class::Class object Class::Class object repres interfac declar explicit indic annot superinterfac return valu array length Class::Class object repres Object::Object array type primit type return valu array length array repres superinterfac
StringBuilder::StringBuilder mutabl sequenc charact provid compat StringBuffer::StringBuffer guarante synchron design use drop replac StringBuffer::StringBuffer place where string buffer singl thread general case where recommend prefer StringBuffer::StringBuffer faster implement princip oper StringBuilder::StringBuilder append insert overload accept data type effect convert given datum string append insert charact string string builder append add charact end builder insert add charact specifi point exampl refer string builder object current content start call append le caus string builder contain startl insert le alter string builder contain starlet general sb refer instanc StringBuilder::StringBuilder sb append effect sb insert sb length string builder capac length charact sequenc contain string builder exceed capac necessari alloc intern buffer intern buffer overflow automat made larger instanc StringBuilder::StringBuilder safe use multipl thread synchron requir recommend note pass null argument constructor caus thrown
StringBuilder::StringBuilder construct string builder charact initi capac 16 charact
StringBuilder::StringBuilder construct string builder charact initi capac specifi capac argument capac initi capac
StringBuilder::StringBuilder construct string builder initi content specifi string initi capac string builder 16 length string argument str initi content buffer
StringBuilder::StringBuilder construct string builder contain charact specifi CharSequence::CharSequence initi capac string builder 16 length CharSequence::CharSequence argument seq sequenc copi
StringBuilder::append append specifi StringBuffer::StringBuffer sequenc charact StringBuffer::StringBuffer argument append order sequenc increas length sequenc length argument sb null charact null append sequenc let length charact sequenc prior execut append charact index charact sequenc equal charact index old charact sequenc equal charact index argument sb sb StringBuffer::StringBuffer append refer object
StringBuilder::writeObject save state StringBuilder::StringBuilder instanc stream serial number charact current store string builder int follow charact string builder char length char array greater number charact current store string builder case extra charact ignor
StringBuilder::readObject readobject call restor state StringBuffer::StringBuffer stream
AbstractStringBuilder::length return length charact count length sequenc charact current repres object
AbstractStringBuilder::append append string represent Object::Object argument overal effect exact argument convert string charact string charact sequenc obj Object::Object refer object
AbstractStringBuilder::append append specifi string charact sequenc charact String::String argument append order increas length sequenc length argument str null charact null append let length charact sequenc prior execut append charact index charact sequenc equal charact index old charact sequenc equal charact index argument str str string refer object
AbstractStringBuilder::replace replac charact substr sequenc charact specifi String::String substr begin specifi start extend charact index end end sequenc charact exist first charact substr remov specifi String::String insert start sequenc lengthen accommod specifi String::String necessari start begin index inclus end end index exclus str String::String replac previous content object
AbstractStringBuilder::substring return String::String contain subsequ charact current contain charact sequenc substr begin specifi index extend end sequenc start begin index inclus string
AbstractStringBuilder::substring return String::String contain subsequ charact current contain sequenc substr begin specifi start extend charact index end start begin index inclus end end index exclus string
AbstractStringBuilder::insert insert string represent Object::Object argument charact sequenc overal effect exact argument convert string charact string charact sequenc indic offset offset argument greater equal equal sequenc offset offset obj Object::Object refer object
AbstractStringBuilder::insert insert string charact sequenc charact String::String argument insert order sequenc indic offset move charact origin posit increas length sequenc length argument str null charact null insert sequenc charact index charact sequenc equal charact index old charact sequenc offset charact index offset argument str offset offset str length charact index str length old charact sequenc offset str length offset argument greater equal equal sequenc offset offset str string refer object
AbstractStringBuilder::toString return string repres data sequenc String::String object alloc initi contain charact sequenc current repres object String::String return subsequ chang sequenc affect content String::String string represent sequenc charact
AbstractStringBuilder::getValue String::String String::contentEquals
IllegalThreadStateException::IllegalThreadStateException thrown indic thread appropri state request oper see exampl suspend resum Thread::Thread
NoSuchFieldException::NoSuchFieldException Constructor::Constructor
NoSuchFieldException::NoSuchFieldException Constructor::Constructor detail messag detail messag
Double::Double Point2D::Double wrap valu primit type doubl object object type Point2D::Double contain singl field type doubl addit provid convert doubl String::String String::String doubl constant use deal doubl
Double::TYPE Class::Class instanc repres primit type doubl
Double::valueOf return Point2D::Double object hold doubl valu repres argument string null NullPointerException::NullPointerException thrown lead trail whitespac charact ignor whitespac remov ascii space control charact remov rest constitut floatvalu describ lexic syntax rule floatvalu sign opt nan sign opt infin sign opt floatingpointliter sign opt hexfloatingpointliter signedinteg hexfloatingpointliter hexsignificand binaryexpon floattypesuffix opt hexsignificand hexnumer hexnumer 0x hexdigit opt hexdigit 0x hexdigit opt hexdigit binaryexpon binaryexponentind signedinteg binaryexponentind where sign floatingpointliter hexnumer hexdigit signedinteg floattypesuffix defin lexic structur section trade languag specif underscor accept digit form floatvalu NumberFormatException::NumberFormatException thrown regard repres exact decim valu usual computer scientif notat exact hexadecim valu exact numer valu conceptu convert infinit precis binari valu type doubl usual nearest rule ieee 754 float point arithmet includ preserv sign zero valu note nearest rule impli overflow underflow behaviour exact valu magnitud greater equal doubl result infin exact valu magnitud equal float result zero final Point2D::Double object repres doubl valu return interpret local string represent float point valu use subclass note trail format specifi specifi determin type float point liter 0f float valu 0d doubl valu influenc result word numer valu input string convert target float point type step sequenc convers string float follow float doubl equival convert string doubl exampl float liter 1f equal doubl valu 10000000149011612 float liter 1f repres numer valu doubl liter numer valu exact repres binari float point number avoid call invalid string NumberFormatException::NumberFormatException thrown regular express screen input string string pars Point2D::Double object hold valu repres String::String argument
Double::parseDouble return doubl initi valu repres specifi String::String perform valueof Point2D::Double string pars doubl valu repres string argument
Double::Double construct newli alloc Point2D::Double object repres primit doubl argument valu valu repres Point2D::Double
Double::Double construct newli alloc Point2D::Double object repres float point valu type doubl repres string string convert doubl valu valueof string convert Point2D::Double
Double::toString return string represent Point2D::Double object primit doubl valu repres object convert string exact tostr argument String::String represent object
Double::intValue return valu Point2D::Double int narrow primit convers narrow primit convers doubl valu repres object convert type int
Double::longValue return valu Point2D::Double narrow primit convers doubl valu repres object convert type narrow primit convers
Double::floatValue return valu Point2D::Double float narrow primit convers doubl valu repres object convert type float narrow primit convers
Double::doubleValue return doubl valu Point2D::Double object doubl valu repres object
Iterable::iterator return iter element type Iterator::Iterator
Iterable::spliterator creat element describ Iterable::Iterable default implement creat spliter iter Iterator::Iterator spliter inherit fail fast properti iter iter default implement overridden spliter return default implement poor split capabl unsiz report spliter characterist implement provid implement Spliterator::Spliterator element describ Iterable::Iterable
Object::Object Class::Class Object::Object root hierarchi Object::Object superclass object includ array implement
Object::getClass return runtim Object::Object return Class::Class object object lock static synchron repres actual result type Class::Class extend where erasur static type express Object::getClass call exampl cast requir fragment Number::Number Class::Class extend Number::Number getclass Class::Class object repres runtim object 15 Class::Class liter
Object::hashCode return hash valu object support benefit hash tabl general contract hashcod invok object execut hashcod consist return integ equal comparison object modifi integ remain consist execut execut object equal accord equal object call hashcod object produc integ result requir object unequ accord call hashcod object produc distinct integ result programm awar produc distinct integ result unequ object improv perform hash tabl reason practic hashcod defin Object::Object return distinct integ distinct object typic implement convert intern address object integ implement techniqu requir trade program languag hash valu object
Object::equals indic object equal equal implement equival relat non null object refer reflex non null refer valu equal return symmetr non null refer valu equal return equal return transit non null refer valu equal return equal return equal return consist non null refer valu multipl invoc equal consist return consist return fals equal comparison object modifi non null refer valu equal null return fals equal Object::Object implement discrimin equival relat object non null refer valu return refer object valu note general necessari overrid hashcod overridden maintain general contract hashcod state equal object equal hash obj refer object compar object obj argument fals
Object::clone creat return copi object precis mean copi depend object general intent object express express absolut requir typic case absolut requir convent return object obtain call super clone superclass Object::Object obey convent case clone getclass getclass convent object return independ object clone achiev independ necessari modifi field object return super clone return typic mean copi mutabl object compris intern deep structur object clone replac refer object refer copi contain primit field refer immut object case field object return super clone modifi clone Object::Object perform specif clone oper first object implement interfac Cloneable::Cloneable CloneNotSupportedException::CloneNotSupportedException thrown note array consid implement interfac Cloneable::Cloneable return type clone array type where refer primit type creat instanc object initi field exact content correspond field object assign content field clone thus perform shallow copi object deep copi oper Object::Object implement interfac Cloneable::Cloneable call clone object Object::Object result throw run time clone instanc
Object::toString return string represent object general tostr return string textual repres object result concis inform represent easi person read recommend subclass overrid tostr Object::Object return string consist name object instanc sign charact unsign hexadecim represent hash object word return string equal valu string represent object
Object::notify wake singl thread wait object monitor thread wait object chosen awaken choic arbitrari occur discret implement thread wait object monitor call wait awaken thread abl proceed current thread relinquish lock object awaken thread compet usual manner thread activ compet synchron object exampl awaken thread enjoy reliabl privileg disadvantag thread lock object call thread owner object monitor thread becom owner object monitor execut synchron instanc object execut bodi synchron statement synchron object object type Class::Class execut synchron static thread time object monitor
Object::wait caus current thread wait thread invok object specifi amount time elaps current thread object monitor caus current thread call place wait set object relinquish synchron claim object Thread::Thread becom disabl thread schedul purpos lie dormant happen thread invok notifi object thread happen arbitrarili chosen thread awaken thread invok Object::notifyAll object thread thread specifi amount time elaps timeout zero time taken consider thread simpli wait notifi thread remov wait set object enabl thread schedul compet usual manner thread synchron object gain control object synchron claim object restor status quo ant situat time wait invok Thread::Thread return invoc wait thus return wait synchron state object thread exact wait invok thread wake notifi interrupt time call spurious wakeup rare occur practic applic guard test condit caus thread awaken continu wait condit satisfi word wait occur loop topic see section doug lea concurr program edit addison wesley 2000 item 50 joshua bloch effect program languag guid addison wesley 2001 current thread thread wait InterruptedException::InterruptedException thrown thrown lock status object restor describ note wait place current thread wait set object unlock object object current thread synchron remain lock thread wait call thread owner object monitor see notifi descript thread becom owner monitor timeout maximum time wait millisecond
Object::finalize call garbag collector object garbag collect determin refer object subclass overrid final dispos system resourc perform cleanup general contract final invok trade virtual machin determin longer mean object access thread die result action taken final object readi final final take action includ make object avail thread usual purpos final perform cleanup action object irrevoc discard exampl final object repres input output connect perform explicit transact break connect object perman discard final Object::Object perform action simpli return normal subclass Object::Object overrid definit program languag guarante thread invok final given object guarante thread invok final hold user visibl synchron lock final invok uncaught thrown final ignor final object termin final invok object further action taken virtual machin determin longer mean object access thread die includ action object readi final point object discard final invok virtual machin given object thrown final caus final object halt ignor 12 final Class::Class instanc
Long::Long Long::Long wrap valu primit type object object type Long::Long contain singl field type addit provid convert String::String String::String constant use deal implement note implement bit twiddl base materi henri warren jr hacker delight addison wesley 2002
Long::TYPE Class::Class instanc repres primit type
Long::toString return string represent first argument radix specifi argument radix smaller charact min radix larger charact max radix radix 10 instead first argument negat first element result ascii sign u005cu002d first argument negat sign charact appear result remain charact result repres magnitud first argument magnitud zero repres singl zero charact u005cu0030 first charact represent magnitud zero charact ascii charact digit 0123456789abcdefghijklmnopqrstuvwxyz u005cu0030 u005cu0039 u005cu0061 u005cu007a radix first charact radix digit order shown thus digit hexadecim radix 16 0123456789abcdef uppercas letter desir call result tostr 16 touppercas convert string radix radix use string represent string represent argument specifi radix
Long::toUnsignedBigInteger return BigInteger::BigInteger equal unsign valu argument
Long::toUnsignedString0 Format::Format treat unsign String::String val valu format shift log2 base format hex octal binari
Long::toString return String::String object repres specifi argument convert sign decim represent return string exact argument radix 10 given argument convert string represent argument base nbsp 10
Long::parseLong pars string argument sign radix specifi argument charact string digit specifi radix determin return nonneg valu first charact ascii sign u005cu002d indic negat valu ascii sign u005cu002b indic posit valu result valu return note charact u005cu004c u005cu006c permit appear end string type indic permit program languag sourc appear digit radix greater equal 22 type NumberFormatException::NumberFormatException thrown situat occur first argument null string length zero radix smaller larger charact string digit specifi radix first charact sign u005cu002d sign u005cu002b string longer length valu repres string valu type exampl String::String contain represent pars radix radix pars repres string argument specifi radix
Long::parseLong pars string argument sign decim charact string decim digit first charact ascii sign u005cu002d indic negat valu ascii sign u005cu002b indic posit valu result valu return exact argument radix 10 given argument note charact u005cu004c u005cu006c permit appear end string type indic permit program languag sourc String::String contain represent pars repres argument decim
Long::parseUnsignedLong pars string argument unsign radix specifi argument unsign integ map valu associ negat number posit number larger max valu charact string digit specifi radix determin return nonneg valu first charact ascii sign u005cu002b result integ valu return type NumberFormatException::NumberFormatException thrown situat occur first argument null string length zero radix smaller larger charact string digit specifi radix first charact sign u005cu002b string longer length valu repres string larger largest unsign 64 String::String contain unsign integ represent pars radix radix pars unsign repres string argument specifi radix
Long::parseUnsignedLong pars string argument unsign decim charact string decim digit first charact ascii sign u005cu002b result integ valu return exact argument radix 10 given argument String::String contain unsign represent pars unsign valu repres decim string argument
Long::valueOf return Long::Long object hold valu extract specifi String::String pars radix given argument first argument interpret repres sign radix specifi argument exact argument given result Long::Long object repres valu specifi string word return Long::Long object equal valu parselong radix string pars radix radix interpret Long::Long object hold valu repres string argument specifi radix
Long::valueOf return Long::Long object hold valu specifi String::String argument interpret repres sign decim exact argument given result Long::Long object repres integ valu specifi string word return Long::Long object equal valu parselong string pars Long::Long object hold valu repres string argument
Long::valueOf return Long::Long instanc repres specifi valu Long::Long instanc requir general prefer constructor yield signific space time perform cach frequent request valu note Integer::Integer requir cach valu particular rang valu Long::Long instanc repres
Long::decode decod String::String Long::Long accept decim hexadecim octal number given grammar decodablestr sign opt decimalnumer sign opt 0x hexdigit sign opt 0x hexdigit sign opt hexdigit sign opt octaldigit sign decimalnumer hexdigit octaldigit defin section 10 trade languag specif underscor accept digit sequenc charact option sign radix specifi 0x 0x lead zero pars parselong indic radix 10 16 sequenc charact repres posit valu thrown result negat first charact specifi String::String sign whitespac charact permit String::String nm String::String decod Long::Long object hold valu repres nm
Long::Long construct newli alloc Long::Long object repres specifi argument valu valu repres Long::Long object
Long::Long construct newli alloc Long::Long object repres valu indic String::String paramet string convert valu exact manner Long::parseLong radix 10 String::String convert Long::Long
Long::byteValue return valu Long::Long byte narrow primit convers narrow primit convers
Long::shortValue return valu Long::Long narrow primit convers narrow primit convers
Long::intValue return valu Long::Long int narrow primit convers narrow primit convers
Long::longValue return valu Long::Long valu
Long::floatValue return valu Long::Long float widen primit convers widen primit convers
Long::doubleValue return valu Long::Long doubl widen primit convers widen primit convers
Long::toString return String::String object repres Long::Long valu valu convert sign decim represent return string exact valu given argument string represent valu object base nbsp 10
Long::hashCode return hash Long::Long result exclus halv primit valu held Long::Long object hashcod valu express int longvalu longvalu 32 hash valu object
Long::equals compar object specifi object result argument null Long::Long object contain valu object obj object compar object fals
Long::getLong determin valu system properti specifi name first argument treat name system properti System::System properti access string valu properti interpret valu use grammar support Long::Long object repres valu return properti specifi name specifi name empti null properti correct numer format null return word return Long::Long object equal valu getlong nm null nm properti name Long::Long valu properti
Long::getLong determin valu system properti specifi name first argument treat name system properti System::System properti access string valu properti interpret valu use grammar support Long::Long object repres valu return argument default valu Long::Long object repres valu argument return properti specifi name properti correct numer format specifi name empti null word return Long::Long object equal valu getlong nm val practic implement manner avoid unnecessari alloc Long::Long object default valu nm properti name val default valu Long::Long valu properti
Long::getLong return valu system properti specifi name first argument treat name system properti System::System properti access string valu properti interpret valu Long::Long object repres valu return summari properti valu begin ascii charact 0x ascii charact follow sign rest pars hexadecim integ exact radix 16 properti valu begin ascii charact follow charact pars octal integ exact radix properti valu pars decim integ exact radix 10 note case u005cu004c u005cu006c permit appear end properti valu type indic permit program languag sourc argument default valu default valu return properti specifi name properti correct numer format specifi name empti null nm properti name val default valu Long::Long valu properti
Long::compareTo compar Long::Long object numer anotherlong Long::Long compar valu Long::Long equal argument Long::Long valu Long::Long numer argument Long::Long valu greater Long::Long numer greater argument Long::Long sign comparison
ThreadDeath::ThreadDeath instanc ThreadDeath::ThreadDeath thrown victim thread deprec invok catch instanc clean termin asynchron ThreadDeath::ThreadDeath caught rethrown thread actual die print messag ThreadDeath::ThreadDeath caught ThreadDeath::ThreadDeath specif subclass Error::Error Exception::Exception normal occurr applic catch occurr Exception::Exception discard
Thread::Thread thread thread execut program virtual machin allow multipl thread execut run concurr thread prioriti thread higher prioriti execut prefer thread lower prioriti thread mark daemon run thread creat Thread::Thread object thread prioriti initi set equal prioriti creat thread daemon thread creat thread daemon virtual machin start singl non daemon thread typic call name design virtual machin continu execut thread occur exit Runtime::Runtime call secur manag permit exit oper take place thread daemon thread die return call run throw propag run creat thread execut declar subclass Thread::Thread subclass overrid run Thread::Thread instanc subclass alloc start exampl thread comput prime larger state valu written follow creat thread start run creat thread declar implement Runnable::Runnable interfac implement run instanc alloc pass argument creat Thread::Thread start exampl style look follow creat thread start run thread name identif purpos thread name name specifi thread creat name generat note pass null argument constructor caus thrown
Thread::currentThread return refer current execut thread object current execut thread
Thread::yield hint schedul current thread yield current use processor schedul free ignor hint yield heurist attempt improv relat progress thread utilis cpu use combin detail profil benchmark ensur actual desir effect rare appropri use use debug test purpos where reproduc bug due race condit use design concurr control construct packag
Thread::sleep caus current execut thread sleep temporarili ceas execut specifi number millisecond subject precis accuraci system timer schedul thread lose ownership monitor milli length time sleep millisecond
Thread::sleep caus current execut thread sleep temporarili ceas execut specifi number millisecond specifi number nanosecond subject precis accuraci system timer schedul thread lose ownership monitor milli length time sleep millisecond nano 999999 addit nanosecond sleep
Thread::init initi Thread::Thread current AccessControlContext::AccessControlContext
Thread::init initi Thread::Thread Thread::Thread group target object run get call name name Thread::Thread stacksiz desir stack size thread zero indic paramet ignor acc AccessControlContext::AccessControlContext inherit accesscontrol getcontext null
Thread::clone throw CloneNotSupportedException::CloneNotSupportedException Thread::Thread meaning clone construct Thread::Thread instead
Thread::Thread alloc Thread::Thread object constructor effect null null gname where gname newli generat name automat generat name form thread where integ
Thread::Thread alloc Thread::Thread object constructor effect null target gname where gname newli generat name automat generat name form thread where integ target object run invok thread start null run
Thread::Thread creat Thread::Thread inherit given AccessControlContext::AccessControlContext constructor
Thread::Thread alloc Thread::Thread object constructor effect group target gname where gname newli generat name automat generat name form thread where integ group thread group null secur manag group determin secur manag securitymanag getthreadgroup return null group set current thread thread group target object run invok thread start null thread run invok
Thread::Thread alloc Thread::Thread object constructor effect null null name name name thread
Thread::Thread alloc Thread::Thread object constructor effect group null name group thread group null secur manag group determin secur manag securitymanag getthreadgroup return null group set current thread thread group name name thread
Thread::Thread alloc Thread::Thread object constructor effect null target name target object run invok thread start null thread run invok name name thread
Thread::Thread alloc Thread::Thread object target run object specifi name name belong thread group refer group secur manag invok ThreadGroup::ThreadGroup argument addit checkpermiss invok runtimepermiss enablecontextclassloaderoverrid permiss invok indirect constructor subclass overrid Thread::getContextClassLoader Thread::setContextClassLoader prioriti newli creat thread set equal prioriti thread creat current run thread chang prioriti valu newli creat thread initi mark daemon thread thread creat current mark daemon thread chang thread daemon group thread group null secur manag group determin secur manag securitymanag getthreadgroup return null group set current thread thread group target object run invok thread start null thread run invok name name thread
Thread::Thread alloc Thread::Thread object target run object specifi name name belong thread group refer group specifi stack size constructor ident fact allow thread stack size specifi stack size approxim number byte address space virtual machin alloc thread stack effect stacksiz paramet platform depend platform specifi higher valu stacksiz paramet allow thread achiev greater recurs depth throw similar specifi lower valu allow greater number thread exist concurr throw intern error detail relationship valu stacksiz paramet maximum recurs depth concurr level platform depend platform valu stacksiz paramet effect whatsoev virtual machin free treat stacksiz paramet suggest specifi valu unreason low platform virtual machin instead use platform specif minimum valu specifi valu unreason virtual machin instead use platform specif maximum virtual machin free specifi valu see fit ignor complet specifi valu zero stacksiz paramet caus constructor behav exact thread threadgroup Runnable::Runnable String::String constructor due platform depend natur behavior constructor extrem care exercis use thread stack size necessari perform given comput vari jre implement light variat care tune stack size paramet requir tune repeat jre implement run implement note platform implement encourag document implement behavior respect stacksiz paramet group thread group null secur manag group determin secur manag securitymanag getthreadgroup return null group set current thread thread group target object run invok thread start null thread run invok name name thread stacksiz desir stack size thread zero indic paramet ignor
Thread::start caus thread begin execut virtual machin call run thread result thread run concurr current thread return call start thread execut run legal start thread particular thread restart complet execut
Thread::run thread construct use separ Runnable::Runnable run object Runnable::Runnable object run call return subclass Thread::Thread overrid
Thread::exit call system give Thread::Thread chanc clean actual exit
Thread::isInterrupted test Thread::Thread interrupt interrupt state reset base valu clearinterrupt pass
Thread::isAlive test thread aliv thread aliv start die thread aliv fals
Thread::setPriority chang prioriti thread first checkaccess thread call argument result throw SecurityException::SecurityException prioriti thread set smaller specifi newprior maximum permit prioriti thread thread group newprior prioriti set thread
Thread::getPriority return thread prioriti thread prioriti
Thread::setName chang name thread equal argument name first checkaccess thread call argument result throw SecurityException::SecurityException name name thread
Thread::getName return thread name thread name
Thread::getThreadGroup return thread group thread belong return null thread die stop thread thread group
Thread::activeCount return estim number activ thread current thread subgroup recurs iter subgroup current thread thread group valu return estim number thread chang dynam travers intern data structur affect presenc system thread intend primarili debug monitor purpos estim number activ thread current thread thread group thread group current thread thread group ancestor
Thread::join wait milli millisecond thread die timeout mean wait forev implement use loop wait call condit isal thread termin notifyal invok recommend applic use wait notifi Object::notifyAll Thread::Thread instanc milli time wait millisecond
Thread::join wait milli millisecond nano nanosecond thread die implement use loop wait call condit isal thread termin notifyal invok recommend applic use wait notifi Object::notifyAll Thread::Thread instanc milli time wait millisecond nano 999999 addit nanosecond wait
Thread::setDaemon mark thread thread user thread virtual machin exit thread run daemon thread invok thread start mark thread daemon thread
Thread::isDaemon test thread daemon thread thread daemon thread fals
Thread::getContextClassLoader return context ClassLoader::ClassLoader Thread::Thread context ClassLoader::ClassLoader creator thread use run thread load resourc default ClassLoader::ClassLoader context parent Thread::Thread context ClassLoader::ClassLoader primordi thread typic set loader load secur manag invok loader null ancestor context loader invok secur manag getclassload permiss verifi retriev context loader permit context ClassLoader::ClassLoader Thread::Thread null indic system loader bootstrap loader
Thread::setContextClassLoader set context ClassLoader::ClassLoader Thread::Thread context ClassLoader::ClassLoader set thread creat allow creator thread provid appropri loader Thread::getContextClassLoader run thread load resourc secur manag invok Thread::setContextClassLoader permiss see set context ClassLoader::ClassLoader permit cl context ClassLoader::ClassLoader Thread::Thread null indic system loader bootstrap loader
Thread::getId return identifi Thread::Thread thread posit number generat thread creat thread uniqu remain unchang lifetim thread termin thread reus thread
Thread::State return identifi Thread::Thread thread posit number generat thread creat thread uniqu remain unchang lifetim thread termin thread reus thread thread state thread state thread start state thread execut virtual machin state thread block wait monitor lock state thread wait indefinit thread perform particular action state thread wait thread perform action specifi wait time state thread exit state thread state given point time state virtual machin state reflect oper system thread state
Thread::State::NEW Thread::Thread state thread start
Thread::State::RUNNABLE Thread::Thread state runnabl thread thread runnabl state execut virtual machin wait resourc oper system processor
Thread::State::BLOCKED Thread::Thread state thread block wait monitor lock thread block state wait monitor lock enter synchron block reenter synchron block call
Thread::State::WAITING Thread::Thread state wait thread thread wait state due call timeout timeout thread wait state wait thread perform particular action exampl thread call object wait object wait thread call object notifi object notifyal object thread call thread join wait specifi thread termin
Thread::State::TIMED wait Thread::Thread state wait thread specifi wait time thread time wait state due call specifi posit wait time timeout timeout
Thread::State::TERMINATED Thread::Thread state termin thread thread complet execut
Thread::getState return state thread design use monitor system state synchron control thread state
Thread::uncaughtException Method::Method invok given thread termin due given uncaught thrown ignor virtual machin thread
Thread::setDefaultUncaughtExceptionHandler Set::Set default handler invok thread abrupt termin due uncaught handler defin thread uncaught handl control first thread thread object final default uncaught handler thread explicit uncaught handler set thread thread group includ parent thread group uncaughtexcept default handler uncaughtexcept invok set default uncaught handler chang uncaught handl log specif devic file thread accept quot default quot behavior system note default uncaught handler defer thread threadgroup object caus infinit recurs eh object use default uncaught handler null default handler
Thread::setUncaughtExceptionHandler Set::Set handler invok thread abrupt termin due uncaught thread take full control respond uncaught uncaught handler explicit set handler set thread threadgroup object act handler eh object use thread uncaught handler null thread explicit handler
Statement::Statement Statement::Statement object repres primit statement singl appli target set argument setfoo note where exampl use name denot target argument statement object requir name space construct valu statement object associ name environ set valu target array argument valu
Statement::Statement creat object specifi target object invok specifi name array argument target methodnam valu null attempt execut Expression::Expression result NullPointerException::NullPointerException argument valu null empti array valu argument properti target target object statement methodnam name invok specifi target argument array argument invok specifi
Statement::execute execut find name methodnam properti invok target target defin given name implement choos specif use algorithm specifi languag specif 15 11 dynam target argument place compil time type convers primit valu associ wrapper handl intern type handl case static call use object target reserv name call constructor defin static Constructor::Constructor invoc typic consid Expression::Expression Statement::Statement return valu name get set defin interfac appli array instanc map static name Array::Array
EventSetDescriptor::EventSetDescriptor creat eventsetdescriptor scratch use string name sourceclass fire event eventsetnam programmat name event set note normal start lower case charact listenertyp Class::Class target interfac event get deliv listenermethodnam name get call event get deliv target listen interfac addlistenermethodnam name event sourc regist event listen object removelistenermethodnam name event sourc de regist event listen object
EventSetDescriptor::EventSetDescriptor constructor creat EventSetDescriptor::EventSetDescriptor scratch use string name sourceclass fire event eventsetnam programmat name event set note normal start lower case charact listenertyp Class::Class target interfac event get deliv listenermethodnam name get call event get deliv target listen interfac addlistenermethodnam name event sourc regist event listen object removelistenermethodnam name event sourc de regist event listen object EventHandler::getListenerMethodName event sourc access array event listen object
EventSetDescriptor::EventSetDescriptor creat eventsetdescriptor scratch use lang reflect lang object eventsetnam programmat name event set listenertyp Class::Class listen interfac listenermethod array Method::Method object describ event handl target listen addlistenermethod event sourc regist event listen object removelistenermethod event sourc de regist event listen object
EventSetDescriptor::EventSetDescriptor constructor creat EventSetDescriptor::EventSetDescriptor scratch use lang reflect lang object eventsetnam programmat name event set listenertyp Class::Class listen interfac listenermethod array Method::Method object describ event handl target listen addlistenermethod event sourc regist event listen object removelistenermethod event sourc de regist event listen object getlistenermethod event sourc access array event listen object
EventSetDescriptor::EventSetDescriptor creat eventsetdescriptor scratch use lang reflect methoddescriptor lang object eventsetnam programmat name event set listenertyp Class::Class listen interfac listenermethoddescriptor array MethodDescriptor::MethodDescriptor object describ event handl target listen addlistenermethod event sourc regist event listen object removelistenermethod event sourc de regist event listen object
EventSetDescriptor::getListenerType get object target interfac Class::Class object target interfac get invok event fire
Beans::instantiate instanti javabean javabean cls loader creat bean null system loader beannam name bean loader exampl sun beanbox foobah
Beans::instantiate instanti javabean javabean cls loader creat bean null system loader beannam name bean loader exampl sun beanbox foobah beancontext BeanContext::BeanContext nest bean
Beans::getInstanceOf given bean obtain object repres specifi type view sourc object result object object request target view isn avail given bean return Beans::Beans hook allow addit flexibl bean behaviour futur object repres specifi type view sourc object bean Object::Object want obtain view targettyp type view get
ObjectInputStreamWithLoader::ObjectInputStreamWithLoader indic run environ where gui interact avail note secur check avail exampl untrust applet specif secur manag SecurityManager::checkPropertiesAccess call result SecurityException::SecurityException Beans::isGuiAvailable gui interact avail subclass ObjectInputStream::ObjectInputStream deleg load exist ClassLoader::ClassLoader
ObjectInputStreamWithLoader::resolveClass use given ClassLoader::ClassLoader use system
BeansAppletContext::BeansAppletContext use given ClassLoader::ClassLoader use system Package::Package privat support provid default AppletContext::AppletContext bean applet
BeansAppletStub::BeansAppletStub Package::Package privat support provid AppletStub::AppletStub bean applet
XMLEncoder::XMLEncoder XMLEncoder::XMLEncoder complementari altern ObjectOutputStream::ObjectOutputStream generat textual represent javabean ObjectOutputStream::ObjectOutputStream creat binari represent Serializable::Serializable object exampl fragment creat textual represent suppli javabean properti similar XMLEncoder::XMLEncoder exclus design purpos archiv graph javabean textual represent properti sourc file document written natur immun chang implement involv ObjectOutputStream::ObjectOutputStream continu recommend interprocess communic general purpos serial XMLEncoder::XMLEncoder provid default denot javabean repres xml document compli version xml specif utf charact encod unicod iso 10646 charact set xml document produc XMLEncoder::XMLEncoder portabl version resili depend privat implement sourc file exchang environ version vms vendor structur compact XMLEncoder::XMLEncoder use redund elimin algorithm intern default valu Beans::Beans properti written stream fault toler non structur error file caus damag file chang made archiv remain local reader report error continu load part document affect error exampl xml archiv contain user interfac compon swing toolkit xml syntax use convent element repres call object tag denot express valu argument enclos element tag denot statement execut result argument enclos element contain element use element argument tag name denot attribut xml standard idref attribut make refer previous express deal circular object graph attribut specifi target static constructor explicit valu fulli qualifi name element tag execut use outer context target target defin attribut String::String treat written lt string gt hello world lt string gt where charact string convert byte use utf charact encod object graph written use tag definit includ common data structur express concis default name refer written form lt gt javax swing jbutton lt gt instanc wrapper primit type written use name primit type tag exampl instanc Integer::Integer written lt int gt 123 lt int gt note XMLEncoder::XMLEncoder use reflect packag convers primit type associ wrapper handl intern XMLEncoder::XMLEncoder deal Object::Object element repres nullari name start get attribut replac properti attribut valu given remov get prefix decapit result element repres monad name start set attribut replac properti attribut valu given remov set prefix decapit result element repres name get take integ argument attribut replac index attribut valu valu first argument element repres name set take argument first integ attribut replac index attribut valu valu first argument refer array written use array tag length attribut specifi sub type array length respect want check articl swing connect
XMLEncoder::writeStatement record Statement::Statement Encoder::Encoder produc actual output stream flush invok context initi persist deleg oldstm statement written stream
BeanDescriptor::BeanDescriptor creat BeanDescriptor::BeanDescriptor bean doesn custom beanclass Class::Class object implement bean exampl sun bean ourbutton
BeanDescriptor::BeanDescriptor creat BeanDescriptor::BeanDescriptor bean custom beanclass Class::Class object implement bean exampl sun bean ourbutton customizerclass Class::Class object implement bean Customizer::Customizer exampl sun bean ourbuttoncustom
BeanDescriptor::getBeanClass get bean Class::Class object Class::Class object bean
BeanDescriptor::getCustomizerClass get Class::Class object bean custom Class::Class object bean custom null bean doesn custom
VetoableChangeListenerProxy::VetoableChangeListenerProxy Constructor::Constructor bind VetoableChangeListener::VetoableChangeListener specif properti propertynam name properti listen listen listen object
NameGenerator::capitalize return String::String capit first letter string
XMLDecoder::XMLDecoder XMLDecoder::XMLDecoder read xml document creat use XMLEncoder::XMLEncoder ObjectInputStream::ObjectInputStream exampl use fragment read first object defin xml document written XMLEncoder::XMLEncoder want check articl swing connect
XMLDecoder::XMLDecoder creat input stream read archiv creat XMLEncoder::XMLEncoder stream
XMLDecoder::XMLDecoder creat input stream read archiv creat XMLEncoder::XMLEncoder stream owner owner stream
XMLDecoder::XMLDecoder creat input stream read archiv creat XMLEncoder::XMLEncoder stream owner owner stream exceptionlisten handler stream null default listen
XMLDecoder::XMLDecoder creat input stream read archiv creat XMLEncoder::XMLEncoder stream null pass error result xmldecod useless owner owner stream null legal valu exceptionlisten handler stream null use default cl loader instanti object null indic default loader
XMLDecoder::XMLDecoder creat decod pars xml archiv creat xmlencod input sourc null thrown pars perform behavior similar behavior constructor use InputStream::InputStream paramet input sourc pars
XMLDecoder::XMLDecoder creat decod pars xml archiv creat xmlencod input sourc pars owner owner decod el handler parser null use default handler cl loader instanti object null use default loader
XMLDecoder::close close input stream associ stream
XMLDecoder::readObject read object input stream object read
PropertyEditorSupport::setValue Set::Set chang object edit valu target object edit note object modifi PropertyEditor::PropertyEditor PropertyEditor::PropertyEditor creat object hold modifi valu
PropertyEditorSupport::paintValue Paint::Paint represent valu given area screen estat note propertyeditor respons clip fit given rectangl PropertyEditor::PropertyEditor doesn honor paint request see ispaint silent noop gfx Graphics::Graphics object paint box Rectangle::Rectangle graphic object paint
PropertyEditorSupport::setAsText set properti valu pars given String::String rais lang illegalargumentexcept String::String bad format kind properti express text text string pars
PropertyChangeSupport::PropertyChangeSupport util bean support bound properti manag list listen dispatch use instanc member field bean deleg type work regist properti properti specifi name exampl PropertyChangeSupport::PropertyChangeSupport usag follow rule recommend laid javabean trade specif PropertyChangeSupport::PropertyChangeSupport instanc thread safe serializ serial save restor listen serializ non serializ listen skip serial
PropertyChangeSupport::PropertyChangeSupport construct PropertyChangeSupport::PropertyChangeSupport object sourcebean bean given sourc event
PropertyChangeSupport::addPropertyChangeListener add PropertyChangeListener::PropertyChangeListener listen list listen regist properti listen object ad call time ad listen null thrown action taken listen PropertyChangeListener::PropertyChangeListener ad
PropertyChangeSupport::getPropertyChangeListeners return array listen ad PropertyChangeSupport::PropertyChangeSupport object addpropertychangelisten listen ad name properti return array mixtur propertychangelisten PropertyChangeListenerProxy::PropertyChangeListenerProxy call interest distinguish listen test element see PropertyChangeListenerProxy::PropertyChangeListenerProxy perform cast examin paramet propertychangelisten ad empti array listen ad
PropertyChangeSupport::addPropertyChangeListener add PropertyChangeListener::PropertyChangeListener specif properti listen invok call firepropertychang name specif properti listen object ad properti listen invok number time ad properti propertynam listen null thrown action taken propertynam name properti listen listen PropertyChangeListener::PropertyChangeListener ad
PropertyChangeSupport::firePropertyChange report bound properti updat listen regist track updat properti properti specifi name event fire old valu equal non null mere conveni wrapper general propertynam programmat name properti chang oldvalu old valu properti newvalu valu properti
PropertyChangeSupport::firePropertyChange report integ bound properti updat listen regist track updat properti properti specifi name event fire old valu equal mere conveni wrapper general propertynam programmat name properti chang oldvalu old valu properti newvalu valu properti
PropertyChangeSupport::firePropertyChange report boolean bound properti updat listen regist track updat properti properti specifi name event fire old valu equal mere conveni wrapper general propertynam programmat name properti chang oldvalu old valu properti newvalu valu properti
PropertyChangeSupport::firePropertyChange fire properti chang event listen regist track updat properti properti specifi name event fire given event old valu equal non null event PropertyChangeEvent::PropertyChangeEvent fire
PropertyChangeListenerProxy::PropertyChangeListenerProxy Constructor::Constructor bind PropertyChangeListener::PropertyChangeListener specif properti propertynam name properti listen listen listen object
ThreadGroupContext::getContext return appropri ThreadGroupContext::ThreadGroupContext caller determin ThreadGroup::ThreadGroup depend context
MethodDescriptor::MethodDescriptor construct MethodDescriptor::MethodDescriptor Method::Method low level
MethodDescriptor::MethodDescriptor construct MethodDescriptor::MethodDescriptor Method::Method descript paramet low level parameterdescriptor descript paramet
Customizer::setObject Set::Set object custom call Customizer::Customizer ad parent awt contain bean object custom
PropertyEditorManager::findEditor locat valu editor given target type targettyp Class::Class object type edit editor object given target result null suitabl editor found
PropertyDescriptor::PropertyDescriptor construct PropertyDescriptor::PropertyDescriptor properti follow standard convent getfoo setfoo accessor thus argument name fred assum writer setfr reader getfr isfr boolean properti note properti name start lower case charact capit name propertynam programmat name properti beanclass Class::Class object target bean exampl sun bean ourbutton
PropertyDescriptor::PropertyDescriptor constructor take name properti name read write properti propertynam programmat name properti beanclass Class::Class object target bean exampl sun bean ourbutton readmethodnam name read properti valu null properti write writemethodnam name write properti valu null properti read
PropertyDescriptor::PropertyDescriptor constructor take name properti Method::Method object read write properti propertynam programmat name properti readmethod read properti valu null properti write writemethod write properti valu null properti read
PropertyDescriptor::getPropertyType return type info properti note Class::Class object describ primit type int type return read paramet type write return null type index properti support non index access Class::Class object repres type info null type determin
PropertyDescriptor::setPropertyEditorClass normal propertyeditor found use PropertyEditorManager::PropertyEditorManager reason want associ particular PropertyEditor::PropertyEditor given properti propertyeditorclass Class::Class desir PropertyEditor::PropertyEditor
PropertyDescriptor::getPropertyEditorClass get explicit PropertyEditor::PropertyEditor Class::Class regist properti explicit PropertyEditor::PropertyEditor Class::Class regist properti normal return null indic editor regist PropertyEditorManager::PropertyEditorManager locat suitabl PropertyEditor::PropertyEditor
PropertyDescriptor::createPropertyEditor construct instanc properti editor use current properti editor properti editor constructor take Object::Object argument invok use bean paramet argument default constructor invok bean sourc object properti editor instanc null properti editor defin creat
PropertyDescriptor::compareMethods Package::Package privat helper descriptorequ first compar compar boolean indic equival
IndexedPropertyDescriptor::IndexedPropertyDescriptor constructor construct IndexedPropertyDescriptor::IndexedPropertyDescriptor properti follow standard convent getfoo setfoo accessor index access array access thus argument name fred assum index reader getfr non index array reader call getfr index writer setfr final non index writer setfr propertynam programmat name properti beanclass Class::Class object target bean
IndexedPropertyDescriptor::IndexedPropertyDescriptor constructor take name properti name read write properti index non index propertynam programmat name properti beanclass Class::Class object target bean readmethodnam name read properti valu array null properti write index writemethodnam name write properti valu array null properti read index indexedreadmethodnam name read index properti valu null properti write indexedwritemethodnam name write index properti valu null properti read
IndexedPropertyDescriptor::IndexedPropertyDescriptor constructor take name properti Method::Method object read write properti propertynam programmat name properti readmethod read properti valu array null properti write index writemethod write properti valu array null properti read index indexedreadmethod read index properti valu null properti write indexedwritemethod write index properti valu null properti read
IndexedPropertyDescriptor::getIndexedPropertyType return type info index properti note Class::Class object describ primit type int type return index read paramet type index write Class::Class object repres type info null type determin
ParameterDescriptor::ParameterDescriptor Package::Package privat dup constructor isol object chang old object
IntrospectionException::IntrospectionException thrown happen introspect typic caus includ abl map string name Class::Class object abl resolv string name specifi name wrong type signatur intend use
PropertyEditor::PropertyEditor PropertyEditor::PropertyEditor provid support gui want allow user edit properti valu given type PropertyEditor::PropertyEditor support varieti kind display updat properti valu propertyeditor support subset option avail propertyeditor support getastext setastext support say paintvalu getcustomeditor complex type unabl support getastext setastext instead support paintvalu getcustomeditor propertyeditor support display style thus support ispaint return non null String::String gettag return non null valu getastext simpli return non null String::String getastext properti editor support call setvalu argument object type correspond propertyeditor addit properti editor support custom editor support setastext PropertyEditor::PropertyEditor null constructor
PropertyEditor::setValue Set::Set chang object edit primit type int wrap correspond object type lang integ valu target object edit note object modifi PropertyEditor::PropertyEditor PropertyEditor::PropertyEditor creat object hold modifi valu
PropertyEditor::paintValue Paint::Paint represent valu given area screen estat note propertyeditor respons clip fit given rectangl PropertyEditor::PropertyEditor doesn honor paint request see ispaint silent noop given Graphics::Graphics object default font color parent contain PropertyEditor::PropertyEditor chang graphic attribut font color doesn restor old valu gfx Graphics::Graphics object paint box Rectangle::Rectangle graphic object paint
PropertyEditor::setAsText Set::Set properti valu pars given String::String rais lang illegalargumentexcept String::String bad format kind properti express text text string pars
Introspector::flushCaches flush introspector intern cach normal requir normal advanc tool updat exist Class::Class object place make Introspector::Introspector analyz exist Class::Class object
Introspector::flushFromCaches flush introspector intern cach given normal requir normal advanc tool updat exist Class::Class object place make Introspector::Introspector analyz exist Class::Class object note direct state associ target Class::Class object flush flush state Class::Class object name flush state relat Class::Class object subclass state includ indirect obtain target Class::Class object clz Class::Class object flush
Introspector::findExplicitBeanInfo look explicit BeanInfo::BeanInfo correspond Class::Class first look exist packag Class::Class defin check see BeanInfo::BeanInfo final BeanInfo::BeanInfo search path prepend search beanclass type bean instanc explicit BeanInfo::BeanInfo null isn found
Introspector::findMethod find target methodnam specif paramet list given contructor EventSetDescriptor::EventSetDescriptor PropertyDescriptor::PropertyDescriptor IndexedPropertyDescriptor::IndexedPropertyDescriptor cls Class::Class object retriev methodnam Attributes::Name argcount Number::Number argument desir arg Array::Array argument type null found
Introspector::isSubclass return equival subclass extend implement note tht Class::Class object repres interfac
Introspector::instantiate creat instanc name first classload sibl system classload loader current Thread::Thread
GenericBeanInfo::GenericBeanInfo creat instanc name first classload sibl system classload loader current Thread::Thread Package::Package privat implement support introspector intern use placehold descriptor
DefaultPersistenceDelegate::DefaultPersistenceDelegate creat default persist deleg constructor argument valu properti name specifi constructorpropertynam constructor argument creat evalu properti name order suppli use specifi singl prefer constructor use serial particular type state name properti make constructor argument exampl Font::Font defin nullari constructor handl persist deleg constructorpropertynam properti name argument constructor
BeanContextServiceAvailableEvent::BeanContextServiceAvailableEvent construct beancontextavailableserviceev bcs context servic becom avail sc Class::Class refer newli avail servic
BeanContextServiceAvailableEvent::getServiceClass get servic subject notif Class::Class refer newli avail servic
BeanContextServices::getCurrentServiceClasses get current avail servic context Iterator::Iterator consist current avail servic
BeanContextSupport::BeanContextSupport construct BeanContextSupport::BeanContextSupport instanc peer peer beancontext suppli implement null object peer lcle current Locale::Locale BeanContext::BeanContext lcle null default local assign beancontext instanc dtime initi state design mode fals runtim visibl initi visibl
BeanContextSupport::BeanContextSupport creat instanc use specifi Locale::Locale design mode peer peer beancontext suppli implement null object peer lcle current Locale::Locale beancontext lcle null default local assign beancontext instanc dtime initi state design mode fals runtim
BeanContextSupport::BeanContextSupport creat instanc use specifi local peer peer BeanContext::BeanContext suppli implement null object peer lcle current Locale::Locale beancontext lcle null default local assign beancontext instanc
BeanContextSupport::contains determin specifi object current child beancontext Object::Object question object child
BeanContextSupport::containsKey determin specifi object current child beancontext Object::Object question object child
BeanContextSupport::remove intern remov remov caus unexpect setbeancontext remov invoc targetchild javabean BeanContext::BeanContext Object::Object remov callchildsetbc indic child notifi longer nest beancontext remov
BeanContextSupport::getResourceAsStream name name resourc request bcc child object make request request resourc InputStream::InputStream
BeanContextSupport::getResource name name resourc request bcc child object make request request resourc InputStream::InputStream
BeanContextSupport::getLocale get local beancontext current Locale::Locale beancontext
BeanContextSupport::bcsPreDeserializationHook call readobject ObjectInputStream::defaultReadObject prior deseri children overridden subclass perform custom deseri state prior superclass deseri children subclass replac implement readobject oi ObjectInputStream::ObjectInputStream use deseri
BeanContextSupport::deserialize readobject deseri collect oi ObjectInputStream::ObjectInputStream use coll Collection::Collection
BeanContextSupport::readChildren instanc deleg implement BeanContext::BeanContext protocol subprotocol exist chicken egg deseri oi ObjectInputStream::ObjectInputStream use
BeanContextServiceProvider::BeanContextServiceProvider primari function BeanContext::BeanContext act rendezv javabean beancontextserviceprovid javabean nest BeanContext::BeanContext ask BeanContext::BeanContext provid instanc servic base refer Class::Class object repres servic servic regist context nest context case where context deleg context satisfi servic request BeanContextServiceProvider::BeanContextServiceProvider associ servic ask provid instanc servic servcieprovid return instanc construct instanc request
BeanContextProxy::BeanContextProxy interfac implement javabean BeanContextChild::BeanContextChild associ implement interfac subinterfac thereof BeanContextChild::BeanContextChild deleg exampl subclass awt contain BeanContext::BeanContext associ Component::Component children Container::Container contain Object::Object implement interfac BeanContextChild::BeanContextChild interfac subinterfac thereof mutual exclus caller interfac examin return type order obtain particular subinterfac BeanContextChild::BeanContextChild follow BeanContextChild::BeanContextChild bcc getbeancontextproxi bcc instanceof BeanContext::BeanContext BeanContextChild::BeanContextChild bcc getbeancontextproxi BeanContext::BeanContext bc null bc beancontext bcc catch ClassCastException::ClassCastException cce cast fail bcc instanceof BeanContext::BeanContext return valu constant lifetim implement instanc
BeanContextServiceRevokedEvent::getServiceClass get servic subject notif Class::Class refer servic revok
BeanContextServicesSupport::BeanContextServicesSupport construct BeanContextServicesSupport::BeanContextServicesSupport instanc peer peer BeanContext::BeanContext suppli implement null object peer lcle current Locale::Locale BeanContext::BeanContext dtime initi state design mode fals runtim visibl initi visibl
BeanContextServicesSupport::BeanContextServicesSupport creat instanc use specifi Locale::Locale design mode peer peer BeanContext::BeanContext suppli implement null object peer lcle current Locale::Locale BeanContext::BeanContext dtime initi state design mode fals runtim
BeanContextServicesSupport::BeanContextServicesSupport creat instanc use specifi local peer peer BeanContext::BeanContext suppli implement null object peer lcle current Locale::Locale BeanContext::BeanContext
BeanContext::getResourceAsStream analag lang classload getresourceasstream allow BeanContext::BeanContext implement interpos behavior child compon ClassLoader::ClassLoader name resourc name bcc specifi child InputStream::InputStream read resourc null resourc found
BeanContext::getResource analag lang classload getresourc allow BeanContext::BeanContext implement interpos behavior child compon ClassLoader::ClassLoader name resourc name bcc specifi child URL::URL name resourc specifi child
PropertyChangeEvent::PropertyChangeEvent propertychang event get deliv bean chang bound constrain properti PropertyChangeEvent::PropertyChangeEvent object sent argument PropertyChangeListener::PropertyChangeListener VetoableChangeListener::VetoableChangeListener normal propertychangeev accompani name old valu chang properti valu primit type int boolean wrap correspond lang Object::Object type Integer::Integer Boolean::Boolean null valu old valu valu known event sourc send null object name indic arbitrari set properti chang case old valu null
PropertyChangeEvent::getPropertyName get programmat name properti chang programmat name properti chang null multipl properti chang
PropertyChangeEvent::getNewValue get valu properti express Object::Object valu properti express Object::Object null multipl properti chang
PropertyChangeEvent::getOldValue get old valu properti express Object::Object old valu properti express Object::Object null multipl properti chang
Ser::Ser Constructor::Constructor deseri
Ser::Ser Constructor::Constructor deseri
IsoChronology::IsoChronology iso calendar system chronolog defin rule iso calendar system calendar system base iso 8601 standard de facto world calendar field defin follow era era current Era::Era ce current Era::Era bce year era year era prolept year current ce era bce era iso epoch year increas upward time goe backward prolept year prolept year year era current era previous era year zero negat valu month year 12 month iso year number 12 day month 28 31 day iso month number 31 month 11 30 day month 10 12 31 day Month::Month 28 day 29 leap year day year 365 day standard iso year 366 leap year day number 365 366 leap year leap year occur year where year divisbl 100 divisbl 400 immut thread safe
IsoChronology::getCalendarType get calendar type calendar system iso8601 calendar type identifi defin unicod Locale::Locale data markup languag ldml specif lookup Chronology::Chronology use part local access key ca calendar system type iso8601
IsoChronology::zonedDateTime obtain iso zone date time chronolog Instant::Instant equival instant instant creat date time null zone time zone null zone date time null
IsoChronology::resolveDate resolv pars ChronoField::ChronoField valu date pars TemporalField::TemporalField implement resolv use resolv field contrast ChronoField::ChronoField defin field mean relat chronolog ChronoField::ChronoField date field resolv context specif chronolog ChronoField::ChronoField instanc iso calendar system resolv follow epoch day convert LocalDate::LocalDate date field cross check date prolept month split year month year mode strict smart field valid year era era combin form year lenient mode year era rang valid smart strict mode era valid rang mode year era mode smart lenient current era ce ad assum strict mode era assum year era untouch era untouch year month year day month combin form LocalDate::LocalDate mode year valid mode smart strict month day valid day valid 31 mode lenient date combin manner equival creat date first januari request year ad differ month differ day mode smart day month greater maximum year month day month adjust last day month mode strict field form valid date year day year combin form LocalDate::LocalDate mode year valid mode lenient date combin manner equival creat date first januari request year ad differ day mode smart strict field form valid date year month year align week month align day week month combin form LocalDate::LocalDate mode year valid mode lenient date combin manner equival creat date first januari request year ad differ month differ week day mode smart strict field valid outer rang date combin manner equival creat date first day request year month ad amount week day reach valu mode strict date addit valid check day week adjust chang month year month year align week month day week combin form LocalDate::LocalDate approach describ year month week align day week month day week adjust match day week year month week handl year align week year align day week year combin form LocalDate::LocalDate mode year valid mode lenient date combin manner equival creat date first januari request year ad differ week day mode smart strict field valid outer rang date combin manner equival creat date first day request year ad amount week day reach valu mode strict date addit valid check day week adjust chang year year align week year day week combin form LocalDate::LocalDate approach describ year week align day week year day week adjust match day week year week handl fieldvalu map field valu updat null resolverstyl request type resolv null resolv date null insuffici creat date
ChronoLocalDateImpl::ChronoLocalDateImpl date express term standard year month day calendar system applic seek handl date non iso calendar system exampl japanes minguo thai buddhist ChronoLocalDate::ChronoLocalDate built generic concept year month day calendar system repres express relationship field allow result date manipul note calendar system suitabl use exampl mayan calendar use system bear relat year month day design encourag use LocalDate::LocalDate major includ read write persist data store databas send date time network ChronoLocalDate::ChronoLocalDate instanc user interfac level deal local input output exampl ad calendar set calendar extens defin subclass repres date instanc implement Chronology::Chronology factori ChronoLocalDate::ChronoLocalDate subclass permit discoveri addit calendar type implement Chronology::Chronology regist Provider::Service implement Chronology::Chronology interfac meta inf servic file specif subclass function accord Chronology::Chronology descript provid abstract implement care ensur oper correct implement instanti final immut thread safe subclass Serializable::Serializable wherev ChronoLocalDate::ChronoLocalDate date time
ThaiBuddhistChronology::getCalendarType get calendar type calendar system buddhist calendar type identifi defin unicod Locale::Locale data markup languag ldml specif lookup Chronology::Chronology use part local access key ca calendar system type buddhist
JapaneseChronology::getCalendarType get calendar type calendar system japanes calendar type identifi defin unicod Locale::Locale data markup languag ldml specif lookup Chronology::Chronology use part local access key ca calendar system type japanes
Chronology::Chronology calendar system organ identifi date date time built iso calendar system chronolog oper scene repres general concept calendar system exampl japanes minguo thai buddhist calendar system oper share concept year month day link cycl earth sun moon earth share concept defin avail use Chronology::Chronology implement shown date object calendar system repres Chronology::Chronology instanc queri use constant ChronoField::ChronoField full discuss implic see general advic use known iso base LocalDate::LocalDate ChronoLocalDate::ChronoLocalDate Chronology::Chronology object typic use ChronoField::ChronoField base era year era month year day month model date requir Chronology::Chronology instanc repres total kind calendar system mayan practic term Chronology::Chronology instanc act factori allow instanc look identifi allow lookup local Chronology::Chronology instanc provid set creat ChronoLocalDate::ChronoLocalDate instanc date manipul specif date ad calendar set avail chronolog extend applic ad calendar system requir write implement Chronology::Chronology ChronoLocalDate::ChronoLocalDate Era::Era major logic specif calendar system ChronoLocalDate::ChronoLocalDate Chronology::Chronology subclass act factori permit discoveri addit chronolog file ad meta inf servic directori name time chrono chronolog list implement see ServiceLoader::ServiceLoader detail servic load lookup calendartyp system calendar found first follow calendar chronolog defin chronolog uniqu system chronolog repres calendar system defin cldr specif calendar type concaten cldr type applic cldr variant interfac implement care ensur oper correct implement instanti final immut thread safe subclass Serializable::Serializable wherev
Chronology::ofLocale obtain instanc Chronology::Chronology local return Chronology::Chronology base specifi local typic return IsoChronology::IsoChronology calendar system return explicit select local provid access rang use local includ languag region en gb great britain Locale::Locale support extens mechan identifi calendar system mechan form key valu pair where calendar system key ca exampl local en jp ca japanes repres languag japan japanes calendar system find desir calendar system manner equival pass ca ca key IsoChronology::IsoChronology return note behavior differ older receiv local th th return buddhistcalendar contrast return IsoChronology::IsoChronology pass local th th ca buddhist result thai buddhist calendar system therefor recommend approach go forward thai calendar system local similar simpler situat occur japanes calendar system local jp jp jp previous access calendar thai local ja jp jp automat convert Locale::Locale modern recommend form ja jp ca japanes thus differ behavior calendar getinst local local local use obtain calendar system null calendar system associ local null
Chronology::getCalendarType get calendar type calendar system calendar type identifi defin cldr unicod Locale::Locale data markup languag ldml specif uniqu identif calendar getcalendartyp concaten cldr calendar type variant applic append separ calendar type lookup Chronology::Chronology use calendar system type null calendar defin cldr ldml
Chronology::localDateTime obtain local date time chronolog tempor object obtain date time chronolog base specifi tempor TemporalAccessor::TemporalAccessor repres arbitrari set date time factori convert instanc ChronoLocalDateTime::ChronoLocalDateTime convers extract combin ChronoLocalDate::ChronoLocalDate LocalTime::LocalTime tempor object implement permit perform optim access field equival relev object result use chronolog match signatur function interfac allow queri refer aChronology::localDateTime tempor tempor object convert null local date time chronolog null
Chronology::zonedDateTime obtain ChronoZonedDateTime::ChronoZonedDateTime chronolog tempor object obtain zone date time chronolog base specifi tempor TemporalAccessor::TemporalAccessor repres arbitrari set date time factori convert instanc ChronoZonedDateTime::ChronoZonedDateTime convers first obtain ZoneId::ZoneId tempor object fall ZoneOffset::ZoneOffset necessari obtain Instant::Instant fall ChronoLocalDateTime::ChronoLocalDateTime necessari result combin ZoneId::ZoneId ZoneOffset::ZoneOffset Instant::Instant ChronoLocalDateTime::ChronoLocalDateTime implement permit perform optim access field equival relev object result use chronolog match signatur function interfac allow queri refer aChronology::zonedDateTime tempor tempor object convert null zone date time chronolog null
Chronology::zonedDateTime obtain ChronoZonedDateTime::ChronoZonedDateTime chronolog Instant::Instant obtain zone date time instant specifi instant instant creat date time null zone time zone null zone date time null
Chronology::toString output chronolog String::String format includ entir state object string represent chronolog null
ChronoLocalDate::ChronoLocalDate date time day time zone arbitrari chronolog intend advanc global use case applic declar signatur field variabl interfac ChronoLocalDate::ChronoLocalDate abstract represent date where Chronology::Chronology chronolog calendar system pluggabl date defin term field express where common implement defin chronolog defin calendar system oper mean standard field use interfac design encourag use LocalDate::LocalDate interfac case where deal multipl calendar system rational explor document primari use case where interfac where generic type paramet fulli defin specif chronolog case assumpt chronolog known develop time specifi chronolog defin generic type paramet unknown develop time rest discuss appli emphas point declar signatur field variabl interfac type initi seem sensibl global wrong approach consid wide architectur decis choos use interfac oppos LocalDate::LocalDate architectur issu consid point consid use interfac applic use interfac oppos use LocalDate::LocalDate face signific higher probabl bug calendar system use known develop time key caus bug where develop appli assumpt day day knowledg iso calendar system intend deal arbitrari calendar system section outlin assumpt caus primari mechan reduc increas risk bug strong review process consid extra cost mainten lifetim interfac enforc immut implement implement note indic implement immut type system enforc declar accept ChronoLocalDate::ChronoLocalDate therefor pass poor malici written mutabl implement applic use interfac consid impact era LocalDate::LocalDate shield user concept era ensur getyear return prolept year decis ensur develop think LocalDate::LocalDate instanc consist field year month year day month contrast user interfac think date consist field era year era month year day month extra era field frequent forgotten vital import date arbitrari calendar system exampl japanes calendar system era repres reign emperor reign end start year era reset agre intern standard pass date system iso 8601 standard requir iso calendar system use interfac inevit lead requir pass date network compon boundari requir specif protocol format Long::Long term persist databas accept date iso 8601 calendar system relat julian gregorian pass date calendar system increas complic interact persist time pass ChronoLocalDate::ChronoLocalDate unnecessari discuss last section fals assumpt caus bug multi calendar system indic issu consid use manipul date arbitrari calendar system key issu queri day month assum valu 31 invalid calendar system 31 day month add 12 month date assum year ad invalid calendar system number month 13 coptic ethiop add month date assum month year valu increas wrap year invalid calendar system variabl number month year hebrew add month add month assum day month remain close origin valu invalid calendar system differ length longest month length shortest month exampl coptic ethiop 12 month 30 day month day add seven day assum week ad invalid calendar system week seven day french revolutionari assum year date1 greater year date2 date1 date2 invalid invalid calendar system refer year era especi untru japanes calendar system where year era restart reign emperor treat month year day month start year invalid calendar system start year month valu general manipul date queri date wide open bug calendar system unknown develop time whi essenti use interfac subject addit review whi architectur decis avoid interfac type correct use LocalDate::LocalDate instead primari altern use interfac follow declar signatur refer date term LocalDate::LocalDate store chronolog calendar system user profil lookup chronolog user local convert iso LocalDate::LocalDate user prefer calendar system print pars approach treat global calendar system local issu confin ui layer approach keep local issu platform discuss perform calcul date where rule calendar system pluggabl requir skill recommend fortun perform calcul date arbitrari calendar system extrem rare exampl unlik busi rule librari book rental scheme allow rental month where mean month depend user prefer calendar system key use case calcul date arbitrari calendar system produc month month calendar display user interact ui issu use interfac sole ui layer justifi part system where date manipul calendar system iso use case general specifi calendar system use exampl calcul islam hebrew holiday requir manipul date kind use case handl follow start iso LocalDate::LocalDate pass convert date altern calendar system use case known arbitrari perform calcul convert LocalDate::LocalDate develop write low level framework librari avoid interfac instead general purpos access interfac use read access requir use read write access requir interfac implement care ensur oper correct implement instanti final immut thread safe subclass Serializable::Serializable wherev addit calendar system ad system see detail
ChronoLocalDate::toString output date String::String output includ full local date format date null
AbstractChronology::toString output chronolog String::String use chronolog string represent chronolog null
ChronoZonedDateTime::toInstant convert date time Instant::Instant return Instant::Instant repres point time line date time calcul combin Instant::Instant repres instant null
ChronoZonedDateTime::toString output date time String::String output includ full zone date time string represent date time null
ThaiBuddhistDate::lengthOfMonth return length month repres date return length month day Month::Month length match iso calendar system length month day
HijrahDate::lengthOfMonth return length month repres date return length month day Month::Month length hijrah calendar system vari 29 30 day length month day
ChronoZonedDateTimeImpl::create obtain instanc Instant::Instant instant instant creat date time null zone time zone use valid null zone date time valid null
ChronoZonedDateTimeImpl::ChronoZonedDateTimeImpl Constructor::Constructor datetim date time null offset zone offset null zone zone null
ChronoPeriod::equals check period equal period includ chronolog compar period ensur type amount chronolog note mean period 15 month equal period Year::Year month obj object check null return fals equal period
ChronoPeriod::toString output period String::String output includ period amount chronolog string represent period null
MinguoDate::lengthOfMonth return length month repres date return length month day Month::Month length match iso calendar system length month day
ChronoLocalDateTimeImpl::ChronoLocalDateTimeImpl Constructor::Constructor date date part date time null time time part date time null
HijrahChronology::HijrahChronology hijrah calendar lunar calendar support islam calendar HijrahChronology::HijrahChronology follow rule hijrah calendar system hijrah calendar variant base differ moon determin occur where observ made variant length month comput algorithm astronom data moon earth length month determin author sight moon algorithm base calendar calendar futur sight base calendar histor data sight avail length month 29 30 day ordinari year 354 day leap year 355 day cldr ldml identifi variant addit variant avail exampl select chronolog local use find Chronology::Chronology base Locale::Locale support bcp 47 extens mechan request specif calendar ca exampl immut thread safe hijrah variant configur individu variant defin properti resourc defin calendar type start calendar align iso calendar length month rang year variant identifi calendar properti file properti prefix calendar hijrah hijrah properti resourc set properti describ calendar syntax defin util properti load reader
HijrahChronology::getCalendarType get calendar type islam calendar calendar type identifi defin unicod Locale::Locale data markup languag ldml specif lookup Chronology::Chronology use calendar system type non null calendar standard type null
HijrahChronology::epochMonthToYear return year comput epochmonth epochmonth epochmonth hijrah Year::Year
HijrahChronology::yearToEpochMonth return epochmonth hijrah Year::Year year hijrahyear epochmonth begin year
HijrahChronology::epochMonthToMonth return hijrah month epochmonth epochmonth epochmonth month hijrah Year::Year
HijrahChronology::readConfigProperties return configur properti resourc default locat variant configur resourc resourc name calendar properti resourc Properties::Properties contain properti read resourc
HijrahChronology::createEpochMonths convert map year month length rang minyear maxyear linear contigu array epochday index hijrahmonth comput year month offset minyear valu entri epochday correspond first day month minyear minimum year data maxyear maximum year data year Map::Map year array 12 month length array epochday month min max
JapaneseDate::lengthOfMonth return length month repres date return length month day Month::Month length match iso calendar system length month day
ChronoLocalDateTime::ChronoLocalDateTime date time time zone arbitrari chronolog intend advanc global use case applic declar signatur field variabl interfac ChronoLocalDateTime::ChronoLocalDateTime abstract represent local date time where Chronology::Chronology chronolog calendar system pluggabl date time defin term field express where common implement defin chronolog defin calendar system oper mean standard field use interfac design encourag use LocalDateTime::LocalDateTime interfac case where deal multipl calendar system rational explor detail ensur discuss ChronoLocalDate::ChronoLocalDate read understood use interfac interfac implement care ensur oper correct implement instanti final immut thread safe subclass Serializable::Serializable wherev concret type date date time
ChronoLocalDateTime::toInstant convert date time Instant::Instant combin local date time specifi offset form Instant::Instant default implement calcul epoch day date day time offset offset use convers null Instant::Instant repres instant null
ChronoLocalDateTime::toString output date time String::String output includ full local date time string represent date time null
MinguoChronology::getCalendarType get calendar type calendar system roc calendar type identifi defin unicod Locale::Locale data markup languag ldml specif lookup Chronology::Chronology use part local access key ca calendar system type roc
DateTimeException::DateTimeException Exception::Exception indic calcul date time indic creat queri manipul date time object intend use singl thread
ZoneRegion::ZoneRegion Constructor::Constructor time zone null rule rule null lazi lookup
OffsetDateTime::OffsetDateTime date time offset utc greenwich iso 8601 calendar system 2007 12 03t101530 0100 OffsetDateTime::OffsetDateTime immut represent date time offset store date time field precis nanosecond offset utc greenwich exampl valu 2nd octob 2007 1345 30 123456789 0200 store OffsetDateTime::OffsetDateTime OffsetDateTime::OffsetDateTime store instant time line nanosecond precis Instant::Instant simplest simpli repres instant OffsetDateTime::OffsetDateTime add instant offset utc greenwich allow local date time obtain ZonedDateTime::ZonedDateTime add full time zone rule intend ZonedDateTime::ZonedDateTime Instant::Instant model data simpler applic model date time concept detail communic databas network protocol use ident sensit oper includ refer equal ident hash synchron instanc OffsetDateTime::OffsetDateTime unpredict result avoid equal comparison immut thread safe
OffsetDateTime::of obtain instanc OffsetDateTime::OffsetDateTime year month day hour minut nanosecond offset creat offset date time seven specifi field exist primarili write test case non test typic use creat offset time LocalDateTime::LocalDateTime addit conveni variant equival factori take fewer argument reduc footprint year year repres min year max year month month year repres januari 12 decemb dayofmonth day month repres 31 hour hour day repres 23 minut minut hour repres 59 minut repres 59 nanoofsecond nano repres 999 999 999 offset zone offset null offset date time null
OffsetDateTime::ofInstant obtain instanc OffsetDateTime::OffsetDateTime Instant::Instant zone creat offset date time instant specifi find offset utc greenwich valid offset instant instant instant creat date time null zone time zone offset null offset date time null
OffsetDateTime::from obtain instanc OffsetDateTime::OffsetDateTime tempor object obtain offset date time base specifi tempor TemporalAccessor::TemporalAccessor repres arbitrari set date time factori convert instanc OffsetDateTime::OffsetDateTime convers first obtain ZoneOffset::ZoneOffset tempor object obtain LocalDateTime::LocalDateTime fall Instant::Instant necessari result combin ZoneOffset::ZoneOffset LocalDateTime::LocalDateTime Instant::Instant implement permit perform optim access field equival relev object match signatur function interfac allow queri refer OffsetDateTime::from tempor tempor object convert null offset date time null
OffsetDateTime::OffsetDateTime Constructor::Constructor datetim local date time null offset zone offset null
OffsetDateTime::withOffsetSameLocal return copi OffsetDateTime::OffsetDateTime specifi offset ensur result local date time return object LocalDateTime::LocalDateTime specifi ZoneOffset::ZoneOffset calcul perform exampl time repres 2007 12 03t1030 0200 offset specifi 0300 return 2007 12 03t1030 0300 take account differ offset adjust time field use instanc immut unaffect call offset zone offset chang null OffsetDateTime::OffsetDateTime base date time request offset null
OffsetDateTime::withOffsetSameInstant return copi OffsetDateTime::OffsetDateTime specifi offset ensur result instant return object specifi ZoneOffset::ZoneOffset LocalDateTime::LocalDateTime adjust differ offset result old object repres instant use find local time offset exampl time repres 2007 12 03t1030 0200 offset specifi 0300 return 2007 12 03t1130 0300 chang offset adjust local time use instanc immut unaffect call offset zone offset chang null OffsetDateTime::OffsetDateTime base date time request offset null
OffsetDateTime::toLocalDateTime get LocalDateTime::LocalDateTime part offset date time return LocalDateTime::LocalDateTime year month day time date time local date time part date time null
OffsetDateTime::toLocalDate get LocalDate::LocalDate part date time return LocalDate::LocalDate year month day date time date part date time null
OffsetDateTime::getMonth get month year field use Month::Month enum return enum month avoid confus int valu mean access primit int valu enum provid month year null
OffsetDateTime::getDayOfWeek get day week field enum DayOfWeek::DayOfWeek return enum day week avoid confus int valu mean access primit int valu enum provid addit obtain DayOfWeek::DayOfWeek includ textual name valu day week null
OffsetDateTime::toLocalTime get LocalTime::LocalTime part date time return LocalTime::LocalTime hour minut nanosecond date time time part date time null
OffsetDateTime::with return adjust copi date time return OffsetDateTime::OffsetDateTime base date time adjust adjust take place use specifi adjust strategi object read document adjust understand adjust made adjust simpli set field year field complex adjust set date last day month select common adjust includ find last day month wednesday Key::Key date time implement TemporalAdjuster::TemporalAdjuster interfac adjust respons handl case vari length month leap year exampl return date last day juli implement TemporalAdjuster::TemporalAdjuster thus chang date time offset result obtain invok specifi adjust pass argument instanc immut unaffect call adjust adjust use null OffsetDateTime::OffsetDateTime base adjust made null
OffsetDateTime::toInstant convert date time Instant::Instant return Instant::Instant repres point time line date time Instant::Instant repres instant null
OffsetDateTime::toString output date time String::String 2007 12 03t101530 0100 output iso 8601 format uuuu mm dd hhmmxxxxx uuuu mm dd hhmmssxxxxx uuuu mm dd hhmmss sssxxxxx uuuu mm dd hhmmss ssssssxxxxx uuuu mm dd hhmmss sssssssssxxxxx format shortest output full valu time where omit part impli zero string represent date time null
LocalDate::LocalDate date time zone iso 8601 calendar system 2007 12 03 LocalDate::LocalDate immut date time object repres date view year month day date field day year day week week year access exampl valu 2nd octob 2007 store LocalDate::LocalDate store repres time time zone instead descript date birthday repres instant time line addit offset time zone iso 8601 calendar system modern civil calendar system world equival prolept gregorian calendar system rule leap year appli time applic written iso 8601 rule entir suitabl make use histor date requir accur find iso 8601 approach unsuit use ident sensit oper includ refer equal ident hash synchron instanc LocalDate::LocalDate unpredict result avoid equal comparison immut thread safe
LocalDate::MIN minimum support LocalDate::LocalDate 999999999 01 01 date
LocalDate::MAX maximum support LocalDate::LocalDate 999999999 12 31 futur date
LocalDate::now obtain current date system clock default time zone queri default time zone obtain current date use prevent abil use altern clock test clock current date use system clock default time zone null
LocalDate::now obtain current date system clock specifi time zone queri obtain current date specifi time zone avoid depend default time zone use prevent abil use altern clock test clock zone zone use null current date use system clock null
LocalDate::now obtain current date specifi clock queri specifi clock obtain current date use allow use altern clock test altern clock introduc use clock clock use null current date null
LocalDate::of obtain instanc LocalDate::LocalDate year month day return LocalDate::LocalDate specifi year month day month day valid year month thrown year year repres min year max year month month year repres null dayofmonth day month repres 31 local date null
LocalDate::of obtain instanc LocalDate::LocalDate year month day return LocalDate::LocalDate specifi year month day month day valid year month thrown year year repres min year max year month month year repres januari 12 decemb dayofmonth day month repres 31 local date null
LocalDate::ofYearDay obtain instanc LocalDate::LocalDate year day year return LocalDate::LocalDate specifi year day year day year valid year thrown year year repres min year max year dayofyear day year repres 366 local date null
LocalDate::ofEpochDay obtain instanc LocalDate::LocalDate epoch day count return LocalDate::LocalDate specifi epoch day increment count day where day 1970 01 01 negat number repres earlier day epochday epoch day convert base epoch 1970 01 01 local date null
LocalDate::from obtain instanc LocalDate::LocalDate tempor object obtain local date base specifi tempor TemporalAccessor::TemporalAccessor repres arbitrari set date time factori convert instanc LocalDate::LocalDate convers use queri reli extract field match signatur function interfac allow queri refer LocalDate::from tempor tempor object convert null local date null
LocalDate::parse obtain instanc LocalDate::LocalDate text string 2007 12 03 string repres valid date pars use text text pars 2007 12 03 null pars local date null
LocalDate::parse obtain instanc LocalDate::LocalDate text string use specif formatt text pars use formatt return date text text pars null formatt formatt use null pars local date null
LocalDate::LocalDate Constructor::Constructor previous valid year year repres min year max year month month year repres null dayofmonth day month repres valid year month 31
LocalDate::getYear get year field return primit int valu year year return prolept get year obtain year era use get year era year min year max year
LocalDate::getMonth get month year field use Month::Month enum return enum month avoid confus int valu mean access primit int valu enum provid month year null
LocalDate::getDayOfMonth get day month field return primit int valu day month day month 31
LocalDate::getDayOfWeek get day week field enum DayOfWeek::DayOfWeek return enum day week avoid confus int valu mean access primit int valu enum provid addit obtain DayOfWeek::DayOfWeek includ textual name valu day week null
LocalDate::isLeapYear check year leap year accord iso prolept calendar system rule appli current rule leap year time line general year leap year divis remaind year divis 100 leap year year divis 400 exampl 1904 leap year divis 1900 leap year divis 100 2000 leap year divis 400 calcul prolept appli rule futur histor inaccur correct iso 8601 standard year leap fals
LocalDate::lengthOfMonth return length month repres date return length month day exampl date januari return 31 length month day
LocalDate::with return adjust copi date return LocalDate::LocalDate base date adjust adjust take place use specifi adjust strategi object read document adjust understand adjust made adjust simpli set field year field complex adjust set date last day month select common adjust includ find last day month wednesday Key::Key date time implement TemporalAdjuster::TemporalAdjuster interfac adjust respons handl case vari length month leap year exampl return date last day juli result obtain invok specifi adjust pass argument instanc immut unaffect call adjust adjust use null LocalDate::LocalDate base adjust made null
LocalDate::with return copi date specifi field set valu return LocalDate::LocalDate base valu specifi field chang chang support field year month day month set valu field support reason thrown case chang specifi field caus result date becom invalid chang month 31st januari februari make day month invalid case field respons resolv date typic choos previous valid date last valid day februari exampl field adjust implement support field behav follow day week return LocalDate::LocalDate specifi day week date adjust day forward backward boundari monday sunday week align day week month return LocalDate::LocalDate specifi align day week date adjust specifi month base align day week align week count first week given month start first day month caus date move day month align day week year return LocalDate::LocalDate specifi align day week date adjust specifi year base align day week align week count first week given year start first day year caus date move day year day month return LocalDate::LocalDate specifi day month month year unchang day month invalid year month DateTimeException::DateTimeException thrown day year return LocalDate::LocalDate specifi day year year unchang day year invalid year DateTimeException::DateTimeException thrown epoch day return LocalDate::LocalDate specifi epoch day complet replac date equival align week month return LocalDate::LocalDate specifi align week month align week count first week given month start first day month adjust move date week chunk match specifi week result day week date caus date move month align week year return LocalDate::LocalDate specifi align week year align week count first week given year start first day year adjust move date week chunk match specifi week result day week date caus date move year month year return LocalDate::LocalDate specifi month year year unchang day month unchang invalid month year case day month adjust maximum valid valu month year prolept month return LocalDate::LocalDate specifi prolept month day month unchang invalid month year case day month adjust maximum valid valu month year year era return LocalDate::LocalDate specifi year era era month unchang day month unchang invalid month year case day month adjust maximum valid valu month year year return LocalDate::LocalDate specifi year month unchang day month unchang invalid month year case day month adjust maximum valid valu month year era return LocalDate::LocalDate specifi era year era month unchang day month unchang invalid month year case day month adjust maximum valid valu month year case valu valid rang valu field DateTimeException::DateTimeException thrown ChronoField::ChronoField instanc throw UnsupportedTemporalTypeException::UnsupportedTemporalTypeException field ChronoField::ChronoField result obtain invok temporalfield adjustinto tempor pass argument case field determin adjust instant instanc immut unaffect call field field set result null newvalu valu field result LocalDate::LocalDate base specifi field set null
LocalDate::withYear return copi date year alter day month invalid year chang last valid day month instanc immut unaffect call year year set result min year max year LocalDate::LocalDate base date request year null
LocalDate::withMonth return copi date month year alter day month invalid year chang last valid day month instanc immut unaffect call month month year set result januari 12 decemb LocalDate::LocalDate base date request month null
LocalDate::withDayOfMonth return copi date day month alter result date invalid thrown instanc immut unaffect call dayofmonth day month set result 28 31 LocalDate::LocalDate base date request day null
LocalDate::withDayOfYear return copi date day year alter result date invalid thrown instanc immut unaffect call dayofyear day year set result 365 366 LocalDate::LocalDate base date request day null
LocalDate::plus return copi date specifi amount ad return LocalDate::LocalDate base specifi amount ad amount typic type implement interfac calcul deleg amount object call amount implement free implement addit wish typic call consult document amount implement determin success ad instanc immut unaffect call amounttoadd amount add null LocalDate::LocalDate base date addit made null
LocalDate::plus return copi date specifi amount ad return LocalDate::LocalDate base amount term unit ad add amount unit support reason thrown case ad amount caus result date becom invalid exampl ad month 31st januari result 31st februari case unit respons resolv date typic choos previous valid date last valid day februari exampl field addit implement support field behav follow day return LocalDate::LocalDate specifi number day ad equival week return LocalDate::LocalDate specifi number week ad equival use day week month return LocalDate::LocalDate specifi number month ad equival day month unchang invalid month year case day month adjust maximum valid valu month year year return LocalDate::LocalDate specifi number year ad equival day month unchang invalid month year case day month adjust maximum valid valu month year decad return LocalDate::LocalDate specifi number decad ad equival call amount multipli 10 day month unchang invalid month year case day month adjust maximum valid valu month year centuri return LocalDate::LocalDate specifi number centuri ad equival call amount multipli 100 day month unchang invalid month year case day month adjust maximum valid valu month year millennia return LocalDate::LocalDate specifi number millennia ad equival call amount multipli 000 day month unchang invalid month year case day month adjust maximum valid valu month year era return LocalDate::LocalDate specifi number era ad era support amount zero amount non zero year chang year era unchang day month unchang invalid month year case day month adjust maximum valid valu month year ChronoUnit::ChronoUnit instanc throw UnsupportedTemporalTypeException::UnsupportedTemporalTypeException field ChronoUnit::ChronoUnit result obtain invok temporalunit addto tempor pass argument case unit determin perform addit instanc immut unaffect call amounttoadd amount unit add result negat unit unit amount add null LocalDate::LocalDate base date specifi amount ad null
LocalDate::plusYears return copi LocalDate::LocalDate specifi period year ad add specifi amount year field step add input year year field check result date invalid adjust day month last valid day necessari exampl 2008 02 29 leap year year result invalid date 2009 02 29 standard year instead return invalid result last valid day month 2009 02 28 select instead instanc immut unaffect call yearstoadd year add negat LocalDate::LocalDate base date year ad null
LocalDate::plusMonths return copi LocalDate::LocalDate specifi period month ad add specifi amount month field step add input month month year field check result date invalid adjust day month last valid day necessari exampl 2007 03 31 month result invalid date 2007 04 31 instead return invalid result last valid day month 2007 04 30 select instead instanc immut unaffect call monthstoadd month add negat LocalDate::LocalDate base date month ad null
LocalDate::plusWeeks return copi LocalDate::LocalDate specifi period week ad add specifi amount week day field increment month year field necessari ensur result remain valid result invalid maximum minimum year exceed exampl 2008 12 31 week result 2009 01 07 instanc immut unaffect call weekstoadd week add negat LocalDate::LocalDate base date week ad null
LocalDate::plusDays return copi LocalDate::LocalDate specifi number day ad add specifi amount day field increment month year field necessari ensur result remain valid result invalid maximum minimum year exceed exampl 2008 12 31 day result 2009 01 01 instanc immut unaffect call daystoadd day add negat LocalDate::LocalDate base date day ad null
LocalDate::minus return copi date specifi amount subtract return LocalDate::LocalDate base specifi amount subtract amount typic type implement interfac calcul deleg amount object call amount implement free implement subtract wish typic call consult document amount implement determin success subtract instanc immut unaffect call amounttosubtract amount subtract null LocalDate::LocalDate base date subtract made null
LocalDate::minus return copi date specifi amount subtract return LocalDate::LocalDate base amount term unit subtract subtract amount unit support reason thrown equival amount negat see full descript addit thus subtract work instanc immut unaffect call amounttosubtract amount unit subtract result negat unit unit amount subtract null LocalDate::LocalDate base date specifi amount subtract null
LocalDate::minusYears return copi LocalDate::LocalDate specifi period year subtract subtract specifi amount year field step subtract input year year field check result date invalid adjust day month last valid day necessari exampl 2008 02 29 leap year year result invalid date 2007 02 29 standard year instead return invalid result last valid day month 2007 02 28 select instead instanc immut unaffect call yearstosubtract year subtract negat LocalDate::LocalDate base date year subtract null
LocalDate::minusMonths return copi LocalDate::LocalDate specifi period month subtract subtract specifi amount month field step subtract input month month year field check result date invalid adjust day month last valid day necessari exampl 2007 03 31 month result invalid date 2007 02 31 instead return invalid result last valid day month 2007 02 28 select instead instanc immut unaffect call monthstosubtract month subtract negat LocalDate::LocalDate base date month subtract null
LocalDate::minusWeeks return copi LocalDate::LocalDate specifi period week subtract subtract specifi amount week day field decrement month year field necessari ensur result remain valid result invalid maximum minimum year exceed exampl 2009 01 07 week result 2008 12 31 instanc immut unaffect call weekstosubtract week subtract negat LocalDate::LocalDate base date week subtract null
LocalDate::minusDays return copi LocalDate::LocalDate specifi number day subtract subtract specifi amount day field decrement month year field necessari ensur result remain valid result invalid maximum minimum year exceed exampl 2009 01 01 day result 2008 12 31 instanc immut unaffect call daystosubtract day subtract negat LocalDate::LocalDate base date day subtract null
LocalDate::until calcul amount time date term specifi unit calcul amount time LocalDate::LocalDate object term singl TemporalUnit::TemporalUnit start end point specifi date result negat end start Temporal::Temporal pass convert LocalDate::LocalDate use exampl amount day date calcul use startdat enddat day calcul return number repres number complet unit date exampl amount month 2012 06 15 2012 08 14 month day month equival use first invok use choic made base make readabl calcul implement unit day week month year decad centuri millennia era support ChronoUnit::ChronoUnit valu throw unit ChronoUnit::ChronoUnit result obtain invok temporalunit tempor Temporal::Temporal pass first argument convert input tempor argument instanc immut unaffect call endexclus end date exclus convert LocalDate::LocalDate null unit unit measur amount null amount time date end date
LocalDate::until calcul period date date Period::Period calcul period date term year month day start end point specifi date result negat end start negat sign year month day calcul perform use iso calendar system necessari input date convert iso start date includ end date period calcul remov complet month calcul remain number day adjust ensur sign number month normal year month base 12 month year month consid complet end day month greater equal start day month exampl 2010 01 15 2011 03 18 year month day equival use first invok use choic made base make readabl enddateexclus end date exclus chronolog null period date end date null
LocalDate::atTime combin date time creat LocalDateTime::LocalDateTime return LocalDateTime::LocalDateTime form date specifi time combin date time valid time time combin null local date time form date specifi time null
LocalDate::atTime combin date time creat LocalDateTime::LocalDateTime return LocalDateTime::LocalDateTime form date specifi hour minut nanosecond field set zero individu time field valid rang combin date time valid hour hour day use 23 minut minut hour use 59 local date time form date specifi time null
LocalDate::atTime combin date time creat LocalDateTime::LocalDateTime return LocalDateTime::LocalDateTime form date specifi hour minut nanosecond field set zero individu time field valid rang combin date time valid hour hour day use 23 minut minut hour use 59 minut repres 59 local date time form date specifi time null
LocalDate::atTime combin date time creat LocalDateTime::LocalDateTime return LocalDateTime::LocalDateTime form date specifi hour minut nanosecond individu time field valid rang combin date time valid hour hour day use 23 minut minut hour use 59 minut repres 59 nanoofsecond nano repres 999 999 999 local date time form date specifi time null
LocalDate::atTime combin date offset time creat OffsetDateTime::OffsetDateTime return OffsetDateTime::OffsetDateTime form date specifi time combin date time valid time time combin null offset date time form date specifi time null
LocalDate::atStartOfDay combin date time midnight creat LocalDateTime::LocalDateTime start date return LocalDateTime::LocalDateTime form date time midnight 0000 start date local date time midnight start date null
LocalDate::compareTo compar date date comparison primarili base date earliest latest consist equal defin date compar instanc LocalDate::LocalDate comparison entir base date date compar chronolog chronolog consid see date compar null compar valu negat posit greater
LocalDate::equals check date equal date compar LocalDate::LocalDate ensur date object type LocalDate::LocalDate compar type return fals compar date TemporalAccessor::TemporalAccessor instanc includ date chronolog use compar obj object check null return fals equal date
LocalDate::toString output date String::String 2007 12 03 output iso 8601 format uuuu mm dd string represent date null
LocalDateTime::LocalDateTime date time time zone iso 8601 calendar system 2007 12 03t101530 LocalDateTime::LocalDateTime immut date time object repres date time view year month day hour minut date time field day year day week week year access Time::Time repres nanosecond precis exampl valu 2nd octob 2007 1345 30 123456789 store LocalDateTime::LocalDateTime store repres time zone instead descript date birthday combin local time seen wall clock repres instant time line addit offset time zone iso 8601 calendar system modern civil calendar system world equival prolept gregorian calendar system rule leap year appli time applic written iso 8601 rule entir suitabl make use histor date requir accur find iso 8601 approach unsuit use ident sensit oper includ refer equal ident hash synchron instanc LocalDateTime::LocalDateTime unpredict result avoid equal comparison immut thread safe
LocalDateTime::MIN minimum support LocalDateTime::LocalDateTime 999999999 01 01t000000 local date time midnight start minimum date combin date time
LocalDateTime::MAX maximum support LocalDateTime::LocalDateTime 999999999 12 31t235959 999999999 local date time midnight end maximum date combin futur date time
LocalDateTime::now obtain current date time system clock default time zone queri default time zone obtain current date time use prevent abil use altern clock test clock current date time use system clock default time zone null
LocalDateTime::now obtain current date time system clock specifi time zone queri obtain current date time specifi time zone avoid depend default time zone use prevent abil use altern clock test clock zone zone use null current date time use system clock null
LocalDateTime::now obtain current date time specifi clock queri specifi clock obtain current date time use allow use altern clock test altern clock introduc use clock clock use null current date time null
LocalDateTime::of obtain instanc LocalDateTime::LocalDateTime year month day hour minut set nanosecond zero return LocalDateTime::LocalDateTime specifi year month day month hour minut day valid year month thrown nanosecond field set zero year year repres min year max year month month year repres null dayofmonth day month repres 31 hour hour day repres 23 minut minut hour repres 59 local date time null
LocalDateTime::of obtain instanc LocalDateTime::LocalDateTime year month day hour minut set nanosecond zero return LocalDateTime::LocalDateTime specifi year month day month hour minut day valid year month thrown nanosecond field set zero year year repres min year max year month month year repres null dayofmonth day month repres 31 hour hour day repres 23 minut minut hour repres 59 minut repres 59 local date time null
LocalDateTime::of obtain instanc LocalDateTime::LocalDateTime year month day hour minut nanosecond return LocalDateTime::LocalDateTime specifi year month day month hour minut nanosecond day valid year month thrown year year repres min year max year month month year repres null dayofmonth day month repres 31 hour hour day repres 23 minut minut hour repres 59 minut repres 59 nanoofsecond nano repres 999 999 999 local date time null
LocalDateTime::of obtain instanc LocalDateTime::LocalDateTime year month day hour minut set nanosecond zero return LocalDateTime::LocalDateTime specifi year month day month hour minut day valid year month thrown nanosecond field set zero year year repres min year max year month month year repres januari 12 decemb dayofmonth day month repres 31 hour hour day repres 23 minut minut hour repres 59 local date time null
LocalDateTime::of obtain instanc LocalDateTime::LocalDateTime year month day hour minut set nanosecond zero return LocalDateTime::LocalDateTime specifi year month day month hour minut day valid year month thrown nanosecond field set zero year year repres min year max year month month year repres januari 12 decemb dayofmonth day month repres 31 hour hour day repres 23 minut minut hour repres 59 minut repres 59 local date time null
LocalDateTime::of obtain instanc LocalDateTime::LocalDateTime year month day hour minut nanosecond return LocalDateTime::LocalDateTime specifi year month day month hour minut nanosecond day valid year month thrown year year repres min year max year month month year repres januari 12 decemb dayofmonth day month repres 31 hour hour day repres 23 minut minut hour repres 59 minut repres 59 nanoofsecond nano repres 999 999 999 local date time null
LocalDateTime::of obtain instanc LocalDateTime::LocalDateTime date time date local date null time local time null local date time null
LocalDateTime::ofInstant obtain instanc LocalDateTime::LocalDateTime Instant::Instant zone creat local date time base specifi instant first offset utc greenwich obtain use zone instant valid offset instant instant offset calcul local date time instant instant creat date time null zone time zone offset null local date time null
LocalDateTime::ofEpochSecond obtain instanc LocalDateTime::LocalDateTime use epoch 1970 01 01t000000z allow field convert local date time primarili intend low level convers general usag epochsecond number epoch 1970 01 01t000000z nanoofsecond nanosecond 999 999 999 offset zone offset null local date time null
LocalDateTime::from obtain instanc LocalDateTime::LocalDateTime tempor object obtain offset time base specifi tempor TemporalAccessor::TemporalAccessor repres arbitrari set date time factori convert instanc LocalDateTime::LocalDateTime convers extract combin LocalDate::LocalDate LocalTime::LocalTime tempor object implement permit perform optim access field equival relev object match signatur function interfac allow queri refer LocalDateTime::from tempor tempor object convert null local date time null
LocalDateTime::parse obtain instanc LocalDateTime::LocalDateTime text string 2007 12 03t101530 string repres valid date time pars use text text pars 2007 12 03t101530 null pars local date time null
LocalDateTime::parse obtain instanc LocalDateTime::LocalDateTime text string use specif formatt text pars use formatt return date time text text pars null formatt formatt use null pars local date time null
LocalDateTime::LocalDateTime Constructor::Constructor date date part date time valid null time time part date time valid null
LocalDateTime::toLocalDate get LocalDate::LocalDate part date time return LocalDate::LocalDate year month day date time date part date time null
LocalDateTime::getMonth get month year field use Month::Month enum return enum month avoid confus int valu mean access primit int valu enum provid month year null
LocalDateTime::getDayOfWeek get day week field enum DayOfWeek::DayOfWeek return enum day week avoid confus int valu mean access primit int valu enum provid addit obtain DayOfWeek::DayOfWeek includ textual name valu day week null
LocalDateTime::toLocalTime get LocalTime::LocalTime part date time return LocalTime::LocalTime hour minut nanosecond date time time part date time null
LocalDateTime::with return adjust copi date time return LocalDateTime::LocalDateTime base date time adjust adjust take place use specifi adjust strategi object read document adjust understand adjust made adjust simpli set field year field complex adjust set date last day month select common adjust includ find last day month wednesday Key::Key date time implement TemporalAdjuster::TemporalAdjuster interfac adjust respons handl case vari length month leap year exampl return date last day juli implement TemporalAdjuster::TemporalAdjuster thus chang date time offset result obtain invok specifi adjust pass argument instanc immut unaffect call adjust adjust use null LocalDateTime::LocalDateTime base adjust made null
LocalDateTime::with return copi date time specifi field set valu return LocalDateTime::LocalDateTime base valu specifi field chang chang support field year month day month set valu field support reason thrown case chang specifi field caus result date time becom invalid chang month 31st januari februari make day month invalid case field respons resolv date typic choos previous valid date last valid day februari exampl field adjust implement behav match ChronoField::ChronoField instanc throw UnsupportedTemporalTypeException::UnsupportedTemporalTypeException field ChronoField::ChronoField result obtain invok temporalfield adjustinto tempor pass argument case field determin adjust instant instanc immut unaffect call field field set result null newvalu valu field result LocalDateTime::LocalDateTime base specifi field set null
LocalDateTime::withYear return copi LocalDateTime::LocalDateTime year alter time affect calcul result day month invalid year chang last valid day month instanc immut unaffect call year year set result min year max year LocalDateTime::LocalDateTime base date time request year null
LocalDateTime::withMonth return copi LocalDateTime::LocalDateTime month year alter time affect calcul result day month invalid year chang last valid day month instanc immut unaffect call month month year set result januari 12 decemb LocalDateTime::LocalDateTime base date time request month null
LocalDateTime::withDayOfMonth return copi LocalDateTime::LocalDateTime day month alter result LocalDateTime::LocalDateTime invalid thrown time affect calcul result instanc immut unaffect call dayofmonth day month set result 28 31 LocalDateTime::LocalDateTime base date time request day null
LocalDateTime::withDayOfYear return copi LocalDateTime::LocalDateTime day year alter result LocalDateTime::LocalDateTime invalid thrown instanc immut unaffect call dayofyear day year set result 365 366 LocalDateTime::LocalDateTime base date request day null
LocalDateTime::withHour return copi LocalDateTime::LocalDateTime hour day valu alter instanc immut unaffect call hour hour day set result 23 LocalDateTime::LocalDateTime base date time request hour null
LocalDateTime::withMinute return copi LocalDateTime::LocalDateTime minut hour valu alter instanc immut unaffect call minut minut hour set result 59 LocalDateTime::LocalDateTime base date time request minut null
LocalDateTime::withSecond return copi LocalDateTime::LocalDateTime minut valu alter instanc immut unaffect call minut set result 59 LocalDateTime::LocalDateTime base date time request null
LocalDateTime::withNano return copi LocalDateTime::LocalDateTime nano valu alter instanc immut unaffect call nanoofsecond nano set result 999 999 999 LocalDateTime::LocalDateTime base date time request nanosecond null
LocalDateTime::truncatedTo return copi LocalDateTime::LocalDateTime time truncat truncat return copi origin date time field smaller specifi unit set zero exampl truncat unit set minut nano field zero unit divid length standard day remaind includ suppli time unit unit throw instanc immut unaffect call unit unit truncat null LocalDateTime::LocalDateTime base date time time truncat null
LocalDateTime::plus return copi date time specifi amount ad return LocalDateTime::LocalDateTime base specifi amount ad amount typic type implement interfac calcul deleg amount object call amount implement free implement addit wish typic call consult document amount implement determin success ad instanc immut unaffect call amounttoadd amount add null LocalDateTime::LocalDateTime base date time addit made null
LocalDateTime::plus return copi date time specifi amount ad return LocalDateTime::LocalDateTime base amount term unit ad add amount unit support reason thrown field addit implement Date::Date unit ad Time::Time unit ad overflow day ad equival use field ChronoUnit::ChronoUnit result obtain invok temporalunit addto tempor pass argument case unit determin perform addit instanc immut unaffect call amounttoadd amount unit add result negat unit unit amount add null LocalDateTime::LocalDateTime base date time specifi amount ad null
LocalDateTime::plusYears return copi LocalDateTime::LocalDateTime specifi period year ad add specifi amount year field step add input year year field check result date invalid adjust day month last valid day necessari exampl 2008 02 29 leap year year result invalid date 2009 02 29 standard year instead return invalid result last valid day month 2009 02 28 select instead instanc immut unaffect call year year add negat LocalDateTime::LocalDateTime base date time year ad null
LocalDateTime::plusMonths return copi LocalDateTime::LocalDateTime specifi period month ad add specifi amount month field step add input month month year field check result date invalid adjust day month last valid day necessari exampl 2007 03 31 month result invalid date 2007 04 31 instead return invalid result last valid day month 2007 04 30 select instead instanc immut unaffect call month month add negat LocalDateTime::LocalDateTime base date time month ad null
LocalDateTime::plusWeeks return copi LocalDateTime::LocalDateTime specifi period week ad add specifi amount week day field increment month year field necessari ensur result remain valid result invalid maximum minimum year exceed exampl 2008 12 31 week result 2009 01 07 instanc immut unaffect call week week add negat LocalDateTime::LocalDateTime base date time week ad null
LocalDateTime::plusDays return copi LocalDateTime::LocalDateTime specifi period day ad add specifi amount day field increment month year field necessari ensur result remain valid result invalid maximum minimum year exceed exampl 2008 12 31 day result 2009 01 01 instanc immut unaffect call day day add negat LocalDateTime::LocalDateTime base date time day ad null
LocalDateTime::plusHours return copi LocalDateTime::LocalDateTime specifi period hour ad instanc immut unaffect call hour hour add negat LocalDateTime::LocalDateTime base date time hour ad null
LocalDateTime::plusMinutes return copi LocalDateTime::LocalDateTime specifi period minut ad instanc immut unaffect call minut minut add negat LocalDateTime::LocalDateTime base date time minut ad null
LocalDateTime::plusSeconds return copi LocalDateTime::LocalDateTime specifi period ad instanc immut unaffect call add negat LocalDateTime::LocalDateTime base date time ad null
LocalDateTime::plusNanos return copi LocalDateTime::LocalDateTime specifi period nanosecond ad instanc immut unaffect call nano nano add negat LocalDateTime::LocalDateTime base date time nanosecond ad null
LocalDateTime::minus return copi date time specifi amount subtract return LocalDateTime::LocalDateTime base specifi amount subtract amount typic type implement interfac calcul deleg amount object call amount implement free implement subtract wish typic call consult document amount implement determin success subtract instanc immut unaffect call amounttosubtract amount subtract null LocalDateTime::LocalDateTime base date time subtract made null
LocalDateTime::minus return copi date time specifi amount subtract return LocalDateTime::LocalDateTime base amount term unit subtract subtract amount unit support reason thrown equival amount negat see full descript addit thus subtract work instanc immut unaffect call amounttosubtract amount unit subtract result negat unit unit amount subtract null LocalDateTime::LocalDateTime base date time specifi amount subtract null
LocalDateTime::minusYears return copi LocalDateTime::LocalDateTime specifi period year subtract subtract specifi amount year field step subtract input year year field check result date invalid adjust day month last valid day necessari exampl 2008 02 29 leap year year result invalid date 2009 02 29 standard year instead return invalid result last valid day month 2009 02 28 select instead instanc immut unaffect call year year subtract negat LocalDateTime::LocalDateTime base date time year subtract null
LocalDateTime::minusMonths return copi LocalDateTime::LocalDateTime specifi period month subtract subtract specifi amount month field step subtract input month month year field check result date invalid adjust day month last valid day necessari exampl 2007 03 31 month result invalid date 2007 04 31 instead return invalid result last valid day month 2007 04 30 select instead instanc immut unaffect call month month subtract negat LocalDateTime::LocalDateTime base date time month subtract null
LocalDateTime::minusWeeks return copi LocalDateTime::LocalDateTime specifi period week subtract subtract specifi amount week day field decrement month year field necessari ensur result remain valid result invalid maximum minimum year exceed exampl 2009 01 07 week result 2008 12 31 instanc immut unaffect call week week subtract negat LocalDateTime::LocalDateTime base date time week subtract null
LocalDateTime::minusDays return copi LocalDateTime::LocalDateTime specifi period day subtract subtract specifi amount day field increment month year field necessari ensur result remain valid result invalid maximum minimum year exceed exampl 2009 01 01 day result 2008 12 31 instanc immut unaffect call day day subtract negat LocalDateTime::LocalDateTime base date time day subtract null
LocalDateTime::minusHours return copi LocalDateTime::LocalDateTime specifi period hour subtract instanc immut unaffect call hour hour subtract negat LocalDateTime::LocalDateTime base date time hour subtract null
LocalDateTime::minusMinutes return copi LocalDateTime::LocalDateTime specifi period minut subtract instanc immut unaffect call minut minut subtract negat LocalDateTime::LocalDateTime base date time minut subtract null
LocalDateTime::minusSeconds return copi LocalDateTime::LocalDateTime specifi period subtract instanc immut unaffect call subtract negat LocalDateTime::LocalDateTime base date time subtract null
LocalDateTime::minusNanos return copi LocalDateTime::LocalDateTime specifi period nanosecond subtract instanc immut unaffect call nano nano subtract negat LocalDateTime::LocalDateTime base date time nanosecond subtract null
LocalDateTime::plusWithOverflow return copi LocalDateTime::LocalDateTime specifi period ad instanc immut unaffect call newdat date base calcul null hour hour add negat minut minut add negat add negat nano nano add negat sign sign determin add subtract combin result null
LocalDateTime::until calcul amount time date time term specifi unit calcul amount time LocalDateTime::LocalDateTime object term singl TemporalUnit::TemporalUnit start end point specifi date time result negat end start Temporal::Temporal pass convert LocalDateTime::LocalDateTime use exampl amount day date time calcul use startdatetim enddatetim day calcul return number repres number complet unit date time exampl amount month 2012 06 15t0000 2012 08 14t2359 month minut month equival use first invok use choic made base make readabl calcul implement unit nano micro milli minut hour half day day week month year decad centuri millennia era support ChronoUnit::ChronoUnit valu throw unit ChronoUnit::ChronoUnit result obtain invok temporalunit tempor Temporal::Temporal pass first argument convert input tempor argument instanc immut unaffect call endexclus end date exclus convert LocalDateTime::LocalDateTime null unit unit measur amount null amount time date time end date time
LocalDateTime::format format date time use specifi formatt date time pass formatt produc string formatt formatt use null format date time string null
LocalDateTime::compareTo compar date time date time comparison primarili base date time earliest latest consist equal defin date time compar instanc LocalDateTime::LocalDateTime comparison entir base date time date compar chronolog chronolog consid see date time compar null compar valu negat posit greater
LocalDateTime::equals check date time equal date time compar LocalDateTime::LocalDateTime ensur date time object type LocalDateTime::LocalDateTime compar type return fals obj object check null return fals equal date time
LocalDateTime::toString output date time String::String 2007 12 03t101530 output iso 8601 format uuuu mm dd hhmm uuuu mm dd hhmmss uuuu mm dd hhmmss sss uuuu mm dd hhmmss ssssss uuuu mm dd hhmmss sssssssss format shortest output full valu time where omit part impli zero string represent date time null
ZoneId::of obtain instanc ZoneId::ZoneId use use map alias supplement standard zone user time zone use abbrevi pst pacif standard Time::Time pdt pacif daylight Time::Time abbrevi uniqu allow map string time zone setup reus TemporalQueries::zoneId time zone null aliasmap map alia zone typic abbrevi zone null zone null
ZoneId::of obtain instanc ZoneId::ZoneId ensur valid avail use pars produc ZoneId::ZoneId ZoneOffset::ZoneOffset ZoneOffset::ZoneOffset return start result valid obtain pars match zone step step follow zone equal result zoneoffset utc zone consist singl letter zone invalid DateTimeException::DateTimeException thrown zone start pars ZoneOffset::ZoneOffset use zone equal gmt utc ut result ZoneId::ZoneId rule equival zoneoffset utc zone start utc utc gmt gmt ut ut prefix offset base split letter prefix suffix start sign suffix pars result ZoneId::ZoneId specifi utc gmt ut prefix normal offset rule return ZoneId::ZoneId equival pars ZoneOffset::ZoneOffset pars region base zone region match regular express za za z0 DateTimeException::DateTimeException thrown zone configur set ZoneRulesException::ZoneRulesException thrown detail format region depend group suppli data default set data suppli iana Time::Time zone databas tzdb region form area citi europ pari america york compat TemporalQueries::zoneId time zone null zone null
ZoneId::of pars take flag indic ZoneRulesException::ZoneRulesException thrown deseri TemporalQueries::zoneId time zone null checkavail check zone avail zone null
ZoneId::ZoneId Constructor::Constructor access packag
ZoneId::toString output zone String::String use string represent time zone null
Ser::Ser Constructor::Constructor deseri
ZoneRulesProvider::ZoneRulesProvider Provider::Provider time zone rule system manag configur time zone rule static provid manag provid abstract provid spi allow rule ZoneRulesProvider::ZoneRulesProvider instal instanc platform extens jar file place usual extens directori instal provid load use servic provid load facil defin ZoneRulesProvider::ZoneRulesProvider identifi provid configur file name time zone zonerulesprovid resourc directori meta inf servic file contain line specifi fulli qualifi concret zonerul provid name provid made avail ad path regist virtual machin default provid provid zone rule time zone defin iana Time::Time zone databas tzdb system properti time zone defaultzonerulesprovid defin taken fulli qualifi name concret ZoneRulesProvider::ZoneRulesProvider load default provid use system loader system properti defin system default provid load serv default provid rule look primarili zone zone region zone offset time zone rule polit thus data chang time provid provid latest rule zone provid histori rule chang interfac servic provid call multipl thread implement immut thread safe provid ensur rule seen rule continu avail provid encourag implement meaning tostr system updat time zone rule dynam stop jvm examin detail complex provid choos handl dynam updat default provid
ZoneRulesProvider::ZoneRulesProvider Constructor::Constructor
ZoneRules::ZoneRules Constructor::Constructor standardtransit standard transit null standardoffset standard offset null savingsinstanttransit standard transit null walloffset wall offset null lastrul recur last rule size 15 null
ZoneRules::getValidOffsets get offset applic specifi local date time rule map local date time offset straightforward case normal valid offset vast major year normal case appli where singl valid offset local date time gap zero valid offset clock jump forward typic due spring daylight save chang winter summer gap local date time valu valid offset overlap valid offset clock set typic due autumn daylight save chang summer winter overlap local date time valu valid offset thus given local date time zero valid offset return list valid offset list size case where offset earlier offset return index offset index various handl convers LocalDateTime::LocalDateTime techniqu use theori valid offset happen clock put quick success happen histori time zone thus handl happen list return entri localdatetim local date time queri valid offset null null ignor rule singl offset instant list valid offset immut null
ZoneRules::getTransition get offset transit applic specifi local date time rule map local date time offset straightforward case normal valid offset vast major year normal case appli where singl valid offset local date time gap zero valid offset clock jump forward typic due spring daylight save chang winter summer gap local date time valu valid offset overlap valid offset clock set typic due autumn daylight save chang summer winter overlap local date time valu valid offset transit model case gap overlap normal case return null various handl convers LocalDateTime::LocalDateTime techniqu use localdatetim local date time queri offset transit null null ignor rule singl offset instant offset transit null local date time transit
DateTimeFormatter::DateTimeFormatter Formatter::Formatter print pars date time object provid entri point print pars provid common implement DateTimeFormatter::DateTimeFormatter use predefin constant use pattern letter uuuu mmm dd use local style medium complex formatt date time provid format format datetimeformatt formatt pars pars charsequ text DateTimeFormatter::DateTimeFormatter formatt exampl addit format formatt creat desir Locale::Locale Chronology::Chronology ZoneId::ZoneId DecimalStyle::DecimalStyle return formatt overrid local local affect aspect format pars exampl provid formatt use local specif date format return formatt overrid chronolog overridden date time valu convert chronolog format pars date time valu convert chronolog return return formatt overrid zone overridden date time valu convert ZonedDateTime::ZonedDateTime request ZoneId::ZoneId format pars ZoneId::ZoneId appli valu return return formatt overrid DecimalStyle::DecimalStyle symbol format pars applic use older format return implement text format predefin formatt pattern format pars pattern base sequenc letter symbol pattern creat Formatter::Formatter use exampl mmm uuuu format 2011 12 03 nbsp dec nbsp 2011 formatt creat pattern time necessari immut thread safe exampl letter reserv pattern letter pattern letter defin count pattern letter determin format text text style determin base number pattern letter pattern letter use exact pattern letter use exact pattern letter use Pattern::Pattern letter specifi stand form text style number count letter valu output use minimum number digit pad count digit width output field valu zero pad necessari pattern letter constraint count letter letter specifi letter specifi letter specifi number text count pattern letter greater use text rule use Number::Number rule fraction output nano field fraction nano valu nine digit thus count pattern letter nano valu truncat signific digit output pars strict mode number pars digit match count pattern letter pars lenient mode number pars digit count pattern letter digit year count letter determin minimum field width pad count letter digit form print output rightmost digit pars pars use base valu 2000 result year rang 2000 2099 inclus count letter sign output negat year sign output pad width exceed zoneid output time zone europ pari count letter time zone output count letter throw IllegalArgumentException::IllegalArgumentException zone name output display name time zone count letter name output count letter full name output letter throw IllegalArgumentException::IllegalArgumentException offset format offset base number pattern letter letter output hour 01 minut non zero case minut output 0130 letter output hour minut colon 0130 letter output hour minut colon 0130 letter output hour minut option colon 013015 letter output hour minut option colon 013015 letter throw IllegalArgumentException::IllegalArgumentException Pattern::Pattern letter upper case output offset output zero pattern letter lower case output 00 0000 0000 offset format local offset base number pattern letter letter output form local offset local offset text gmt hour lead zero option digit minut non zero colon exampl gmt letter output form local offset text gmt digit hour minut field option field non zero colon exampl gmt 0800 count letter throw IllegalArgumentException::IllegalArgumentException offset format offset base number pattern letter letter output hour minut colon 0130 output 0000 offset zero letter output form local offset equival letter offset output correspond local offset text offset zero letter output hour minut option non zero colon output offset zero letter throw IllegalArgumentException::IllegalArgumentException option section option section marker work exact call pad modifi modifi pattern follow pad space pad width determin number pattern letter call exampl pph output hour day pad space width unrecogn letter error non letter charact singl quot output recommend use singl quot charact want output ensur futur chang break resolv pars implement phase oper first text pars use layout defin formatt produc Map::Map field valu ZoneId::ZoneId Chronology::Chronology pars data resolv valid combin simplifi various field use pars suppli perform pars resolv phase fifth perform first phase leav result unresolv essenti low level oper resolv phase control paramet set enum offer approach strict smart lenient smart option default set use paramet allow set field resolv filter resolv start exampl formatt pars year month day month day year approach resolv date year month day month year day year resolv field allow approach select resolv field set approach result date resolv separ field form complet date time complex process behaviour distribut number follow step chronolog determin chronolog result chronolog pars chronolog pars chronolog set null IsoChronology::IsoChronology ChronoField::ChronoField date field resolv achiev use document field resolut locat implement Chronology::Chronology ChronoField::ChronoField time field resolv document chronolog field ChronoField::ChronoField process achiev use document field resolut locat implement TemporalField::TemporalField ChronoField::ChronoField date time field resolv allow field step produc ChronoField::ChronoField valu process date time LocalTime::LocalTime form hour day avail involv default valu minut fraction remain unresolv field cross check date time resolv thus earlier stage resolv year month day month date stage check day week valid date pars ad date date avail immut thread safe
DateTimeFormatter::ofPattern creat formatt use specifi pattern creat formatt base describ document exampl mmm uuuu format 2011 12 03 dec 2011 formatt use chang use return formatt altern use variant return formatt overrid chronolog zone use resolv style pattern pattern use null formatt base pattern null
DateTimeFormatter::ofPattern creat formatt use specifi pattern local creat formatt base describ document exampl mmm uuuu format 2011 12 03 dec 2011 formatt use specifi local chang use return formatt return formatt overrid chronolog zone use resolv style pattern pattern use null local local use null formatt base pattern null
DateTimeFormatter::ofLocalizedDate return local specif date format iso chronolog return formatt format pars date exact format pattern vari local local determin formatt formatt return use local control use result note local pattern look lazili DateTimeFormatter::DateTimeFormatter hold style requir local look pattern requir demand return formatt chronolog iso set ensur date calendar system correct convert overrid zone use resolv style datestyl formatt style obtain null date formatt null
DateTimeFormatter::ofLocalizedTime return local specif time format iso chronolog return formatt format pars time exact format pattern vari local local determin formatt formatt return use local control use result note local pattern look lazili DateTimeFormatter::DateTimeFormatter hold style requir local look pattern requir demand return formatt chronolog iso set ensur date calendar system correct convert overrid zone use resolv style timestyl formatt style obtain null time formatt null
DateTimeFormatter::ofLocalizedDateTime return local specif date time formatt iso chronolog return formatt format pars date time exact format pattern vari local local determin formatt formatt return use local control use result note local pattern look lazili DateTimeFormatter::DateTimeFormatter hold style requir local look pattern requir demand return formatt chronolog iso set ensur date calendar system correct convert overrid zone use resolv style datetimestyl formatt style obtain null date time formatt null
DateTimeFormatter::ofLocalizedDateTime return local specif date time format iso chronolog return formatt format pars date time exact format pattern vari local local determin formatt formatt return use local control use result note local pattern look lazili DateTimeFormatter::DateTimeFormatter hold style requir local look pattern requir demand return formatt chronolog iso set ensur date calendar system correct convert overrid zone use resolv style datestyl date formatt style obtain null timestyl time formatt style obtain null date time date time formatt null
DateTimeFormatter::ISO date time iso date time formatt format pars date time offset zone avail 2011 12 03t101530 2011 12 03t101530 0100 2011 12 03t101530 0100 europ pari return immut formatt capabl format pars iso 8601 extend local offset date time format extend non iso form specifi time zone format consist offset avail format pars format complet offset handl part iso 8601 standard zone avail ZoneOffset::ZoneOffset format complet open squar bracket part iso 8601 standard pars case sensit close squar bracket formatt option element necessari pars use return formatt chronolog iso set ensur date calendar system correct convert overrid zone use resolv style
DateTimeFormatter::ISO instant iso instant formatt format pars instant utc 2011 12 03t101530z return immut formatt capabl format pars iso 8601 instant format format minut output nano output zero nine digit digit necessari pars time field requir fraction zero nine pars local decim style case formatt intend allow human readabl form Instant::Instant design repres point time intern store valu nanosecond fix epoch 1970 01 01z Instant::Instant format date time form time zone formatt allow Instant::Instant format suitabl convers use zoneoffset utc format consist where instant convert use utc offset pars case insensit return formatt overrid chronolog zone use resolv style
DateTimeFormatter::parsedExcessDays queri provid access excess day pars return singleton provid access addit pars queri return non null period zero period return instead null situat where queri return non zero period ResolverStyle::ResolverStyle lenient time pars date complet result pars consist LocalTime::LocalTime excess Period::Period day ResolverStyle::ResolverStyle smart time pars date where time 240000 complet result pars consist LocalTime::LocalTime 000000 excess Period::Period day case complet ChronoLocalDateTime::ChronoLocalDateTime Instant::Instant pars excess day ad date part result queri return zero period smart behaviour handl common end day 2400 valu process lenient mode produc result queri follow queri provid access excess day pars
DateTimeFormatter::parsedLeapSecond queri provid access leap pars return singleton provid access addit pars queri return non null boolean pars saw leap fals Instant::Instant pars handl leap time 235960 leap occur 235960 utc time zone local time time zone avoid potenti ambigu handl leap limit pars instant utc zone offset time 235960 receiv convers appli replac minut 60 59 queri pars result determin leap adjust made queri return excess adjust remov leap zero note appli leap smooth mechan utc sls respons follow queri provid access leap pars
DateTimeFormatter::DateTimeFormatter Constructor::Constructor printerpars printer parser use null local local use null decimalstyl DecimalStyle::DecimalStyle use null resolverstyl resolv style use null resolverfield field use resolv null field chrono chronolog use null overrid zone zone use null overrid
DateTimeFormatter::withZone return copi formatt overrid zone return formatt similar state formatt overrid zone set default formatt overrid zone return null overrid ad instant format pars affect format tempor object contain instant convert zone date time use overrid zone tempor instant determin queri field input chronolog retain overridden input chronolog Instant::Instant iso chronolog tempor object contain instant contain offset addit check made normal overrid zone offset differ offset tempor DateTimeException::DateTimeException thrown case overrid zone ad tempor replac previous zone chang date time pars distinct case consid zone pars text overrid zone effect zone pars overrid zone includ result pars where build instant date time instanc immut unaffect call zone overrid zone null overrid formatt base formatt request overrid zone null
DateTimeFormatter::format format date time object use formatt format date time String::String use rule formatt tempor tempor object format null format string null
DateTimeFormatter::formatTo format date time object Appendable::Appendable use formatt output format date time specifi destin general purpos interfac implement key charact output includ StringBuffer::StringBuffer StringBuilder::StringBuilder PrintStream::PrintStream Writer::Writer Appendable::Appendable throw ioexcept instead ioexcept wrap runtim tempor tempor object format null append append format null
DateTimeFormatter::parseBest fulli pars text produc object specifi type pars conveni use parser handl option element exampl pattern uuuu mm dd hh mm vv fulli pars ZonedDateTime::ZonedDateTime partial pars LocalDateTime::LocalDateTime queri specifi order start match full pars option end worst match minim pars option queri typic refer temporalaccessor result associ first type success pars normal applic use instanceof check result exampl pars complet read entir length text occur pars merg thrown text text pars null queri queri defin type attempt pars implement TemporalAccessor::TemporalAccessor null pars date time null
DateTimeFormatter::parseUnresolved pars text use formatt resolv result intend advanc use case pars implement phase oper first text pars use layout defin formatt produc Map::Map field valu ZoneId::ZoneId Chronology::Chronology pars data resolv valid combin simplifi various field use perform pars stage resolv stage result TemporalAccessor::TemporalAccessor repres data seen input valu valid thus pars date string 2012 00 65 result tempor field year 2012 month day month 65 text pars specifi start ParsePosition::ParsePosition entir length text pars ParsePosition::ParsePosition updat index end pars error return use error index field ParsePosition::ParsePosition instead DateTimeParseException::DateTimeParseException return error index set index indic error caller check error use context formatt pars field valu result error intend advanc use case access intern state pars typic use pars target type text text pars null posit posit pars updat length pars index error null pars text null pars result error
DateTimeFormatter::ClassicFormat Constructor::Constructor
ResolverStyle::ResolverStyle Enumeration::Enumeration resolv date time pars text string occur phase phase basic text pars accord field ad builder phase resolv pars field valu pair date time object style control phase resolv happen immut thread safe enum
TextStyle::TextStyle Enumeration::Enumeration style text format pars text style defin size format text full narrow size avail standard stand variat differ size obvious languag exampl full month januari month jan narrow month note narrow size uniqu exampl januari june juli narrow text differ standard stand form trickier describ differ languag differ word text oppos complet date exampl word month date picker word month associ day year date immut thread safe enum
TextStyle::FULL full text typic full descript exampl day week monday output monday
TextStyle::SHORT Short::Short text typic abbrevi exampl day week monday output mon
TextStyle::toCalendarStyle return Calendar::Calendar style correspond TextStyle::TextStyle correspond Calendar::Calendar style
FormatStyle::FormatStyle Enumeration::Enumeration style local date time date time formatt style obtain date time style configur see usag immut thread safe enum
FormatStyle::LONG Long::Long text style lot detail exampl format januari 12 1952
DateTimeFormatterBuilder::DateTimeFormatterBuilder Locale::Builder creat date time formatt allow DateTimeFormatter::DateTimeFormatter creat date time formatt creat ultim use builder basic element date time ad valu numer valu fraction fraction valu includ decim place use output fraction ensur fraction pars correct text textual equival valu offsetid offset zoneid zonetext name time zone chronologyid chronologytext name chronolog liter text liter nest Optional::Optional format nest made option printer parser interfac add user suppli format addit element decor pad space charact final shorthand pattern compat text simpledateformat SimpleDateFormat::SimpleDateFormat see practic simpli pars pattern call builder mutabl builder intend use singl thread
DateTimeFormatterBuilder::appendInstant append instant use iso 8601 formatt format fraction digit group instant fix output format convert date time zone offset utc format use standard iso 8601 format format nano output zero nine digit digit necessari local decim style instant obtain use option nano valu instant maximum rang LocalDateTime::LocalDateTime effect instant pars end day time 2400 handl midnight start day leap time 235959 handl degre see full detail altern format pars instant singl epoch valu achiev use appendvalu instant chain null
DateTimeFormatterBuilder::appendInstant append instant use iso 8601 formatt control number fraction digit instant fix output format provid control fraction digit convert date time zone offset utc print use standard iso 8601 format local decim style fractionaldigit paramet allow output fraction control specifi zero caus fraction digit output output increas number digit use zero pad necessari valu output digit necessari avoid trail zero pars strict mode number pars digit match fraction digit pars lenient mode number fraction digit zero nine accept instant obtain use option nano valu instant maximum rang LocalDateTime::LocalDateTime effect instant pars end day time 2400 handl midnight start day leap time 235959 handl degre see full detail altern format pars instant singl epoch valu achiev use appendvalu instant fractionaldigit number fraction digit format use digit necessari chain null
DateTimeFormatterBuilder::appendLocalized append local date time pattern formatt append local section builder suitabl output date time date time combin format local section lazili look base item datestyl specifi timestyl specifi Locale::Locale DateTimeFormatter::DateTimeFormatter Chronology::Chronology select avail format chronolog obtain tempor object format overridden pars chronolog pars default datetimeformatt withchronolog chronolog IsoChronology::IsoChronology fallback note provid similar function DateFormat::DateFormat datestyl date style use null mean date requir timestyl time style use null mean time requir chain null
DateTimeFormatterBuilder::appendPattern append element defin specifi pattern builder letter reserv pattern letter charact reserv futur use charact indic option pattern pattern letter defin count pattern letter determin format see user focus descript pattern tabl defin pattern letter map builder date field Pattern::Pattern letter output date time field Pattern::Pattern letter output time zone Pattern::Pattern letter output ZoneId::ZoneId zone offset Pattern::Pattern letter output ZoneOffset::ZoneOffset modifi Pattern::Pattern letter modifi rest pattern sequenc letter specifi unrecogn letter reserv charact throw Future::Future version add set pattern recommend use singl quot charact want output ensur futur chang break note pattern string similar ident pattern string similar ident defin unicod common Locale::Locale data repositori cldr ldml Pattern::Pattern letter align unicod cldr ldml contrast SimpleDateFormat::SimpleDateFormat use numer day week Pattern::Pattern letter pars year digit digit differ Pattern::Pattern letter ad Number::Number type reject number pattern pattern add null chain null
DateTimeFormatterBuilder::toFormatter complet builder creat DateTimeFormatter::DateTimeFormatter use default local creat formatt number print pars use standard DecimalStyle::DecimalStyle resolv style call end open option section repeat call creat formatt builder creat formatt desir state chang call DateTimeFormatterBuilder::optionalEnd creat formatt null
DateTimeFormatterBuilder::toFormatter complet builder creat DateTimeFormatter::DateTimeFormatter use specifi local creat formatt specifi local number print pars use standard DecimalStyle::DecimalStyle resolv style call end open option section repeat call creat formatt builder creat formatt desir state chang call DateTimeFormatterBuilder::optionalEnd local local use format null creat formatt null
DateTimeFormatterBuilder::PadPrinterParserDecorator Constructor::Constructor printerpars printer null padwidth width pad greater padchar pad charact
DateTimeFormatterBuilder::SettingsParser Enumeration::Enumeration appli pars set
DateTimeFormatterBuilder::NumberPrinterParser Constructor::Constructor field field format null minwidth minimum field width 19 maxwidth maximum field width minwidth 19 signstyl posit negat sign style null
DateTimeFormatterBuilder::NumberPrinterParser Constructor::Constructor field field format null minwidth minimum field width 19 maxwidth maximum field width minwidth 19 signstyl posit negat sign style null subsequentwidth width subsequ non negat number greater fix width due activ adjac pars
DateTimeFormatterBuilder::ReducedPrinterParser Constructor::Constructor field field format valid null minwidth minimum field width 10 maxwidth maximum field width 10 basevalu base valu based base date
DateTimeFormatterBuilder::ReducedPrinterParser Constructor::Constructor argument check field field format valid null minwidth minimum field width 10 maxwidth maximum field width 10 basevalu base valu based base date subsequentwidth subsequentwidth instanc
DateTimeFormatterBuilder::FractionPrinterParser Constructor::Constructor field field output null minwidth minimum width output maxwidth maximum width output decimalpoint output local decim point symbol
DateTimeFormatterBuilder::TextPrinterParser Constructor::Constructor field field output null textstyl text style null provid text provid null
DateTimeFormatterBuilder::OffsetIdPrinterParser Constructor::Constructor pattern pattern nooffsettext text use utc null
DateTimeFormatterBuilder::LocalizedOffsetIdPrinterParser Constructor::Constructor style style null
DateTimeFormatterBuilder::getChronologyName return chronolog name given chrono given local avail chronolog regular ResourceBundle::ResourceBundle search path look chronolog name chrono chronolog null local local null chronolog name chrono local name avail
DateTimeFormatterBuilder::LocalizedPrinterParser Constructor::Constructor datestyl date style use null timestyl time style use null
DateTimeFormatterBuilder::WeekBasedFieldPrinterParser Constructor::Constructor chr pattern format letter ad printerpars count repeat count format letter
DateTimeTextProvider::LocaleStore Constructor::Constructor valuetextmap map valu text store assign alter null
DecimalStyle::getAvailableLocales list local support local en Set::Set local local support
SignStyle::SignStyle Enumeration::Enumeration handl posit negat sign format engin allow posit negat sign number control use enum see usag immut thread safe enum
LocalTime::LocalTime time time zone iso 8601 calendar system 101530 LocalTime::LocalTime immut date time object repres time view hour minut Time::Time repres nanosecond precis exampl valu 1345 30 123456789 store LocalTime::LocalTime store repres date time zone instead descript local time seen wall clock repres instant time line addit offset time zone iso 8601 calendar system modern civil calendar system world assum calendar system use represent time day use ident sensit oper includ refer equal ident hash synchron instanc LocalTime::LocalTime unpredict result avoid equal comparison immut thread safe
LocalTime::MIN minimum support LocalTime::LocalTime 0000 time midnight start day
LocalTime::MAX maximum support LocalTime::LocalTime 235959 999999999 time midnight end day
LocalTime::now obtain current time system clock default time zone queri default time zone obtain current time use prevent abil use altern clock test clock current time use system clock default time zone null
LocalTime::now obtain current time system clock specifi time zone queri obtain current time specifi time zone avoid depend default time zone use prevent abil use altern clock test clock zone zone use null current time use system clock null
LocalTime::now obtain current time specifi clock queri specifi clock obtain current time use allow use altern clock test altern clock introduc use clock clock use null current time null
LocalTime::of obtain instanc LocalTime::LocalTime hour minut return LocalTime::LocalTime specifi hour minut nanosecond field set zero hour hour day repres 23 minut minut hour repres 59 local time null
LocalTime::of obtain instanc LocalTime::LocalTime hour minut return LocalTime::LocalTime specifi hour minut nanosecond field set zero hour hour day repres 23 minut minut hour repres 59 minut repres 59 local time null
LocalTime::of obtain instanc LocalTime::LocalTime hour minut nanosecond return LocalTime::LocalTime specifi hour minut nanosecond hour hour day repres 23 minut minut hour repres 59 minut repres 59 nanoofsecond nano repres 999 999 999 local time null
LocalTime::ofSecondOfDay obtain instanc LocalTime::LocalTime day valu return LocalTime::LocalTime specifi day nanosecond field set zero secondofday day 24 60 60 local time null
LocalTime::ofNanoOfDay obtain instanc LocalTime::LocalTime nano day valu return LocalTime::LocalTime specifi nanosecond day nanoofday nano day 24 60 60 000 000 000 local time null
LocalTime::from obtain instanc LocalTime::LocalTime tempor object obtain local time base specifi tempor TemporalAccessor::TemporalAccessor repres arbitrari set date time factori convert instanc LocalTime::LocalTime convers use queri reli extract field match signatur function interfac allow queri refer LocalTime::from tempor tempor object convert null local time null
LocalTime::parse obtain instanc LocalTime::LocalTime text string 1015 string repres valid time pars use text text pars 101530 null pars local time null
LocalTime::parse obtain instanc LocalTime::LocalTime text string use specif formatt text pars use formatt return time text text pars null formatt formatt use null pars local time null
LocalTime::LocalTime Constructor::Constructor previous valid hour hour day repres valid 23 minut minut hour repres valid 59 minut repres valid 59 nanoofsecond nano repres valid 999 999 999
LocalTime::getHour get hour day field hour day 23
LocalTime::getMinute get minut hour field minut hour 59
LocalTime::getSecond get minut field minut 59
LocalTime::with return adjust copi time return LocalTime::LocalTime base time adjust adjust take place use specifi adjust strategi object read document adjust understand adjust made adjust simpli set field hour field complex adjust set time last hour day result obtain invok specifi adjust pass argument instanc immut unaffect call adjust adjust use null LocalTime::LocalTime base adjust made null
LocalTime::with return copi time specifi field set valu return LocalTime::LocalTime base valu specifi field chang chang support field hour minut set valu field support reason thrown field adjust implement support field behav follow nano return LocalTime::LocalTime specifi nano hour minut unchang nano day return LocalTime::LocalTime specifi nano day complet replac time equival micro return LocalTime::LocalTime nano replac specifi micro multipli 000 hour minut unchang micro day return LocalTime::LocalTime specifi micro day complet replac time equival use micro day multipli 000 milli return LocalTime::LocalTime nano replac specifi milli multipli 000 000 hour minut unchang milli day return LocalTime::LocalTime specifi milli day complet replac time equival use milli day multipli 000 000 minut return LocalTime::LocalTime specifi minut hour minut nano unchang day return LocalTime::LocalTime specifi day nano unchang minut hour return LocalTime::LocalTime specifi minut hour hour minut nano unchang minut day return LocalTime::LocalTime specifi minut day minut nano unchang hour ampm return LocalTime::LocalTime specifi hour pm pm minut hour minut nano unchang clock hour ampm return LocalTime::LocalTime specifi clock hour pm pm minut hour minut nano unchang hour day return LocalTime::LocalTime specifi hour day minut hour minut nano unchang clock hour day return LocalTime::LocalTime specifi clock hour day minut hour minut nano unchang ampm day return LocalTime::LocalTime specifi pm hour pm minut hour minut nano unchang case valu valid rang valu field DateTimeException::DateTimeException thrown ChronoField::ChronoField instanc throw UnsupportedTemporalTypeException::UnsupportedTemporalTypeException field ChronoField::ChronoField result obtain invok temporalfield adjustinto tempor pass argument case field determin adjust instant instanc immut unaffect call field field set result null newvalu valu field result LocalTime::LocalTime base specifi field set null
LocalTime::withHour return copi LocalTime::LocalTime hour day valu alter instanc immut unaffect call hour hour day set result 23 LocalTime::LocalTime base time request hour null
LocalTime::withMinute return copi LocalTime::LocalTime minut hour valu alter instanc immut unaffect call minut minut hour set result 59 LocalTime::LocalTime base time request minut null
LocalTime::withSecond return copi LocalTime::LocalTime minut valu alter instanc immut unaffect call minut set result 59 LocalTime::LocalTime base time request null
LocalTime::withNano return copi LocalTime::LocalTime nano valu alter instanc immut unaffect call nanoofsecond nano set result 999 999 999 LocalTime::LocalTime base time request nanosecond null
LocalTime::truncatedTo return copi LocalTime::LocalTime time truncat truncat time return copi origin time field smaller specifi unit set zero exampl truncat unit set minut nano field zero unit divid length standard day remaind includ suppli time unit unit throw instanc immut unaffect call unit unit truncat null LocalTime::LocalTime base time time truncat null
LocalTime::plus return copi time specifi amount ad return LocalTime::LocalTime base specifi amount ad amount typic type implement interfac calcul deleg amount object call amount implement free implement addit wish typic call consult document amount implement determin success ad instanc immut unaffect call amounttoadd amount add null LocalTime::LocalTime base time addit made null
LocalTime::plus return copi time specifi amount ad return LocalTime::LocalTime base amount term unit ad add amount unit support reason thrown field addit implement support field behav follow nano return LocalTime::LocalTime specifi number nanosecond ad equival micro return LocalTime::LocalTime specifi number microsecond ad equival amount multipli 000 milli return LocalTime::LocalTime specifi number millisecond ad equival amount multipli 000 000 return LocalTime::LocalTime specifi number ad equival minut return LocalTime::LocalTime specifi number minut ad equival hour return LocalTime::LocalTime specifi number hour ad equival half day return LocalTime::LocalTime specifi number half day ad equival amount multipli 12 ChronoUnit::ChronoUnit instanc throw UnsupportedTemporalTypeException::UnsupportedTemporalTypeException field ChronoUnit::ChronoUnit result obtain invok temporalunit addto tempor pass argument case unit determin perform addit instanc immut unaffect call amounttoadd amount unit add result negat unit unit amount add null LocalTime::LocalTime base time specifi amount ad null
LocalTime::plusHours return copi LocalTime::LocalTime specifi period hour ad add specifi number hour time return time calcul wrap midnight instanc immut unaffect call hourstoadd hour add negat LocalTime::LocalTime base time hour ad null
LocalTime::plusMinutes return copi LocalTime::LocalTime specifi period minut ad add specifi number minut time return time calcul wrap midnight instanc immut unaffect call minutestoadd minut add negat LocalTime::LocalTime base time minut ad null
LocalTime::plusSeconds return copi LocalTime::LocalTime specifi period ad add specifi number time return time calcul wrap midnight instanc immut unaffect call secondstoadd add negat LocalTime::LocalTime base time ad null
LocalTime::plusNanos return copi LocalTime::LocalTime specifi period nanosecond ad add specifi number nanosecond time return time calcul wrap midnight instanc immut unaffect call nanostoadd nano add negat LocalTime::LocalTime base time nanosecond ad null
LocalTime::minus return copi time specifi amount subtract return LocalTime::LocalTime base specifi amount subtract amount typic type implement interfac calcul deleg amount object call amount implement free implement subtract wish typic call consult document amount implement determin success subtract instanc immut unaffect call amounttosubtract amount subtract null LocalTime::LocalTime base time subtract made null
LocalTime::minus return copi time specifi amount subtract return LocalTime::LocalTime base amount term unit subtract subtract amount unit support reason thrown equival amount negat see full descript addit thus subtract work instanc immut unaffect call amounttosubtract amount unit subtract result negat unit unit amount subtract null LocalTime::LocalTime base time specifi amount subtract null
LocalTime::minusHours return copi LocalTime::LocalTime specifi period hour subtract subtract specifi number hour time return time calcul wrap midnight instanc immut unaffect call hourstosubtract hour subtract negat LocalTime::LocalTime base time hour subtract null
LocalTime::minusMinutes return copi LocalTime::LocalTime specifi period minut subtract subtract specifi number minut time return time calcul wrap midnight instanc immut unaffect call minutestosubtract minut subtract negat LocalTime::LocalTime base time minut subtract null
LocalTime::minusSeconds return copi LocalTime::LocalTime specifi period subtract subtract specifi number time return time calcul wrap midnight instanc immut unaffect call secondstosubtract subtract negat LocalTime::LocalTime base time subtract null
LocalTime::minusNanos return copi LocalTime::LocalTime specifi period nanosecond subtract subtract specifi number nanosecond time return time calcul wrap midnight instanc immut unaffect call nanostosubtract nano subtract negat LocalTime::LocalTime base time nanosecond subtract null
LocalTime::until calcul amount time time term specifi unit calcul amount time LocalTime::LocalTime object term singl TemporalUnit::TemporalUnit start end point specifi time result negat end start Temporal::Temporal pass convert LocalTime::LocalTime use exampl amount hour time calcul use starttim endtim hour calcul return number repres number complet unit time exampl amount hour 1130 1329 hour minut hour equival use first invok use choic made base make readabl calcul implement unit nano micro milli minut hour half day support ChronoUnit::ChronoUnit valu throw unit ChronoUnit::ChronoUnit result obtain invok temporalunit tempor Temporal::Temporal pass first argument convert input tempor argument instanc immut unaffect call endexclus end time exclus convert LocalTime::LocalTime null unit unit measur amount null amount time time end time
LocalTime::atDate combin time date creat LocalDateTime::LocalDateTime return LocalDateTime::LocalDateTime form time specifi date combin date time valid date date combin null local date time form time specifi date null
LocalTime::compareTo compar LocalTime::LocalTime time comparison base time line posit local time day consist equal defin time compar null compar valu negat posit greater
LocalTime::isAfter check LocalTime::LocalTime specifi time comparison base time line posit time day time compar null specifi time
LocalTime::isBefore check LocalTime::LocalTime specifi time comparison base time line posit time day time compar null point specifi time
LocalTime::equals check time equal time comparison base time line posit time day object type LocalTime::LocalTime compar type return fals compar date TemporalAccessor::TemporalAccessor instanc use compar obj object check null return fals equal time
LocalTime::toString output time String::String 1015 output iso 8601 format hhmm hhmmss hhmmss sss hhmmss ssssss hhmmss sssssssss format shortest output full valu time where omit part impli zero string represent time null
Duration::Duration time base amount time 34 model quantiti amount time term nanosecond access use durat base unit minut hour addit unit treat exact equal 24 hour thus ignor daylight save effect see date base equival physic durat infinit length practic durat store constraint similar durat use nanosecond resolut maximum valu held greater current estim age univers rang durat requir storag number larger achiev store repres int repres nanosecond 999 999 999 model direct durat mean durat negat durat measur necessarili ident scientif si definit base atom clock differ impact durat measur leap affect applic see discuss mean time scale use ident sensit oper includ refer equal ident hash synchron instanc Duration::Duration unpredict result avoid equal comparison immut thread safe
Duration::ofDays obtain Duration::Duration repres number standard 24 hour day calcul base standard definit day where day 86400 impli 24 hour day nanosecond field set zero day number day posit negat Duration::Duration null
Duration::ofHours obtain Duration::Duration repres number standard hour calcul base standard definit hour where hour 3600 nanosecond field set zero hour number hour posit negat Duration::Duration null
Duration::ofMinutes obtain Duration::Duration repres number standard minut calcul base standard definit minut where minut 60 nanosecond field set zero minut number minut posit negat Duration::Duration null
Duration::ofSeconds obtain Duration::Duration repres number nanosecond field set zero number posit negat Duration::Duration null
Duration::ofSeconds obtain Duration::Duration repres number adjust nanosecond allow arbitrari number nanosecond pass factori alter valu nanosecond order ensur store nanosecond rang 999 999 999 exampl result exact durat number posit negat nanoadjust nanosecond adjust number posit negat Duration::Duration null
Duration::ofMillis obtain Duration::Duration repres number millisecond nanosecond extract specifi millisecond milli number millisecond posit negat Duration::Duration null
Duration::ofNanos obtain Duration::Duration repres number nanosecond nanosecond extract specifi nanosecond nano number nanosecond posit negat Duration::Duration null
Duration::of obtain Duration::Duration repres amount specifi unit paramet repres part phrase hour exampl subset unit accept unit treat 24 hour unit throw amount amount durat measur term unit posit negat unit unit durat measur exact durat null Duration::Duration null
Duration::from obtain instanc Duration::Duration tempor amount obtain durat base specifi amount TemporalAmount::TemporalAmount repres amount time date base time base factori extract durat convers loop set unit amount use unit calcul total Duration::Duration subset unit accept unit treat 24 hour unit found thrown amount tempor amount convert null equival durat null
Duration::parse obtain Duration::Duration text string pndtnhnmn ns pars textual represent durat includ string produc tostr format accept base iso 8601 durat format pndtnhnmn ns day consid exact 24 hour string start option sign denot ascii negat posit symbol negat period negat ascii letter upper lower case section consist number suffix section suffix ascii day hour minut accept upper lower case suffix occur order ascii letter occur first occurr hour minut section section section number part section consist ascii digit number prefix ascii negat posit symbol number day hour minut pars number pars option fraction decim point dot comma fraction part zero digit lead sign negat valu unit part iso 8601 standard exampl text text pars null pars durat null
Duration::between obtain Duration::Duration repres durat tempor object calcul durat tempor object object type durat calcul base type first object exampl first argument LocalTime::LocalTime argument convert LocalTime::LocalTime specifi tempor object support unit full accuraci unit field support result negat period end start guarante obtain posit durat call result startinclus start instant inclus null endexclus end instant exclus null Duration::Duration null
Duration::create obtain instanc Duration::Duration use nanosecond length durat posit negat nanoadjust nanosecond adjust 999 999 999
Duration::Duration construct instanc Duration::Duration use nanosecond length durat posit negat nano nanosecond 999 999 999
Duration::isZero check durat zero length Duration::Duration repres direct distanc point time line therefor posit zero negat check length zero durat total length equal zero
Duration::isNegative check durat negat exclud zero Duration::Duration repres direct distanc point time line therefor posit zero negat check length zero durat total length zero
Duration::getSeconds get number durat length durat store use field nanosecond nanosecond part valu 999 999 999 adjust length total durat defin call Duration::Duration repres direct distanc point time line negat durat express negat sign part durat nanosecond store 999 999 999 nanosecond part length durat posit negat
Duration::getNano get number nanosecond durat length durat store use field nanosecond nanosecond part valu 999 999 999 adjust length total durat defin call Duration::Duration repres direct distanc point time line negat durat express negat sign part durat nanosecond store 999 999 999 nanosecond nanosecond part length durat 999 999 999
Duration::withSeconds return copi durat specifi amount return durat specifi retain nano part durat instanc immut unaffect call repres negat Duration::Duration base period request null
Duration::withNanos return copi durat specifi nano return durat specifi nano retain part durat instanc immut unaffect call nanoofsecond nano repres 999 999 999 Duration::Duration base period request nano null
Duration::plus return copi durat specifi durat ad instanc immut unaffect call durat durat add posit negat null Duration::Duration base durat specifi durat ad null
Duration::plus return copi durat specifi durat ad durat amount measur term specifi unit subset unit accept unit treat 24 hour unit throw instanc immut unaffect call amounttoadd amount period measur term unit posit negat unit unit period measur exact durat null Duration::Duration base durat specifi durat ad null
Duration::plusDays return copi durat specifi durat standard 24 hour day ad number day multipli 86400 obtain number add base standard definit day 24 hour instanc immut unaffect call daystoadd day add posit negat Duration::Duration base durat specifi day ad null
Duration::plusHours return copi durat specifi durat hour ad instanc immut unaffect call hourstoadd hour add posit negat Duration::Duration base durat specifi hour ad null
Duration::plusMinutes return copi durat specifi durat minut ad instanc immut unaffect call minutestoadd minut add posit negat Duration::Duration base durat specifi minut ad null
Duration::plusSeconds return copi durat specifi durat ad instanc immut unaffect call secondstoadd add posit negat Duration::Duration base durat specifi ad null
Duration::plusMillis return copi durat specifi durat millisecond ad instanc immut unaffect call millistoadd millisecond add posit negat Duration::Duration base durat specifi millisecond ad null
Duration::plusNanos return copi durat specifi durat nanosecond ad instanc immut unaffect call nanostoadd nanosecond add posit negat Duration::Duration base durat specifi nanosecond ad null
Duration::plus return copi durat specifi durat ad instanc immut unaffect call secondstoadd add posit negat nanostoadd nano add posit negat Duration::Duration base durat specifi ad null
Duration::minus return copi durat specifi durat subtract instanc immut unaffect call durat durat subtract posit negat null Duration::Duration base durat specifi durat subtract null
Duration::minus return copi durat specifi durat subtract durat amount measur term specifi unit subset unit accept unit treat 24 hour unit throw instanc immut unaffect call amounttosubtract amount period measur term unit posit negat unit unit period measur exact durat null Duration::Duration base durat specifi durat subtract null
Duration::minusDays return copi durat specifi durat standard 24 hour day subtract number day multipli 86400 obtain number subtract base standard definit day 24 hour instanc immut unaffect call daystosubtract day subtract posit negat Duration::Duration base durat specifi day subtract null
Duration::minusHours return copi durat specifi durat hour subtract number hour multipli 3600 obtain number subtract instanc immut unaffect call hourstosubtract hour subtract posit negat Duration::Duration base durat specifi hour subtract null
Duration::minusMinutes return copi durat specifi durat minut subtract number hour multipli 60 obtain number subtract instanc immut unaffect call minutestosubtract minut subtract posit negat Duration::Duration base durat specifi minut subtract null
Duration::minusSeconds return copi durat specifi durat subtract instanc immut unaffect call secondstosubtract subtract posit negat Duration::Duration base durat specifi subtract null
Duration::minusMillis return copi durat specifi durat millisecond subtract instanc immut unaffect call millistosubtract millisecond subtract posit negat Duration::Duration base durat specifi millisecond subtract null
Duration::minusNanos return copi durat specifi durat nanosecond subtract instanc immut unaffect call nanostosubtract nanosecond subtract posit negat Duration::Duration base durat specifi nanosecond subtract null
Duration::multipliedBy return copi durat multipli scalar instanc immut unaffect call multiplicand valu multipli durat posit negat Duration::Duration base durat multipli specifi scalar null
Duration::dividedBy return copi durat divid specifi valu instanc immut unaffect call divisor valu divid durat posit negat zero Duration::Duration base durat divid specifi divisor null
Duration::toSeconds convert durat total length fraction nanosecond express BigDecimal::BigDecimal total length durat scale null
Duration::create creat instanc Duration::Duration number number scale posit negat Duration::Duration null
Duration::negated return copi durat length negat swap sign total length durat exampl pt1 3s return pt 3s instanc immut unaffect call Duration::Duration base durat amount negat null
Duration::abs return copi durat posit length return posit durat effect remov sign negat total length exampl pt 3s return pt1 3s instanc immut unaffect call Duration::Duration base durat absolut length null
Duration::compareTo compar durat specifi Duration::Duration comparison base total length durat consist equal defin otherdur durat compar null compar valu negat posit greater
Duration::equals check durat equal specifi Duration::Duration comparison base total length durat otherdur durat null return fals durat equal
Duration::toString string represent durat use iso 8601 base represent pt8h6m12 345s format return string ptnhnmns where relev hour minut part durat fraction place decim point section section zero valu omit hour minut sign exampl note multipl 24 hour output day avoid confus Period::Period iso 8601 represent durat null
YearMonth::YearMonth year month iso 8601 calendar system 2007 12 YearMonth::YearMonth immut date time object repres combin year month field deriv year month quarter year obtain store repres day time time zone exampl valu octob 2007 store YearMonth::YearMonth iso 8601 calendar system modern civil calendar system world equival prolept gregorian calendar system rule leap year appli time applic written iso 8601 rule entir suitabl make use histor date requir accur find iso 8601 approach unsuit use ident sensit oper includ refer equal ident hash synchron instanc YearMonth::YearMonth unpredict result avoid equal comparison immut thread safe
YearMonth::of obtain instanc YearMonth::YearMonth year month year year repres min year max year month month year repres null year month null
YearMonth::of obtain instanc YearMonth::YearMonth year month year year repres min year max year month month year repres januari 12 decemb year month null
YearMonth::from obtain instanc YearMonth::YearMonth tempor object obtain year month base specifi tempor TemporalAccessor::TemporalAccessor repres arbitrari set date time factori convert instanc YearMonth::YearMonth convers extract field extract permit tempor object iso chronolog convert LocalDate::LocalDate match signatur function interfac allow queri refer YearMonth::from tempor tempor object convert null year month null
YearMonth::parse obtain instanc YearMonth::YearMonth text string 2007 12 string repres valid year month format uuuu mm year rang 0000 9999 prefix symbol text text pars 2007 12 null pars year month null
YearMonth::parse obtain instanc YearMonth::YearMonth text string use specif formatt text pars use formatt return year month text text pars null formatt formatt use null pars year month null
YearMonth::YearMonth Constructor::Constructor year year repres valid min year max year month month year repres valid januari 12 decemb
YearMonth::getMonth get month year field use Month::Month enum return enum month avoid confus int valu mean access primit int valu enum provid month year null
YearMonth::lengthOfMonth return length month take account year return length month day exampl date januari return 31 length month day 28 31
YearMonth::with return adjust copi year month return YearMonth::YearMonth base year month adjust adjust take place use specifi adjust strategi object read document adjust understand adjust made adjust simpli set field year field complex adjust set year month month halley comet pass earth result obtain invok specifi adjust pass argument instanc immut unaffect call adjust adjust use null YearMonth::YearMonth base adjust made null
YearMonth::with return copi year month specifi field set valu return YearMonth::YearMonth base valu specifi field chang chang support field year month set valu field support reason thrown field adjust implement support field behav follow month year return YearMonth::YearMonth specifi month year year unchang prolept month return YearMonth::YearMonth specifi prolept month complet replac year month object year era return YearMonth::YearMonth specifi year era month era unchang year return YearMonth::YearMonth specifi year month unchang era return YearMonth::YearMonth specifi era month year era unchang case valu valid rang valu field DateTimeException::DateTimeException thrown ChronoField::ChronoField instanc throw UnsupportedTemporalTypeException::UnsupportedTemporalTypeException field ChronoField::ChronoField result obtain invok temporalfield adjustinto tempor pass argument case field determin adjust instant instanc immut unaffect call field field set result null newvalu valu field result YearMonth::YearMonth base specifi field set null
YearMonth::withYear return copi YearMonth::YearMonth year alter instanc immut unaffect call year year set return year month min year max year YearMonth::YearMonth base year month request year null
YearMonth::withMonth return copi YearMonth::YearMonth month year alter instanc immut unaffect call month month year set return year month januari 12 decemb YearMonth::YearMonth base year month request month null
YearMonth::plus return copi year month specifi amount ad return YearMonth::YearMonth base specifi amount ad amount typic type implement interfac calcul deleg amount object call amount implement free implement addit wish typic call consult document amount implement determin success ad instanc immut unaffect call amounttoadd amount add null YearMonth::YearMonth base year month addit made null
YearMonth::plus return copi year month specifi amount ad return YearMonth::YearMonth base amount term unit ad add amount unit support reason thrown field addit implement support field behav follow month return YearMonth::YearMonth specifi number month ad equival year return YearMonth::YearMonth specifi number year ad equival decad return YearMonth::YearMonth specifi number decad ad equival call amount multipli 10 centuri return YearMonth::YearMonth specifi number centuri ad equival call amount multipli 100 millennia return YearMonth::YearMonth specifi number millennia ad equival call amount multipli 000 era return YearMonth::YearMonth specifi number era ad era support amount zero amount non zero year chang year era unchang ChronoUnit::ChronoUnit instanc throw UnsupportedTemporalTypeException::UnsupportedTemporalTypeException field ChronoUnit::ChronoUnit result obtain invok temporalunit addto tempor pass argument case unit determin perform addit instanc immut unaffect call amounttoadd amount unit add result negat unit unit amount add null YearMonth::YearMonth base year month specifi amount ad null
YearMonth::plusYears return copi year month specifi period year ad instanc immut unaffect call yearstoadd year add negat YearMonth::YearMonth base year month year ad null
YearMonth::plusMonths return copi year month specifi period month ad instanc immut unaffect call monthstoadd month add negat YearMonth::YearMonth base year month month ad null
YearMonth::minus return copi year month specifi amount subtract return YearMonth::YearMonth base specifi amount subtract amount typic type implement interfac calcul deleg amount object call amount implement free implement subtract wish typic call consult document amount implement determin success subtract instanc immut unaffect call amounttosubtract amount subtract null YearMonth::YearMonth base year month subtract made null
YearMonth::minus return copi year month specifi amount subtract return YearMonth::YearMonth base amount term unit subtract subtract amount unit support reason thrown equival amount negat see full descript addit thus subtract work instanc immut unaffect call amounttosubtract amount unit subtract result negat unit unit amount subtract null YearMonth::YearMonth base year month specifi amount subtract null
YearMonth::minusYears return copi year month specifi period year subtract instanc immut unaffect call yearstosubtract year subtract negat YearMonth::YearMonth base year month year subtract null
YearMonth::minusMonths return copi year month specifi period month subtract instanc immut unaffect call monthstosubtract month subtract negat YearMonth::YearMonth base year month month subtract null
YearMonth::until calcul amount time year month term specifi unit calcul amount time YearMonth::YearMonth object term singl TemporalUnit::TemporalUnit start end point specifi year month result negat end start Temporal::Temporal pass convert YearMonth::YearMonth use exampl period year year month calcul use startyearmonth endyearmonth year calcul return number repres number complet unit year month exampl period decad 2012 06 2032 05 decad month decad equival use first invok use choic made base make readabl calcul implement unit month year decad centuri millennia era support ChronoUnit::ChronoUnit valu throw unit ChronoUnit::ChronoUnit result obtain invok temporalunit tempor Temporal::Temporal pass first argument convert input tempor argument instanc immut unaffect call endexclus end date exclus convert YearMonth::YearMonth null unit unit measur amount null amount time year month end year month
YearMonth::atDay combin year month day month creat LocalDate::LocalDate return LocalDate::LocalDate form year month specifi day month day month valu valid year month part chain produc date dayofmonth day month use 31 date form year month specifi day null
YearMonth::atEndOfMonth return LocalDate::LocalDate end month return LocalDate::LocalDate base year month day month set last valid day month take account leap year part chain produc date last valid date year month null
YearMonth::toString output year month String::String 2007 12 output format uuuu mm string represent year month null
OffsetTime::of obtain instanc OffsetTime::OffsetTime hour minut nanosecond creat offset time specifi field exist primarili write test case non test typic use creat offset time LocalTime::LocalTime addit conveni variant equival factori take fewer argument reduc footprint hour hour day repres 23 minut minut hour repres 59 minut repres 59 nanoofsecond nano repres 999 999 999 offset zone offset null offset time null
OffsetTime::ofInstant obtain instanc OffsetTime::OffsetTime Instant::Instant zone creat offset time instant specifi find offset utc greenwich valid offset instant date compon instant drop convers mean convers fail due instant valid rang date instant instant creat time null zone time zone offset null offset time null
OffsetTime::from obtain instanc OffsetTime::OffsetTime tempor object obtain offset time base specifi tempor TemporalAccessor::TemporalAccessor repres arbitrari set date time factori convert instanc OffsetTime::OffsetTime convers extract combin ZoneOffset::ZoneOffset LocalTime::LocalTime tempor object implement permit perform optim access field equival relev object match signatur function interfac allow queri refer OffsetTime::from tempor tempor object convert null offset time null
OffsetTime::OffsetTime Constructor::Constructor time local time null offset zone offset null
OffsetTime::withOffsetSameLocal return copi OffsetTime::OffsetTime specifi offset ensur result local time return object LocalTime::LocalTime specifi ZoneOffset::ZoneOffset calcul perform exampl time repres 1030 0200 offset specifi 0300 return 1030 0300 take account differ offset adjust time field use instanc immut unaffect call offset zone offset chang null OffsetTime::OffsetTime base time request offset null
OffsetTime::withOffsetSameInstant return copi OffsetTime::OffsetTime specifi offset ensur result instant impli day return object specifi ZoneOffset::ZoneOffset LocalTime::LocalTime adjust differ offset result old object repres instant impli day use find local time offset exampl time repres 1030 0200 offset specifi 0300 return 1130 0300 chang offset adjust local time use instanc immut unaffect call offset zone offset chang null OffsetTime::OffsetTime base time request offset null
OffsetTime::toLocalTime get LocalTime::LocalTime part date time return LocalTime::LocalTime hour minut nanosecond date time time part date time null
OffsetTime::with return adjust copi time return OffsetTime::OffsetTime base time adjust adjust take place use specifi adjust strategi object read document adjust understand adjust made adjust simpli set field hour field complex adjust set time last hour day implement TemporalAdjuster::TemporalAdjuster thus chang time offset result obtain invok specifi adjust pass argument instanc immut unaffect call adjust adjust use null OffsetTime::OffsetTime base adjust made null
OffsetTime::with return copi time specifi field set valu return OffsetTime::OffsetTime base valu specifi field chang chang support field hour minut set valu field support reason thrown field adjust implement offset field return time specifi offset local time unalt offset valu valid rang DateTimeException::DateTimeException thrown behav match LocalTime::LocalTime case offset part calcul unchang ChronoField::ChronoField instanc throw UnsupportedTemporalTypeException::UnsupportedTemporalTypeException field ChronoField::ChronoField result obtain invok temporalfield adjustinto tempor pass argument case field determin adjust instant instanc immut unaffect call field field set result null newvalu valu field result OffsetTime::OffsetTime base specifi field set null
OffsetTime::toString output time String::String 101530 0100 output iso 8601 format hhmmxxxxx hhmmssxxxxx hhmmss sssxxxxx hhmmss ssssssxxxxx hhmmss sssssssssxxxxx format shortest output full valu time where omit part impli zero string represent time null
DayOfWeek::DayOfWeek day week tuesday DayOfWeek::DayOfWeek enum repres day week monday tuesday wednesday thursday friday saturday sunday addit textual enum name day week int valu int valu follow iso 8601 standard monday sunday recommend applic use enum int valu ensur clariti enum provid access local textual form day week local assign numer valu day declar sunday valu provid support see local week number use ordin obtain numer represent DayOfWeek::DayOfWeek use getvalu instead enum repres common concept found calendar system enum calendar system day week concept defin exact equival iso calendar system immut thread safe enum
DayOfWeek::MONDAY singleton instanc day week monday numer valu
DayOfWeek::FRIDAY singleton instanc day week friday numer valu
DayOfWeek::of obtain instanc DayOfWeek::DayOfWeek int valu DayOfWeek::DayOfWeek enum repres day week factori allow enum obtain int valu int valu follow iso 8601 standard monday sunday dayofweek day week repres monday sunday day week singleton null
DayOfWeek::from obtain instanc DayOfWeek::DayOfWeek tempor object obtain day week base specifi tempor TemporalAccessor::TemporalAccessor repres arbitrari set date time factori convert instanc DayOfWeek::DayOfWeek convers extract field match signatur function interfac allow queri refer DayOfWeek::from tempor tempor object convert null day week null
DayOfWeek::getValue get day week int valu valu number iso 8601 standard monday sunday see local week number day week monday sunday
DayOfWeek::getDisplayName get textual represent mon friday return textual name identifi day week suitabl user paramet control style return text local textual map found return style length text requir null local local use null text valu day week null
DayOfWeek::plus return day week specifi number day calcul roll end week sunday monday specifi period negat instanc immut unaffect call day day add posit negat result day week null
DayOfWeek::adjustInto adjust specifi tempor object day week return tempor object observ type input day week chang adjust equival use pass field note adjust forward backward monday sunday week see local week start day see TemporalAdjuster::TemporalAdjuster adjust control monday case clearer revers call pattern use exampl given date wednesday output instanc immut unaffect call tempor target object adjust null adjust object null
Instant::Instant instantan point time line model singl instantan point time line record event time stamp practic instant store constraint measur time line restrict number held greater current estim age univers instant store nanosecond resolut rang instant requir storag number larger achiev store repres epoch int repres nanosecond 999 999 999 epoch measur standard epoch 1970 01 01t000000z where instant epoch posit valu earlier instant negat valu epoch nanosecond part larger valu time line smaller valu time scale length solar day standard human measur time tradit subdivid 24 hour 60 minut 60 form 86400 day modern timekeep base atom clock precis defin si relat transit caesium atom length si defin close 86400th fraction day unfortun earth rotat length day vari addit time averag length day get longer earth slow result length solar day 2012 slight longer 86400 si actual length given day amount earth slow predict determin measur ut1 time scale captur accur length day avail time day complet utc time scale standard approach bundl addit fraction ut1 known leap leap ad remov depend earth rotat chang utc permit day 86399 si 86401 si where necessari order keep day align sun modern utc time scale introduc 1972 introduc concept leap 1958 1972 definit utc complex minor sub leap alter length notion 2012 discuss underway chang definit utc potenti remov leap introduc chang given complex accur timekeep describ defin time scale time scale time scale divid calendar day exact 86400 subdivis known differ si close match de facto intern civil time scale definit chang time time time scale slight definit segment time line base consensus intern time scale basi civil time intern agre time scale modifi replac segment time scale defin segment meet requir time scale close match intern civil time scale time scale exact match intern civil time scale noon day time scale precis defin relationship intern civil time scale current 2013 segment time scale segment 1972 11 03 exact boundari discuss further notic consensus intern time scale utc leap segment time scale ident ident utc day leap day leap leap spread equal last 1000 day maintain appear exact 86400 day segment prior 1972 11 03 extend arbitrarili consensus intern time scale defin ut1 appli prolept equival mean solar time prime meridian greenwich segment time scale ident consensus intern time scale exact boundari segment instant where ut1 utc 1972 11 03t0000 1972 11 04t1200 implement time scale use jsr 310 requir provid clock sub accur progress monoton smooth implement therefor requir actual perform utc sls slew awar leap jsr 310 requir implement document approach use defin clock repres current instant see detail avail clock time scale date time includ Instant::Instant LocalDate::LocalDate LocalTime::LocalTime OffsetDateTime::OffsetDateTime ZonedDateTime::ZonedDateTime Duration::Duration use ident sensit oper includ refer equal ident hash synchron instanc Instant::Instant unpredict result avoid equal comparison immut thread safe
Instant::EPOCH constant 1970 01 01t000000z epoch instant
Instant::MIN minimum support Instant::Instant 1000000000 01 01t0000z instant year earlier minimum LocalDateTime::LocalDateTime provid suffici valu handl rang ZoneOffset::ZoneOffset affect instant addit local date time valu chosen valu year fit int
Instant::MAX maximum support Instant::Instant 1000000000 12 31t235959 999999999z futur instant year maximum LocalDateTime::LocalDateTime provid suffici valu handl rang ZoneOffset::ZoneOffset affect instant addit local date time valu chosen valu year fit int
Instant::now obtain current instant system clock queri obtain current instant use prevent abil use altern time sourc test clock effect current instant use system clock null
Instant::now obtain current instant specifi clock queri specifi clock obtain current time use allow use altern clock test altern clock introduc use clock clock use null current instant null
Instant::ofEpochSecond obtain instanc Instant::Instant use epoch 1970 01 01t000000z nanosecond field set zero epochsecond number 1970 01 01t000000z instant null
Instant::ofEpochSecond obtain instanc Instant::Instant use epoch 1970 01 01t000000z nanosecond fraction allow arbitrari number nanosecond pass factori alter valu nanosecond order ensur store nanosecond rang 999 999 999 exampl result exact instant epochsecond number 1970 01 01t000000z nanoadjust nanosecond adjust number posit negat instant null
Instant::ofEpochMilli obtain instanc Instant::Instant use millisecond epoch 1970 01 01t000000z nanosecond extract specifi millisecond epochmilli number millisecond 1970 01 01t000000z instant null
Instant::from obtain instanc Instant::Instant tempor object obtain instant base specifi tempor TemporalAccessor::TemporalAccessor repres arbitrari set date time factori convert instanc Instant::Instant convers extract field match signatur function interfac allow queri refer Instant::from tempor tempor object convert null instant null
Instant::parse obtain instanc Instant::Instant text string 2007 12 03t101530 00z string repres valid instant utc pars use text text pars null pars instant null
Instant::create obtain instanc Instant::Instant use nanosecond length durat nanoofsecond nano 999 999 999
Instant::Instant construct instanc Instant::Instant use epoch 1970 01 01t000000z nanosecond fraction epochsecond number 1970 01 01t000000z nano nanosecond posit
Instant::with return adjust copi instant return Instant::Instant base instant adjust adjust take place use specifi adjust strategi object read document adjust understand adjust made result obtain invok specifi adjust pass argument instanc immut unaffect call adjust adjust use null Instant::Instant base adjust made null
Instant::with return copi instant specifi field set valu return Instant::Instant base valu specifi field chang set valu field support reason thrown field adjust implement support field behav follow nano return Instant::Instant specifi nano epoch unchang micro return Instant::Instant nano replac specifi micro multipli 000 epoch unchang milli return Instant::Instant nano replac specifi milli multipli 000 000 epoch unchang instant return Instant::Instant specifi epoch nano unchang case valu valid rang valu field DateTimeException::DateTimeException thrown ChronoField::ChronoField instanc throw UnsupportedTemporalTypeException::UnsupportedTemporalTypeException field ChronoField::ChronoField result obtain invok temporalfield adjustinto tempor pass argument case field determin adjust instant instanc immut unaffect call field field set result null newvalu valu field result Instant::Instant base specifi field set null
Instant::truncatedTo return copi Instant::Instant truncat specifi unit truncat instant return copi origin field smaller specifi unit set zero field calcul basi use utc offset seen tostr exampl truncat unit nearest minut set nanosecond zero unit divid length standard day remaind includ suppli time unit unit throw instanc immut unaffect call unit unit truncat null Instant::Instant base instant time truncat null
Instant::plus return copi instant specifi amount ad return Instant::Instant base specifi amount ad amount typic type implement interfac calcul deleg amount object call amount implement free implement addit wish typic call consult document amount implement determin success ad instanc immut unaffect call amounttoadd amount add null Instant::Instant base instant addit made null
Instant::plus return copi instant specifi amount ad return Instant::Instant base amount term unit ad add amount unit support reason thrown field addit implement support field behav follow nano return Instant::Instant specifi number nanosecond ad equival micro return Instant::Instant specifi number microsecond ad equival amount multipli 000 milli return Instant::Instant specifi number millisecond ad equival amount multipli 000 000 return Instant::Instant specifi number ad equival minut return Instant::Instant specifi number minut ad equival amount multipli 60 hour return Instant::Instant specifi number hour ad equival amount multipli 600 half day return Instant::Instant specifi number half day ad equival amount multipli 43 200 12 hour day return Instant::Instant specifi number day ad equival amount multipli 86 400 24 hour ChronoUnit::ChronoUnit instanc throw UnsupportedTemporalTypeException::UnsupportedTemporalTypeException field ChronoUnit::ChronoUnit result obtain invok temporalunit addto tempor pass argument case unit determin perform addit instanc immut unaffect call amounttoadd amount unit add result negat unit unit amount add null Instant::Instant base instant specifi amount ad null
Instant::plusSeconds return copi instant specifi durat ad instanc immut unaffect call secondstoadd add posit negat Instant::Instant base instant specifi ad null
Instant::plusMillis return copi instant specifi durat millisecond ad instanc immut unaffect call millistoadd millisecond add posit negat Instant::Instant base instant specifi millisecond ad null
Instant::plusNanos return copi instant specifi durat nanosecond ad instanc immut unaffect call nanostoadd nanosecond add posit negat Instant::Instant base instant specifi nanosecond ad null
Instant::plus return copi instant specifi durat ad instanc immut unaffect call secondstoadd add posit negat nanostoadd nano add posit negat Instant::Instant base instant specifi ad null
Instant::minus return copi instant specifi amount subtract return Instant::Instant base specifi amount subtract amount typic type implement interfac calcul deleg amount object call amount implement free implement subtract wish typic call consult document amount implement determin success subtract instanc immut unaffect call amounttosubtract amount subtract null Instant::Instant base instant subtract made null
Instant::minus return copi instant specifi amount subtract return Instant::Instant base amount term unit subtract subtract amount unit support reason thrown equival amount negat see full descript addit thus subtract work instanc immut unaffect call amounttosubtract amount unit subtract result negat unit unit amount subtract null Instant::Instant base instant specifi amount subtract null
Instant::minusSeconds return copi instant specifi durat subtract instanc immut unaffect call secondstosubtract subtract posit negat Instant::Instant base instant specifi subtract null
Instant::minusMillis return copi instant specifi durat millisecond subtract instanc immut unaffect call millistosubtract millisecond subtract posit negat Instant::Instant base instant specifi millisecond subtract null
Instant::minusNanos return copi instant specifi durat nanosecond subtract instanc immut unaffect call nanostosubtract nanosecond subtract posit negat Instant::Instant base instant specifi nanosecond subtract null
Instant::until calcul amount time instant term specifi unit calcul amount time Instant::Instant object term singl TemporalUnit::TemporalUnit start end point specifi instant result negat end start calcul return number repres number complet unit instant Temporal::Temporal pass convert Instant::Instant use exampl amount day date calcul use startinst endinst equival use first invok use choic made base make readabl calcul implement unit nano micro milli minut hour half day day support ChronoUnit::ChronoUnit valu throw unit ChronoUnit::ChronoUnit result obtain invok temporalunit tempor Temporal::Temporal pass first argument convert input tempor argument instanc immut unaffect call endexclus end date exclus convert Instant::Instant null unit unit measur amount null amount time instant end instant
Period::Period date base amount time iso 8601 calendar system year month day model quantiti amount time term year month day see time base equival durat period differ treatment daylight save time ad Duration::Duration add exact number thus durat day exact 24 hour contrast Period::Period add conceptu day tri maintain local time exampl consid ad period day durat day 1800 daylight save gap Period::Period add conceptu day result ZonedDateTime::ZonedDateTime 1800 day contrast Duration::Duration add exact 24 hour result ZonedDateTime::ZonedDateTime 1900 day assum hour dst gap support unit period field set zero iso 8601 calendar system modern civil calendar system world equival prolept gregorian calendar system rule leap year appli time period model direct amount time mean individu part period negat use ident sensit oper includ refer equal ident hash synchron instanc Period::Period unpredict result avoid equal comparison immut thread safe
Period::ofYears obtain Period::Period repres number year result period specifi year month day unit zero year number year posit negat period year null
Period::ofMonths obtain Period::Period repres number month result period specifi month year day unit zero month number month posit negat period month null
Period::ofWeeks obtain Period::Period repres number week result period day base amount day equal number week multipli year month unit zero week number week posit negat period input week convert day null
Period::ofDays obtain Period::Period repres number day result period specifi day year month unit zero day number day posit negat period day null
Period::of obtain Period::Period repres number year month day creat instanc base year month day year amount year negat month amount month negat day amount day negat period year month day null
Period::from obtain instanc Period::Period tempor amount obtain period base specifi amount TemporalAmount::TemporalAmount repres amount time date base time base factori extract Period::Period convers loop set unit amount use unit creat period unit found thrown amount ChronoPeriod::ChronoPeriod use iso chronolog amount tempor amount convert null equival period null
Period::parse obtain Period::Period text string pnynmnd pars string produc tostr base iso 8601 period format pnynmnd pnw string start option sign denot ascii negat posit symbol negat period negat ascii letter upper lower case section consist number suffix section section suffix ascii year month week day accept upper lower case suffix occur order number part section consist ascii digit number prefix ascii negat posit symbol number pars int lead sign negat valu unit part iso 8601 standard addit iso 8601 permit mix pnynmnd pnw format week base input multipli treat number day exampl valid input text text pars null pars period null
Period::between obtain Period::Period consist number year month day date start date includ end date period calcul remov complet month calcul remain number day adjust ensur sign number month split year month base 12 month year month consid end day month greater equal start day month exampl 2010 01 15 2011 03 18 year month day result negat period end start negat sign year month day startdateinclus start date inclus null enddateexclus end date exclus null period date end date null
Period::Period Constructor::Constructor year amount month amount day amount
Period::getYears get amount year period return year unit month unit automat normal year unit mean period 15 month period year month amount year period negat
Period::getMonths get amount month period return month unit month unit automat normal year unit mean period 15 month period year month amount month period negat
Period::getDays get amount day period return day unit amount day period negat
Period::withYears return copi period specifi amount year set amount year unit copi period month day unit unaffect month unit automat normal year unit mean period 15 month period year month instanc immut unaffect call year year repres negat Period::Period base period request year null
Period::withMonths return copi period specifi amount month set amount month unit copi period year day unit unaffect month unit automat normal year unit mean period 15 month period year month instanc immut unaffect call month month repres negat Period::Period base period request month null
Period::withDays return copi period specifi amount day set amount day unit copi period year month unit unaffect instanc immut unaffect call day day repres negat Period::Period base period request day null
Period::plus return copi period specifi period ad oper separ year month day normal perform exampl year month day year month day return year month day specifi amount typic instanc Period::Period type interpret use instanc immut unaffect call amounttoadd period add null Period::Period base period request period ad null
Period::plusYears return copi period specifi year ad add amount year unit copi period month day unit unaffect exampl year month day year return year month day instanc immut unaffect call yearstoadd year add posit negat Period::Period base period specifi year ad null
Period::plusMonths return copi period specifi month ad add amount month unit copi period year day unit unaffect exampl year month day month return year month day instanc immut unaffect call monthstoadd month add posit negat Period::Period base period specifi month ad null
Period::plusDays return copi period specifi day ad add amount day unit copi period year month unit unaffect exampl year month day day return year month day instanc immut unaffect call daystoadd day add posit negat Period::Period base period specifi day ad null
Period::minus return copi period specifi period subtract oper separ year month day normal perform exampl year month day year month day return year month day specifi amount typic instanc Period::Period type interpret use instanc immut unaffect call amounttosubtract period subtract null Period::Period base period request period subtract null
Period::minusYears return copi period specifi year subtract subtract amount year unit copi period month day unit unaffect exampl year month day year return year month day instanc immut unaffect call yearstosubtract year subtract posit negat Period::Period base period specifi year subtract null
Period::minusMonths return copi period specifi month subtract subtract amount month unit copi period year day unit unaffect exampl year month day month return year month day instanc immut unaffect call monthstosubtract year subtract posit negat Period::Period base period specifi month subtract null
Period::minusDays return copi period specifi day subtract subtract amount day unit copi period year month unit unaffect exampl year month day day return year month day instanc immut unaffect call daystosubtract month subtract posit negat Period::Period base period specifi day subtract null
Period::multipliedBy return instanc element period multipli specifi scalar return period year month day unit individu multipli exampl period year month day multipli return year month 12 day normal perform scalar scalar multipli null Period::Period base period amount multipli scalar null
Period::negated return instanc amount period negat return period year month day unit individu negat exampl period year month day negat year month day normal perform Period::Period base period amount negat null
Period::normalized return copi period year month normal normal year month unit leav day unit unchang month unit adjust absolut valu 11 year unit adjust compens exampl period Year::Year 15 month normal year month sign year month unit normal exampl period year 25 month normal year month instanc immut unaffect call Period::Period base period excess month normal year null
Period::addTo add period specifi tempor object return tempor object observ type input period ad tempor chronolog iso chronolog case clearer revers call pattern use calcul oper follow first chronolog tempor check ensur iso chronolog null month zero year ad non zero combin year month ad non zero final day ad approach ensur partial period ad partial date exampl period year month ad YearMonth::YearMonth period includ day approach add year month necessari ensur correct behaviour end month instanc immut unaffect call tempor tempor object adjust null object type adjust made null
Period::subtractFrom subtract period specifi tempor object return tempor object observ type input period subtract tempor chronolog iso chronolog case clearer revers call pattern use calcul oper follow first chronolog tempor check ensur iso chronolog null month zero year subtract non zero combin year month subtract non zero final day subtract approach ensur partial period subtract partial date exampl period year month subtract YearMonth::YearMonth period includ day approach subtract year month necessari ensur correct behaviour end month instanc immut unaffect call tempor tempor object adjust null object type adjust made null
Period::equals check period equal period comparison base type Period::Period amount equal year month day unit individu equal note mean period 15 month equal period Year::Year month obj object check null return fals equal period
Period::toString output period String::String p6y3m1d output iso 8601 period format zero period repres zero day p0d string represent period null
Clock::Clock Constructor::Constructor access subclass
MonthDay::from obtain instanc MonthDay::MonthDay tempor object obtain month day base specifi tempor TemporalAccessor::TemporalAccessor repres arbitrari set date time factori convert instanc MonthDay::MonthDay convers extract field extract permit tempor object iso chronolog convert LocalDate::LocalDate match signatur function interfac allow queri refer MonthDay::from tempor tempor object convert null month day null
MonthDay::MonthDay Constructor::Constructor previous valid month month year repres valid 12 dayofmonth day month repres valid 29 31
MonthDay::getMonth get month year field use Month::Month enum return enum month avoid confus int valu mean access primit int valu enum provid month year null
MonthDay::atYear combin month day year creat LocalDate::LocalDate return LocalDate::LocalDate form month day specifi year month day februari 29th adjust februari 28th result date year leap year instanc immut unaffect call year year use min year max year local date form month day specifi year null
MonthDay::toString output month day String::String 12 03 output format mm dd string represent month day null
ZoneOffset::ZoneOffset Constructor::Constructor ZoneOffset::totalSeconds total time zone offset 64800 64800
ZoneOffset::toString output offset String::String use normal string represent offset null
ZonedDateTime::ZonedDateTime date time time zone iso 8601 calendar system 2007 12 03t101530 0100 europ pari ZonedDateTime::ZonedDateTime immut represent date time time zone store date time field precis nanosecond time zone zone offset handl ambigu local date time exampl valu 2nd octob 2007 1345 30 123456789 0200 europ pari time zone store ZonedDateTime::ZonedDateTime handl convers local time line LocalDateTime::LocalDateTime instant time line Instant::Instant differ time line offset utc greenwich repres ZoneOffset::ZoneOffset convert time line involv calcul offset use access ZoneId::ZoneId obtain offset instant exact valid offset instant contrast obtain offset local date time straightforward case normal valid offset vast major year normal case appli where singl valid offset local date time gap zero valid offset clock jump forward typic due spring daylight save chang winter summer gap local date time valu valid offset overlap valid offset clock set typic due autumn daylight save chang summer winter overlap local date time valu valid offset convert implicit local date time instant obtain offset potenti complic gap general strategi local date time fall middl gap result zone date time local date time shift forward length gap result date time offset typic summer time overlap general strategi local date time fall middl overlap previous offset retain previous offset previous offset invalid earlier offset typic summer time addit manag case overlap term design view primarili combin LocalDateTime::LocalDateTime ZoneId::ZoneId ZoneOffset::ZoneOffset vital secondari ensur repres instant especi daylight save overlap use ident sensit oper includ refer equal ident hash synchron instanc ZonedDateTime::ZonedDateTime unpredict result avoid equal comparison ZonedDateTime::ZonedDateTime hold state equival separ object LocalDateTime::LocalDateTime ZoneId::ZoneId resolv ZoneOffset::ZoneOffset offset local date time defin instant necessari zone obtain rule offset chang offset freeli set zone control offset valid immut thread safe
ZonedDateTime::of obtain instanc ZonedDateTime::ZonedDateTime year month day hour minut nanosecond time zone creat zone date time match local date time seven specifi field close time zone rule daylight save mean local date time valid specifi zone thus local date time adjust local date time resolv singl instant time line achiev find valid offset utc greenwich local date time defin zone case valid offset local date time case overlap clock set valid offset use earlier offset typic correspond summer case gap clock jump forward valid offset instead local date time adjust length gap typic hour daylight save chang local date time move hour offset typic correspond summer exist primarili write test case non test typic use creat offset time LocalDateTime::LocalDateTime addit conveni variant equival factori take fewer argument reduc footprint year year repres min year max year month month year repres januari 12 decemb dayofmonth day month repres 31 hour hour day repres 23 minut minut hour repres 59 minut repres 59 nanoofsecond nano repres 999 999 999 zone time zone null offset date time null
ZonedDateTime::ofInstant obtain instanc ZonedDateTime::ZonedDateTime Instant::Instant creat zone date time instant specifi call return instant equal convert instant zone date time valid offset instant instant instant creat date time null zone time zone null zone date time null
ZonedDateTime::ofInstant obtain instanc ZonedDateTime::ZonedDateTime instant form combin local date time offset creat zone date time LocalDateTime::LocalDateTime ZoneOffset::ZoneOffset combin uniqu specifi instant ambigu convert instant zone date time valid offset instant valid offset offset specifi date time offset zone date time differ specifi ZoneId::ZoneId ZoneOffset::ZoneOffset equival localdatetim local date time null offset zone offset null zone time zone null zone date time null
ZonedDateTime::from obtain instanc ZonedDateTime::ZonedDateTime tempor object obtain zone date time base specifi tempor TemporalAccessor::TemporalAccessor repres arbitrari set date time factori convert instanc ZonedDateTime::ZonedDateTime convers first obtain ZoneId::ZoneId tempor object fall ZoneOffset::ZoneOffset necessari obtain Instant::Instant fall LocalDateTime::LocalDateTime necessari result combin ZoneId::ZoneId ZoneOffset::ZoneOffset Instant::Instant LocalDateTime::LocalDateTime implement permit perform optim access field equival relev object match signatur function interfac allow queri refer ZonedDateTime::from tempor tempor object convert null zone date time null
ZonedDateTime::ZonedDateTime Constructor::Constructor datetim date time valid null offset zone offset valid null zone time zone valid null
ZonedDateTime::toLocalDateTime get LocalDateTime::LocalDateTime part date time return LocalDateTime::LocalDateTime year month day time date time local date time part date time null
ZonedDateTime::toLocalDate get LocalDate::LocalDate part date time return LocalDate::LocalDate year month day date time date part date time null
ZonedDateTime::getMonth get month year field use Month::Month enum return enum month avoid confus int valu mean access primit int valu enum provid month year null
ZonedDateTime::getDayOfWeek get day week field enum DayOfWeek::DayOfWeek return enum day week avoid confus int valu mean access primit int valu enum provid addit obtain DayOfWeek::DayOfWeek includ textual name valu day week null
ZonedDateTime::toLocalTime get LocalTime::LocalTime part date time return LocalTime::LocalTime hour minut nanosecond date time time part date time null
ZonedDateTime::with return adjust copi date time return ZonedDateTime::ZonedDateTime base date time adjust adjust take place use specifi adjust strategi object read document adjust understand adjust made adjust simpli set field year field complex adjust set date last day month select common adjust includ find last day month wednesday Key::Key date time implement TemporalAdjuster::TemporalAdjuster interfac adjust respons handl case vari length month leap year exampl return date last day juli implement TemporalAdjuster::TemporalAdjuster thus chang date time offset implement TemporalAdjuster::TemporalAdjuster use argument typic effect offset ZonedDateTime::ZonedDateTime control primarili time zone chang offset general make sens valid offset local date time zone zone date time daylight save overlap offset switch valid offset case offset ignor result obtain invok specifi adjust pass argument instanc immut unaffect call adjust adjust use null ZonedDateTime::ZonedDateTime base adjust made null
ZonedDateTime::plus return copi date time specifi amount ad return ZonedDateTime::ZonedDateTime base amount term unit ad add amount unit support reason thrown field addit implement zone part calcul unchang result calcul date time unit differ Date::Date unit oper local time line period first ad local date time convert zone date time use zone convers use offset addit Time::Time unit oper instant time line period first ad local date time convert zone date time use zone convers use offset addit field ChronoUnit::ChronoUnit result obtain invok temporalunit addto tempor pass argument case unit determin perform addit instanc immut unaffect call amounttoadd amount unit add result negat unit unit amount add null ZonedDateTime::ZonedDateTime base date time specifi amount ad null
ZonedDateTime::minus return copi date time specifi amount subtract return ZonedDateTime::ZonedDateTime base amount term unit subtract subtract amount unit support reason thrown calcul date time unit differ Date::Date unit oper local time line period first subtract local date time convert zone date time use zone convers use offset subtract Time::Time unit oper instant time line period first subtract local date time convert zone date time use zone convers use offset subtract equival amount negat see full descript addit thus subtract work instanc immut unaffect call amounttosubtract amount unit subtract result negat unit unit amount subtract null ZonedDateTime::ZonedDateTime base date time specifi amount subtract null
ZonedDateTime::until calcul amount time date time term specifi unit calcul amount time ZonedDateTime::ZonedDateTime object term singl TemporalUnit::TemporalUnit start end point specifi date time result negat end start exampl period day date time calcul use startdatetim enddatetim day Temporal::Temporal pass convert ZonedDateTime::ZonedDateTime use time zone differ zone date time specifi end date time normal zone date time calcul return number repres number complet unit date time exampl period month 2012 06 15t0000z 2012 08 14t2359z month minut month equival use first invok use choic made base make readabl calcul implement unit nano micro milli minut hour half day day week month year decad centuri millennia era support ChronoUnit::ChronoUnit valu throw calcul date time unit differ Date::Date unit oper local time line use local date time exampl period noon day noon day day count exact day irrespect daylight save chang Time::Time unit oper instant time line calcul effect convert zone date time instant calcul period instant exampl period noon day noon day hour 23 24 25 hour amount depend daylight save chang unit ChronoUnit::ChronoUnit result obtain invok temporalunit tempor Temporal::Temporal pass first argument convert input tempor argument instanc immut unaffect call endexclus end date exclus convert ZonedDateTime::ZonedDateTime null unit unit measur amount null amount time date time end date time
ZonedDateTime::toString output date time String::String 2007 12 03t101530 0100 europ pari format consist LocalDateTime::LocalDateTime follow ZoneOffset::ZoneOffset ZoneId::ZoneId offset output output compat iso 8601 offset string represent date time null
Month::Month month year juli Month::Month enum repres 12 month year januari februari march april june juli august septemb octob novemb decemb addit textual enum name month year int valu int valu follow normal usag iso 8601 standard januari 12 decemb recommend applic use enum int valu ensur clariti use ordin obtain numer represent Month::Month use getvalu instead enum repres common concept found calendar system enum calendar system month year concept defin exact equival iso 8601 calendar system immut thread safe enum
Month::JANUARY singleton instanc month januari 31 day numer valu
Month::FEBRUARY singleton instanc month februari 28 day 29 leap year numer valu
Month::AUGUST singleton instanc month august 31 day numer valu
Month::SEPTEMBER singleton instanc month septemb 30 day numer valu
Month::DECEMBER singleton instanc month decemb 31 day numer valu 12
Month::of obtain instanc Month::Month int valu Month::Month enum repres 12 month year factori allow enum obtain int valu int valu follow iso 8601 standard januari 12 decemb month month year repres januari 12 decemb month year null
Month::from obtain instanc Month::Month tempor object obtain month base specifi tempor TemporalAccessor::TemporalAccessor repres arbitrari set date time factori convert instanc Month::Month convers extract field extract permit tempor object iso chronolog convert LocalDate::LocalDate match signatur function interfac allow queri refer Month::from tempor tempor object convert null month year null
Month::getValue get month year int valu valu number iso 8601 standard januari 12 decemb month year januari 12 decemb
Year::Year year iso 8601 calendar system 2007 Year::Year immut date time object repres year field deriv year obtain note year iso chronolog align year gregorian julian system modern year part russia switch modern gregorian iso rule 1920 histor year treat caution store repres month day time time zone exampl valu 2007 store Year::Year year repres follow iso 8601 standard use prolept number system Year::Year preced year year iso 8601 calendar system modern civil calendar system world equival prolept gregorian calendar system rule leap year appli time applic written iso 8601 rule entir suitabl make use histor date requir accur find iso 8601 approach unsuit use ident sensit oper includ refer equal ident hash synchron instanc Year::Year unpredict result avoid equal comparison immut thread safe
Year::now obtain current year system clock default time zone queri default time zone obtain current year use prevent abil use altern clock test clock current year use system clock default time zone null
Year::now obtain current year system clock specifi time zone queri obtain current year specifi time zone avoid depend default time zone use prevent abil use altern clock test clock zone zone use null current year use system clock null
Year::now obtain current year specifi clock queri specifi clock obtain current year use allow use altern clock test altern clock introduc use clock clock use null current year null
Year::of obtain instanc Year::Year accept year valu prolept iso calendar system year 2ad ce repres year 1ad ce repres year 1bc bce repres year 2bc bce repres isoyear iso prolept year repres min valu max valu year null
Year::from obtain instanc Year::Year tempor object obtain year base specifi tempor TemporalAccessor::TemporalAccessor repres arbitrari set date time factori convert instanc Year::Year convers extract field extract permit tempor object iso chronolog convert LocalDate::LocalDate match signatur function interfac allow queri refer Year::from tempor tempor object convert null year null
Year::parse obtain instanc Year::Year text string 2007 string repres valid year year rang 0000 9999 prefix symbol text text pars 2007 null pars year null
Year::parse obtain instanc Year::Year text string use specif formatt text pars use formatt return year text text pars null formatt formatt use null pars year null
Year::isLeap check year leap year accord iso prolept calendar system rule appli current rule leap year time line general year leap year divis remaind year divis 100 leap year year divis 400 exampl 1904 leap year divis 1900 leap year divis 100 2000 leap year divis 400 calcul prolept appli rule futur histor inaccur correct iso 8601 standard year year check year leap fals
Year::Year Constructor::Constructor year year repres
Year::getValue get year valu year return prolept get year year min valu max valu
Year::get get valu specifi field year int queri year valu specifi field return valu valid rang valu field return valu field support reason thrown field queri implement return valid valu base year ChronoField::ChronoField instanc throw UnsupportedTemporalTypeException::UnsupportedTemporalTypeException field ChronoField::ChronoField result obtain invok temporalfield getfrom temporalaccessor pass argument valu obtain valu repres determin field field field get null valu field
Year::isLeap check year leap year accord iso prolept calendar system rule appli current rule leap year time line general year leap year divis remaind year divis 100 leap year year divis 400 exampl 1904 leap year divis 1900 leap year divis 100 2000 leap year divis 400 calcul prolept appli rule futur histor inaccur correct iso 8601 standard year leap fals
Year::with return adjust copi year return Year::Year base year adjust adjust take place use specifi adjust strategi object read document adjust understand adjust made result obtain invok specifi adjust pass argument instanc immut unaffect call adjust adjust use null Year::Year base adjust made null
Year::with return copi year specifi field set valu return Year::Year base valu specifi field chang set valu field support reason thrown field adjust implement support field behav follow year era return Year::Year specifi year era era unchang year return Year::Year specifi year complet replac date equival era return Year::Year specifi era year era unchang case valu valid rang valu field DateTimeException::DateTimeException thrown ChronoField::ChronoField instanc throw UnsupportedTemporalTypeException::UnsupportedTemporalTypeException field ChronoField::ChronoField result obtain invok temporalfield adjustinto tempor pass argument case field determin adjust instant instanc immut unaffect call field field set result null newvalu valu field result Year::Year base specifi field set null
Year::plus return copi year specifi amount ad return Year::Year base specifi amount ad amount typic type implement interfac calcul deleg amount object call amount implement free implement addit wish typic call consult document amount implement determin success ad instanc immut unaffect call amounttoadd amount add null Year::Year base year addit made null
Year::plus return copi year specifi amount ad return Year::Year base amount term unit ad add amount unit support reason thrown field addit implement support field behav follow year return Year::Year specifi number year ad equival decad return Year::Year specifi number decad ad equival call amount multipli 10 centuri return Year::Year specifi number centuri ad equival call amount multipli 100 millennia return Year::Year specifi number millennia ad equival call amount multipli 000 era return Year::Year specifi number era ad era support amount zero amount non zero year chang year era unchang ChronoUnit::ChronoUnit instanc throw UnsupportedTemporalTypeException::UnsupportedTemporalTypeException field ChronoUnit::ChronoUnit result obtain invok temporalunit addto tempor pass argument case unit determin perform addit instanc immut unaffect call amounttoadd amount unit add result negat unit unit amount add null Year::Year base year specifi amount ad null
Year::plusYears return copi year specifi number year ad instanc immut unaffect call yearstoadd year add negat Year::Year base year period ad null
Year::minus return copi year specifi amount subtract return Year::Year base specifi amount subtract amount typic type implement interfac calcul deleg amount object call amount implement free implement subtract wish typic call consult document amount implement determin success subtract instanc immut unaffect call amounttosubtract amount subtract null Year::Year base year subtract made null
Year::minus return copi year specifi amount subtract return Year::Year base amount term unit subtract subtract amount unit support reason thrown equival amount negat see full descript addit thus subtract work instanc immut unaffect call amounttosubtract amount unit subtract result negat unit unit amount subtract null Year::Year base year specifi amount subtract null
Year::minusYears return copi year specifi number year subtract instanc immut unaffect call yearstosubtract year subtract negat Year::Year base year period subtract null
Year::until calcul amount time year term specifi unit calcul amount time Year::Year object term singl TemporalUnit::TemporalUnit start end point specifi year result negat end start Temporal::Temporal pass convert Year::Year use exampl period decad year calcul use startyear endyear decad calcul return number repres number complet unit year exampl period decad 2012 2031 decad year decad equival use first invok use choic made base make readabl calcul implement unit year decad centuri millennia era support ChronoUnit::ChronoUnit valu throw unit ChronoUnit::ChronoUnit result obtain invok temporalunit tempor Temporal::Temporal pass first argument convert input tempor argument instanc immut unaffect call endexclus end date exclus convert Year::Year null unit unit measur amount null amount time year end year
Year::atDay combin year day year creat LocalDate::LocalDate return LocalDate::LocalDate form year specifi day year day year valu 366 valid leap year dayofyear day year use null local date form year specifi date year null
Year::atMonth combin year month creat YearMonth::YearMonth return YearMonth::YearMonth form year specifi month combin year month valid part chain produc date month month year use null year month form year specifi month null
Year::atMonth combin year month creat YearMonth::YearMonth return YearMonth::YearMonth form year specifi month combin year month valid part chain produc date month month year use januari 12 decemb year month form year specifi month null
Year::atMonthDay combin year month day creat LocalDate::LocalDate return LocalDate::LocalDate form year specifi month day month day februari 29th adjust februari 28th result date year leap year monthday month day use null local date form year specifi month day null
Year::toString output year String::String string represent year null
TemporalUnit::TemporalUnit unit date time day hour measur time built unit year month day hour minut implement interfac repres unit instanc interfac repres unit amount unit see repres amount term common unit common unit defin further unit suppli unit written implement interfac unit work use doubl dispatch client call date time LocalDateTime::LocalDateTime check unit ChronoUnit::ChronoUnit date time handl call dispatch match interfac interfac implement care ensur oper correct implement instanti final immut thread safe recommend use enum where
TemporalUnit::between calcul amount time tempor object calcul amount term unit start end point suppli tempor object compat type implement convert type instanc first type calcul amount result negat end start exampl amount hour tempor object calcul use hour starttim endtim calcul return number repres number complet unit tempor exampl amount hour time 1130 1329 hour minut hour equival use first invok use choic made base make readabl exampl allow number day date calcul implement perform queri calcul use unit avail field avail unit support UnsupportedTemporalTypeException::UnsupportedTemporalTypeException thrown implement alter specifi tempor object implement begin check tempor type use Object::getClass result obtain call temporal1inclus temporal2exclus temporal1inclus base tempor object null temporal2exclus tempor object exclus null amount time temporal1inclus temporal2exclus term unit posit temporal2exclus temporal1inclus negat earlier
TemporalAccessor::TemporalAccessor framework level interfac defin read access tempor object date time offset combin base interfac type date time offset object implement provid date time repres number model use TemporalField::TemporalField number held use handl valu Year::Year month day month exampl field includ instant offset see standard set field piec date time repres number access use static defin sub interfac extend definit support adjust manipul complet tempor object interfac framework level interfac wide instead applic creat pass instanc concret type LocalDate::LocalDate reason part implement interfac calendar system iso see fuller discuss issu interfac place restrict mutabl implement immut strong recommend
TemporalAdjuster::TemporalAdjuster strategi adjust tempor object adjust key tool modifi tempor object exist extern process adjust permit approach strategi design pattern exampl adjust set date avoid weekend set date last day month equival use TemporalAdjuster::TemporalAdjuster first invok interfac use recommend use approach temporaladjust lot clearer read contain standard set adjust avail static includ find first last day month find first day month find first last day year find first day year find first last day week month first wednesday june find previous day week thursday interfac place restrict mutabl implement immut strong recommend
TemporalAmount::TemporalAmount framework level interfac defin amount time hour day year month base interfac type amount time amount distinct date time day tie specif point time line amount thought Map::Map expos case singl unit valu pair hour complex case multipl unit valu pair year month day common implement date base implement store year month day time base implement store nanosecond access use durat base unit minut hour fix 24 hour day interfac framework level interfac wide instead applic creat pass instanc concret type Period::Period Duration::Duration interfac place restrict mutabl implement immut strong recommend
TemporalAmount::getUnits return list unit uniqu defin valu TemporalAmount::TemporalAmount list temporalunit defin implement list snapshot unit time getunit call mutabl unit order longest durat shortest durat unit list unit complet uniqu repres state object omiss overlap duplic unit order longest durat shortest List::List temporalunit null
Temporal::Temporal framework level interfac defin read write access tempor object date time offset combin base interfac type date time offset object complet manipul use implement provid manipul see read version interfac date time repres number model use TemporalField::TemporalField number held use handl valu Year::Year month day month exampl field includ instant offset see standard set field piec date time repres number access use static defin interfac framework level interfac wide instead applic creat pass instanc concret type LocalDate::LocalDate reason part implement interfac calendar system iso see fuller discuss issu implement implement interfac meet criteria provid access date time offset TemporalAccessor::TemporalAccessor set field contigu largest smallest set field complet field defin valid rang valu field repres exampl make clear LocalDate::LocalDate implement interfac repres set field contigu day forev requir extern determin valid date therefor abl implement correct LocalTime::LocalTime implement interfac repres set field contigu nano day requir extern determin valid abl implement correct wrap day MonthDay::MonthDay combin month year day month implement interfac combin contigu day month year combin suffici defin valid rang valu day month unabl implement correct combin day week day month friday 13th implement interfac repres contigu set field day week overlap day month interfac place restrict mutabl implement immut strong recommend implement
Temporal::with return object type object specifi field alter return object base valu specifi field chang exampl LocalDate::LocalDate set year month day month return object observ type object case chang field fulli defin exampl target object date repres 31st januari chang month februari unclear case field respons resolv result typic choos previous valid date last valid day februari exampl implement check handl field defin field support adjust perform unsupport UnsupportedTemporalTypeException::UnsupportedTemporalTypeException thrown field ChronoField::ChronoField result obtain invok temporalfield adjustinto tempor pass first argument implement alter object instead adjust copi origin return provid equival safe behavior immut mutabl implement field field set result null newvalu valu field result object type specifi field set null
Temporal::plus return object type object specifi period ad return object base specifi period ad exampl LocalDate::LocalDate add number year month day return object observ type object case chang field fulli defin exampl target object date repres 31st januari ad month unclear case field respons resolv result typic choos previous valid date last valid day februari exampl implement check handl unit defin unit support addit perform unsupport UnsupportedTemporalTypeException::UnsupportedTemporalTypeException thrown unit ChronoUnit::ChronoUnit result obtain invok temporalunit addto tempor pass first argument implement alter object instead adjust copi origin return provid equival safe behavior immut mutabl implement amounttoadd amount specifi unit add negat unit unit period add null object type specifi period ad null
Temporal::minus return object type object specifi period subtract return object base specifi period subtract exampl LocalDate::LocalDate subtract number year month day return object observ type object case chang field fulli defin exampl target object date repres 31st march subtract month unclear case field respons resolv result typic choos previous valid date last valid day februari exampl implement behav manor equival default behavior implement alter object instead adjust copi origin return provid equival safe behavior immut mutabl implement default implement behav equival amounttosubtract amount specifi unit subtract negat unit unit period subtract null object type specifi period subtract null
Temporal::until calcul amount time tempor term specifi unit calcul amount time tempor object term singl TemporalUnit::TemporalUnit start end point specifi tempor end point convert type start point result negat end start exampl period hour tempor object calcul use starttim endtim hour calcul return number repres number complet unit tempor exampl period hour time 1130 1329 hour minut hour equival use first invok use choic made base make readabl exampl allow number day date calcul implement begin check ensur input tempor object observ type implement perform calcul instanc UnsupportedTemporalTypeException::UnsupportedTemporalTypeException thrown ChronoUnit::ChronoUnit instanc unsupport unit ChronoUnit::ChronoUnit result obtain invok temporalunit tempor Temporal::Temporal pass first argument convert input tempor argument summari implement behav manner equival pseudo note unit invok tempor object exact type evalu Object::getClass implement ensur observ state alter read invok endexclus end tempor exclus convert type object null unit unit measur amount null amount time tempor object specifi term unit posit specifi object negat earlier
TemporalAdjusters::TemporalAdjusters common use TemporalAdjusters::TemporalAdjusters adjust key tool modifi tempor object exist extern process adjust permit approach strategi design pattern exampl adjust set date avoid weekend set date last day month equival use TemporalAdjuster::TemporalAdjuster first invok interfac use recommend use approach temporaladjust lot clearer read contain standard set adjust avail static includ find first last day month find first day month find first last day year find first day year find first last day week month first wednesday june find previous day week thursday implement suppli static immut
TemporalAdjusters::ofDateAdjuster obtain TemporalAdjuster::TemporalAdjuster wrap date adjust TemporalAdjuster::TemporalAdjuster base low level Temporal::Temporal interfac allow adjust LocalDate::LocalDate LocalDate::LocalDate wrap match tempor base interfac conveni make user written adjust simpler general user written adjust static constant datebasedadjust date base adjust null tempor adjust wrap date adjust null
TemporalAdjusters::firstDayOfMonth return first day month adjust return date set first day current month iso calendar system behav follow input 2011 01 15 return 2011 01 01 input 2011 02 15 return 2011 02 01 behavior suitabl use calendar system equival first day month adjust null
TemporalAdjusters::lastDayOfMonth return last day month adjust return date set last day current month iso calendar system behav follow input 2011 01 15 return 2011 01 31 input 2011 02 15 return 2011 02 28 input 2012 02 15 return 2012 02 29 leap year input 2011 04 15 return 2011 04 30 behavior suitabl use calendar system equival last day month adjust null
TemporalAdjusters::lastDayOfYear return last day year adjust return date set last day current year iso calendar system behav follow input 2011 01 15 return 2011 12 31 input 2011 02 15 return 2011 12 31 behavior suitabl use calendar system equival last day year adjust null
TemporalAdjusters::next return day week adjust adjust date first occurr specifi day week date adjust iso calendar system behav follow input 2011 01 15 saturday paramet monday return 2011 01 17 day input 2011 01 15 saturday paramet wednesday return 2011 01 19 day input 2011 01 15 saturday paramet saturday return 2011 01 22 seven day behavior suitabl use calendar system use day week field day unit assum seven day week dayofweek day week move date null day week adjust null
TemporalQueries::TemporalQueries common implement TemporalQuery::TemporalQuery provid common implement defin constant definit lambda guarante assign becom normal constant queri key tool extract tempor object exist extern process queri permit approach strategi design pattern exampl queri check date day februari 29th leap year calcul number day birthday interfac provid mechan queri tempor object interfac limit return contrast queri return type equival use TemporalQuery::TemporalQuery first invok interfac use recommend use approach queri temporalqueri lot clearer read common implement refer LocalDate::from ZoneId::from addit common queri return Chronology::Chronology LocalDate::LocalDate LocalTime::LocalTime ZoneOffset::ZoneOffset precis zone TemporalQueries::zoneId
TemporalQueries::zoneId strict queri ZoneId::ZoneId queri TemporalAccessor::TemporalAccessor zone zone return date time conceptu contain ZoneId::ZoneId return date time conceptu ZoneOffset::ZoneOffset thus return result getzon return null case applic use queri strict result jdk implement TemporalAccessor::TemporalAccessor follow LocalDate::LocalDate return null LocalTime::LocalTime return null LocalDateTime::LocalDateTime return null ZonedDateTime::ZonedDateTime return associ zone OffsetTime::OffsetTime return null OffsetDateTime::OffsetDateTime return null ChronoLocalDate::ChronoLocalDate return null ChronoLocalDateTime::ChronoLocalDateTime return null ChronoZonedDateTime::ChronoZonedDateTime return associ zone Era::Era return null DayOfWeek::DayOfWeek return null Month::Month return null Year::Year return null YearMonth::YearMonth return null MonthDay::MonthDay return null ZoneOffset::ZoneOffset return null Instant::Instant return null queri obtain zone tempor null
TemporalQueries::chronology queri Chronology::Chronology queri TemporalAccessor::TemporalAccessor chronolog target TemporalAccessor::TemporalAccessor repres date part date return chronolog date express result definit object repres time LocalTime::LocalTime return null result jdk implement TemporalAccessor::TemporalAccessor follow LocalDate::LocalDate return isochronolog instanc LocalTime::LocalTime return null repres date LocalDateTime::LocalDateTime return isochronolog instanc ZonedDateTime::ZonedDateTime return isochronolog instanc OffsetTime::OffsetTime return null repres date OffsetDateTime::OffsetDateTime return isochronolog instanc ChronoLocalDate::ChronoLocalDate return associ chronolog ChronoLocalDateTime::ChronoLocalDateTime return associ chronolog ChronoZonedDateTime::ChronoZonedDateTime return associ chronolog Era::Era return associ chronolog DayOfWeek::DayOfWeek return null share chronolog Month::Month return isochronolog instanc Year::Year return isochronolog instanc YearMonth::YearMonth return isochronolog instanc MonthDay::MonthDay return null isochronolog instanc ZoneOffset::ZoneOffset return null repres date Instant::Instant return null repres date TemporalQuery::TemporalQuery refer Chronology::from equival queri throw chronolog obtain queri obtain chronolog tempor null
TemporalQueries::precision queri smallest support unit queri TemporalAccessor::TemporalAccessor time precis target TemporalAccessor::TemporalAccessor repres consist complet date time date time return smallest precis actual support note field nano day nano defin return ignor precis thus find actual smallest support unit exampl GregorianCalendar::GregorianCalendar implement TemporalAccessor::TemporalAccessor return precis milli result jdk implement TemporalAccessor::TemporalAccessor follow LocalDate::LocalDate return day LocalTime::LocalTime return nano LocalDateTime::LocalDateTime return nano ZonedDateTime::ZonedDateTime return nano OffsetTime::OffsetTime return nano OffsetDateTime::OffsetDateTime return nano ChronoLocalDate::ChronoLocalDate return day ChronoLocalDateTime::ChronoLocalDateTime return nano ChronoZonedDateTime::ChronoZonedDateTime return nano Era::Era return era DayOfWeek::DayOfWeek return day Month::Month return month Year::Year return year YearMonth::YearMonth return month MonthDay::MonthDay return null repres complet date time ZoneOffset::ZoneOffset return null repres date time Instant::Instant return nano queri obtain precis tempor null
TemporalQueries::localDate queri LocalDate::LocalDate return null found return TemporalQuery::TemporalQuery queri tempor object local date queri return null tempor object suppli local date queri implement examin field use creat LocalDate::LocalDate TemporalQuery::TemporalQuery refer LocalDate::from queri LocalDate::from return result tempor object contain date tempor object contain date refer throw queri return null queri obtain date tempor null
TemporalQueries::localTime queri LocalTime::LocalTime return null found return TemporalQuery::TemporalQuery queri tempor object local time queri return null tempor object suppli local time queri implement examin field use creat LocalTime::LocalTime TemporalQuery::TemporalQuery refer LocalTime::from queri LocalTime::from return result tempor object contain time tempor object contain time refer throw queri return null queri obtain time tempor null
TemporalField::TemporalField field date time month year hour minut Date::Date time express use field partit time line meaning human implement interfac repres field common unit defin further field suppli field written implement interfac field work use doubl dispatch client call date time LocalDateTime::LocalDateTime check field ChronoField::ChronoField date time handl call dispatch match interfac interfac implement care ensur oper correct implement instanti final immut thread safe implement Serializable::Serializable where enum effect implement choic
TemporalField::getRangeUnit get rang field bound rang field period field vari exampl field monthofyear rang year see rang null exampl Year::Year field shorthand yearofforev therefor unit year rang forev period unit defin rang field null
TemporalField::adjustInto return copi specifi tempor object valu field set return tempor object base specifi valu field chang exampl LocalDate::LocalDate set year month day month return object observ type specifi object case chang field fulli defin exampl target object date repres 31st januari chang month februari unclear case implement respons resolv result typic choos previous valid date last valid day februari exampl equival use first invok use recommend use approach temporalfield lot clearer read implement perform queri calcul use field avail field support UnsupportedTemporalTypeException::UnsupportedTemporalTypeException thrown implement alter specifi tempor object instead adjust copi origin return provid equival safe behavior immut mutabl implement type Temporal::Temporal object tempor tempor object adjust null newvalu valu field adjust tempor object null
TemporalField::resolve resolv field provid simpler altern date invok resolv phase pars design allow defin field simplifi standard field ChronoField::ChronoField date applic normal invok implement repres field simplifi combin implement specifi map contain current state pars map mutabl mutat resolv field relat field invok pars map contain field implement therefor assum field resolv field consist look valu field potenti field updat map simpler valu ChronoField::ChronoField return complet ChronoLocalDate::ChronoLocalDate resolv success remov field resolv map includ field exampl IsoFields::IsoFields contain quarter year day quarter field implement resolv field complet LocalDate::LocalDate resolv remov field map return LocalDate::LocalDate partial complet tempor allow chronolog zone queri general chronolog queri item zone chronolog undefin reli behavior get getlong rang issupport unpredict result undefin resolut data invalid resolv style determin appropri level lenienc requir throw DateTimeException::DateTimeException ArithmeticException::ArithmeticException resolut resolv return null resolv time field map alter null return resolv date field date normal return map alter remov resolv field accept date field resolv ChronoField::ChronoField instanc produc date epoch day TemporalAccessor::TemporalAccessor implement accept return valu implement call accept ChronoLocalDate::ChronoLocalDate ChronoLocalDateTime::ChronoLocalDateTime ChronoZonedDateTime::ChronoZonedDateTime LocalTime::LocalTime default implement return null fieldvalu map field valu updat null partialtempor partial complet tempor queri zone chronolog queri undefin recommend null resolverstyl request type resolv null resolv tempor object null resolv chang map resolv occur
TemporalField::toString get descript name field format baseofrang monthofyear field rang forev base unit mention Year::Year Era::Era name field null
ValueRange::toString output rang String::String format min largestmin smallestmax max where largestmin smallestmax section omit associ slash min max string represent rang null
ChronoUnit::MILLIS Unit::Unit repres concept millisecond iso calendar system equal 1000th part unit
ChronoUnit::SECONDS Unit::Unit repres concept iso calendar system equal si system unit leap
ChronoUnit::MINUTES Unit::Unit repres concept minut iso calendar system equal 60
ChronoUnit::HOURS Unit::Unit repres concept hour iso calendar system equal 60 minut
ChronoUnit::DAYS Unit::Unit repres concept day iso calendar system standard day midnight midnight estim durat day 24 hour calendar system correspond day defin rise set sun earth requir day begin midnight convert calendar system date equival midday
ChronoUnit::WEEKS Unit::Unit repres concept week iso calendar system equal day calendar system correspond integr number day
ChronoUnit::MONTHS Unit::Unit repres concept month iso calendar system length month vari month year estim durat month twelfth 365 2425 day calendar system correspond integr number day
ChronoUnit::YEARS Unit::Unit repres concept year iso calendar system equal 12 month estim durat year 365 2425 day calendar system correspond integr number day month rough equal year defin passag earth sun
ChronoUnit::FOREVER artifici unit repres concept forev primarili repres unbound field year era estim durat era artifici defin largest durat support Duration::Duration
JulianFields::JULIAN day julian day field integ base version julian day Number::Number julian day known system repres count day day defin januari 4713 bce julian calendar 4713 11 24 gregorian field julianday name day baseunit field refer local date time ignor offset zone date time julian day getfrom assum valu midnight midnight julian day adjustinto appli date time time day portion remain unalt julian day adjustinto julian day getfrom appli Temporal::Temporal object convert thrown type object resolv phase pars date creat julian day field julian day valu valid rang valid valu valid occur astronom scientif note standard astronom definit use fraction indic time day thus 25 repres time 1800 day start midday implement use integ day start midnight integ valu julian day Number::Number astronom julian day valu midday date question amount astronom julian day integ jdn floor jd julian day taken impli univers Time::Time utc implement use julian day number local date regardless offset time zone
JulianFields::MODIFIED julian day modifi julian day field integ base version modifi julian day Number::Number modifi julian day mjd known system count day continu defin relat astronom julian day mjd jd 2400000 modifi julian day run midnight midnight field refer local date time ignor offset zone date time modifi julian day getfrom assum valu midnight midnight modifi julian day adjustinto appli date time time day portion remain unalt modifi julian day adjustinto modifi julian day getfrom appli Temporal::Temporal object convert thrown type object implement integ version mjd decim part floor resolv phase pars date creat modifi julian day field modifi julian day valu valid rang valid valu valid occur astronom scientif note modifi julian day taken impli univers Time::Time utc implement use modifi julian day local date regardless offset time zone
WeekFields::of obtain instanc WeekFields::WeekFields first day week minim day first day week defin iso DayOfWeek::DayOfWeek day week minim number day first week defin day month year start first day week week count first week valu count first day month year part first week valu requir seven day month year WeekFields::WeekFields instanc singleton uniqu combin firstdayofweek minimaldaysinfirstweek instanc return firstdayofweek first day week null minimaldaysinfirstweek minim number day first week week definit null
WeekFields::getFirstDayOfWeek get first day week first day week vari cultur exampl use sunday franc iso 8601 standard use monday return first day use standard DayOfWeek::DayOfWeek enum first day week null
WeekFields::rangeByWeek Map::Map field rang week rang tempor tempor field field get rang ValueRange::ValueRange rang adjust week
WeekFields::rangeWeekOfWeekBasedYear Map::Map field rang week rang week year tempor tempor ValueRange::ValueRange rang adjust week
ChronoField::HOUR day hour day count hour day 23 hour observ standard 24 hour digit clock field mean calendar system pars field behav equival follow valu valid strict smart mode lenient mode field combin minut hour minut nano produc LocalTime::LocalTime lenient mode excess day ad pars date made avail
ChronoField::DAY week day week tuesday repres standard concept day week default iso calendar system valu monday sunday interpret result non iso calendar system defin seven day week align iso calendar system use number system monday sunday allow DayOfWeek::DayOfWeek Calendar::Calendar system standard seven day week implement field similar concept name number day period similar week recommend number start
ChronoField::ALIGNED day week month align day week month repres concept count day period week where week align start month field typic exampl calendar system seven day week first align week month start day month align week start day month align week day number return valu field day month align day week valu day month 14 repeat align day week valu Calendar::Calendar system seven day week typic implement field use altern week length
ChronoField::ALIGNED day week year align day week year repres concept count day period week where week align start year field typic exampl calendar system seven day week first align week year start day year align week start day year align week day number return valu field day year align day week valu day year 14 repeat align day week valu Calendar::Calendar system seven day week typic implement field use altern week length
ChronoField::DAY year day year repres concept day year default iso calendar system valu 365 standard year 366 leap year non iso calendar system implement field use recogn day year valu user calendar system normal count day length year note non iso calendar system year number system chang point natur reset month number exampl japanes calendar system where chang era reset year number happen date era year reset caus day year reset month year day month
ChronoField::ALIGNED week month align week month repres concept count week period month where week align start month field typic exampl calendar system seven day week first align week month start day month align week start day month thus day month valu align week day month valu 14 align week Calendar::Calendar system seven day week typic implement field use altern week length
ChronoField::ALIGNED week year align week year repres concept count week period year where week align start year field typic exampl calendar system seven day week first align week year start day year align week start day year thus day year valu align week day year valu 14 align week Calendar::Calendar system seven day week typic implement field use altern week length
ChronoField::YEAR prolept year 2012 repres concept year count sequenti use negat number prolept year interpret term era see exampl show map prolept year year era standard mental model date base concept year month day map year month year day month field note refer era full model date requir concept era year month day map era year era month year day month field field year era depend mental model see discuss topic non iso calendar system implement field follow calendar system era fix date prolept year valu year era valu era increas negat earlier era calendar system era prolept year valu defin appropri valu defin iso option
BitSieve::set Set::Set bit specifi index
MutableBigInteger::MutableBigInteger construct MutableBigInteger::MutableBigInteger magnitud equal specifi BigInteger::BigInteger
MutableBigInteger::toBigInteger convert MutableBigInteger::MutableBigInteger BigInteger::BigInteger object
MutableBigInteger::toBigInteger convert number nonneg BigInteger::BigInteger
MutableBigInteger::toBigDecimal convert MutableBigInteger::MutableBigInteger BigDecimal::BigDecimal object specifi sign scale
MutableBigInteger::reset Set::Set MutableBigInteger::MutableBigInteger zero remov offset
MutableBigInteger::toString return String::String represent MutableBigInteger::MutableBigInteger radix 10
MutableBigInteger::getLower return BigInteger::BigInteger equal low int number
BigInteger::BigInteger immut arbitrari precis integ oper behav biginteg repres complement notat primit integ type BigInteger::BigInteger provid analogu primit integ oper relev lang math addit BigInteger::BigInteger provid oper modular arithmet gcd calcul primal test prime generat bit manipul miscellan oper semant arithmet oper exact mimic integ arithmet oper defin languag specif exampl divis zero throw ArithmeticException::ArithmeticException divis negat posit yield negat zero remaind detail spec overflow ignor biginteg made necessari accommod result oper semant shift oper extend shift oper allow negat shift distanc shift negat shift distanc result shift versa unsign shift oper omit oper make sens combin infinit word size abstract semant bitwis logic oper exact mimic bitwis integ oper binari oper xor implicit perform sign extens shorter operand prior perform oper comparison oper perform sign integ comparison analog perform relat equal oper modular arithmet oper comput residu perform exponenti comput multipl invers return non negat result modulus inclus bit oper oper singl bit complement represent operand necessari operand sign extend contain design bit singl bit oper produc BigInteger::BigInteger sign BigInteger::BigInteger oper affect singl bit infinit word size abstract ensur infinit virtual sign bit preced BigInteger::BigInteger sake breviti clariti pseudo descript BigInteger::BigInteger pseudo express shorthand BigInteger::BigInteger valu BigInteger::BigInteger BigInteger::BigInteger pseudo express shorthand BigInteger::BigInteger repres valu BigInteger::BigInteger pseudo express interpret similar constructor throw NullPointerException::NullPointerException pass null object refer input paramet BigInteger::BigInteger support valu rang integ max valu exclus integ max valu exclus support valu rang rang probabl prime valu limit full support posit rang BigInteger::BigInteger rang 500000000 BigInteger::BigInteger constructor oper throw ArithmeticException::ArithmeticException result support rang integ max valu exclus integ max valu exclus
BigInteger::BigInteger translat byte array contain complement binari represent BigInteger::BigInteger BigInteger::BigInteger input array assum big endian byte order signific byte zeroth element val big endian complement binari represent BigInteger::BigInteger
BigInteger::BigInteger privat constructor translat int array contain complement binari represent BigInteger::BigInteger BigInteger::BigInteger input array assum big endian int order signific int zeroth element
BigInteger::BigInteger translat sign magnitud represent BigInteger::BigInteger BigInteger::BigInteger sign repres integ signum valu negat zero posit magnitud byte array big endian byte order signific byte zeroth element zero length magnitud array permiss result BigInteger::BigInteger valu signum signum signum number negat zero posit magnitud big endian binari represent magnitud number
BigInteger::BigInteger constructor intern use translat sign magnitud represent BigInteger::BigInteger BigInteger::BigInteger check argument copi magnitud constructor safe extern use
BigInteger::BigInteger translat String::String represent BigInteger::BigInteger specifi radix BigInteger::BigInteger String::String represent consist option sign follow sequenc digit specifi radix charact digit map charact digit String::String contain extran charact whitespac exampl val String::String represent BigInteger::BigInteger radix radix interpret val
BigInteger::BigInteger translat decim String::String represent BigInteger::BigInteger BigInteger::BigInteger String::String represent consist option sign follow sequenc decim digit charact digit map charact digit String::String contain extran charact whitespac exampl val decim String::String represent BigInteger::BigInteger
BigInteger::BigInteger construct random generat BigInteger::BigInteger uniform distribut rang numbit inclus uniform distribut assum fair sourc random bit rnd note constructor construct non negat BigInteger::BigInteger numbit maximum bitlength BigInteger::BigInteger rnd sourc random comput BigInteger::BigInteger
BigInteger::BigInteger construct random generat posit BigInteger::BigInteger prime specifi bitlength recommend prefer constructor compel specifi certainti bitlength bitlength return BigInteger::BigInteger certainti measur uncertainti caller toler probabl BigInteger::BigInteger repres prime number exceed certainti execut time constructor proport valu paramet rnd sourc random bit select candid test primal
BigInteger::probablePrime return posit BigInteger::BigInteger prime specifi bitlength probabl BigInteger::BigInteger return composit exceed 100 bitlength bitlength return BigInteger::BigInteger rnd sourc random bit select candid test primal BigInteger::BigInteger bitlength bit prime
BigInteger::nextProbablePrime return first integ greater BigInteger::BigInteger prime probabl number return composit exceed 100 skip prime search return prime first integ greater BigInteger::BigInteger prime
BigInteger::primeToCertainty return BigInteger::BigInteger prime fals definit composit assum bitlength certainti measur uncertainti caller toler call return probabl BigInteger::BigInteger prime exceed certainti execut time proport valu paramet BigInteger::BigInteger prime fals definit composit
BigInteger::passesLucasLehmer return iff BigInteger::BigInteger luca lehmer probabl prime assumpt made BigInteger::BigInteger posit odd number
BigInteger::passesMillerRabin return iff BigInteger::BigInteger pass specifi number miller rabin test test taken dsa spec nist fip 186 assumpt made BigInteger::BigInteger posit odd number greater iter 50
BigInteger::BigInteger intern constructor differ cousin argument revers assum argument correct doesn copi magnitud array
BigInteger::BigInteger privat constructor intern use assum argument correct
BigInteger::checkRange throw ArithmeticException::ArithmeticException BigInteger::BigInteger support rang
BigInteger::valueOf return BigInteger::BigInteger valu equal specifi static factori prefer constructor allow reus frequent biginteg val valu BigInteger::BigInteger return BigInteger::BigInteger specifi valu
BigInteger::BigInteger construct BigInteger::BigInteger specifi valu zero
BigInteger::valueOf return BigInteger::BigInteger given complement represent assum input array modifi return BigInteger::BigInteger refer input array feasibl
BigInteger::ZERO BigInteger::BigInteger constant zero
BigInteger::ONE BigInteger::BigInteger constant
BigInteger::TEN BigInteger::BigInteger constant ten
BigInteger::add return BigInteger::BigInteger valu val val valu ad BigInteger::BigInteger val
BigInteger::add Package::Package privat BigDecimal::BigDecimal add BigInteger::BigInteger assum val equal inflat
BigInteger::add add content int array valu val alloc int array hold answer return refer array assum length gt val non negat
BigInteger::add add content int array alloc int array hold answer return refer array
BigInteger::subtract subtract content argument val first big first int array big repres larger number alloc space necessari hold answer assum val gt
BigInteger::subtract return BigInteger::BigInteger valu val val valu subtract BigInteger::BigInteger val
BigInteger::subtract subtract content int array first big first int array big repres larger number alloc space necessari hold answer
BigInteger::multiply return BigInteger::BigInteger valu val val valu multipli BigInteger::BigInteger val
BigInteger::multiply Package::Package privat BigDecimal::BigDecimal multipli BigInteger::BigInteger assum equal inflat
BigInteger::getToomSlice return slice BigInteger::BigInteger use toom cook multipl lowers size lower order bit slice uppers size higher order bit slice slice index slice request number size slice highest order bit slice size lowest order bit slice size slice fullsiz size larger integ array align slice appropri posit multipli size number
BigInteger::getLower return BigInteger::BigInteger repres lower int number karatsuba multipl karatsuba squar
BigInteger::getUpper return BigInteger::BigInteger repres mag length upper int number karatsuba multipl karatsuba squar
BigInteger::square return BigInteger::BigInteger valu
BigInteger::squareKaratsuba squar BigInteger::BigInteger use karatsuba squar algorithm number larger threshold found experiment recurs divid conquer algorithm asymptot perform algorithm squaretolen
BigInteger::squareToomCook3 squar BigInteger::BigInteger use toom cook squar algorithm number larger threshold found experiment recurs divid conquer algorithm asymptot perform algorithm squaretolen BigInteger::squareKaratsuba
BigInteger::divide return BigInteger::BigInteger valu val val valu BigInteger::BigInteger divid val
BigInteger::divideKnuth return BigInteger::BigInteger valu val use algorithm knuth val valu BigInteger::BigInteger divid val
BigInteger::divideAndRemainder return array biginteg contain val follow val val valu BigInteger::BigInteger divid remaind comput array biginteg quotient val initi element remaind val final element
BigInteger::divideAndRemainderKnuth Long::Long divis
BigInteger::remainder return BigInteger::BigInteger valu val val valu BigInteger::BigInteger divid remaind comput val
BigInteger::remainderKnuth Long::Long divis
BigInteger::pow return BigInteger::BigInteger valu expon note expon integ BigInteger::BigInteger expon expon BigInteger::BigInteger rais expon
BigInteger::gcd return BigInteger::BigInteger valu greatest common divisor ab ab val return val val valu gcd comput gcd ab ab val
BigInteger::bitLengthForInt Package::Package privat return bit length integ
BigInteger::abs return BigInteger::BigInteger valu absolut valu BigInteger::BigInteger ab
BigInteger::negate return BigInteger::BigInteger valu
BigInteger::signum return signum function BigInteger::BigInteger valu BigInteger::BigInteger negat zero posit
BigInteger::mod return BigInteger::BigInteger valu mod differ remaind return non negat BigInteger::BigInteger modulus mod
BigInteger::modPow return BigInteger::BigInteger valu expon mod pow permit negat expon expon expon modulus expon mod
BigInteger::oddModPow return BigInteger::BigInteger valu power mod assum odd
BigInteger::modPow2 return BigInteger::BigInteger valu expon mod
BigInteger::mod2 return BigInteger::BigInteger valu mod assum BigInteger::BigInteger
BigInteger::modInverse return BigInteger::BigInteger valu mod modulus mod
BigInteger::shiftLeft return BigInteger::BigInteger valu floor shift distanc bit
BigInteger::shiftRight return BigInteger::BigInteger valu sign extens perform shift distanc negat case perform shift comput floor shift distanc bit
BigInteger::shiftRightImpl return BigInteger::BigInteger valu shift distanc consid unsign comput floor unsign shift distanc bit
BigInteger::and return BigInteger::BigInteger valu val return negat BigInteger::BigInteger val negat val valu ed BigInteger::BigInteger val
BigInteger::or return BigInteger::BigInteger valu val return negat BigInteger::BigInteger val negat val valu ed BigInteger::BigInteger val
BigInteger::xor return BigInteger::BigInteger valu val return negat BigInteger::BigInteger exact val negat val valu xor ed BigInteger::BigInteger val
BigInteger::not return BigInteger::BigInteger valu return negat valu BigInteger::BigInteger non negat
BigInteger::andNot return BigInteger::BigInteger valu val equival val conveni mask oper return negat BigInteger::BigInteger negat val posit val valu complement ed BigInteger::BigInteger val
BigInteger::setBit return BigInteger::BigInteger valu equival BigInteger::BigInteger design bit set comput index bit set
BigInteger::clearBit return BigInteger::BigInteger valu equival BigInteger::BigInteger design bit clear comput index bit clear
BigInteger::flipBit return BigInteger::BigInteger valu equival BigInteger::BigInteger design bit flip comput index bit flip
BigInteger::getLowestSetBit return index rightmost lowest order bit BigInteger::BigInteger number zero bit rightmost bit return BigInteger::BigInteger contain bit comput log2 index rightmost bit BigInteger::BigInteger
BigInteger::bitLength return number bit minim complement represent BigInteger::BigInteger exclud sign bit posit biginteg equival number bit ordinari binari represent comput ceil log2 exclud sign bit
BigInteger::bitCount return number bit complement represent BigInteger::BigInteger differ sign bit use implement bit vector style set atop biginteg number bit complement represent BigInteger::BigInteger differ sign bit
BigInteger::isProbablePrime return BigInteger::BigInteger prime fals definit composit certainti le return certainti measur uncertainti caller toler call return probabl BigInteger::BigInteger prime exceed certainti execut time proport valu paramet BigInteger::BigInteger prime fals definit composit
BigInteger::compareTo compar BigInteger::BigInteger specifi BigInteger::BigInteger prefer individu boolean comparison oper op gt where lt op gt comparison oper val BigInteger::BigInteger BigInteger::BigInteger compar BigInteger::BigInteger numer equal greater val
BigInteger::compareMagnitude compar magnitud array BigInteger::BigInteger specifi biginteg version compareto ignor sign val BigInteger::BigInteger magnitud array compar magnitud array equal greater magnitud aray specifi biginteg
BigInteger::equals compar BigInteger::BigInteger specifi Object::Object equal Object::Object BigInteger::BigInteger compar specifi Object::Object BigInteger::BigInteger valu numer equal BigInteger::BigInteger
BigInteger::min return minimum BigInteger::BigInteger val val valu minimum comput BigInteger::BigInteger valu lesser BigInteger::BigInteger val equal return
BigInteger::max return maximum BigInteger::BigInteger val val valu maximum comput BigInteger::BigInteger valu greater val equal return
BigInteger::hashCode return hash BigInteger::BigInteger hash BigInteger::BigInteger
BigInteger::toString return String::String represent BigInteger::BigInteger given radix radix rang inclus default 10 case integ tostr digit charact map charact fordigit sign prepend appropri represent compat constructor radix radix String::String represent String::String represent BigInteger::BigInteger given radix
BigInteger::toString convert specifi BigInteger::BigInteger string append sb implement recurs schoenhag algorithm base convers see knuth donald art comput program vol answer exercis question 14 number convert string sb StringBuilder::StringBuilder append place radix base convert digit minimum number digit pad
BigInteger::toString return decim String::String represent BigInteger::BigInteger digit charact map charact fordigit sign prepend appropri represent compat constructor allow String::String concaten oper decim String::String represent BigInteger::BigInteger
BigInteger::toByteArray return byte array contain complement represent BigInteger::BigInteger byte array big endian byte order signific byte zeroth element array contain minimum number byte requir repres BigInteger::BigInteger includ sign bit ceil bitlength represent compat constructor byte array contain complement represent BigInteger::BigInteger
BigInteger::intValue convert BigInteger::BigInteger int convers analog narrow primit convers int defin section trade languag specif BigInteger::BigInteger big fit int low order 32 bit return note convers lose overal magnitud BigInteger::BigInteger valu return result opposit sign BigInteger::BigInteger convert int
BigInteger::longValue convert BigInteger::BigInteger convers analog narrow primit convers int defin section trade languag specif BigInteger::BigInteger big fit low order 64 bit return note convers lose overal magnitud BigInteger::BigInteger valu return result opposit sign BigInteger::BigInteger convert
BigInteger::floatValue convert BigInteger::BigInteger float convers similar narrow primit convers doubl float defin section trade languag specif BigInteger::BigInteger great magnitud repres float convert appropri note return valu finit convers lose precis BigInteger::BigInteger valu BigInteger::BigInteger convert float
BigInteger::doubleValue convert BigInteger::BigInteger doubl convers similar narrow primit convers doubl float defin section trade languag specif BigInteger::BigInteger great magnitud repres doubl convert appropri note return valu finit convers lose precis BigInteger::BigInteger valu BigInteger::BigInteger convert doubl
BigInteger::readObject reconstitut BigInteger::BigInteger instanc stream deseri magnitud read array byte histor reason convert array int byte array discard note current convent initi cach field bitcount bitlength lowestsetbit marker valu therefor explicit action set field taken readobject field valu default ObjectInputStream::defaultReadObject
BigInteger::writeObject save BigInteger::BigInteger instanc stream magnitud BigInteger::BigInteger serial byte array histor reason necessari field written obsolet field compat older version
BigInteger::longValueExact convert BigInteger::BigInteger check lost valu BigInteger::BigInteger rang type ArithmeticException::ArithmeticException thrown BigInteger::BigInteger convert
BigInteger::intValueExact convert BigInteger::BigInteger int check lost valu BigInteger::BigInteger rang int type ArithmeticException::ArithmeticException thrown BigInteger::BigInteger convert int
BigInteger::shortValueExact convert BigInteger::BigInteger check lost valu BigInteger::BigInteger rang type ArithmeticException::ArithmeticException thrown BigInteger::BigInteger convert
BigInteger::byteValueExact convert BigInteger::BigInteger byte check lost valu BigInteger::BigInteger rang byte type ArithmeticException::ArithmeticException thrown BigInteger::BigInteger convert byte
MathContext::equals compar MathContext::MathContext specifi Object::Object equal Object::Object MathContext::MathContext compar specifi Object::Object MathContext::MathContext object exact set object
MathContext::toString return string represent MathContext::MathContext String::String return repres set MathContext::MathContext object space delimit word separ singl space charact 92 u0020 lead trail white space follow string precis follow valu precis set numer string generat string roundingmod follow valu roundingmod set word word name correspond constant enum exampl addit word append result tostr futur properti ad String::String repres context set
RoundingMode::RoundingMode specifi behavior numer oper capabl discard precis mode indic signific return digit result calcul fewer digit return digit repres exact numer result discard digit refer discard fraction regardless digit contribut valu number word consid numer valu discard fraction absolut valu greater mode descript includ tabl list digit decim valu digit decim valu mode question result column tabl gotten creat BigDecimal::BigDecimal number specifi valu form object proper set precis set roundingmod set mode question call number proper MathContext::MathContext summari tabl show result oper mode appear enum intend replac integ base enumer mode constant
RoundingMode::RoundingMode Constructor::Constructor oldmod BigDecimal::BigDecimal constant correspond mode
BigDecimal::BigDecimal immut arbitrari precis sign decim number BigDecimal::BigDecimal consist arbitrari precis integ unscal valu 32 bit integ scale zero posit scale number digit decim point negat unscal valu number multipli ten power negat scale valu number repres BigDecimal::BigDecimal therefor unscaledvalu time 10 scale BigDecimal::BigDecimal provid oper arithmet scale manipul comparison hash format convers provid canon represent BigDecimal::BigDecimal BigDecimal::BigDecimal give user complet control behavior mode specifi exact result repres thrown calcul carri chosen precis mode suppli appropri object oper case eight mode control use integ field repres mode larg obsolet enumer valu RoundingMode::RoundingMode enum instead MathContext::MathContext object suppli precis set exampl arithmet oper exact arithmet take MathContext::MathContext object behavior support releas prior corollari comput exact result mode set MathContext::MathContext object precis set thus irrelev case divid exact quotient infinit decim expans exampl divid quotient nontermin decim expans oper specifi return exact result ArithmeticException::ArithmeticException thrown exact result divis return oper precis set rule BigDecimal::BigDecimal arithmet broad compat select mode oper arithmet defin ansi x3 274 1996 ansi x3 274 1996 2000 section standard BigDecimal::BigDecimal includ mode mandatori divis BigDecimal::BigDecimal releas prior conflict ansi standard BigDecimal::BigDecimal specif resolv favor BigDecimal::BigDecimal numer valu represent scale rule arithmet specifi numer result scale result represent general mode precis set determin oper return result limit number digit exact result digit infinit case divis number digit return first total number digit return specifi MathContext::MathContext precis set determin result precis digit count start leftmost nonzero digit exact result mode determin discard trail digit affect return result arithmet oper oper carri exact intermedi result first calcul number digit specifi precis set necessari use select mode exact result return digit posit exact result discard increas magnitud return result digit posit creat carri propag lead digit exampl valu 999 digit numer equal thousand repres 100 time 10 case lead digit posit return result logic exact result arithmet oper prefer scale repres result prefer scale oper list tabl scale return exact arithmet result exact divid use larger scale exact result digit exampl 32 03125 scale logic exact intermedi result prefer scale oper exact numer result repres precis digit select set digit return scale result reduc scale intermedi result scale repres precis digit actual return exact result repres precis digit represent result scale closest prefer scale return particular exact represent quotient repres fewer precis digit remov trail zero decreas scale exampl digit use mode 19 100 19 integ 19 scale 21 110 190 integ 190 scale note add subtract multipli reduct scale equal number digit posit exact result discard caus carri propag creat order digit posit addit digit result discard digit posit creat slight semant exampl result pow use occasion differ mathemat result unit last place type oper manipul scale BigDecimal::BigDecimal scale oper decim point motion oper scale oper return BigDecimal::BigDecimal valu approxim exact equal operand scale precis specifi valu increas decreas precis store number minim effect valu decim point motion oper return BigDecimal::BigDecimal creat operand move decim point specifi distanc specifi direct sake breviti clariti pseudo descript BigDecimal::BigDecimal pseudo express shorthand BigDecimal::BigDecimal valu BigDecimal::BigDecimal ad BigDecimal::BigDecimal pseudo express shorthand BigDecimal::BigDecimal repres valu BigDecimal::BigDecimal pseudo express interpret similar squar bracket repres particular BigInteger::BigInteger scale pair defin BigDecimal::BigDecimal valu exampl 19 BigDecimal::BigDecimal numer equal 19 scale note care exercis BigDecimal::BigDecimal object key element BigDecimal::BigDecimal natur order inconsist equal see constructor throw NullPointerException::NullPointerException pass null object refer input paramet
BigDecimal::BigDecimal trust packag privat constructor trust simpli mean val inflat intval null intval null val inflat
BigDecimal::BigDecimal translat charact array represent BigDecimal::BigDecimal BigDecimal::BigDecimal accept sequenc charact constructor allow sub array specifi note sequenc charact avail charact array use constructor faster convert char array string use bigdecim string constructor char array sourc charact offset first charact array inspect len number charact consid
BigDecimal::BigDecimal translat charact array represent BigDecimal::BigDecimal BigDecimal::BigDecimal accept sequenc charact constructor allow sub array specifi accord context set note sequenc charact avail charact array use constructor faster convert char array string use bigdecim string constructor char array sourc charact offset first charact array inspect len number charact consid mc context use
BigDecimal::BigDecimal translat charact array represent BigDecimal::BigDecimal BigDecimal::BigDecimal accept sequenc charact constructor note sequenc charact avail charact array use constructor faster convert char array string use bigdecim string constructor char array sourc charact
BigDecimal::BigDecimal translat charact array represent BigDecimal::BigDecimal BigDecimal::BigDecimal accept sequenc charact constructor accord context set note sequenc charact avail charact array use constructor faster convert char array string use bigdecim string constructor char array sourc charact mc context use
BigDecimal::BigDecimal translat string represent BigDecimal::BigDecimal BigDecimal::BigDecimal string represent consist option sign 92 u002b 92 u002d follow sequenc zero decim digit integ option follow fraction option follow expon fraction consist decim point follow zero decim digit string contain digit integ fraction number form sign integ fraction refer significand expon consist charact 92 u0065 92 u0045 follow decim digit valu expon lie inclus formal string constructor accept describ grammar bigdecimalstr sign opt significand expon opt sign significand integerpart fractionpart opt fractionpart integerpart integerpart digit fractionpart digit expon exponentind signedinteg exponentind signedinteg sign opt digit digit digit digit digit digit charact return includ scale return BigDecimal::BigDecimal number digit fraction zero string contain decim point subject adjust expon string contain expon expon subtract scale valu result scale lie integ min valu integ max valu inclus charact digit map set convert radix 10 String::String contain extran charact whitespac exampl exampl valu return BigDecimal::BigDecimal equal significand time 10 nbsp expon string result represent BigInteger::BigInteger scale shown note valu float doubl nan plusmn infin constructor compat valu return general prefer convert float doubl BigDecimal::BigDecimal doesn suffer unpredict constructor val String::String represent BigDecimal::BigDecimal
BigDecimal::BigDecimal translat string represent BigDecimal::BigDecimal BigDecimal::BigDecimal accept string constructor accord context set val string represent BigDecimal::BigDecimal mc context use
BigDecimal::BigDecimal translat doubl BigDecimal::BigDecimal exact decim represent doubl binari float point valu scale return BigDecimal::BigDecimal smallest valu 10 scale time val integ note result constructor somewhat unpredict assum write bigdecim creat BigDecimal::BigDecimal exact equal unscal valu scale actual equal 1000000000000000055511151231257827021181583404541015625 repres exact doubl matter binari fraction finit length thus valu pass constructor exact equal appear String::String constructor hand perfect predict write bigdecim creat BigDecimal::BigDecimal exact equal expect therefor general recommend prefer doubl sourc BigDecimal::BigDecimal note constructor provid exact convers give result convert doubl String::String use use constructor get result use static val doubl valu convert BigDecimal::BigDecimal
BigDecimal::BigDecimal translat doubl BigDecimal::BigDecimal accord context set scale BigDecimal::BigDecimal smallest valu 10 scale time val integ result constructor somewhat unpredict use general recommend see note constructor val doubl valu convert BigDecimal::BigDecimal mc context use
BigDecimal::BigDecimal translat BigInteger::BigInteger BigDecimal::BigDecimal scale BigDecimal::BigDecimal zero val BigInteger::BigInteger valu convert BigDecimal::BigDecimal
BigDecimal::BigDecimal translat BigInteger::BigInteger BigDecimal::BigDecimal accord context set scale BigDecimal::BigDecimal zero val BigInteger::BigInteger valu convert BigDecimal::BigDecimal mc context use
BigDecimal::BigDecimal translat BigInteger::BigInteger unscal valu int scale BigDecimal::BigDecimal valu BigDecimal::BigDecimal unscaledv time 10 scale unscaledv unscal valu BigDecimal::BigDecimal scale scale BigDecimal::BigDecimal
BigDecimal::BigDecimal translat BigInteger::BigInteger unscal valu int scale BigDecimal::BigDecimal accord context set valu BigDecimal::BigDecimal unscaledv time 10 scale accord precis mode set unscaledv unscal valu BigDecimal::BigDecimal scale scale BigDecimal::BigDecimal mc context use
BigDecimal::BigDecimal translat int BigDecimal::BigDecimal scale BigDecimal::BigDecimal zero val int valu convert BigDecimal::BigDecimal
BigDecimal::BigDecimal translat int BigDecimal::BigDecimal accord context set scale BigDecimal::BigDecimal zero val int valu convert BigDecimal::BigDecimal mc context use
BigDecimal::BigDecimal translat BigDecimal::BigDecimal scale BigDecimal::BigDecimal zero val valu convert BigDecimal::BigDecimal
BigDecimal::BigDecimal translat BigDecimal::BigDecimal accord context set scale BigDecimal::BigDecimal zero val valu convert BigDecimal::BigDecimal mc context use
BigDecimal::valueOf translat unscal valu int scale BigDecimal::BigDecimal static factori prefer int constructor allow reus frequent BigDecimal::BigDecimal valu unscaledv unscal valu BigDecimal::BigDecimal scale scale BigDecimal::BigDecimal BigDecimal::BigDecimal valu unscaledv time 10 scale
BigDecimal::valueOf translat valu BigDecimal::BigDecimal scale zero static factori prefer constructor allow reus frequent BigDecimal::BigDecimal valu val valu BigDecimal::BigDecimal BigDecimal::BigDecimal valu val
BigDecimal::valueOf translat doubl BigDecimal::BigDecimal use doubl canon string represent note general prefer convert doubl float BigDecimal::BigDecimal valu return equal result construct BigDecimal::BigDecimal result use val doubl convert BigDecimal::BigDecimal BigDecimal::BigDecimal valu equal approxim equal valu val
BigDecimal::add return BigDecimal::BigDecimal valu augend scale max scale augend scale augend valu ad BigDecimal::BigDecimal augend
BigDecimal::add return BigDecimal::BigDecimal valu augend accord context set number zero precis set nonzero number necessari result augend valu ad BigDecimal::BigDecimal mc context use augend necessari
BigDecimal::preAlign return array length sum entri equal sum BigDecimal::BigDecimal argument digit posit argument suffici gap valu smaller magnitud condens sticki bit end result precis final result includ order digit magnitud operand note strict speak optim make wider rang addit practic correspond pre shift oper fix precis float point adder complic variabl precis result determin MathContext::MathContext nuanc oper implement shift smaller magnitud operand number digit smaller operand reduc significand partial overlap
BigDecimal::subtract return BigDecimal::BigDecimal valu subtrahend scale max scale subtrahend scale subtrahend valu subtract BigDecimal::BigDecimal subtrahend
BigDecimal::subtract return BigDecimal::BigDecimal valu subtrahend accord context set subtrahend zero necessari result zero result subtrahend negat mc subtrahend valu subtract BigDecimal::BigDecimal mc context use subtrahend necessari
BigDecimal::multiply return BigDecimal::BigDecimal valu time multiplicand scale scale multiplicand scale multiplicand valu multipli BigDecimal::BigDecimal multiplicand
BigDecimal::multiply return BigDecimal::BigDecimal valu time multiplicand accord context set multiplicand valu multipli BigDecimal::BigDecimal mc context use multiplicand necessari
BigDecimal::divide return BigDecimal::BigDecimal valu divisor scale specifi perform generat result specifi scale specifi mode appli prefer legaci divisor valu BigDecimal::BigDecimal divid scale scale BigDecimal::BigDecimal quotient return roundingmod mode appli divisor
BigDecimal::divide return BigDecimal::BigDecimal valu divisor scale specifi perform generat result specifi scale specifi mode appli divisor valu BigDecimal::BigDecimal divid scale scale BigDecimal::BigDecimal quotient return roundingmod mode appli divisor
BigDecimal::divide return BigDecimal::BigDecimal valu divisor scale scale perform generat result given scale specifi mode appli prefer legaci divisor valu BigDecimal::BigDecimal divid roundingmod mode appli divisor
BigDecimal::divide return BigDecimal::BigDecimal valu divisor scale scale perform generat result given scale specifi mode appli divisor valu BigDecimal::BigDecimal divid roundingmod mode appli divisor
BigDecimal::divide return BigDecimal::BigDecimal valu divisor prefer scale scale divisor scale exact quotient repres non termin decim expans ArithmeticException::ArithmeticException thrown divisor valu BigDecimal::BigDecimal divid divisor
BigDecimal::divide return BigDecimal::BigDecimal valu divisor accord context set divisor valu BigDecimal::BigDecimal divid mc context use divisor necessari
BigDecimal::divideToIntegralValue return BigDecimal::BigDecimal valu integ part quotient divisor prefer scale result scale divisor scale divisor valu BigDecimal::BigDecimal divid integ part divisor
BigDecimal::divideToIntegralValue return BigDecimal::BigDecimal valu integ part divisor integ part exact quotient depend mode mode affect valu return prefer scale result scale divisor scale ArithmeticException::ArithmeticException thrown integ part exact quotient mc precis digit divisor valu BigDecimal::BigDecimal divid mc context use integ part divisor
BigDecimal::remainder return BigDecimal::BigDecimal valu divisor remaind given subtract dividetointegralvalu divisor multipli divisor note modulo oper result negat divisor valu BigDecimal::BigDecimal divid divisor
BigDecimal::remainder return BigDecimal::BigDecimal valu divisor accord context set MathContext::MathContext set affect implicit divid comput remaind remaind comput definit exact therefor remaind contain mc getprecis digit remaind given subtract dividetointegralvalu divisor mc multipli divisor note modulo oper result negat divisor valu BigDecimal::BigDecimal divid mc context use divisor necessari
BigDecimal::divideAndRemainder return element BigDecimal::BigDecimal array contain result dividetointegralvalu follow result remaind operand note integ quotient remaind faster use dividetointegralvalu remaind separ divis carri divisor valu BigDecimal::BigDecimal divid remaind comput element BigDecimal::BigDecimal array quotient result dividetointegralvalu initi element remaind final element
BigDecimal::divideAndRemainder return element BigDecimal::BigDecimal array contain result dividetointegralvalu follow result remaind operand calcul accord context set note integ quotient remaind faster use dividetointegralvalu remaind separ divis carri divisor valu BigDecimal::BigDecimal divid remaind comput mc context use element BigDecimal::BigDecimal array quotient result dividetointegralvalu initi element remaind final element
BigDecimal::pow return BigDecimal::BigDecimal valu power comput exact unlimit precis paramet rang 999999999 inclus zero pow return note futur releas expand allow expon rang power rais BigDecimal::BigDecimal
BigDecimal::pow return BigDecimal::BigDecimal valu current implement use core algorithm defin ansi standard x3 274 1996 accord context set general return numer valu ulp exact numer valu chosen precis note futur releas use algorithm decreas allow error bound increas allow expon rang x3 274 1996 algorithm ArithmeticException::ArithmeticException thrown ab 999999999 mc precis mc precis mc precis decim digit zero return zero posit result calcul repeat squar techniqu singl accumul individu multipl accumul use math context set mc precis increas mc precis elength where elength number decim digit negat result calcul posit valu divid use work precis specifi final valu posit negat case destin precis power rais BigDecimal::BigDecimal mc context use use ansi standard x3 274 1996 algorithm
BigDecimal::abs return BigDecimal::BigDecimal valu absolut valu BigDecimal::BigDecimal scale scale ab
BigDecimal::abs return BigDecimal::BigDecimal valu absolut valu BigDecimal::BigDecimal accord context set mc context use ab necessari
BigDecimal::negate return BigDecimal::BigDecimal valu scale scale
BigDecimal::negate return BigDecimal::BigDecimal valu accord context set mc context use necessari
BigDecimal::plus return BigDecimal::BigDecimal valu scale scale simpli return BigDecimal::BigDecimal includ symmetri unari
BigDecimal::plus return BigDecimal::BigDecimal valu accord context set effect ident mc context use necessari zero result scale
BigDecimal::signum return signum function BigDecimal::BigDecimal valu BigDecimal::BigDecimal negat zero posit
BigDecimal::scale return scale BigDecimal::BigDecimal zero posit scale number digit decim point negat unscal valu number multipli ten power negat scale exampl scale mean unscal valu multipli 1000 scale BigDecimal::BigDecimal
BigDecimal::precision return precis BigDecimal::BigDecimal precis number digit unscal valu precis zero valu precis BigDecimal::BigDecimal
BigDecimal::unscaledValue return BigInteger::BigInteger valu unscal valu BigDecimal::BigDecimal comput 10 scale unscal valu BigDecimal::BigDecimal
BigDecimal::ROUND ceil mode posit infin BigDecimal::BigDecimal posit behav negat behav note mode decreas calcul valu
BigDecimal::ROUND floor mode negat infin BigDecimal::BigDecimal posit behav negat behav note mode increas calcul valu
BigDecimal::round return BigDecimal::BigDecimal accord MathContext::MathContext set precis set take place effect ident mc context use BigDecimal::BigDecimal accord MathContext::MathContext set
BigDecimal::setScale return BigDecimal::BigDecimal scale specifi valu unscal valu determin multipli divid BigDecimal::BigDecimal unscal valu appropri power ten maintain overal valu scale reduc oper unscal valu divid multipli valu chang case specifi mode appli divis note BigDecimal::BigDecimal object immut call result origin object modifi contrari usual convent name set mutat field instead BigDecimal::setScale return object proper scale return object newli alloc newscal scale BigDecimal::BigDecimal valu return roundingmod mode appli BigDecimal::BigDecimal scale specifi valu unscal valu determin multipli divid BigDecimal::BigDecimal unscal valu appropri power ten maintain overal valu
BigDecimal::setScale return BigDecimal::BigDecimal scale specifi valu unscal valu determin multipli divid BigDecimal::BigDecimal unscal valu appropri power ten maintain overal valu scale reduc oper unscal valu divid multipli valu chang case specifi mode appli divis note BigDecimal::BigDecimal object immut call result origin object modifi contrari usual convent name set mutat field instead BigDecimal::setScale return object proper scale return object newli alloc prefer legaci newscal scale BigDecimal::BigDecimal valu return roundingmod mode appli BigDecimal::BigDecimal scale specifi valu unscal valu determin multipli divid BigDecimal::BigDecimal unscal valu appropri power ten maintain overal valu
BigDecimal::setScale return BigDecimal::BigDecimal scale specifi valu valu numer equal BigDecimal::BigDecimal throw ArithmeticException::ArithmeticException call typic increas scale case guarante exist BigDecimal::BigDecimal specifi scale correct valu call reduc scale caller know BigDecimal::BigDecimal suffici zero end fraction part factor ten integ valu allow rescal chang valu return result argument version BigDecimal::setScale save caller troubl specifi mode case where irrelev note BigDecimal::BigDecimal object immut call result origin object modifi contrari usual convent name set mutat field instead BigDecimal::setScale return object proper scale return object newli alloc newscal scale BigDecimal::BigDecimal valu return BigDecimal::BigDecimal scale specifi valu unscal valu determin multipli divid BigDecimal::BigDecimal unscal valu appropri power ten maintain overal valu
BigDecimal::movePointLeft return BigDecimal::BigDecimal equival decim point move place non negat call mere add scale negat call equival movepointright BigDecimal::BigDecimal return call valu time 10 scale max scale number place move decim point BigDecimal::BigDecimal equival decim point move place
BigDecimal::movePointRight return BigDecimal::BigDecimal equival decim point move place non negat call mere subtract scale negat call equival movepointleft BigDecimal::BigDecimal return call valu time 10 scale max scale number place move decim point BigDecimal::BigDecimal equival decim point move place
BigDecimal::scaleByPowerOfTen return BigDecimal::BigDecimal numer valu equal 10 scale result scale expon power ten scale BigDecimal::BigDecimal numer valu equal 10
BigDecimal::stripTrailingZeros return BigDecimal::BigDecimal numer equal trail zero remov represent exampl strip trail zero BigDecimal::BigDecimal valu 600 BigInteger::BigInteger scale compon equal 6000 yield 6e2 BigInteger::BigInteger scale compon equal BigDecimal::BigDecimal numer equal zero bigdecim zero return numer equal BigDecimal::BigDecimal trail zero remov
BigDecimal::compareTo compar BigDecimal::BigDecimal specifi BigDecimal::BigDecimal BigDecimal::BigDecimal object equal valu scale 00 consid equal prefer individu boolean comparison oper op gt where lt op gt comparison oper val BigDecimal::BigDecimal BigDecimal::BigDecimal compar BigDecimal::BigDecimal numer equal greater val
BigDecimal::equals compar BigDecimal::BigDecimal specifi Object::Object equal consid BigDecimal::BigDecimal object equal equal valu scale thus equal 00 compar Object::Object BigDecimal::BigDecimal compar specifi Object::Object BigDecimal::BigDecimal valu scale equal BigDecimal::BigDecimal
BigDecimal::min return minimum BigDecimal::BigDecimal val val valu minimum comput BigDecimal::BigDecimal valu lesser BigDecimal::BigDecimal val equal defin return
BigDecimal::max return maximum BigDecimal::BigDecimal val val valu maximum comput BigDecimal::BigDecimal valu greater BigDecimal::BigDecimal val equal defin return
BigDecimal::hashCode return hash BigDecimal::BigDecimal note BigDecimal::BigDecimal object numer equal differ scale 00 general hash hash BigDecimal::BigDecimal
BigDecimal::toString return string represent BigDecimal::BigDecimal use scientif notat expon standard canon string form BigDecimal::BigDecimal creat step first absolut valu unscal valu BigDecimal::BigDecimal convert string base ten use charact lead zero valu zero case singl charact adjust expon calcul negat scale number charact convert unscal valu scale ulength where ulength length absolut valu unscal valu decim digit precis scale greater equal zero adjust expon greater equal number convert charact form use exponenti notat case scale zero decim point ad scale posit decim point insert scale specifi number charact decim point charact ad convert unscal valu necessari charact preced decim point insert convent charact prefix scale negat adjust expon number convert charact form use exponenti notat case convert BigInteger::BigInteger digit decim point insert first digit expon charact form suffix convert unscal valu insert decim point compris letter follow adjust expon convert charact form latter base ten use charact lead zero prefix sign charact 92 u002d adjust expon negat 92 u002b final entir string prefix sign charact 92 u002d unscal valu zero sign charact prefix unscal valu zero posit exampl represent unscal valu scale result string shown note map distinguish BigDecimal::BigDecimal valu result convers distinguish BigDecimal::BigDecimal valu unscal valu scale uniqu string represent result use tostr string represent convert BigDecimal::BigDecimal use constructor origin valu recov string produc given number affect local mean canon string represent exchang decim data key Hashtable::Hashtable local sensit number format pars handl subclass number expon engin notat BigDecimal::BigDecimal known number digit decim point digit charact map charact fordigit string represent BigDecimal::BigDecimal
BigDecimal::toEngineeringString return string represent BigDecimal::BigDecimal use engin notat expon return string repres BigDecimal::BigDecimal describ exponenti notat power ten adjust multipl engin notat integ part nonzero valu rang 999 exponenti notat zero valu decim point fraction zero digit scale zero valu preserv note output output guarante recov integ scale pair BigDecimal::BigDecimal output string convert BigDecimal::BigDecimal use result meet weaker constraint produc numer equal result appli string constructor output string represent BigDecimal::BigDecimal use engin notat expon
BigDecimal::toPlainString return string represent BigDecimal::BigDecimal expon field valu posit scale number digit decim point indic scale valu zero negat scale result string generat valu convert numer equal valu zero scale trail zero zero scale valu result entir string prefix sign charact 92 u002d unscal valu zero sign charact prefix unscal valu zero posit note result pass numer valu BigDecimal::BigDecimal necessarili recov represent BigDecimal::BigDecimal scale particular BigDecimal::BigDecimal negat scale string result scale zero process string constructor behav analog tostr earlier releas string represent BigDecimal::BigDecimal expon field
BigDecimal::toBigInteger convert BigDecimal::BigDecimal BigInteger::BigInteger convers analog narrow primit convers doubl defin section trade languag specif fraction part BigDecimal::BigDecimal discard note convers lose precis BigDecimal::BigDecimal valu thrown convers inexact word nonzero fraction part discard use BigDecimal::BigDecimal convert BigInteger::BigInteger
BigDecimal::toBigIntegerExact convert BigDecimal::BigDecimal BigInteger::BigInteger check lost thrown BigDecimal::BigDecimal nonzero fraction part BigDecimal::BigDecimal convert BigInteger::BigInteger
BigDecimal::longValue convert BigDecimal::BigDecimal convers analog narrow primit convers doubl defin section trade languag specif fraction part BigDecimal::BigDecimal discard result BigInteger::BigInteger big fit low order 64 bit return note convers lose overal magnitud precis BigDecimal::BigDecimal valu return result opposit sign BigDecimal::BigDecimal convert
BigDecimal::longValueExact convert BigDecimal::BigDecimal check lost BigDecimal::BigDecimal nonzero fraction part rang result ArithmeticException::ArithmeticException thrown BigDecimal::BigDecimal convert
BigDecimal::intValue convert BigDecimal::BigDecimal int convers analog narrow primit convers doubl defin section trade languag specif fraction part BigDecimal::BigDecimal discard result BigInteger::BigInteger big fit int low order 32 bit return note convers lose overal magnitud precis BigDecimal::BigDecimal valu return result opposit sign BigDecimal::BigDecimal convert int
BigDecimal::intValueExact convert BigDecimal::BigDecimal int check lost BigDecimal::BigDecimal nonzero fraction part rang int result ArithmeticException::ArithmeticException thrown BigDecimal::BigDecimal convert int
BigDecimal::shortValueExact convert BigDecimal::BigDecimal check lost BigDecimal::BigDecimal nonzero fraction part rang result ArithmeticException::ArithmeticException thrown BigDecimal::BigDecimal convert
BigDecimal::byteValueExact convert BigDecimal::BigDecimal byte check lost BigDecimal::BigDecimal nonzero fraction part rang byte result ArithmeticException::ArithmeticException thrown BigDecimal::BigDecimal convert byte
BigDecimal::floatValue convert BigDecimal::BigDecimal float convers similar narrow primit convers doubl float defin section trade languag specif BigDecimal::BigDecimal great magnitud repres float convert appropri note return valu finit convers lose precis BigDecimal::BigDecimal valu BigDecimal::BigDecimal convert float
BigDecimal::doubleValue convert BigDecimal::BigDecimal doubl convers similar narrow primit convers doubl float defin section trade languag specif BigDecimal::BigDecimal great magnitud repres doubl convert appropri note return valu finit convers lose precis BigDecimal::BigDecimal valu BigDecimal::BigDecimal convert doubl
BigDecimal::ulp return size ulp unit last place BigDecimal::BigDecimal ulp nonzero BigDecimal::BigDecimal valu posit distanc valu BigDecimal::BigDecimal valu larger magnitud number digit ulp zero valu numer equal scale result store scale result zero nonzero valu equal scale size ulp
BigDecimal::layoutChars lay BigDecimal::BigDecimal char array equival call getvaluestr sci scientif exponenti notat fals engin string canon string represent BigDecimal::BigDecimal
BigDecimal::bigTenToThe return 10 power BigInteger::BigInteger power ten return BigInteger::BigInteger valu 10
BigDecimal::expandBigIntegerTenPowers expand big ten power tabl array contain 10 power ten return BigDecimal::BigDecimal valu 10 meantim big ten power tabl array get expand size greater
BigDecimal::inflated return appropri BigInteger::BigInteger intval field intval null compact represent use
BigDecimal::matchScale match scale BigDecimal::BigDecimal align signific digit scale val val differ rescal non destruct lower scale BigDecimal::BigDecimal match lower scale refer replac refer object scale BigDecimal::BigDecimal val array element refer BigDecimal::BigDecimal align
BigDecimal::readObject reconstitut BigDecimal::BigDecimal instanc stream deseri stream read
BigDecimal::writeObject serial BigDecimal::BigDecimal stream question stream serial
BigDecimal::bigDigitLength return length absolut valu BigInteger::BigInteger decim digit BigInteger::BigInteger length unscal valu decim digit
BigDecimal::checkScale check scale underflow overflow BigDecimal::BigDecimal nonzero throw scale outof rang zero satur scale extrem valu sign scale rang val scale valid scale int
BigDecimal::compactValFor return compact valu given BigInteger::BigInteger inflat big reli intern represent BigInteger::BigInteger
BigDecimal::audit check intern invari BigDecimal::BigDecimal invari includ object initi intcompact inflat intval non null condit intcompact intval set valu consist precis nonzero valu note audit suppos chang state BigDecimal::BigDecimal object
BigDecimal::doRound return BigDecimal::BigDecimal accord MathContext::MathContext set BigDecimal::BigDecimal creat return val valu mc context use BigDecimal::BigDecimal accord MathContext::MathContext set return valu
BigDecimal::divideAndRound intern divis oper divis return BigDecimal::BigDecimal object quotient scale set pass scale remaind zero base pass roundingmod remaind zero last paramet preferredscal equal scale trail zero result strip match preferredscal
BigDecimal::divideAndRound divid BigInteger::BigInteger valu valu base pass roundingmod
BigDecimal::divideAndRound intern divis oper divis BigInteger::BigInteger return BigDecimal::BigDecimal object quotient scale set pass scale remaind zero base pass roundingmod remaind zero last paramet preferredscal equal scale trail zero result strip match preferredscal
BigDecimal::divideAndRound divid BigInteger::BigInteger valu BigInteger::BigInteger valu base pass roundingmod
BigDecimal::divideAndRound intern divis oper divis BigInteger::BigInteger BigInteger::BigInteger return BigDecimal::BigDecimal object quotient scale set pass scale remaind zero base pass roundingmod remaind zero last paramet preferredscal equal scale trail zero result strip match preferredscal
BigDecimal::createAndStripZerosToMatchScale remov insignific trail zero BigInteger::BigInteger valu prefer scale reach zero remov prefer scale integ min valu trail zero remov BigDecimal::BigDecimal scale possibl reduc close prefer scale
BigDecimal::createAndStripZerosToMatchScale remov insignific trail zero valu prefer scale reach zero remov prefer scale integ min valu trail zero remov BigDecimal::BigDecimal scale possibl reduc close prefer scale
BigDecimal::divideSmallFastPath return BigDecimal::BigDecimal valu xs ys accord context set fast path xscale yscale yscale 18 mc presis 18
BigDecimal::divide return BigDecimal::BigDecimal valu xs ys accord context set
BigDecimal::divide return BigDecimal::BigDecimal valu xs ys accord context set
BigDecimal::divide return BigDecimal::BigDecimal valu xs ys accord context set
BigDecimal::divide return BigDecimal::BigDecimal valu xs ys accord context set
BigDecimal::doRound128 128 bit valu accord MathContext::MathContext return null result repsent compact BigDecimal::BigDecimal
FileWriter::FileWriter conveni write charact file constructor assum default charact encod default byte buffer size accept specifi valu construct OutputStreamWriter::OutputStreamWriter FileOutputStream::FileOutputStream file avail creat depend platform platform particular allow file open write filewrit file write object time situat constructor fail file involv open FileWriter::FileWriter meant write stream charact write stream raw byte consid use FileOutputStream::FileOutputStream
FileWriter::FileWriter construct FileWriter::FileWriter object given file name filenam String::String system depend filenam
FileWriter::FileWriter construct FileWriter::FileWriter object given file name boolean indic append data written filenam String::String system depend filenam append boolean data written end file begin
FileWriter::FileWriter construct FileWriter::FileWriter object given File::File object file File::File object write
FileWriter::FileWriter construct FileWriter::FileWriter object given File::File object argument byte written end file begin file File::File object write append byte written end file begin
FileWriter::FileWriter construct FileWriter::FileWriter object associ file descriptor fd filedescriptor object write
InvalidClassException::InvalidClassException thrown serial runtim detect Class::Class serial version match descriptor read stream contain unknown datatyp access arg constructor
InvalidClassException::InvalidClassException report InvalidClassException::InvalidClassException reason specifi reason String::String describ reason
InvalidClassException::InvalidClassException construct InvalidClassException::InvalidClassException object cname String::String name invalid reason String::String describ reason
DataInput::DataInput DataInput::DataInput interfac provid read byte binari stream reconstruct data primit type facil reconstruct String::String data format general read routin interfac end file reach desir number byte read eofexcept kind ioexcept thrown byte read reason end file ioexcept eofexcept thrown particular ioexcept thrown input stream close implement DataInput::DataInput DataOutput::DataOutput interfac repres unicod string format slight modif utf regard standard utf format see section unicod encod form unicod standard version note tabl signific bit appear hand column differ format standard utf format follow null byte u005cu0000 encod byte format byte encod string embed null byte byte byte format repres form surrog pair
DataInput::readLine read line text input stream read success byte convert byte separ charact encount line termin end file charact read return String::String note process byte support input full unicod charact set end file encount byte read null return byte read convert type char zero extens charact encount discard read ceas charact encount discard byte convert 32 charact discard read ceas end file encount charact encount read ceas read ceas String::String return contain charact read discard taken order note charact string valu u005cu0100 char 256 line text input stream null end file encount byte read
DataInput::readUTF read string encod use format general contract readutf read represent unicod charact string encod modifi utf format string charact return String::String first byte read construct unsign 16 bit integ exact manner readunsignedshort integ valu call utf length specifi number addit byte read byte convert charact group length group comput valu first byte group byte group first byte group first byte group match bit pattern 0xxxxxxx where mean group consist byte byte zero extend form charact first byte group match bit pattern 110xxxxx group consist byte byte byte byte last byte read byte match bit pattern 10xxxxxx utfdataformatexcept thrown group convert charact first byte group match bit pattern 1110xxxx group consist byte byte byte byte last byte read byte byte match bit pattern 10xxxxxx utfdataformatexcept thrown group convert charact first byte group match pattern 1111xxxx pattern 10xxxxxx utfdataformatexcept thrown end file encount time entir process eofexcept thrown group convert charact process charact gather order correspond group read input stream form String::String return writeutf interfac DataOutput::DataOutput write data suitabl read unicod string
CharArrayWriter::write write portion string buffer str String::String written offset start read charact len Number::Number charact written
PushbackReader::unread push portion array charact copi front pushback buffer return charact read valu cbuf charact valu cbuf forth cbuf Character::Character array offset first charact push len Number::Number charact push
FileReader::FileReader conveni read charact file constructor assum default charact encod default byte buffer size appropri specifi valu construct InputStreamReader::InputStreamReader FileInputStream::FileInputStream FileReader::FileReader meant read stream charact read stream raw byte consid use FileInputStream::FileInputStream
FileReader::FileReader creat fileread given name file read filenam name file read
FileReader::FileReader creat fileread given file read file file read
FileReader::FileReader creat fileread given filedescriptor read fd filedescriptor read
ObjectStreamClass::forClass return local vm version map null return correspond local Class::Class instanc descriptor repres
ObjectStreamClass::getSerialFields return ObjectStreamField::ObjectStreamField array describ serializ field given Serializable::Serializable field actual field repres objectstreamfield correspond non null Field::Field object throw InvalidClassException::InvalidClassException explicit declar serializ field invalid
ObjectStreamClass::getDeclaredSerialFields return serializ field given defin explicit serialpersistentfield field null appropri serialpersistentfield field defin Serializable::Serializable field actual field repres objectstreamfield correspond non null Field::Field object compat releas serialpersistentfield field null valu consid equival declar serialpersistentfield throw InvalidClassException::InvalidClassException declar serializ field invalid multipl field share name
ObjectStreamClass::getDefaultSerialFields return array objectstreamfield correspond non static non transient field declar given ObjectStreamField::ObjectStreamField contain Field::Field object field repres default serializ field exist field return
ObjectStreamClass::FieldReflector construct ObjectStreamClass::FieldReflector capabl set get valu subset field objectstreamfield contain non null reflect Field::Field object objectstreamfield null field treat filler get oper return default valu set oper discard given valu
ObjectStreamClass::getFields return list objectstreamfield repres field oper reflector share unshar valu Field::Field object contain objectstreamfield list reflect bind local defin serializ field
ObjectStreamClass::matchFields match given set serializ field serializ field obtain given local descriptor contain bind reflect Field::Field object return list objectstreamfield ObjectStreamField::ObjectStreamField signatur match local field contain Field::Field object field unmatch objectstreamfield contain null Field::Field object share unshar set return objectstreamfield reflect match local objectstreamfield throw InvalidClassException::InvalidClassException unresolv type conflict exist set field
ObjectOutputStream::ObjectOutputStream ObjectOutputStream::ObjectOutputStream write primit data type graph object OutputStream::OutputStream object read reconstitut use ObjectInputStream::ObjectInputStream persist storag object accomplish use file stream stream network socket stream object reconstitut host process object support io serializ interfac written stream serializ object encod includ name signatur valu object field array closur object referenc initi object writeobject write object stream object includ string array written writeobject multipl object primit written stream object read correspond objectinputstream type order written primit data type written stream use appropri DataOutput::DataOutput string written use writeutf default serial mechan object write object signatur valu non transient non static field refer object transient static field caus object written multipl refer singl object encod use refer share mechan graph object restor shape origin written exampl write object read exampl objectinputstream requir handl serial deseri process implement exact signatur writeobject respons write state object particular correspond readobject restor concern state belong object superclass subclass State::State save write individu field ObjectOutputStream::ObjectOutputStream use writeobject use primit data type support DataOutput::DataOutput serial write field object implement io serializ interfac subclass Objects::Objects serializ serializ case non serializ arg constructor allow field initi case respons subclass save restor state non serializ frequent case field access packag protect get set restor state serial object prevent implement writeobject readobject throw NotSerializableException::NotSerializableException caught ObjectOutputStream::ObjectOutputStream abort serial process implement Externalizable::Externalizable interfac allow object assum complet control content format object serial form Externalizable::Externalizable interfac writeextern readextern call save restor object state implement write read state use ObjectOutput::ObjectOutput ObjectInput::ObjectInput respons object handl version occur enum constant serial differ ordinari serializ externaliz object serial form enum constant consist sole name field valu constant transmit serial enum constant ObjectOutputStream::ObjectOutputStream write string return constant name serializ externaliz object enum constant function target refer appear subsequ serial stream process enum constant serial custom specif writeobject writereplac defin enum type ignor serial similar serialpersistentfield serialversionuid field declar ignor enum type fix serialversionuid 0l primit data exclud serializ field externaliz data written ObjectOutputStream::ObjectOutputStream block data record block data record compos header data block data header consist marker number byte follow header consecut primit data write merg block data record block factor block data record 1024 byte block data record fill 1024 byte written termin block data mode call ObjectOutputStream::ObjectOutputStream writeobject ObjectOutputStream::defaultWriteObject ObjectOutputStream::writeFields initi termin exist block data record
ObjectOutputStream::writeObject write specifi object ObjectOutputStream::ObjectOutputStream object signatur valu non transient non static field supertyp written default serial overridden use writeobject readobject Objects::Objects referenc object written transit complet equival graph object reconstruct ObjectInputStream::ObjectInputStream thrown OutputStream::OutputStream serial fatal OutputStream::OutputStream indetermin state caller ignor recov stream state
ObjectOutputStream::writeObjectOverride Method::Method subclass overrid default writeobject call trust subclass ObjectInputStream::ObjectInputStream construct ObjectInputStream::ObjectInputStream use protect arg constructor subclass expect provid overrid modifi final obj object written stream
ObjectOutputStream::reset reset disregard state object written stream state reset ObjectOutputStream::ObjectOutputStream current point stream mark reset correspond ObjectInputStream::ObjectInputStream reset point Objects::Objects previous written stream refer stream written stream
ObjectOutputStream::annotateClass subclass implement allow data store stream default correspond ObjectInputStream::ObjectInputStream resolveclass call exact uniqu stream name signatur written stream make free use ObjectOutputStream::ObjectOutputStream save represent deem suitabl exampl byte file resolveclass correspond subclass ObjectInputStream::ObjectInputStream read use data object written ObjectOutputStream::annotateClass cl annot custom data
ObjectOutputStream::annotateProxyClass subclass implement store custom data stream descriptor dynam proxi call exact uniqu proxi descriptor stream default implement ObjectOutputStream::ObjectOutputStream correspond ObjectInputStream::ObjectInputStream ObjectInputStream::resolveProxyClass given subclass ObjectOutputStream::ObjectOutputStream overrid ObjectInputStream::resolveProxyClass correspond subclass ObjectInputStream::ObjectInputStream read data object written ObjectOutputStream::annotateProxyClass cl proxi annot custom data
ObjectOutputStream::replaceObject allow trust subclass ObjectOutputStream::ObjectOutputStream substitut object serial replac object disabl ObjectOutputStream::enableReplaceObject call ObjectOutputStream::enableReplaceObject check stream request replac trust first occurr object written serial stream pass ObjectOutputStream::replaceObject subsequ refer object replac object return origin call ObjectOutputStream::replaceObject ensur privat state object unintent expos trust stream use ObjectOutputStream::replaceObject objectoutputstream writeobject take paramet type Object::Object oppos type Serializable::Serializable allow case where non serializ object replac serializ subclass replac object insur complementari substitut made deseri substitut object compat field where refer store Objects::Objects type subclass type field array element abort serial rais object store call object first encount subsequ refer object redirect object return object substitut origin object null return object substitut caus nullreferenceexcept contain refer origin object expect object instead null obj object replac altern object replac specifi
ObjectOutputStream::writeClassDescriptor write specifi descriptor ObjectOutputStream::ObjectOutputStream Class::Class descriptor identifi object written stream subclass ObjectOutputStream::ObjectOutputStream overrid custom descriptor written serial stream correspond ObjectInputStream::ObjectInputStream ObjectInputStream::readClassDescriptor overridden reconstitut descriptor custom stream represent default write descriptor accord format defin Object::Object serial specif note call ObjectOutputStream::ObjectOutputStream use old serial stream format set call objectoutputstream ObjectOutputStream::useProtocolVersion serial stream use old format ObjectStreamConstants::PROTOCOL version descriptor written intern manner overridden custom desc descriptor write stream
ObjectOutputStream::writeBytes write String::String sequenc byte str String::String byte written
ObjectOutputStream::writeChars write String::String sequenc char str String::String char written
ObjectOutputStream::writeUTF primit data write String::String format note signific differ write String::String stream primit data Object::Object String::String instanc written writeobject written stream String::String initi Future::Future writeobject call write refer string stream str String::String written
ObjectOutputStream::put put valu name Object::Object field persist field name name serializ field val valu assign field null
ObjectOutputStream::writeOrdinaryObject write represent ordinari String::String Class::Class ObjectStreamClass::ObjectStreamClass array enum constant serializ object stream
ObjectOutputStream::writeLongUTF write given string utf format Long::Long utf format ident standard utf use byte header instead standard byte convey utf encod length
ObjectOutputStream::push push String::String top enclos list
PushbackInputStream::reset reposit stream posit time mark last call input stream reset PushbackInputStream::PushbackInputStream throw IOException::IOException
FilePermission::FilePermission creat FilePermission::FilePermission object use action mask effici filepermiss string String::String constructor creat FilePermission::FilePermission object pass impli path pathnam file directori mask action mask use
FilePermission::getMask convert action String::String action mask action action string action mask
FilePermissionCollection::writeObject permiss field Vector::Vector contain filepermiss
File::File abstract represent file directori pathnam user interfac oper system use system depend pathnam string name file directori abstract system independ view hierarch pathnam abstract pathnam compon option system depend prefix string disk drive specifi unix root directori microsoft window unc pathnam sequenc zero string name first name abstract pathnam directori name case microsoft window unc pathnam hostnam subsequ name abstract pathnam denot directori last name denot directori file empti abstract pathnam prefix empti name sequenc convers pathnam string abstract pathnam inher system depend abstract pathnam convert pathnam string name separ singl copi default separ charact default name separ charact defin system properti file separ made avail static field pathnam string convert abstract pathnam name separ default name separ charact name separ charact support system pathnam abstract string form absolut relat absolut pathnam complet requir order locat file denot relat pathnam contrast interpret term taken pathnam default io packag resolv relat pathnam current user directori directori name system properti user dir typic directori virtual machin invok parent abstract pathnam obtain invok consist pathnam prefix name pathnam name sequenc last directori absolut pathnam ancestor file object absolut abstract pathnam begin directori absolut pathnam exampl directori denot abstract pathnam usr ancestor directori denot pathnam usr local bin prefix concept handl root directori unix platform drive specifi root directori unc pathnam microsoft window platform follow unix platform prefix absolut pathnam relat pathnam prefix abstract pathnam denot root directori prefix empti name sequenc microsoft window platform prefix pathnam contain drive specifi consist drive letter follow possibl follow pathnam absolut prefix unc pathnam hostnam share name first name name sequenc relat pathnam specifi drive prefix instanc denot actual file system object file directori denot object object resid partit partit oper system specif portion storag file system singl storag devic physic disk drive flash memori cd rom contain multipl partit object resid partit ancestor absolut form pathnam file system implement restrict oper actual file system object read write execut restrict collect known access permiss file system multipl set access permiss singl object exampl set appli object owner appli user access permiss object caus fail instanc file immut creat abstract pathnam repres file object chang interoper nio file packag packag defin interfac virtual machin access file file attribut file system overcom limit io file obtain use abstract path repres File::File object locat file result Path::Path provid effici extens access addit file oper file attribut diagnos error oper file fail
File::PathStatus abstract represent file directori pathnam user interfac oper system use system depend pathnam string name file directori abstract system independ view hierarch pathnam abstract pathnam compon option system depend prefix string disk drive specifi unix root directori microsoft window unc pathnam sequenc zero string name first name abstract pathnam directori name case microsoft window unc pathnam hostnam subsequ name abstract pathnam denot directori last name denot directori file empti abstract pathnam prefix empti name sequenc convers pathnam string abstract pathnam inher system depend abstract pathnam convert pathnam string name separ singl copi default separ charact default name separ charact defin system properti file separ made avail static field pathnam string convert abstract pathnam name separ default name separ charact name separ charact support system pathnam abstract string form absolut relat absolut pathnam complet requir order locat file denot relat pathnam contrast interpret term taken pathnam default io packag resolv relat pathnam current user directori directori name system properti user dir typic directori virtual machin invok parent abstract pathnam obtain invok consist pathnam prefix name pathnam name sequenc last directori absolut pathnam ancestor file object absolut abstract pathnam begin directori absolut pathnam exampl directori denot abstract pathnam usr ancestor directori denot pathnam usr local bin prefix concept handl root directori unix platform drive specifi root directori unc pathnam microsoft window platform follow unix platform prefix absolut pathnam relat pathnam prefix abstract pathnam denot root directori prefix empti name sequenc microsoft window platform prefix pathnam contain drive specifi consist drive letter follow possibl follow pathnam absolut prefix unc pathnam hostnam share name first name name sequenc relat pathnam specifi drive prefix instanc denot actual file system object file directori denot object object resid partit partit oper system specif portion storag file system singl storag devic physic disk drive flash memori cd rom contain multipl partit object resid partit ancestor absolut form pathnam file system implement restrict oper actual file system object read write execut restrict collect known access permiss file system multipl set access permiss singl object exampl set appli object owner appli user access permiss object caus fail instanc file immut creat abstract pathnam repres file object chang interoper nio file packag packag defin interfac virtual machin access file file attribut file system overcom limit io file obtain use abstract path repres File::File object locat file result Path::Path provid effici extens access addit file oper file attribut diagnos error oper file fail Enum::Enum type indic status file path
File::File intern constructor normal pathnam string
File::File intern constructor normal pathnam string paramet order disambigu file String::String constructor
File::File creat file instanc convert given pathnam string abstract pathnam given string empti string result empti abstract pathnam pathnam pathnam string
File::File creat file instanc parent pathnam string child pathnam string parent null file instanc creat invok singl argument file constructor given child pathnam string parent pathnam string taken denot directori child pathnam string taken denot directori file child pathnam string absolut convert relat pathnam system depend parent empti string file instanc creat convert child abstract pathnam resolv result system depend default directori pathnam string convert abstract pathnam child abstract pathnam resolv parent parent parent pathnam string child child pathnam string
File::File creat file instanc parent abstract pathnam child pathnam string parent null file instanc creat invok singl argument file constructor given child pathnam string parent abstract pathnam taken denot directori child pathnam string taken denot directori file child pathnam string absolut convert relat pathnam system depend parent empti abstract pathnam file instanc creat convert child abstract pathnam resolv result system depend default directori pathnam string convert abstract pathnam child abstract pathnam resolv parent parent parent abstract pathnam child child pathnam string
File::File creat file instanc convert given file uri abstract pathnam exact form file uri system depend henc transform perform constructor system depend given abstract pathnam guarante file nbsp equal nbsp origin abstract pathnam uri abstract pathnam creat possibl invoc virtual machin relationship typic hold file uri creat virtual machin oper system convert abstract pathnam virtual machin oper system uri absolut hierarch uri scheme equal file non empti path compon undefin author queri fragment compon
File::getPath convert abstract pathnam pathnam string result string use separ name name sequenc string form abstract pathnam
File::getAbsolutePath return absolut pathnam string abstract pathnam abstract pathnam absolut pathnam string simpli return abstract pathnam empti abstract pathnam pathnam string current user directori name system properti user dir return pathnam resolv system depend unix system relat pathnam made absolut resolv current user directori microsoft window system relat pathnam made absolut resolv current directori drive name pathnam resolv current user directori absolut pathnam string denot file directori abstract pathnam
File::toURI construct file uri repres abstract pathnam exact form uri system depend determin file denot abstract pathnam directori result uri end slash given abstract pathnam guarante nbsp touri equal nbsp origin abstract pathnam uri abstract pathnam creat possibl invoc virtual machin due system depend natur abstract pathnam relationship typic hold file uri creat virtual machin oper system convert abstract pathnam virtual machin oper system note abstract pathnam repres unc pathnam compon unc includ server name compon encod uri path author compon undefin mean repres null defin encod server name author compon result uri obtain Path::Path repres abstract pathnam absolut hierarch uri scheme equal file path repres abstract pathnam undefin author queri fragment compon
File::canWrite test modifi file denot abstract pathnam platform start virtual machin privileg allow modifi file mark read consequ return file mark read file system actual contain file denot abstract pathnam allow write file fals
File::exists test file directori denot abstract pathnam exist file directori denot abstract pathnam exist fals
File::isDirectory test file denot abstract pathnam directori where requir distinguish case file directori where attribut file requir time file denot abstract pathnam exist directori fals
File::isHidden test file name abstract pathnam hidden file exact definit hidden system depend unix system file consid hidden name begin period charact microsoft window system file consid hidden mark filesystem file denot abstract pathnam hidden accord convent platform
File::lastModified return time file denot abstract pathnam last modifi where requir distinguish case where 0l return where attribut file requir time where time last access creation time requir valu repres time file last modifi measur millisecond epoch 000000 gmt januari 1970 0l file exist error occur
File::length return length file denot abstract pathnam return valu unspecifi pathnam denot directori where requir distinguish case 0l return where attribut file requir time length byte file denot abstract pathnam 0l file exist oper system return 0l pathnam denot system depend entiti devic pipe
File::createNewFile atom creat empti file name abstract pathnam file name exist check exist file creation file exist singl oper atom respect filesystem activ affect file note file lock result protocol made work reliabl facil instead name file exist success creat fals name file exist
File::delete delet file directori denot abstract pathnam pathnam denot directori directori empti order delet note defin throw file delet use error report diagnos whi file delet file directori success delet fals
File::deleteOnExit request file directori denot abstract pathnam delet virtual machin termin Files::Files directori delet revers order regist invok delet file directori regist delet effect delet attempt normal termin virtual machin defin languag specif delet request cancel request therefor care note file lock result protocol made work reliabl facil instead
File::list return array string name file directori directori denot abstract pathnam abstract pathnam denot directori return null array string return file directori directori name denot directori directori parent directori includ result string file name complet path guarante name string result array appear specif order particular guarante appear alphabet order note defin open directori iter name file directori use resourc work directori respons work remot directori array string name file directori directori denot abstract pathnam array empti directori empti return null abstract pathnam denot directori error occur
File::list return array string name file directori directori denot abstract pathnam satisfi specifi filter behavior string return array satisfi filter given filter null name accept name satisfi filter valu result filter invok abstract pathnam name file directori directori denot filter filenam filter array string name file directori directori denot abstract pathnam accept given filter array empti directori empti name accept filter return null abstract pathnam denot directori error occur
File::listFiles return array abstract pathnam denot file directori denot abstract pathnam abstract pathnam denot directori return null array File::File object return file directori directori pathnam denot directori directori parent directori includ result result abstract pathnam construct abstract pathnam use constructor therefor pathnam absolut result pathnam absolut pathnam relat result pathnam relat directori guarante name string result array appear specif order particular guarante appear alphabet order note defin open directori iter name file directori use resourc work directori array abstract pathnam denot file directori directori denot abstract pathnam array empti directori empti return null abstract pathnam denot directori error occur
File::listFiles return array abstract pathnam denot file directori directori denot abstract pathnam satisfi specifi filter behavior pathnam return array satisfi filter given filter null pathnam accept pathnam satisfi filter valu result filter invok abstract pathnam name file directori directori denot filter filenam filter array abstract pathnam denot file directori directori denot abstract pathnam array empti directori empti return null abstract pathnam denot directori error occur
File::listFiles return array abstract pathnam denot file directori directori denot abstract pathnam satisfi specifi filter behavior pathnam return array satisfi filter given filter null pathnam accept pathnam satisfi filter valu result filter invok pathnam filter file filter array abstract pathnam denot file directori directori denot abstract pathnam array empti directori empti return null abstract pathnam denot directori error occur
File::mkdir creat directori name abstract pathnam directori creat fals
File::renameTo renam file denot abstract pathnam aspect behavior inher platform depend renam oper abl move file filesystem atom succeed file destin abstract pathnam exist return valu check make renam oper success note defin move renam file platform independ manner dest abstract pathnam name file renam succeed fals
File::setReadOnly mark file directori name abstract pathnam read oper allow invok file directori chang delet mark allow write access platform start virtual machin privileg allow modifi file mark read read file directori delet depend system oper succeed fals
File::setWritable set owner write permiss abstract pathnam platform start virtual machin privileg allow modifi file disallow write oper defin oper file attribut includ file permiss finer manipul file permiss requir writabl set access permiss allow write oper fals disallow write oper owneron write permiss appli owner write permiss appli file system distinguish owner write permiss permiss appli regardless valu oper succeed oper fail user permiss chang access permiss abstract pathnam
File::setWritable conveni set owner write permiss abstract pathnam platform start virtual machin privileg allow modifi file disallow write oper invoc form file setwrit arg behav exact invoc writabl set access permiss allow write oper fals disallow write oper oper succeed oper fail user permiss chang access permiss abstract pathnam
File::listRoots List::List avail filesystem root particular platform support zero hierarch organ file system file system root directori file file system reach window platform exampl root directori activ drive unix platform singl root directori name set avail filesystem root affect various system level oper insert eject remov media disconnect unmount physic virtual disk drive return array File::File object denot root directori avail filesystem root guarante canon pathnam file physic local machin begin root return canon pathnam file resid machin access remot filesystem protocol smb nfs begin root return pathnam remot file syntact indistinguish pathnam local file begin root return thus exampl File::File object denot root directori map network drive window platform return File::File object contain unc pathnam return throw secur secur manag exist deni read access particular root directori directori appear result array File::File object denot avail filesystem root null set root determin array empti filesystem root
File::getTotalSpace return size partit abstract pathnam size byte partit 0l abstract pathnam name partit
File::getFreeSpace return number unalloc byte partit abstract path name return number unalloc byte hint guarante use byte number unalloc byte accur call made inaccur extern oper includ made system virtual machin make guarante write oper file system succeed number unalloc byte partit 0l abstract pathnam name partit valu equal total file system size return
File::createTempFile creat empti file specifi directori use given prefix suffix string generat name return success guarante file denot return abstract pathnam exist invok variant return abstract pathnam current invoc virtual machin provid part temporari file facil arrang file creat delet automat use prefix argument charact recommend prefix meaning string hjb mail suffix argument null case suffix tmp creat file prefix suffix first adjust fit limit platform prefix truncat first charact preserv suffix truncat begin period charact period first charact preserv adjust made name file generat concaten prefix intern generat charact suffix directori argument null system depend default temporari file directori default temporari file directori specifi system properti io tmpdir unix system default valu properti typic tmp var tmp microsoft window system typic winnt temp valu given system properti virtual machin invok programmat chang properti guarante effect temporari directori prefix prefix string generat file name charact suffix suffix string generat file name null case suffix tmp directori directori file creat null default temporari file directori abstract pathnam denot newli creat empti file
File::createTempFile creat empti file default temporari file directori use given prefix suffix generat name invok equival invok provid altern creat empti file temporari file directori Files::Files creat restrict access permiss file creat suit secur sensit applic prefix prefix string generat file name charact suffix suffix string generat file name null case suffix tmp abstract pathnam denot newli creat empti file
File::hashCode comput hash abstract pathnam equal abstract pathnam inher system depend comput hash unix system hash abstract pathnam equal exclus hash pathnam string decim valu 1234321 microsoft window system hash equal exclus hash pathnam string convert lower case decim valu 1234321 Locale::Locale taken account lowercas pathnam string hash abstract pathnam
File::toPath return object construct abstract path result Path::Path associ first invoc work invok equival evalu express subsequ invoc return Path::Path abstract pathnam empti abstract pathnam return Path::Path access current user directori Path::Path construct abstract path
SequenceInputStream::SequenceInputStream initi newli creat SequenceInputStream::SequenceInputStream rememb argument Enumeration::Enumeration produc object run time type InputStream::InputStream input stream produc enumer read order provid byte read SequenceInputStream::SequenceInputStream input stream enumer exhaust close call close enumer input stream
NotSerializableException::NotSerializableException construct NotSerializableException::NotSerializableException object messag string classnam Class::Class instanc serial deseri
FileSystem::getDefaultParent return parent pathnam string parent directori argument argument File::File constructor empti pathnam
FileSystem::fromURIPath post process given uri path string necessari win32 transform foo foo path string slash separ File::File translat return
FileSystem::resolve resolv given abstract pathnam absolut form invok getabsolutepath getcanonicalpath File::File
FileSystem::setPermission Set::Set access permiss owner file directori denot given abstract pathnam base paramet enabl access oweron
FileSystem::list List::List element directori denot given abstract pathnam return array string name element directori success return null
FileSystem::setLastModifiedTime Set::Set last modifi time file directori denot given abstract pathnam return oper succeed
FileSystem::listRoots List::List avail filesystem root
FileOutputStream::FileOutputStream file output stream output stream write data file filedescriptor file avail creat depend platform platform particular allow file open write fileoutputstream file write object time situat constructor fail file involv open FileOutputStream::FileOutputStream meant write stream raw byte imag data write stream charact consid use FileWriter::FileWriter
FileOutputStream::FileOutputStream creat file output stream write file specifi name filedescriptor object creat repres file connect first secur manag SecurityManager::checkWrite call name argument file exist directori regular file exist creat open reason FileNotFoundException::FileNotFoundException thrown name system depend filenam
FileOutputStream::FileOutputStream creat file output stream write file specifi name argument byte written end file begin filedescriptor object creat repres file connect first secur manag SecurityManager::checkWrite call name argument file exist directori regular file exist creat open reason FileNotFoundException::FileNotFoundException thrown name system depend file name append byte written end file begin
FileOutputStream::FileOutputStream creat file output stream write file repres specifi file object filedescriptor object creat repres file connect first secur manag SecurityManager::checkWrite call path repres file argument argument file exist directori regular file exist creat open reason FileNotFoundException::FileNotFoundException thrown file file open write
FileOutputStream::FileOutputStream creat file output stream write file repres specifi file object argument byte written end file begin filedescriptor object creat repres file connect first secur manag SecurityManager::checkWrite call path repres file argument argument file exist directori regular file exist creat open reason FileNotFoundException::FileNotFoundException thrown file file open write append byte written end file begin
FileOutputStream::FileOutputStream creat file output stream write specifi file descriptor repres exist connect actual file file system first secur manag SecurityManager::checkWrite call file descriptor fdobj argument argument fdobj null NullPointerException::NullPointerException thrown constructor throw fdobj invok result stream attempt stream IOException::IOException thrown fdobj file descriptor open write
FileOutputStream::write write specifi byte file output stream byte written append write oper first advanc posit end file
FileOutputStream::write write specifi byte file output stream implement write OutputStream::OutputStream byte written
FileOutputStream::write write length byte specifi byte array file output stream data
FileOutputStream::write write len byte specifi byte array start offset file output stream data start offset data len number byte write
FileOutputStream::getFD return file descriptor associ stream filedescriptor object repres connect file file system FileOutputStream::FileOutputStream object
FileOutputStream::getChannel return uniqu object associ file output stream initi return channel equal number byte written file stream append mode case equal size file write byte stream increment channel posit accord chang channel posit explicit write chang stream file posit file channel associ file output stream jsr 51
Reader::Reader creat charact stream reader critic section synchron given object lock Object::Object synchron
Reader::close close stream releas system resourc associ stream close further read readi mark reset skip invoc throw ioexcept close previous close stream effect
ByteArrayOutputStream::toString convert buffer content string decod byte use platform default charact set length string function charact set henc equal size buffer replac malform input unmapp charact sequenc default replac string platform default charact set control decod process requir String::String decod buffer content
ByteArrayOutputStream::toString convert buffer content string decod byte use name length string function charset henc equal length byte array replac malform input unmapp charact sequenc charset default replac string control decod process requir charsetnam name support String::String decod buffer content
BufferedReader::BufferedReader read text charact input stream buffer charact provid effici read charact array line buffer size specifi default size default purpos general read request made Reader::Reader caus correspond read request made charact byte stream therefor advis wrap BufferedReader::BufferedReader Reader::Reader read oper cost fileread inputstreamread exampl buffer input specifi file buffer invoc read readlin caus byte read file convert charact return ineffici program use datainputstream textual input local replac DataInputStream::DataInputStream appropri BufferedReader::BufferedReader
BufferedReader::BufferedReader creat buffer charact input stream use input buffer specifi size Reader::Reader sz input buffer size
BufferedReader::BufferedReader creat buffer charact input stream use default size input buffer Reader::Reader
BufferedReader::read read charact portion array implement general contract correspond addit conveni attempt read charact repeat invok read stream iter read continu condit becom specifi number charact read read stream return indic end file readi stream return fals indic further input request block first read stream return indic end file return return number charact actual read subclass encourag requir attempt read charact fashion ordinarili take charact stream charact buffer fill stream necessari buffer empti mark valid request length buffer read charact stream given array thus redund BufferedReader::BufferedReader copi data unnecessarili cbuf destin buffer offset start store charact len maximum number charact read number charact read end stream reach
BufferedReader::readLine read line text line consid termin line feed carriag return carriag return follow linefe ignorelf skip String::String contain content line includ line termin charact null end stream reach
BufferedReader::readLine read line text line consid termin line feed carriag return carriag return follow linefe String::String contain content line includ line termin charact null end stream reach
Externalizable::Externalizable ident Externalizable::Externalizable instanc written serial stream respons save restor content instanc writeextern readextern Externalizable::Externalizable interfac implement give complet control format content stream object supertyp explicit coordin supertyp save state supersed custom implement writeobject readobject Object::Object serial use Serializable::Serializable Externalizable::Externalizable interfac Object::Object persist mechan use object store test Externalizable::Externalizable interfac object support Externalizable::Externalizable writeextern call object support Externalizable::Externalizable implement Serializable::Serializable object save use ObjectOutputStream::ObjectOutputStream Externalizable::Externalizable object reconstruct instanc creat use arg constructor readextern call Serializable::Serializable object restor read objectinputstream Externalizable::Externalizable instanc design substitut object writereplac readresolv document Serializable::Serializable interfac
Externalizable::writeExternal object implement writeextern save content call DataOutput::DataOutput primit valu call writeobject ObjectOutput::ObjectOutput object string array overrid use tag describ data layout Externalizable::Externalizable object List::List sequenc element type relat element protect field Externalizable::Externalizable stream write object
PipedWriter::connect connect pipe writer receiv object connect pipe reader IOException::IOException thrown snk unconnect pipe reader src unconnect pipe writer connect call call call effect snk pipe reader connect
PipedWriter::write write specifi char pipe output stream thread read data charact connect pipe input stream thread longer aliv IOException::IOException thrown implement write Writer::Writer char written
PipedWriter::write write len charact specifi charact array start offset pipe output stream block charact written output stream thread read data charact connect pipe input stream thread longer aliv IOException::IOException thrown cbuf data start offset data len number charact write
WriteAbortedException::detail Exception::Exception caught write objectstream field predat general purpos chain facil prefer mean obtain
WriteAbortedException::WriteAbortedException construct WriteAbortedException::WriteAbortedException string describ caus abort String::String describ ex Exception::Exception caus abort
PipedInputStream::connect caus pipe input stream connect pipe output stream src object connect pipe output stream IOException::IOException thrown src unconnect pipe output stream snk unconnect pipe input stream connect call call call effect src pipe output stream connect
SyncFailedException::SyncFailedException construct SyncFailedException::SyncFailedException detail messag detail messag String::String describ particular desc String::String describ
IOException::IOException signal sort occur general produc fail interrupt oper
IOException::IOException construct ioexcept null error detail messag
IOException::IOException construct ioexcept specifi detail messag messag detail messag save retriev
IOException::IOException construct ioexcept specifi detail messag caus note detail messag associ caus automat incorpor detail messag messag detail messag save retriev caus caus save retriev null valu permit indic caus nonexist unknown
IOException::IOException construct ioexcept specifi caus detail messag caus null null caus tostr typic contain detail messag caus constructor use io wrapper throwabl caus caus save retriev null valu permit indic caus nonexist unknown
DataInputStream::DataInputStream data input stream let read primit data type input stream machin independ use data output stream write data read data input stream DataInputStream::DataInputStream necessarili safe multithread access Thread::Thread safeti option respons user
DataInputStream::DataInputStream creat DataInputStream::DataInputStream use specifi InputStream::InputStream specifi input stream
DataInputStream::readInt see general contract readint DataInput::DataInput byte oper read contain input stream byte input stream interpret int
DataInputStream::readFloat see general contract readfloat DataInput::DataInput byte oper read contain input stream byte input stream interpret float
DataInputStream::readUTF see general contract readutf DataInput::DataInput byte oper read contain input stream unicod string
DataInputStream::readUTF read stream represent unicod charact string encod format string charact return String::String detail modifi utf represent exact readutf DataInput::DataInput data input stream unicod string
ObjectStreamField::ObjectStreamField creat Serializable::Serializable field specifi type field document serialfield tag name name serializ field type Class::Class object serializ field
ObjectStreamField::getName get name field String::String repres name serializ field
ObjectStreamField::getType get type field type non primit ObjectStreamField::ObjectStreamField obtain deseri instanc object return Class::Class object type field return Class::Class object repres type serializ field
PrintStream::PrintStream PrintStream::PrintStream add function output stream name abil print represent various data valu conveni featur output stream PrintStream::PrintStream throw IOException::IOException instead situat mere set intern flag test checkerror option PrintStream::PrintStream creat flush automat mean flush automat invok byte array written println invok newlin charact byte written charact print PrintStream::PrintStream convert byte use platform default charact encod situat requir write charact byte
PrintStream::checkError flush stream check error state intern error state set output stream throw IOException::IOException InterruptedIOException::InterruptedIOException seterror invok oper output stream throw InterruptedIOException::InterruptedIOException PrintStream::PrintStream convert interrupt equival stream encount IOException::IOException InterruptedIOException::InterruptedIOException seterror invok
PrintStream::write write len byte specifi byte array start offset stream automat flush enabl flush invok note byte written given write charact translat accord platform default charact encod use print char println char buf byte array offset start take byte len Number::Number byte write
PrintStream::print print boolean valu string produc translat byte accord platform default charact encod byte written exact manner boolean print
PrintStream::print print charact charact translat byte accord platform default charact encod byte written exact manner char print
PrintStream::print print integ string produc translat byte accord platform default charact encod byte written exact manner int print
PrintStream::print print integ string produc translat byte accord platform default charact encod byte written exact manner print
PrintStream::print print float point number string produc translat byte accord platform default charact encod byte written exact manner float print
PrintStream::print print doubl precis float point number string produc translat byte accord platform default charact encod byte written exact manner doubl print
PrintStream::print print array charact charact convert byte accord platform default charact encod byte written exact manner array char print
PrintStream::print print string argument null string null print string charact convert byte accord platform default charact encod byte written exact manner String::String print
PrintStream::print print object string produc translat byte accord platform default charact encod byte written exact manner obj Object::Object print
PrintStream::println termin current line write line separ string line separ string defin system properti line separ necessarili singl newlin charact
PrintStream::println print boolean termin line behav invok boolean print
PrintStream::println print charact termin line behav invok char print
PrintStream::println print integ termin line behav invok int print
PrintStream::println print termin line behav invok print
PrintStream::println print float termin line behav invok float print
PrintStream::println print doubl termin line behav invok doubl print
PrintStream::println print array charact termin line behav invok array char print
PrintStream::println print String::String termin line behav invok String::String print
PrintStream::println print Object::Object termin line call first string valueof get print object string valu behav invok Object::Object print
PrintStream::printf conveni write format string output stream use specifi format string argument invoc form printf format arg behav exact invoc format format string describ arg argument referenc format specifi format string argument format specifi extra argument ignor number argument variabl zero maximum number argument limit maximum dimens array defin trade virtual machin specif behaviour null argument depend output stream
PrintStream::printf conveni write format string output stream use specifi format string argument invoc form printf format arg behav exact invoc appli format null local appli format format string describ arg argument referenc format specifi format string argument format specifi extra argument ignor number argument variabl zero maximum number argument limit maximum dimens array defin trade virtual machin specif behaviour null argument depend output stream
PrintStream::format write format string output stream use specifi format string argument local return regardless previous invoc format object format format string describ arg argument referenc format specifi format string argument format specifi extra argument ignor number argument variabl zero maximum number argument limit maximum dimens array defin trade virtual machin specif behaviour null argument depend output stream
PrintStream::format write format string output stream use specifi format string argument appli format null local appli format format string describ arg argument referenc format specifi format string argument format specifi extra argument ignor number argument variabl zero maximum number argument limit maximum dimens array defin trade virtual machin specif behaviour null argument depend output stream
Serializable::Serializable serializ enabl implement io serializ interfac implement interfac state serial deseri subtyp serializ serializ serial interfac field serv identifi semant serializ allow subtyp non serializ serial subtyp assum respons restor state supertyp protect access packag field subtyp assum respons extend access arg constructor initi state error declar Serializable::Serializable case error detect runtim deseri field non serializ initi use protect arg constructor arg constructor access subclass serializ field serializ subclass restor stream travers graph object encount support Serializable::Serializable interfac case NotSerializableException::NotSerializableException thrown identifi non serializ object requir handl serial deseri process implement exact signatur privat writeobject io objectoutputstream throw ioexcept privat readobject io objectinputstream throw ioexcept ClassNotFoundException::ClassNotFoundException privat readobjectnodata throw ObjectStreamException::ObjectStreamException writeobject respons write state object particular correspond readobject restor default mechan Objects::Objects field invok call defaultwriteobject concern state belong superclass subclass State::State save write individu field ObjectOutputStream::ObjectOutputStream use writeobject use primit data type support DataOutput::DataOutput readobject respons read stream restor field call defaultreadobject invok default mechan restor object non static non transient field ObjectInputStream::defaultReadObject use stream assign field object save stream correspond name field current object handl case evolv add field concern state belong superclass subclass State::State save write individu field ObjectOutputStream::ObjectOutputStream use writeobject use primit data type support DataOutput::DataOutput readobjectnodata respons initi state object particular event serial stream list given superclass object deseri occur case where receiv parti use version deseri instanc send parti receiv version extend extend sender version occur serial stream tamper henc readobjectnodata use initi deseri object proper hostil incomplet sourc stream serializ design altern object write object stream implement exact signatur access modifi Object::Object writereplac throw ObjectStreamException::ObjectStreamException writereplac invok serial exist access defin object serial thus privat protect packag privat access subclass access follow access rule design replac instanc read stream implement exact signatur access modifi Object::Object readresolv throw ObjectStreamException::ObjectStreamException readresolv follow invoc rule access rule writereplac serial runtim associ serializ version number call serialversionuid deseri verifi sender receiv serial object load object compat respect serial receiv load object serialversionuid correspond sender deseri result serializ declar serialversionuid explicit declar field name serialversionuid static final type access modifi static final serialversionuid 42l serializ explicit declar serialversionuid serial runtim calcul default serialversionuid valu base various aspect describ tm Object::Object serial specif strong recommend serializ explicit declar serialversionuid valu default serialversionuid comput sensit detail vari depend compil implement thus result unexpect InvalidClassException::InvalidClassException deseri therefor guarante consist serialversionuid valu compil implement serializ declar explicit serialversionuid valu strong advis explicit serialversionuid declar use privat modifi where declar appli declar serialversionuid field use inherit member Array::Array declar explicit serialversionuid default comput valu requir match serialversionuid valu waiv array
CharArrayReader::CharArrayReader creat CharArrayReader::CharArrayReader specifi array char result reader start read given offset total number char valu read reader length buf length offset smaller buf input buffer copi offset offset first char read length Number::Number char read
Writer::Writer creat charact stream writer critic section synchron given object lock Object::Object synchron
Writer::write write singl charact charact written contain 16 low order bit given integ valu 16 order bit ignor subclass intend support effici singl charact output overrid int specifi charact written
Writer::write write array charact cbuf Array::Array charact written
Writer::write write portion array charact cbuf Array::Array charact offset start write charact len Number::Number charact write
Writer::write write string str String::String written
Writer::write write portion string str String::String offset start write charact len Number::Number charact write
Writer::close close stream flush first stream close further write flush invoc caus ioexcept thrown close previous close stream effect
DataOutput::DataOutput DataOutput::DataOutput interfac provid convert data primit type seri byte write byte binari stream facil convert String::String format write result seri byte interfac write byte general byte written reason IOException::IOException thrown
DataOutput::writeUTF write byte length output stream follow represent charact string null NullPointerException::NullPointerException thrown charact string convert group byte depend valu charact charact Pattern::c rang 92 u0001 92 u007f repres byte charact Pattern::c 92 u0000 rang 92 u0080 92 u07ff repres byte written order shown charact Pattern::c rang 92 u0800 uffff repres byte written order shown first total number byte repres charact calcul number larger 65535 UTFDataFormatException::UTFDataFormatException thrown length written output stream exact manner writeshort byte represent charact string written byte written read readutf interfac DataInput::DataInput return String::String equal string valu written
PipedOutputStream::connect connect pipe output stream receiv object connect pipe input stream IOException::IOException thrown snk unconnect pipe input stream src unconnect pipe output stream connect call call call effect snk pipe input stream connect
FileInputStream::FileInputStream FileInputStream::FileInputStream obtain input byte file file system file avail depend host environ FileInputStream::FileInputStream meant read stream raw byte imag data read stream charact consid use FileReader::FileReader
FileInputStream::FileInputStream creat FileInputStream::FileInputStream open connect actual file file name path name name file system filedescriptor object creat repres file connect first secur manag SecurityManager::checkRead call name argument argument name file exist directori regular file reason open read FileNotFoundException::FileNotFoundException thrown name system depend file name
FileInputStream::FileInputStream creat FileInputStream::FileInputStream open connect actual file file name file object file file system filedescriptor object creat repres file connect first secur manag SecurityManager::checkRead call path repres file argument argument name file exist directori regular file reason open read FileNotFoundException::FileNotFoundException thrown file file open read
FileInputStream::FileInputStream creat FileInputStream::FileInputStream use file descriptor fdobj repres exist connect actual file file system secur manag SecurityManager::checkRead call file descriptor fdobj argument see ok read file descriptor read access deni file descriptor SecurityException::SecurityException thrown fdobj null NullPointerException::NullPointerException thrown constructor throw fdobj invok result stream attempt stream IOException::IOException thrown fdobj file descriptor open read
FileInputStream::read read byte data input stream block input avail byte data end file reach
FileInputStream::read read length byte data input stream array byte block input avail buffer data read total number byte read buffer data end file reach
FileInputStream::read read len byte data input stream array byte len zero block input avail byte read return buffer data read start offset destin array len maximum number byte read total number byte read buffer data end file reach
FileInputStream::skip skip discard byte data input stream skip varieti reason end skip smaller number byte possibl negat skip backward case file support backward skip current posit IOException::IOException thrown actual number byte skip return skip forward return posit valu skip backward return negat valu skip byte remain file produc number byte skip includ number byte eof file attempt read stream skip end result indic end file number byte skip actual number byte skip
FileInputStream::getFD return filedescriptor object repres connect actual file file system FileInputStream::FileInputStream file descriptor object associ stream
FileInputStream::getChannel return uniqu object associ file input stream initi return channel equal number byte read file read byte stream increment channel posit chang channel posit explicit read chang stream file posit file channel associ file input stream jsr 51
NotActiveException::NotActiveException Constructor::Constructor creat NotActiveException::NotActiveException reason given reason String::String describ reason
NotActiveException::NotActiveException Constructor::Constructor creat NotActiveException::NotActiveException reason
ByteArrayInputStream::ByteArrayInputStream ByteArrayInputStream::ByteArrayInputStream contain intern buffer contain byte read stream intern counter keep track byte suppli read close bytearrayinputstream effect call stream close generat ioexcept
ByteArrayInputStream::ByteArrayInputStream creat ByteArrayInputStream::ByteArrayInputStream use buf buffer array buffer array copi initi valu pos initi valu count length buf buf input buffer
ByteArrayInputStream::ByteArrayInputStream creat ByteArrayInputStream::ByteArrayInputStream use buf buffer array initi valu pos offset initi valu count minimum offset length buf length buffer array copi buffer mark set specifi offset buf input buffer offset offset buffer first byte read length maximum number byte read buffer
ByteArrayInputStream::markSupported test InputStream::InputStream support mark reset marksupport ByteArrayInputStream::ByteArrayInputStream return
ByteArrayInputStream::mark Set::Set current mark posit stream ByteArrayInputStream::ByteArrayInputStream object mark posit zero default construct mark posit buffer mark set valu mark offset pass constructor offset suppli note readaheadlimit mean
StringBufferInputStream::StringBufferInputStream allow creat input stream byte read suppli content string applic read byte byte array use ByteArrayInputStream::ByteArrayInputStream low eight bit charact string
LineNumberReader::LineNumberReader buffer charact input stream keep track line number defin set get current line number respect default line number begin number increment data read chang call setlinenumb int note setlinenumb int actual chang current posit stream chang valu return getlinenumb line consid line feed carriag return carriag return follow linefe
LineNumberReader::LineNumberReader creat line number reader use default input buffer size Reader::Reader object provid stream
LineNumberReader::LineNumberReader creat line number reader read charact buffer given size Reader::Reader object provid stream sz int specifi size buffer
LineNumberReader::setLineNumber Set::Set current line number linenumb int specifi line number
LineNumberReader::getLineNumber get current line number current line number
LineNumberReader::readLine read line text read current line number increment String::String contain content line includ null end stream reach
InputStreamReader::InputStreamReader InputStreamReader::InputStreamReader bridg byte stream charact stream read byte decod charact use specifi charset use specifi name given explicit platform default charset accept invoc inputstreamread read caus byte read byte input stream enabl effici convers byte charact byte read ahead stream necessari satisfi current read oper top effici consid wrap InputStreamReader::InputStreamReader BufferedReader::BufferedReader exampl
InputStreamReader::InputStreamReader creat InputStreamReader::InputStreamReader use default charset InputStream::InputStream
InputStreamReader::InputStreamReader creat InputStreamReader::InputStreamReader use name charset InputStream::InputStream charsetnam name support
InputStreamReader::InputStreamReader creat InputStreamReader::InputStreamReader use given charset InputStream::InputStream cs charset jsr 51
InputStreamReader::InputStreamReader creat InputStreamReader::InputStreamReader use given charset decod InputStream::InputStream dec charset decod jsr 51
InputStreamReader::read read singl charact charact read end stream reach
InputStreamReader::read read charact portion array cbuf destin buffer offset offset start store charact length maximum number charact read number charact read end stream reach
InputStreamReader::ready tell stream readi read InputStreamReader::InputStreamReader readi input buffer empti byte avail read byte stream
StringWriter::StringWriter charact stream collect output string buffer construct string close stringwrit effect call stream close generat ioexcept
StringWriter::StringWriter creat string writer use default initi string buffer size
StringWriter::StringWriter creat string writer use specifi initi string buffer size initials number char valu fit buffer automat expand
StringWriter::write write portion array charact cbuf Array::Array charact offset start write charact len Number::Number charact write
StringWriter::write write portion string str String::String written offset start write charact len Number::Number charact write
StringWriter::toString return buffer current valu string
StringWriter::getBuffer return string buffer StringBuffer::StringBuffer hold current buffer valu
BufferedInputStream::BufferedInputStream BufferedInputStream::BufferedInputStream add function input stream name abil buffer input support mark reset BufferedInputStream::BufferedInputStream creat intern buffer array creat byte stream read skip intern buffer refil necessari contain input stream byte time mark oper rememb point input stream reset oper caus byte read recent mark oper reread byte taken contain input stream
BufferedInputStream::BufferedInputStream creat BufferedInputStream::BufferedInputStream save argument input stream use intern buffer array creat store buf input stream
BufferedInputStream::BufferedInputStream creat BufferedInputStream::BufferedInputStream specifi buffer size save argument input stream use intern buffer array length size creat store buf input stream size buffer size
BufferedInputStream::read see general contract read InputStream::InputStream byte data end stream reach
BufferedInputStream::read read byte byte input stream specifi byte array start given offset implement general contract correspond addit conveni attempt read byte repeat invok read stream iter read continu condit becom specifi number byte read read stream return indic end file avail stream return zero indic further input request block first read stream return indic end file return return number byte actual read subclass encourag requir attempt read byte fashion destin buffer offset start store byte len maximum number byte read number byte read end stream reach
BufferedInputStream::skip see general contract skip InputStream::InputStream
BufferedInputStream::mark see general contract mark InputStream::InputStream readlimit maximum limit byte read mark posit becom invalid
BufferedInputStream::reset see general contract reset InputStream::InputStream markpo mark set mark invalid IOException::IOException thrown pos set equal markpo
BufferedInputStream::markSupported test input stream support mark reset marksupport BufferedInputStream::BufferedInputStream return boolean indic stream type support mark reset
BufferedInputStream::close close input stream releas system resourc associ stream stream close further read avail reset skip invoc throw ioexcept close previous close stream effect
ObjectInputStream::ObjectInputStream ObjectInputStream::ObjectInputStream deseri primit data object previous written use ObjectOutputStream::ObjectOutputStream objectoutputstream ObjectInputStream::ObjectInputStream provid persist storag graph object FileOutputStream::FileOutputStream FileInputStream::FileInputStream respect ObjectInputStream::ObjectInputStream recov object previous serial use includ pass object host use socket stream marshal unmarsh argument paramet remot communic system objectinputstream ensur type object graph creat stream match virtual machin load requir use standard mechan object support io serializ io externaliz interfac read stream readobject read object stream safe cast get desir type string array object treat object serial read cast expect type primit data type read stream use appropri DataInput::DataInput default deseri mechan object restor content field valu type written field declar transient static ignor deseri process refer object caus object read stream necessari graph object restor correct use refer share mechan object alloc deseri prevent exist object overwritten read object analog run constructor object memori alloc object initi zero null arg constructor invok non serializ field serializ restor stream start serializ closest lang object finish object specif exampl read stream written exampl objectoutputstream control serial implement io serializ io externaliz interfac implement Serializable::Serializable interfac allow object serial save restor entir state object allow evolv time stream written time read automat travers refer object restor entir graph serializ requir handl serial deseri process implement readobject respons read restor state object particular use data written stream correspond writeobject concern state belong superclass subclass State::State restor read data ObjectInputStream::ObjectInputStream individu field make assign appropri field object read primit data type support DataInput::DataInput attempt read object data exceed boundari custom data written correspond writeobject caus OptionalDataException::OptionalDataException thrown eof field valu non object read exceed end allot data reflect end data indic end stream bytewis read return byte read number byte read primit read throw eofexcept correspond writeobject end default serial data mark end allot data primit object read call issu readextern behav manner stream posit end data written correspond writeextern object read throw optionaldataexcept eof set bytewis read return primit read throw eofexcept note behavior hold stream written old objectstreamconst protocol version protocol end data written writeextern demarc henc detect readobjectnodata respons initi state object particular event serial stream list given superclass object deseri occur case where receiv parti use version deseri instanc send parti receiv version extend extend sender version occur serial stream tamper henc readobjectnodata use initi deseri object proper hostil incomplet sourc stream serial read assign valu field object implement io serializ interfac subclass Objects::Objects serializ serializ case non serializ arg constructor allow field initi case respons subclass save restor state non serializ frequent case field access packag protect get set restor state occur deseri object caught ObjectInputStream::ObjectInputStream abort read process implement Externalizable::Externalizable interfac allow object assum complet control content format object serial form Externalizable::Externalizable interfac writeextern readextern call save restor object state implement write read state use ObjectOutput::ObjectOutput ObjectInput::ObjectInput respons object handl version occur enum constant deseri differ ordinari serializ externaliz object serial form enum constant consist sole name field valu constant transmit deseri enum constant ObjectInputStream::ObjectInputStream read constant name stream deseri constant obtain call static enum valueof string enum constant base type receiv constant name argument serializ externaliz object enum constant function target refer appear subsequ serial stream process enum constant deseri custom specif readobject readobjectnodata readresolv defin enum type ignor deseri similar serialpersistentfield serialversionuid field declar ignor enum type fix serialversionuid 0l
ObjectInputStream::ObjectInputStream creat ObjectInputStream::ObjectInputStream read specifi InputStream::InputStream serial stream header read stream verifi constructor block correspond ObjectOutputStream::ObjectOutputStream written flush header secur manag instal constructor check enablesubclassimplement SerializablePermission::SerializablePermission invok indirect constructor subclass overrid objectinputstream readfield objectinputstream readunshar input stream read
ObjectInputStream::ObjectInputStream provid subclass complet reimplement ObjectInputStream::ObjectInputStream alloc privat data implement ObjectInputStream::ObjectInputStream secur manag instal first call secur manag checkpermiss serializablepermiss enablesubclassimplement permiss ensur ok enabl subclass
ObjectInputStream::readObject read object ObjectInputStream::ObjectInputStream object signatur valu non transient non static field supertyp read default deseri overriden use writeobject readobject Objects::Objects referenc object read transit complet equival graph object reconstruct readobject root object complet restor field object refer complet restor point object valid callback execut order base regist prioriti callback regist object readobject individu restor thrown InputStream::InputStream deseri fatal InputStream::InputStream leav indetermin state caller ignor recov stream state
ObjectInputStream::readObjectOverride call trust subclass ObjectOutputStream::ObjectOutputStream construct ObjectOutputStream::ObjectOutputStream use protect arg constructor subclass expect provid overrid modifi final Object::Object read stream
ObjectInputStream::readUnshared read unshar object ObjectInputStream::ObjectInputStream ident readobject prevent subsequ call readobject ObjectInputStream::readUnshared return addit refer deseri instanc obtain call specif ObjectInputStream::readUnshared call deseri refer stream represent object written previous stream ObjectStreamException::ObjectStreamException thrown ObjectInputStream::readUnshared return success subsequ attempt deseri refer stream handl deseri ObjectInputStream::readUnshared caus ObjectStreamException::ObjectStreamException thrown deseri object ObjectInputStream::readUnshared invalid stream handl associ return object note guarante refer return ObjectInputStream::readUnshared uniqu deseri object defin readresolv return object visibl parti ObjectInputStream::readUnshared return Class::Class object enum constant obtain elsewher stream extern mean deseri object defin readresolv invoc return array ObjectInputStream::readUnshared return shallow clone array guarante return array object uniqu obtain time invoc readobject ObjectInputStream::readUnshared ObjectInputStream::ObjectInputStream data stream manipul objectinputstream subclass overrid construct secur context possess enablesubclassimplement SerializablePermission::SerializablePermission attempt instanti subclass permiss caus SecurityException::SecurityException thrown refer deseri object
ObjectInputStream::resolveClass load local equival specifi stream descript subclass implement allow fetch altern sourc correspond ObjectOutputStream::ObjectOutputStream ObjectOutputStream::annotateClass invok uniqu stream implement subclass use altern load mechan return Class::Class object return array serialversionuid compar serialversionuid serial mismatch deseri fail thrown default implement ObjectInputStream::ObjectInputStream return result call where loader determin follow current thread stack declar defin user defin loader generat implement reflect invoc loader loader correspond closest current execut frame loader null call result ClassNotFoundException::ClassNotFoundException name pass ObjectStreamClass::ObjectStreamClass instanc languag keyword primit type Class::Class object repres primit type return ObjectStreamClass::ObjectStreamClass name int resolv integ type ClassNotFoundException::ClassNotFoundException thrown caller desc instanc ObjectStreamClass::ObjectStreamClass Class::Class object correspond desc
ObjectInputStream::resolveProxyClass return proxi implement interfac name proxi descriptor subclass implement read custom data stream descriptor dynam proxi allow use altern load mechan interfac proxi call exact uniqu proxi descriptor stream correspond ObjectOutputStream::ObjectOutputStream ObjectOutputStream::annotateProxyClass given subclass ObjectInputStream::ObjectInputStream overrid ObjectOutputStream::annotateProxyClass correspond subclass ObjectOutputStream::ObjectOutputStream write data object read default implement ObjectInputStream::ObjectInputStream return result call proxi getproxyclass list Class::Class object interfac name interfac paramet Class::Class object interfac name valu return call where loader first null loader execut stack null null loader stack loader choic resolveclass resolv interfac non valu loader loader pass proxi getproxyclass non interfac loader pass instead non interfac loader encount IllegalAccessError::IllegalAccessError thrown proxi getproxyclass throw IllegalArgumentException::IllegalArgumentException ObjectInputStream::resolveProxyClass throw ClassNotFoundException::ClassNotFoundException contain IllegalArgumentException::IllegalArgumentException interfac list interfac name deseri proxi descriptor proxi specifi interfac
ObjectInputStream::resolveObject allow trust subclass ObjectInputStream::ObjectInputStream substitut object deseri replac object disabl ObjectInputStream::enableResolveObject call ObjectInputStream::enableResolveObject check stream request resolv object trust refer serializ object pass ObjectInputStream::resolveObject insur privat state object unintent expos trust stream use ObjectInputStream::resolveObject call object read return readobject default ObjectInputStream::resolveObject return object subclass replac object insur substitut object compat field where refer store Objects::Objects type subclass type field array element abort serial rais object store call object first encount subsequ refer object redirect object obj object substitut substitut object
ObjectInputStream::readClassDescriptor read descriptor serial stream call ObjectInputStream::ObjectInputStream expect descriptor item serial stream subclass ObjectInputStream::ObjectInputStream overrid read descriptor written non standard format subclass ObjectOutputStream::ObjectOutputStream overridden ObjectOutputStream::writeClassDescriptor default read descriptor accord format defin Object::Object serial specif descriptor read
ObjectInputStream::close close input stream call releas resourc associ stream
ObjectInputStream::readLine read line termin eof String::String copi line
ObjectInputStream::readUTF read String::String format String::String
ObjectInputStream::get get valu name Object::Object field persist field name name field val default valu use name valu valu name Object::Object field
ObjectInputStream::readOrdinaryObject read return ordinari String::String Class::Class ObjectStreamClass::ObjectStreamClass array enum constant object null object unresolv case ClassNotFoundException::ClassNotFoundException associ object handl set passhandl object assign handl
ObjectInputStream::readLongUTF read string written utf format Long::Long utf format ident standard utf use byte header instead standard byte convey utf encod length
ObjectInputStream::cloneArray Method::Method clone array case use unshar read
FilterWriter::write write portion array charact cbuf Buffer::Buffer charact written offset start read charact len Number::Number charact written
FilterWriter::write write portion string str String::String written offset start read charact len Number::Number charact written
RandomAccessFile::RandomAccessFile instanc support read write random access file random access file behav array byte store file system kind cursor index impli array call file pointer input oper read byte start file pointer advanc file pointer byte read random access file creat read write mode output oper avail output oper write byte start file pointer advanc file pointer byte written output oper write current end impli array caus array extend file pointer read RandomAccessFile::getFilePointer set seek general read routin end file reach desir number byte read eofexcept kind ioexcept thrown byte read reason end file ioexcept eofexcept thrown particular ioexcept thrown stream close
RandomAccessFile::RandomAccessFile creat random access file stream read option write file specifi name object creat repres connect file mode argument specifi access mode file open permit valu mean specifi constructor secur manag SecurityManager::checkRead call name argument argument see read access file allow mode allow write secur manag SecurityManager::checkWrite call name argument argument see write access file allow name system depend filenam mode access jsr 51
RandomAccessFile::RandomAccessFile creat random access file stream read option write file specifi argument object creat repres file connect argument specifi access mode file open permit valu mean rws rwd mode work pass argument fals respect appli oper therefor effici file resid local storag devic invoc return guarante chang made file invoc written devic use ensur critic lost event system crash file resid local devic guarante made rwd mode reduc number oper perform use rwd requir updat file content written storag use rws requir updat file content metadata written general requir low level oper secur manag SecurityManager::checkRead call pathnam file argument argument see read access file allow mode allow write secur manag SecurityManager::checkWrite call path argument see write access file allow file file object mode access mode describ jsr 51
RandomAccessFile::read read byte data file byte return integ rang 255 0x00 0x0ff block input avail RandomAccessFile::RandomAccessFile subclass InputStream::InputStream behav exact InputStream::InputStream byte data end file reach
RandomAccessFile::read read len byte data file array byte block byte input avail RandomAccessFile::RandomAccessFile subclass InputStream::InputStream behav exact InputStream::InputStream buffer data read start offset array data written len maximum number byte read total number byte read buffer data end file reach
RandomAccessFile::read read length byte data file array byte block byte input avail RandomAccessFile::RandomAccessFile subclass InputStream::InputStream behav exact InputStream::InputStream buffer data read total number byte read buffer data end file reach
RandomAccessFile::getFilePointer return current offset file offset begin file byte read write occur
RandomAccessFile::seek set file pointer offset measur begin file read write occur offset set end file set offset end file chang file length file length chang write offset set end file pos offset posit measur byte begin file set file pointer
RandomAccessFile::length return length file length file measur byte
RandomAccessFile::setLength set length file length file return length greater newlength argument file truncat case file offset return RandomAccessFile::getFilePointer greater newlength return offset equal newlength length file return length smaller newlength argument file extend case content extend portion file defin newlength desir length file
RandomAccessFile::readUTF read string file string encod use format first byte read start current file pointer readunsignedshort valu give number byte encod string length result string byte interpret byte encod charact modifi utf format convert charact block byte read end stream detect thrown unicod string
RandomAccessFile::writeChars write string file sequenc charact charact written data output stream writechar write start current posit file pointer String::String valu written
RandomAccessFile::writeUTF write string file use encod machin independ manner first byte written file start current file pointer writeshort give number byte follow valu number byte actual written length string length charact string output sequenc use modifi utf encod charact str string written
Console::Console access charact base consol devic associ current virtual machin virtual machin consol depend platform manner virtual machin invok virtual machin start interact command line redirect standard input output stream consol exist typic connect keyboard display virtual machin launch virtual machin start automat exampl background job schedul typic consol virtual machin consol repres uniqu instanc obtain invok consol devic avail invoc return null read write oper synchron guarante atom complet critic oper therefor invok read format write oper object return block multithread scenario invok close object return close stream object consol read return null end consol input stream reach exampl type control unix control window subsequ read oper succeed addit charact enter consol input devic specifi pass null argument caus thrown secur note read password secur data use manual zero return charact array process minim lifetim sensit data memori
Console::printf conveni write format string consol output stream use specifi format string argument invoc form con printf format arg behav exact invoc format format string describ arg argument referenc format specifi format string argument format specifi extra argument ignor number argument variabl zero maximum number argument limit maximum dimens array defin trade virtual machin specif behaviour null argument depend consol
Console::readLine provid format prompt read singl line text consol fmt format string describ arg argument referenc format specifi format string argument format specifi extra argument ignor maximum number argument limit maximum dimens array defin trade virtual machin specif string contain line read consol includ line termin charact null end stream reach
Console::readLine read singl line text consol string contain line read consol includ line termin charact null end stream reach
Console::readPassword provid format prompt read password passphras consol echo disabl fmt format string describ prompt text arg argument referenc format specifi format string argument format specifi extra argument ignor maximum number argument limit maximum dimens array defin trade virtual machin specif charact array contain password passphras read consol includ line termin charact null end stream reach
Console::readPassword read password passphras consol echo disabl charact array contain password passphras read consol includ line termin charact null end stream reach
InputStream::InputStream abstract superclass repres input stream byte applic defin subclass InputStream::InputStream provid return byte input
InputStream::read read byte data input stream valu byte return int rang 255 byte avail end stream reach valu return block input data avail end stream detect thrown subclass provid implement byte data end stream reach
InputStream::read read number byte input stream store buffer array number byte actual read return integ block input data avail end file detect thrown length zero byte read return attempt read byte byte avail stream end file valu return byte read store first byte read store element number byte read equal length let number byte actual read byte store element leav element length unaffect read InputStream::InputStream effect buffer data read total number byte read buffer data end stream reach
InputStream::read read len byte data input stream array byte attempt made read len byte smaller number read number byte actual read return integ block input data avail end file detect thrown len zero byte read return attempt read byte byte avail stream end file valu return byte read store first byte read store element number byte read equal len let number byte actual read byte store element leav element len unaffect case element element len length unaffect read len InputStream::InputStream simpli call read repeat first call result IOException::IOException return call read len subsequ call read result IOException::IOException caught treat end file byte read point store number byte read occur return default implement block request amount input data len read end file detect thrown subclass encourag provid effici implement buffer data read start offset array data written len maximum number byte read total number byte read buffer data end stream reach
InputStream::skip skip discard byte data input stream skip varieti reason end skip smaller number byte possibl result number condit reach end file byte skip possibl actual number byte skip return negat skip InputStream::InputStream return byte skip subclass handl negat valu differ skip creat byte array repeat read byte read end stream reach subclass encourag provid effici implement instanc implement depend abil seek number byte skip actual number byte skip
InputStream::available return estim number byte read skip input stream block invoc input stream invoc thread thread singl read skip byte block read skip fewer byte note implement InputStream::InputStream return total number byte stream correct use return valu alloc buffer intend hold data stream subclass implement choos throw input stream close invok avail InputStream::InputStream return overridden subclass estim number byte read skip input stream block reach end input stream
InputStream::close close input stream releas system resourc associ stream close InputStream::InputStream
InputStream::mark mark current posit input stream subsequ call reset reposit stream last mark posit subsequ read read byte readlimit argument tell input stream allow byte read mark posit get invalid general contract mark marksupport return stream somehow rememb byte read call mark stand readi suppli byte reset call stream requir rememb data readlimit byte read stream reset call mark close stream effect stream mark InputStream::InputStream readlimit maximum limit byte read mark posit becom invalid
InputStream::reset reposit stream posit time mark last call input stream general contract reset marksupport return mark call stream creat number byte read stream mark last call larger argument mark last call IOException::IOException thrown IOException::IOException thrown stream reset state byte read recent call mark start file mark call resuppli subsequ caller read follow byte input data time call reset marksupport return fals call reset throw IOException::IOException IOException::IOException thrown stream reset fix state depend particular type input stream creat byte suppli subsequ caller read depend particular type input stream reset InputStream::InputStream throw IOException::IOException
InputStream::markSupported test input stream support mark reset mark reset support invari properti particular input stream instanc marksupport InputStream::InputStream return fals stream instanc support mark reset fals
BufferedOutputStream::BufferedOutputStream implement buffer output stream set output stream write byte output stream necessarili caus call system byte written
BufferedOutputStream::BufferedOutputStream creat buffer output stream write data specifi output stream output stream
BufferedOutputStream::BufferedOutputStream creat buffer output stream write data specifi output stream specifi buffer size output stream size buffer size
BufferedOutputStream::write write specifi byte buffer output stream byte written
BufferedOutputStream::write write len byte specifi byte array start offset buffer output stream ordinarili store byte given array stream buffer flush buffer output stream request length stream buffer flush buffer write byte output stream thus redund BufferedOutputStream::BufferedOutputStream copi data unnecessarili data start offset data len number byte write
BufferedOutputStream::flush flush buffer output stream forc buffer output byte written output stream
OptionalDataException::OptionalDataException Exception::Exception indic failur object read oper due unread primit data end data belong serial object stream thrown case attempt made read object element stream primit data case optionaldataexcept length field set number byte primit data readabl stream eof field set fals attempt made read end data consum defin readobject readextern case optionaldataexcept eof field set length field set
PrintWriter::PrintWriter print format represent object text output stream implement print found contain write raw byte program use unencod byte stream automat flush enabl println printf format invok newlin charact happen output use platform notion line separ newlin charact throw constructor client inquir error occur invok
PrintWriter::PrintWriter creat PrintWriter::PrintWriter automat line flush charact output stream
PrintWriter::PrintWriter creat PrintWriter::PrintWriter charact output stream autoflush boolean println printf format flush output buffer
PrintWriter::PrintWriter creat PrintWriter::PrintWriter automat line flush exist OutputStream::OutputStream conveni constructor creat necessari intermedi OutputStreamWriter::OutputStreamWriter convert charact byte use default charact encod output stream
PrintWriter::PrintWriter creat PrintWriter::PrintWriter exist OutputStream::OutputStream conveni constructor creat necessari intermedi OutputStreamWriter::OutputStreamWriter convert charact byte use default charact encod output stream autoflush boolean println printf format flush output buffer
PrintWriter::PrintWriter creat PrintWriter::PrintWriter automat line flush specifi file name conveni constructor creat necessari intermedi encod charact use instanc virtual machin filenam name file use destin writer file exist truncat zero size file creat output written file buffer
PrintWriter::PrintWriter creat PrintWriter::PrintWriter automat line flush specifi file name charset conveni constructor creat necessari intermedi encod charact use charset filenam name file use destin writer file exist truncat zero size file creat output written file buffer csn name support
PrintWriter::PrintWriter creat PrintWriter::PrintWriter automat line flush specifi file conveni constructor creat necessari intermedi encod charact use instanc virtual machin file file use destin writer file exist truncat zero size file creat output written file buffer
PrintWriter::PrintWriter creat PrintWriter::PrintWriter automat line flush specifi file charset conveni constructor creat necessari intermedi encod charact use charset file file use destin writer file exist truncat zero size file creat output written file buffer csn name support
PrintWriter::write write portion array charact buf Array::Array charact offset start write charact len Number::Number charact write
PrintWriter::write write portion string String::String offset start write charact len Number::Number charact write
PrintWriter::write write string inherit Writer::Writer suppress String::String written
PrintWriter::print print string argument null string null print string charact convert byte accord platform default charact encod byte written exact manner String::String print
PrintWriter::print print object string produc translat byte accord platform default charact encod byte written exact manner obj Object::Object print
PrintWriter::println print String::String termin line behav invok String::String valu print
PrintWriter::println print Object::Object termin line call first string valueof get print object string valu behav invok Object::Object print
BufferedWriter::BufferedWriter write text charact output stream buffer charact provid effici write singl charact array string buffer size specifi default size accept default purpos BufferedWriter::newLine use platform notion line separ defin system properti line separ platform use newlin charact termin line call termin output line therefor prefer write newlin charact general Writer::Writer send output charact byte stream prompt output requir advis wrap BufferedWriter::BufferedWriter Writer::Writer write oper cost filewrit outputstreamwrit exampl buffer printwrit output file buffer invoc print caus charact convert byte written file ineffici
BufferedWriter::BufferedWriter creat buffer charact output stream use default size output buffer Writer::Writer
BufferedWriter::BufferedWriter creat buffer charact output stream use output buffer given size Writer::Writer sz output buffer size posit integ
BufferedWriter::write write singl charact
BufferedWriter::write write portion array charact ordinarili store charact given array stream buffer flush buffer stream request length buffer flush buffer write charact stream thus redund BufferedWriter::BufferedWriter copi data unnecessarili cbuf charact array offset start read charact len Number::Number charact write
BufferedWriter::write write portion String::String valu len paramet negat charact written contrari specif requir thrown String::String written offset start read charact len Number::Number charact written
BufferedWriter::newLine write line separ line separ string defin system properti line separ necessarili singl newlin charact
BufferedWriter::flush flush stream
ObjectStreamConstants::ObjectStreamConstants constant written Object::Object serial Stream::Stream
SerializablePermission::SerializablePermission creat SerializablePermission::SerializablePermission object specifi name name symbol name SerializablePermission::SerializablePermission action String::String current unus null name name SerializablePermission::SerializablePermission action current unus set null
FilterInputStream::FilterInputStream FilterInputStream::FilterInputStream contain input stream use basic sourc data possibl transform data addit function FilterInputStream::FilterInputStream simpli overrid InputStream::InputStream version pass request contain input stream subclass FilterInputStream::FilterInputStream further overrid provid addit field
FilterOutputStream::close close output stream releas system resourc associ stream close FilterOutputStream::FilterOutputStream call flush call close output stream
DataOutputStream::DataOutputStream data output stream let write primit data type output stream portabl use data input stream read data
DataOutputStream::DataOutputStream creat data output stream write data specifi output stream counter written set zero output stream save use
DataOutputStream::flush flush data output stream forc buffer output byte written stream flush DataOutputStream::DataOutputStream call flush output stream
DataOutputStream::writeInt write int output stream byte byte first thrown counter written increment int written
DataOutputStream::writeFloat convert float argument int use Float::floatToIntBits float write int valu output stream byte quantiti byte first thrown counter written increment float valu written
DataOutputStream::writeChars write string output stream sequenc charact charact written data output stream writechar thrown counter written increment twice length String::String valu written
DataOutputStream::writeUTF write string output stream use encod machin independ manner first byte written output stream writeshort give number byte follow valu number byte actual written length string length charact string output sequenc use modifi utf encod charact thrown counter written increment total number byte written output stream length str thrice length str str string written
DataOutputStream::writeUTF write string specifi DataOutput::DataOutput use encod machin independ manner first byte written writeshort give number byte follow valu number byte actual written length string length charact string output sequenc use modifi utf encod charact thrown counter written increment total number byte written output stream length str thrice length str str string written destin write number byte written
ObjectStreamException::ObjectStreamException superclass specif Object::Object Stream::Stream
FileNotFoundException::FileNotFoundException signal attempt open file denot specifi pathnam fail thrown constructor file specifi pathnam exist thrown constructor file exist reason inaccess exampl attempt made open read file write
FileNotFoundException::FileNotFoundException construct FileNotFoundException::FileNotFoundException null error detail messag
FileNotFoundException::FileNotFoundException construct FileNotFoundException::FileNotFoundException specifi detail messag string retriev lang throwabl detail messag
FileNotFoundException::FileNotFoundException construct FileNotFoundException::FileNotFoundException detail messag consist given pathnam string follow given reason string reason argument null omit privat constructor invok nativ
PipedReader::connect caus pipe reader connect pipe writer src object connect pipe writer IOException::IOException thrown src unconnect pipe writer snk unconnect pipe reader connect call call call effect src pipe writer connect
StreamCorruptedException::StreamCorruptedException creat StreamCorruptedException::StreamCorruptedException list reason whi thrown reason String::String describ reason
FilenameFilter::FilenameFilter instanc implement interfac filter filenam instanc filter directori list list file abstract Window::Window toolkit file dialog compon
OutputStreamWriter::OutputStreamWriter OutputStreamWriter::OutputStreamWriter bridg charact stream byte stream charact written encod byte use specifi charset use specifi name given explicit platform default charset accept invoc write caus encod convert invok given charact result byte accumul buffer written output stream size buffer specifi default purpos note charact pass write buffer top effici consid wrap OutputStreamWriter::OutputStreamWriter BufferedWriter::BufferedWriter avoid frequent convert invoc exampl surrog pair charact repres sequenc char valu surrog rang 92 ud800 92 udbff follow low surrog rang 92 udc00 92 udfff malform surrog element surrog follow low surrog low surrog preced surrog replac malform surrog element unmapp charact sequenc charset default substitut sequenc control encod process requir
OutputStreamWriter::write write singl charact
OutputStreamWriter::write write portion array charact cbuf Buffer::Buffer charact offset start write charact len Number::Number charact write
OutputStreamWriter::write write portion string str String::String offset start write charact len Number::Number charact write
OutputStreamWriter::flush flush stream
StringReader::StringReader creat string reader String::String charact stream
NoSuchProviderException::NoSuchProviderException construct NoSuchProviderException::NoSuchProviderException detail messag detail messag String::String describ particular
NoSuchProviderException::NoSuchProviderException construct NoSuchProviderException::NoSuchProviderException specifi detail messag detail messag String::String describ particular msg detail messag
PrivilegedActionException::PrivilegedActionException construct PrivilegedActionException::PrivilegedActionException quot wrap quot specif Exception::Exception thrown
AclEntry::AclEntry interfac repres entri access ResourceBundle::Control List::List acl acl thought data structur multipl acl entri object acl entri object contain set permiss associ particular princip princip repres entiti individu user group addit acl entri specifi posit negat posit permiss grant associ princip negat permiss deni princip posit acl entri negat entri multipl posit negat acl entri allow princip note acl entri default posit entri becom negat entri call
AclNotFoundException::AclNotFoundException thrown refer made non exist acl access ResourceBundle::Control List::List
LastOwnerException::LastOwnerException thrown attempt made delet last owner access ResourceBundle::Control List::List
NotOwnerException::NotOwnerException thrown modif object access ResourceBundle::Control List::List allow owner object Principal::Principal attempt modif owner
Acl::Acl interfac repres access ResourceBundle::Control List::List acl access ResourceBundle::Control List::List data structur guard access resourc acl thought data structur multipl acl entri acl entri interfac type AclEntry::AclEntry contain set permiss associ particular princip princip repres entiti individu user group addit acl entri specifi posit negat posit permiss grant associ princip negat permiss deni acl entri acl observ rule princip posit acl entri negat entri multipl posit negat acl entri allow princip entri specifi set permiss grant posit deni negat entri particular princip princip consid null empti permiss set posit entri grant princip particular permiss negat entri deni princip permiss result permiss grant deni individu permiss overrid permiss group individu belong individu negat permiss specif denial permiss overrid group posit permiss individu posit permiss overrid group negat permiss secur acl packag provid interfac acl relat data structur acl entri group permiss sun secur acl provid default implement interfac exampl secur acl acl provid interfac acl sun secur acl aclimpl provid default implement interfac secur acl acl interfac extend secur acl owner interfac Owner::Owner interfac maintain list owner acl owner allow modifi acl exampl owner call acl Acl::addEntry add acl entri acl
Acl::getPermissions return enumer set allow permiss specifi princip repres entiti individu group set allow permiss calcul follow entri access ResourceBundle::Control List::List specifi princip empti permiss set return princip group permiss set determin princip belong group where group group princip repres Group::Group interfac group posit permiss set union posit permiss group princip belong group negat permiss set union negat permiss group princip belong specif permiss occur posit permiss set negat permiss set remov individu posit negat permiss set determin posit permiss set contain permiss specifi posit acl entri princip similar negat permiss set contain permiss specifi negat acl entri princip individu posit negat permiss set consid null posit negat acl entri princip acl set permiss grant princip calcul use rule individu permiss overrid group permiss princip individu negat permiss set specif denial permiss overrid group posit permiss set princip individu posit permiss set overrid group negat permiss set user princip permiss set return permiss set specifi permiss princip allow
Identity::Identity Constructor::Constructor serial
SignatureException::SignatureException generic Signature::Signature
SignatureException::SignatureException construct SignatureException::SignatureException detail messag detail messag String::String describ particular
SignatureException::SignatureException construct SignatureException::SignatureException specifi detail messag detail messag String::String describ particular msg detail messag
PolicySpi::PolicySpi defin servic Provider::Provider interfac spi Policy::Policy abstract implement servic provid wish suppli Policy::Policy implement subclass implement abstract provid constructor take polici paramet object input paramet constructor throw IllegalArgumentException::IllegalArgumentException understand polici paramet input
PrivateKey::PrivateKey privat key purpos interfac group provid type safeti privat key interfac note privat key interfac extend interfac see exampl dsaprivatekey interfac implement overrid default destroy isdestroy interfac enabl sensit key destroy clear case where immut unreferenc final PrivateKey::PrivateKey Serializable::Serializable implement overrid prevent key destroy serial
KeyPair::KeyPair holder key pair key privat key enforc secur initi treat PrivateKey::PrivateKey
KeyPair::KeyPair construct key pair given key privat key note constructor store refer privat key compon generat key pair safe Key::Key object immut publickey key privatekey privat key
KeyPair::getPublic return refer key compon key pair refer key
KeyPair::getPrivate return refer privat key compon key pair refer privat key
BasicPermission::BasicPermission creat BasicPermission::BasicPermission object specifi name name symbol name BasicPermission::BasicPermission action String::String current unus name name BasicPermission::BasicPermission action ignor
InvalidKeyException::InvalidKeyException construct InvalidKeyException::InvalidKeyException detail messag detail messag String::String describ particular
InvalidKeyException::InvalidKeyException construct InvalidKeyException::InvalidKeyException specifi detail messag detail messag String::String describ particular msg detail messag
AccessController::getInheritedAccessControlContext return inherit accesscontrol context context exist thread creat Package::Package privat AccessControlContext::AccessControlContext use
KeyRep::readResolve resolv Key::Key object support type format combin type secret raw return secretkeyspec object construct use encod key byte algorithm type 509 get KeyFactory::KeyFactory instanc key algorithm construct X509EncodedKeySpec::X509EncodedKeySpec encod key byte generat key spec type privat pkcs get KeyFactory::KeyFactory instanc key algorithm construct pkcs8encodedkeyspec encod key byte generat privat key spec resolv Key::Key object
SecureRandom::SecureRandom provid cryptograph strong random number generat rng cryptograph strong random number minim compli statist random number generat test specifi section addit SecureRandom::SecureRandom produc non determinist output therefor seed materi pass SecureRandom::SecureRandom object unpredict SecureRandom::SecureRandom output sequenc cryptograph strong describ caller obtain SecureRandom::SecureRandom instanc argument constructor getinst SecureRandom::SecureRandom implement form pseudo random number generat prng mean use determinist algorithm produc pseudo random sequenc random seed implement produc random number use combin techniqu typic caller SecureRandom::SecureRandom invok retriev random byte caller invok SecureRandom::generateSeed generat given number seed byte seed random number generat exampl note depend implement SecureRandom::generateSeed nextbyt block entropi gather exampl read dev random various unix oper system
SecureRandom::SecureRandom construct secur random number generat rng implement default random number algorithm constructor travers list regist secur provid start prefer Provider::Provider SecureRandom::SecureRandom object encapsul SecureRandomSpi::SecureRandomSpi implement first Provider::Provider support SecureRandom::SecureRandom rng algorithm return provid support rng algorithm implement specif default return note list regist provid retriev see SecureRandom::SecureRandom section standard rng algorithm name return SecureRandom::SecureRandom object seed seed return object call setse setse call first call nextbyt forc SecureRandom::SecureRandom object seed self seed occur setse previous call
SecureRandom::SecureRandom construct secur random number generat rng implement default random number algorithm SecureRandom::SecureRandom instanc seed specifi seed byte constructor travers list regist secur provid start prefer Provider::Provider SecureRandom::SecureRandom object encapsul SecureRandomSpi::SecureRandomSpi implement first Provider::Provider support SecureRandom::SecureRandom rng algorithm return provid support rng algorithm implement specif default return note list regist provid retriev see SecureRandom::SecureRandom section standard rng algorithm name seed seed
SecureRandom::SecureRandom creat SecureRandom::SecureRandom object securerandomspi SecureRandom::SecureRandom implement provid provid
SecureRandom::getInstance return SecureRandom::SecureRandom object implement specifi Random::Random Number::Number generat rng algorithm travers list regist secur provid start prefer Provider::Provider SecureRandom::SecureRandom object encapsul SecureRandomSpi::SecureRandomSpi implement first Provider::Provider support specifi algorithm return note list regist provid retriev return SecureRandom::SecureRandom object seed seed return object call setse setse call first call nextbyt forc SecureRandom::SecureRandom object seed self seed occur setse previous call algorithm name rng algorithm see SecureRandom::SecureRandom section standard rng algorithm name SecureRandom::SecureRandom object
SecureRandom::getInstance return SecureRandom::SecureRandom object implement specifi Random::Random Number::Number generat rng algorithm SecureRandom::SecureRandom object encapsul SecureRandomSpi::SecureRandomSpi implement specifi provid return specifi provid regist secur provid list note list regist provid retriev return SecureRandom::SecureRandom object seed seed return object call setse setse call first call nextbyt forc SecureRandom::SecureRandom object seed self seed occur setse previous call algorithm name rng algorithm see SecureRandom::SecureRandom section standard rng algorithm name provid name provid SecureRandom::SecureRandom object
SecureRandom::getInstance return SecureRandom::SecureRandom object implement specifi Random::Random Number::Number generat rng algorithm SecureRandom::SecureRandom object encapsul SecureRandomSpi::SecureRandomSpi implement specifi Provider::Provider object return note specifi Provider::Provider object regist provid list return SecureRandom::SecureRandom object seed seed return object call setse setse call first call nextbyt forc SecureRandom::SecureRandom object seed self seed occur setse previous call algorithm name rng algorithm see SecureRandom::SecureRandom section standard rng algorithm name provid provid SecureRandom::SecureRandom object
SecureRandom::getSecureRandomSpi return SecureRandomSpi::SecureRandomSpi SecureRandom::SecureRandom object
SecureRandom::getProvider return provid SecureRandom::SecureRandom object provid SecureRandom::SecureRandom object
SecureRandom::getAlgorithm return name algorithm implement SecureRandom::SecureRandom object name algorithm unknown algorithm name determin
SecureRandom::nextBytes generat user specifi number random byte call setse occur previous first call forc SecureRandom::SecureRandom object seed self seed occur setse previous call byte array fill random byte
SecureRandom::getSeed return given number seed byte comput use seed generat algorithm use seed call seed random number generat includ backward compat caller encourag use altern getinst obtain SecureRandom::SecureRandom object call SecureRandom::generateSeed obtain seed byte object numbyt number seed byte generat seed byte
SecureRandom::getPrngAlgorithm get default prng algorithm look regist provid return first prng algorithm first provid regist SecureRandom::SecureRandom implement null regist provid suppli SecureRandom::SecureRandom implement
GeneralSecurityException::GeneralSecurityException construct GeneralSecurityException::GeneralSecurityException specifi detail messag detail messag String::String describ particular msg detail messag
PublicKey::PublicKey key interfac contain constant mere serv group provid type safeti key interfac note key interfac extend interfac see exampl dsapublickey interfac secur interfac
SignedObject::SignedObject SignedObject::SignedObject purpos creat authent runtim object integr compromis detect specif SignedObject::SignedObject contain Serializable::Serializable object sign object signatur sign object deep copi serial form origin object copi made further manipul origin object side effect copi sign algorithm design Signature::Signature object pass constructor verifi typic usag sign follow typic usag verif receiv SignedObject::SignedObject point worth note first initi sign verif engin initi constructor verifi verif succeed specifi key key correspond privat key generat SignedObject::SignedObject import flexibl reason constructor verifi allow custom signatur engin implement signatur algorithm instal formal part crypto provid crucial programm write verifi awar Signature::Signature engin implement verifi invok verifi signatur word malici Signature::Signature choos return verif attempt bypass secur check signatur algorithm nist standard dsa use dsa sha algorithm specifi use convent signatur dsa algorithm use sha messag digest algorithm specifi exampl sha dsa sha dsa equival case rsa multipl choic messag digest algorithm sign algorithm specifi exampl md2 rsa md5 rsa sha rsa algorithm name specifi default name cryptographi Package::Package Provider::Provider design Signature::Signature paramet constructor verifi provid specifi default provid instal configur use particular provid default potenti applic SignedObject::SignedObject includ intern runtim unforg author token pass fear token malici modifi detect sign serial data object storag runtim store critic access control data disk nest signedobject construct logic sequenc signatur resembl chain author deleg
SecureRandomSpi::SecureRandomSpi defin servic Provider::Provider interfac spi SecureRandom::SecureRandom abstract implement servic provid wish suppli implement cryptograph strong pseudo random number generat
SecureRandomSpi::engineNextBytes generat user specifi number random byte call SecureRandomSpi::engineSetSeed occur previous first call forc SecureRandom::SecureRandom implement seed self seed occur SecureRandomSpi::engineSetSeed previous call byte array fill random byte
NoSuchAlgorithmException::NoSuchAlgorithmException construct NoSuchAlgorithmException::NoSuchAlgorithmException detail messag detail messag String::String describ particular
NoSuchAlgorithmException::NoSuchAlgorithmException construct NoSuchAlgorithmException::NoSuchAlgorithmException specifi detail messag detail messag String::String describ particular exampl specifi algorithm avail msg detail messag
DomainLoadStoreParameter::DomainLoadStoreParameter configur data specifi keystor keystor domain keystor domain collect keystor singl logic keystor configur data KeyStore::KeyStore oper syntax support configur data where domainnam keystorenam identifi properti key valu pair key valu separ equal symbol valu enclos doubl quot properti valu printabl string binari string colon separ pair hexadecim digit multi valu properti repres comma separ list valu enclos squar bracket see ensur keystor entri uniqu identifi entri alia prefix keystorenam follow entri name separ keystorenam uniqu domain TreeMap::Entry name prefix omit store keystor Properties::Properties context sensit properti appli keystor domain locat domain claus properti appli specif keystor locat keystor claus specifi properti keystor claus overrid properti name domain claus properti name case insensit properti support keystoretyp keystor type keystoreuri keystor locat keystoreprovidernam name keystor jce provid keystorepasswordenv environ variabl store keystor password altern password suppli constructor map entrynamesepar separ keystor name prefix entri name specifi appli entri domain default valu space exampl configur data keystor domain compris keystor shown
CodeSource::writeObject write object stream serial initi url follow int indic number certif follow valu zero denot certif associ object certif written start String::String denot certif type follow int specifi length certif encod follow certif encod written array byte final signer array signer serial written
DigestException::DigestException construct DigestException::DigestException detail messag detail messag String::String describ particular
DigestException::DigestException construct DigestException::DigestException specifi detail messag detail messag String::String describ particular msg detail messag
KeyFactorySpi::KeyFactorySpi defin servic Provider::Provider interfac spi KeyFactory::KeyFactory abstract implement cryptograph servic provid wish suppli implement key factori particular algorithm Key::Key factori convert key opaqu cryptograph key type Key::Key key specif transpar represent key materi versa Key::Key factori bi direct allow build opaqu key object given key specif key materi retriev key materi key object suitabl format multipl compat key specif exist key exampl dsa key specifi use dsapublickeyspec X509EncodedKeySpec::X509EncodedKeySpec key factori translat compat key specif provid document key specif support key factori
KeyStoreSpi::KeyStoreSpi defin servic Provider::Provider interfac spi KeyStore::KeyStore abstract implement cryptograph servic provid wish suppli implement keystor particular keystor type
Signature::Signature Signature::Signature provid applic function digit signatur algorithm digit signatur authent integr assur digit data signatur algorithm nist standard dsa use dsa sha dsa algorithm use sha messag digest algorithm specifi sha1withdsa case rsa multipl choic messag digest algorithm sign algorithm specifi exampl md2withrsa md5withrsa sha1withrsa algorithm name specifi default Signature::Signature object generat verifi digit signatur phase use Signature::Signature object sign data verifi signatur initi key initi signatur verif see privat key option secur Random::Random Number::Number generat initi signatur sign see updat depend type initi updat byte sign verifi see sign verifi signatur updat byte see note abstract extend SignatureSpi::SignatureSpi histor reason develop take notic defin Signature::Signature superclass intend cryptograph servic provid wish suppli implement digit signatur algorithm implement platform requir support standard Signature::Signature algorithm sha1withdsa sha1withrsa sha256withrsa algorithm describ cryptographi architectur standard algorithm Attributes::Name document consult releas document implement see algorithm support
Signature::Signature creat Signature::Signature object specifi algorithm algorithm standard string name algorithm see Signature::Signature section standard algorithm name
Signature::getInstance return Signature::Signature object implement specifi signatur algorithm travers list regist secur provid start prefer Provider::Provider Signature::Signature object encapsul SignatureSpi::SignatureSpi implement first Provider::Provider support specifi algorithm return note list regist provid retriev algorithm standard name algorithm request see Signature::Signature section standard algorithm name Signature::Signature object
Signature::getInstance return Signature::Signature object implement specifi signatur algorithm Signature::Signature object encapsul SignatureSpi::SignatureSpi implement specifi provid return specifi provid regist secur provid list note list regist provid retriev algorithm name algorithm request see Signature::Signature section standard algorithm name provid name provid Signature::Signature object
Signature::getInstance return Signature::Signature object implement specifi signatur algorithm Signature::Signature object encapsul SignatureSpi::SignatureSpi implement specifi Provider::Provider object return note specifi Provider::Provider object regist provid list algorithm name algorithm request see Signature::Signature section standard algorithm name provid provid Signature::Signature object
Signature::initVerify initi object verif call argument negat effect call publickey key ident signatur go verifi
Signature::initVerify initi object verif use key given certif certif type 509 key usag extens field mark critic valu key usag extens field impli key certif correspond privat key suppos digit signatur InvalidKeyException::InvalidKeyException thrown certif certif ident signatur go verifi
Signature::initSign initi object sign call argument negat effect call privatekey privat key ident signatur go generat
Signature::initSign initi object sign call argument negat effect call privatekey privat key ident signatur go generat random sourc random signatur
Signature::sign return signatur byte data updat format signatur depend signatur scheme call reset signatur object state previous initi sign call initsign privatekey object reset avail generat signatur signer desir call updat sign signatur byte sign oper result
Signature::sign finish signatur oper store result signatur byte buffer outbuf start offset format signatur depend signatur scheme signatur object reset initi state state call Signature::initSign reus generat further signatur privat key outbuf buffer signatur result offset offset outbuf where signatur store len number byte outbuf allot signatur number byte place outbuf
Signature::verify verifi pass signatur call reset signatur object state previous initi verif call initverifi publickey object reset avail verifi signatur ident key specifi call Signature::initVerify signatur signatur byte verifi signatur verifi fals
Signature::verify verifi pass signatur specifi array byte start specifi offset call reset signatur object state previous initi verif call initverifi publickey object reset avail verifi signatur ident key specifi call Signature::initVerify signatur signatur byte verifi offset offset start array byte length number byte use start offset signatur verifi fals
Signature::update updat data sign verifi byte byte use updat
Signature::update updat data sign verifi use specifi array byte data byte array use updat
Signature::update updat data sign verifi use specifi array byte start specifi offset data array byte offset start array byte len number byte use start offset
Signature::update updat data sign verifi use specifi bytebuff process data remain byte start data posit return buffer posit equal limit limit chang data bytebuff
Signature::chooseFirstProvider choos spi first provid avail delay provid select Signature::initSign Signature::initVerify first call
SecurityPermission::SecurityPermission secur permiss SecurityPermission::SecurityPermission contain name refer target name action list name permiss don target name name secur configur paramet see current SecurityPermission::SecurityPermission object guard access Policy::Policy Security::Security Provider::Provider Signer::Signer Identity::Identity object tabl list SecurityPermission::SecurityPermission target name provid descript permiss allow discuss risk grant permiss permiss supersed newer permiss associ deprec use discourag see applic
SecurityPermission::SecurityPermission creat SecurityPermission::SecurityPermission object specifi name name symbol name SecurityPermission::SecurityPermission action String::String current unus null name name SecurityPermission::SecurityPermission action null
UnresolvedPermission::UnresolvedPermission UnresolvedPermission::UnresolvedPermission hold Permissions::Permissions unresolv Policy::Policy initi unresolv permiss actual Permission::Permission exist time Policy::Policy initi see polici runtim specifi permiss avail various princip repres Policy::Policy object Policy::Policy initi refresh Permission::Permission object appropri creat permiss allow Policy::Policy permiss type referenc polici configur exist local found classpath Objects::Objects permiss instanti Policy::Policy initi exampl instanti io filepermiss FilePermission::FilePermission found classpath permiss exist Policy::Policy initi exampl referenc permiss jar file load UnresolvedPermission::UnresolvedPermission instanti thus UnresolvedPermission::UnresolvedPermission essenti placehold contain permiss call accesscontrol checkpermiss permiss type previous unresolv load previous unresolv permiss type resolv UnresolvedPermission::UnresolvedPermission object appropri type instanti base UnresolvedPermission::UnresolvedPermission instanti UnresolvedPermission::UnresolvedPermission assum provid zero argument constructor zero argument constructor instanti permiss name action arg constructor assum take String::String name input arg constructor assum take String::String name String::String action input UnresolvedPermission::UnresolvedPermission invok constructor null name action appropri permiss constructor avail UnresolvedPermission::UnresolvedPermission ignor relev permiss grant execut newli creat permiss object replac UnresolvedPermission::UnresolvedPermission remov note getnam UnresolvedPermission::UnresolvedPermission return type name permiss resolv
UnresolvedPermission::writeObject write object stream serial initi String::String denot type follow String::String denot name follow String::String denot action follow int indic number certif follow valu zero denot certif associ object certif written start String::String denot certif type follow int specifi length certif encod follow certif encod written array byte
PermissionCollection::PermissionCollection abstract repres collect Permission::Permission object PermissionCollection::PermissionCollection add permiss collect use add check see particular permiss impli collect use impli enumer permiss use element desir group number Permission::Permission object type newpermissioncollect particular type Permission::Permission object first call default behavior Permission::Permission simpli return null subclass Permission::Permission overrid store permiss particular PermissionCollection::PermissionCollection object order provid correct semant permissioncollect impli call non null valu return PermissionCollection::PermissionCollection null return caller newpermissioncollect free store permiss given type PermissionCollection::PermissionCollection choos use Hashtable::Hashtable use Vector::Vector PermissionCollection::PermissionCollection return permiss newpermissioncollect homogen collect store Permission::Permission object given Permission::Permission type PermissionCollection::PermissionCollection heterogen exampl Permissions::Permissions PermissionCollection::PermissionCollection subclass repres collect permissioncollect member homogen PermissionCollection::PermissionCollection exampl Permissions::Permissions object FilePermissionCollection::FilePermissionCollection FilePermission::FilePermission object SocketPermissionCollection::SocketPermissionCollection SocketPermission::SocketPermission object add add permiss appropri collect permiss ad heterogen PermissionCollection::PermissionCollection Permissions::Permissions PermissionCollection::PermissionCollection doesn contain PermissionCollection::PermissionCollection specifi permiss type PermissionCollection::PermissionCollection call newpermissioncollect permiss see requir PermissionCollection::PermissionCollection newpermissioncollect return null PermissionCollection::PermissionCollection free store permiss type PermissionCollection::PermissionCollection desir use Hashtable::Hashtable use Vector::Vector exampl Permissions::Permissions object use default PermissionCollection::PermissionCollection implement store permiss object Hashtable::Hashtable subclass implement PermissionCollection::PermissionCollection assum call simultan multipl thread therefor synchron proper furthermor enumer return element fail fast modif collect perform enumer collect
PermissionCollection::toString return string describ PermissionCollection::PermissionCollection object permiss contain format super tostr call tostr object superclass Object::Object result permissioncollect type name follow object hashcod thus enabl client differenti permissioncollect object contain permiss PermissionCollection::PermissionCollection object describ
Permission::Permission abstract repres access system resourc permiss name interpret depend subclass abstract function defin semant particular Permission::Permission subclass Permission::Permission object includ action list tell action permit object exampl io filepermiss object permiss name pathnam file directori action list read write specifi action grant specifi file file specifi directori action list option Permission::Permission object lang runtimepermiss don list name permiss system exit don implement subclass impli compar Permissions::Permissions basic permiss p1 impli permiss p2 mean grant permiss p1 natur grant permiss p2 thus equal test subset test Permission::Permission object similar String::String object immut creat subclass provid chang state permiss creat
Permission::getActions return action String::String abstract subclass defer creat String::String represent subclass return action consid canon form exampl FilePermission::FilePermission object creat follow return read write getact invok action Permission::Permission
Permission::newPermissionCollection return empti PermissionCollection::PermissionCollection given Permission::Permission object null defin subclass Permission::Permission overrid store permiss particular PermissionCollection::PermissionCollection object order provid correct semant permissioncollect impli call null return caller free store permiss type PermissionCollection::PermissionCollection choos use Hashtable::Hashtable use Vector::Vector PermissionCollection::PermissionCollection object type Permission::Permission null defin
KeyException::KeyException construct KeyException::KeyException detail messag detail messag String::String describ particular
KeyException::KeyException construct KeyException::KeyException specifi detail messag detail messag String::String describ particular msg detail messag
SignatureSpi::SignatureSpi defin servic Provider::Provider interfac spi Signature::Signature provid function digit signatur algorithm digit signatur authent integr assur digit data abstract implement cryptograph servic provid wish suppli implement particular signatur algorithm
KeyManagementException::KeyManagementException construct KeyManagementException::KeyManagementException detail messag detail messag String::String describ particular
KeyManagementException::KeyManagementException construct KeyManagementException::KeyManagementException specifi detail messag detail messag String::String describ particular msg detail messag
X509EncodedKeySpec::X509EncodedKeySpec repres asn encod key encod accord asn type subjectpublickeyinfo subjectpublickeyinfo syntax defin 509 standard follow
X509EncodedKeySpec::X509EncodedKeySpec creat X509EncodedKeySpec::X509EncodedKeySpec given encod key encodedkey key assum encod accord 509 standard content array copi protect subsequ modif
ECFieldF2m::ECFieldF2m creat ellipt curv characterist finit field element polynomi basi reduct polynomi field base rp th bit correspond th coeffici reduct polynomi note valid reduct polynomi trinomi gt gt pentanomi k3 k2 k1 gt k3 gt k2 gt k1 gt number element rp BigInteger::BigInteger th bit correspond th coeffici reduct polynomi
ECFieldF2m::getReductionPolynomial return BigInteger::BigInteger th bit correspond th coeffici reduct polynomi polynomi basi null normal basi BigInteger::BigInteger th bit correspond th coeffici reduct polynomi polynomi basi null normal basi
InvalidKeySpecException::InvalidKeySpecException construct InvalidKeySpecException::InvalidKeySpecException detail messag detail messag String::String describ particular
InvalidKeySpecException::InvalidKeySpecException construct InvalidKeySpecException::InvalidKeySpecException specifi detail messag detail messag String::String describ particular msg detail messag
InvalidParameterSpecException::InvalidParameterSpecException construct InvalidParameterSpecException::InvalidParameterSpecException detail messag detail messag String::String describ particular
InvalidParameterSpecException::InvalidParameterSpecException construct InvalidParameterSpecException::InvalidParameterSpecException specifi detail messag detail messag String::String describ particular msg detail messag
PKCS12Attribute::PKCS12Attribute attribut associ pkcs12 keystor entri attribut name asn Object::Object identifi attribut valu set asn type
PKCS12Attribute::PKCS12Attribute construct pkcs12 attribut name valu name asn Object::Object identifi repres list dot separ integ string valu repres string binari valu repres string colon separ pair hexadecim digit multi valu attribut repres comma separ list valu enclos squar bracket see string valu der encod asn utf8str binari valu der encod asn octet String::String name attribut identifi valu attribut valu
PKCS12Attribute::getName return attribut asn Object::Object identifi repres list dot separ integ attribut identifi
PKCS12Attribute::getValue return attribut asn der encod valu string asn der encod valu return String::String format der encod basic asn type natur string represent return string type current limit boolean integ object identifi utctim generalizedtim asn string type utf8str printablestr t61string ia5str bmpstring generalstr der encod asn type decod return binari string colon separ pair hexadecim digit multi valu attribut repres comma separ list valu enclos squar bracket see attribut valu string encod
KeyFactory::KeyFactory Key::Key factori convert key opaqu cryptograph key type Key::Key key specif transpar represent key materi versa Key::Key factori bi direct allow build opaqu key object given key specif key materi retriev key materi key object suitabl format multipl compat key specif exist key exampl dsa key specifi use dsapublickeyspec X509EncodedKeySpec::X509EncodedKeySpec key factori translat compat key specif exampl use key factori order instanti dsa key encod assum alic receiv digit signatur bob bob sent key encod format verifi signatur alic perform action implement platform requir support standard KeyFactory::KeyFactory algorithm diffiehellman dsa rsa algorithm describ cryptographi architectur standard algorithm Attributes::Name document consult releas document implement see algorithm support
KeyFactory::KeyFactory creat KeyFactory::KeyFactory object keyfacspi deleg provid provid algorithm name algorithm associ KeyFactory::KeyFactory
KeyFactory::getInstance return KeyFactory::KeyFactory object convert privat key specifi algorithm travers list regist secur provid start prefer Provider::Provider KeyFactory::KeyFactory object encapsul KeyFactorySpi::KeyFactorySpi implement first Provider::Provider support specifi algorithm return note list regist provid retriev algorithm name request key algorithm see KeyFactory::KeyFactory section standard algorithm name KeyFactory::KeyFactory object
KeyFactory::getInstance return KeyFactory::KeyFactory object convert privat key specifi algorithm KeyFactory::KeyFactory object encapsul KeyFactorySpi::KeyFactorySpi implement specifi provid return specifi provid regist secur provid list note list regist provid retriev algorithm name request key algorithm see KeyFactory::KeyFactory section standard algorithm name provid name provid KeyFactory::KeyFactory object
KeyFactory::getInstance return KeyFactory::KeyFactory object convert privat key specifi algorithm KeyFactory::KeyFactory object encapsul KeyFactorySpi::KeyFactorySpi implement specifi Provider::Provider object return note specifi Provider::Provider object regist provid list algorithm name request key algorithm see KeyFactory::KeyFactory section standard algorithm name provid provid KeyFactory::KeyFactory object
KeyFactory::getAlgorithm get name algorithm associ KeyFactory::KeyFactory name algorithm associ KeyFactory::KeyFactory
KeyFactory::generatePublic generat key object key specif key materi keyspec specif key materi key key
Provider::Provider repres provid Security::Security where provid implement part Security::Security servic provid implement includ algorithm dsa rsa md5 sha key generat convers manag facil algorithm specif key provid name version number configur runtim instal see cryptographi architectur specif amp Reference::Reference particular type provid cryptograph servic provid work instal pleas note provid implement secur servic use pluggabl architectur choic implement fit provid implement encount unrecover intern error oper exampl failur communic secur token indic error servic type Provider::Provider reserv use secur framework servic type ad remov modifi applic attribut automat place Provider::Provider object
Provider::Provider construct provid specifi name version number name provid name version provid version number info descript provid servic
Provider::putAll copi map specifi Map::Map provid map replac properti provid key current specifi Map::Map
Provider::entrySet return unmodifi Set::Set view properti entri contain Provider::Provider
Provider::keySet return unmodifi Set::Set view properti key contain provid
Provider::implPutAll copi map specifi Map::Map provid intern call secur check perform
Provider::ensureLegacyParsed ensur legaci String::String properti fulli pars servic object
Provider::removeInvalidServices remov invalid servic Map::Map invalid servic occur legaci properti inconsist incomplet
Provider::getService get servic describ provid implement specifi type algorithm alia implement exist return null match servic ad provid use ad servic ad return type type request exampl MessageDigest::MessageDigest algorithm case insensit algorithm name altern alia servic request exampl sha servic describ provid match servic null servic exist
Provider::getServices get unmodifi Set::Set servic support Provider::Provider unmodifi Set::Set servic support Provider::Provider
Provider::putService add servic servic type algorithm name exist ad use replac servic place servic provid Hashtable::Hashtable valu format describ secur manag SecurityManager::checkSecurityAccess call string putproviderproperti name where name provid name see ok set provid properti valu default implement SecurityManager::checkSecurityAccess overriden result call secur manag checkpermiss securitypermiss putproviderproperti name permiss Provider::Service add
Provider::putPropertyStrings put string properti Provider::Service provid Hashtable::Hashtable
Provider::removePropertyStrings remov string properti Provider::Service provid Hashtable::Hashtable
Provider::removeService remov servic previous ad use specifi servic remov provid longer return remov provid Hashtable::Hashtable secur manag SecurityManager::checkSecurityAccess call string removeproviderproperti name where name provid name see ok remov provid properti default implement SecurityManager::checkSecurityAccess overriden result call secur manag checkpermiss securitypermiss removeproviderproperti name permiss Provider::Service remov
Provider::Service construct servic provid provid offer servic type type servic algorithm algorithm name classnam name implement servic alias List::List alias null algorithm alias attribut Map::Map attribut null implement attribut
Provider::getType get type servic exampl MessageDigest::MessageDigest type servic
Provider::getProvider return Provider::Provider servic Provider::Provider servic
Provider::toString return String::String represent servic String::String represent servic
Security::getProviders return array contain instal provid order provid array prefer order array instal provid
Security::getProviders return array contain instal provid satisfi specifi select criterion null provid instal return provid order accord cryptograph servic associ particular algorithm type exampl digit signatur servic associ particular algorithm dsa CertificateFactory::CertificateFactory servic associ particular certif type 509 select criterion specifi format standard cryptograph servic name standard algorithm name standard attribut name filter criterion select provid filter case insensit instal provid satisfi select criterion null provid instal
Security::getProviders return array contain instal provid satisfi specifi select criteria null provid instal return provid order accord select criteria repres map map entri repres select criterion provid select iff satisfi select criteria key entri map format standard cryptograph servic name standard algorithm name standard attribut name filter criteria select provid filter case insensit instal provid satisfi select criteria null provid instal
Security::getSpiClass return Class::Class object given engin type MessageDigest::MessageDigest work spis secur packag
Security::getAlgorithms return Set::Set string contain name avail algorithm type specifi cryptograph servic Signature::Signature MessageDigest::MessageDigest cipher mac KeyStore::KeyStore return empti Set::Set provid support specifi servic servicenam null complet list cryptograph servic pleas see note return set immut servicenam name cryptograph servic Signature::Signature MessageDigest::MessageDigest cipher mac KeyStore::KeyStore note paramet case insensit Set::Set string contain name avail algorithm type specifi cryptograph servic empti set provid support specifi servic
CertStoreException::CertStoreException creat CertStoreException::CertStoreException given detail messag detail messag String::String describ particular msg detail messag
CertPathBuilderSpi::CertPathBuilderSpi servic Provider::Provider interfac spi CertPathBuilder::CertPathBuilder implement includ spi extend CertPathBuilderSpi::CertPathBuilderSpi implement general instanc access CertPathBuilder::CertPathBuilder detail see cryptographi architectur concurr access instanc protect concurr access multipl thread thread access singl CertPathBuilderSpi::CertPathBuilderSpi instanc concurr synchron provid necessari lock call wrap CertPathBuilder::CertPathBuilder object implement CertPathBuilderSpi::CertPathBuilderSpi encount concurr issu multipl thread manipul CertPathBuilderSpi::CertPathBuilderSpi instanc synchron
CertificateNotYetValidException::CertificateNotYetValidException Certificate::Certificate valid thrown current Date::Date specifi Date::Date notbefor date time Certificate::Certificate valid period
CertificateNotYetValidException::CertificateNotYetValidException construct CertificateNotYetValidException::CertificateNotYetValidException detail messag detail messag String::String describ particular
CertificateNotYetValidException::CertificateNotYetValidException construct CertificateNotYetValidException::CertificateNotYetValidException specifi detail messag detail messag String::String describ particular messag detail messag
PolicyNode::getChildren return iter children node attempt modifi children node Iterator::Iterator remov throw UnsupportedOperationException::UnsupportedOperationException iter children node
PolicyNode::getValidPolicy return valid polici repres node String::String oid valid polici repres node root node return anypolici oid 29 32
PolicyNode::getPolicyQualifiers return set polici qualifi associ valid polici repres node immut Set::Set PolicyQualifierInfo::PolicyQualifierInfo root node empti Set::Set
PolicyNode::getExpectedPolicies return set expect polici satisfi node valid polici certif process immut Set::Set expect polici String::String oid root node return Set::Set element anypolici oid 29 32
PKIXCertPathChecker::getSupportedExtensions return immut Set::Set 509 certif extens pkixcertpathcheck support recogn abl process null extens support element set String::String repres Object::Object identifi oid 509 extens support oid repres set nonneg integ separ period 509 certif extens pkixcertpathcheck possibl abl process includ set immut Set::Set 509 extens oid String::String format support pkixcertpathcheck null extens support
CertPathValidator::getInstance return CertPathValidator::CertPathValidator object implement specifi algorithm travers list regist secur provid start prefer Provider::Provider CertPathValidator::CertPathValidator object encapsul CertPathValidatorSpi::CertPathValidatorSpi implement first Provider::Provider support specifi algorithm return note list regist provid retriev algorithm name request CertPathValidator::CertPathValidator algorithm see CertPathValidator::CertPathValidator section standard algorithm name CertPathValidator::CertPathValidator object implement specifi algorithm
CertPathValidator::getInstance return CertPathValidator::CertPathValidator object implement specifi algorithm CertPathValidator::CertPathValidator object encapsul CertPathValidatorSpi::CertPathValidatorSpi implement specifi Provider::Provider object return note specifi Provider::Provider object regist provid list algorithm name request CertPathValidator::CertPathValidator algorithm see CertPathValidator::CertPathValidator section standard algorithm name provid provid CertPathValidator::CertPathValidator object implement specifi algorithm
CertPathValidator::getProvider return Provider::Provider CertPathValidator::CertPathValidator Provider::Provider CertPathValidator::CertPathValidator
CertStore::getInstance return CertStore::CertStore object implement specifi CertStore::CertStore type initi specifi paramet travers list regist secur provid start prefer Provider::Provider CertStore::CertStore object encapsul CertStoreSpi::CertStoreSpi implement first Provider::Provider support specifi type return note list regist provid retriev CertStore::CertStore return initi specifi CertStoreParameters::CertStoreParameters type paramet vari type CertStore::CertStore note specifi CertStoreParameters::CertStoreParameters object clone type name request CertStore::CertStore type see CertStore::CertStore section standard type param initi paramet null CertStore::CertStore object implement specifi CertStore::CertStore type
CertStore::getInstance return CertStore::CertStore object implement specifi CertStore::CertStore type CertStore::CertStore object encapsul CertStoreSpi::CertStoreSpi implement specifi Provider::Provider object return note specifi Provider::Provider object regist provid list CertStore::CertStore return initi specifi CertStoreParameters::CertStoreParameters type paramet vari type CertStore::CertStore note specifi CertStoreParameters::CertStoreParameters object clone type request CertStore::CertStore type see CertStore::CertStore section standard type param initi paramet null provid provid CertStore::CertStore object implement specifi type
CertStoreSpi::CertStoreSpi servic Provider::Provider interfac spi CertStore::CertStore implement includ spi extend CertStoreSpi::CertStoreSpi provid constructor singl argument type CertStoreParameters::CertStoreParameters implement general instanc access CertStore::CertStore detail see cryptographi architectur concurr access CertStoreSpi::CertStoreSpi object thread safe multipl thread concurr invok singl CertStoreSpi::CertStoreSpi object effect allow CertPathBuilder::CertPathBuilder search crl simultan search further certif instanc CertStoreSpi::CertStoreSpi implement ensur thread safeti ad synchron keyword CertStoreSpi::engineGetCertificates CertStoreSpi::engineGetCRLs sophist allow truli concurr access
CertificateException::CertificateException construct certif detail messag detail messag String::String describ particular
CertificateException::CertificateException construct certif given detail messag detail messag String::String describ particular msg detail messag
X509Extension::getCriticalExtensionOIDs get Set::Set oid string extens mark critic certif crl manag object implement interfac sampl get Set::Set critic extens X509Certificate::X509Certificate print oid Set::Set empti Set::Set mark critic extens oid string extens mark critic extens return null
X509Extension::getNonCriticalExtensionOIDs get Set::Set oid string extens mark non critic certif crl manag object implement interfac sampl get Set::Set non critic extens x509crl revok certif entri print oid Set::Set empti Set::Set mark non critic extens oid string extens mark non critic extens return null
X509Extension::getExtensionValue get der encod octet string extens valu extnvalu identifi pass oid String::String oid string repres set nonneg number separ period exampl oid Object::Object identifi valu extens der encod octet string extens valu null
X509CRL::X509CRL abstract 509 Certificate::Certificate revoc List::List crl crl time stamp list identifi revok certif sign Certificate::Certificate author ca made freeli avail repositori revok certif identifi crl certif serial number certif use system use certif verifi remot user digit signatur system check certif signatur valid acquir suitabl recent crl check certif serial number crl mean suitabl recent vari local polici mean recent issu crl ca issu crl regular period basi hour daili week entri ad crls revoc occur entri remov certif expir date reach 509 v2 crl format describ asn 1 found asn definit tbscertlist crls instanti use certif factori exampl instanti 509 crl
X509CRL::X509CRL Constructor::Constructor 509 crls
X509CRL::verify verifi crl sign use privat key correspond given key key PublicKey::PublicKey carri verif
X509CRL::verify verifi crl sign use privat key correspond given key use signatur verif engin suppli given provid key PublicKey::PublicKey carri verif sigprovid name signatur provid
X509CRL::verify verifi crl sign use privat key correspond given key use signatur verif engin suppli given provid note specifi Provider::Provider object regist provid list ad version platform standard edit order maintain backward compat exist servic provid abstract provid default implement key PublicKey::PublicKey carri verif sigprovid signatur provid
X509CRL::getRevokedCertificates get entri crl return Set::Set x509crlentri object entri null
Extension::getId get extens object identifi object identifi String::String
CertificateExpiredException::CertificateExpiredException Certificate::Certificate expir Exception::Exception thrown current Date::Date specifi Date::Date notaft date time specifi valid period certif
CertificateExpiredException::CertificateExpiredException construct CertificateExpiredException::CertificateExpiredException detail messag detail messag String::String describ particular
CertificateExpiredException::CertificateExpiredException construct CertificateExpiredException::CertificateExpiredException specifi detail messag detail messag String::String describ particular messag detail messag
CertificateFactory::CertificateFactory defin function certif factori generat certif certif path CertPath::CertPath certif revoc list crl object encod encod consist multipl certif use CertificateFactory::generateCertificates want pars collect possibl unrel certif use CertificateFactory::generateCertPath want generat CertPath::CertPath certif chain subsequ valid CertPathValidator::CertPathValidator certif factori 509 return certif instanc secur cert x509certif crls instanc secur cert x509crl exampl read file Base64::Base64 encod certif bound begin begin certif bound end end certif convert FileInputStream::FileInputStream support mark reset BufferedInputStream::BufferedInputStream support call CertificateFactory::generateCertificate consum certif read posit input stream posit certif file exampl pars pkcs format certif repli store file extract certif implement platform requir support standard CertificateFactory::CertificateFactory type 509 standard CertPath::CertPath encod pkcs7 pkipath type encod describ cryptographi architectur standard algorithm Attributes::Name document consult releas document implement see type encod support
CertificateFactory::getInstance return certif factori object implement specifi certif type travers list regist secur provid start prefer Provider::Provider CertificateFactory::CertificateFactory object encapsul CertificateFactorySpi::CertificateFactorySpi implement first Provider::Provider support specifi type return note list regist provid retriev type name request certif type see CertificateFactory::CertificateFactory section standard certif type certif factori object specifi type
CertificateFactory::getInstance return certif factori object specifi certif type CertificateFactory::CertificateFactory object encapsul CertificateFactorySpi::CertificateFactorySpi implement specifi Provider::Provider object return note specifi Provider::Provider object regist provid list type certif type see CertificateFactory::CertificateFactory section standard certif type provid provid certif factori object specifi type
CertificateFactory::getCertPathEncodings return iter CertPath::CertPath encod support certif factori default encod first see CertPath::CertPath encod section standard encod name format attempt modifi return Iterator::Iterator remov result UnsupportedOperationException::UnsupportedOperationException Iterator::Iterator name support CertPath::CertPath encod String::String
CertificateFactory::generateCertPath generat CertPath::CertPath object initi data read InputStream::InputStream instream data assum default encod name default encod first element Iterator::Iterator return instream InputStream::InputStream contain data CertPath::CertPath initi data InputStream::InputStream
CertificateFactory::generateCertPath generat CertPath::CertPath object initi data read InputStream::InputStream instream data assum specifi encod see CertPath::CertPath encod section standard encod name format instream InputStream::InputStream contain data encod encod data CertPath::CertPath initi data InputStream::InputStream
CertificateFactory::generateCertPath generat CertPath::CertPath object initi List::List Certificate::Certificate certif suppli type support CertificateFactory::CertificateFactory copi suppli List::List object certif List::List Certificate::Certificate CertPath::CertPath initi suppli list certif
PolicyQualifierInfo::PolicyQualifierInfo immut polici qualifi repres asn PolicyQualifierInfo::PolicyQualifierInfo structur asn definit follow certif polici extens 509 version certif contain sequenc polici term consist object identifi oid option qualifi end entiti certif polici term indic polici certif issu purpos certif ca certif polici term limit set polici certif path includ certif Set::Set PolicyQualifierInfo::PolicyQualifierInfo object return allow applic specif polici requir process valid polici qualifi applic process polici qualifi explicit set policyqualifiersreject flag fals call valid certif path note pkix certif path valid algorithm specifi polici qualifi certif polici extens mark critic process valid certif path reject policyqualifiersreject flag set fals valid polici qualifi manner order pkix compliant concurr access PolicyQualifierInfo::PolicyQualifierInfo object immut thread safe multipl thread concurr invok defin singl PolicyQualifierInfo::PolicyQualifierInfo object effect requir PolicyQualifierInfo::PolicyQualifierInfo object immut thread safe allow pass various piec worri coordin access
PolicyQualifierInfo::getPolicyQualifierId return policyqualifierid field PolicyQualifierInfo::PolicyQualifierInfo policyqualifierid Object::Object identifi oid repres set nonneg integ separ period oid null
PolicyQualifierInfo::toString return printabl represent PolicyQualifierInfo::PolicyQualifierInfo String::String describ content PolicyQualifierInfo::PolicyQualifierInfo
CertificateParsingException::CertificateParsingException Certificate::Certificate pars Exception::Exception thrown invalid der encod certif pars unsupport der featur found Certificate::Certificate
CertificateParsingException::CertificateParsingException construct CertificateParsingException::CertificateParsingException detail messag detail messag String::String describ particular
CertificateParsingException::CertificateParsingException construct CertificateParsingException::CertificateParsingException specifi detail messag detail messag String::String describ particular messag detail messag
X509CertSelector::setIssuer denigr use instead reli fail match certif loss encod String::String form distinguish name set issuer criterion specifi distinguish name match issuer distinguish name X509Certificate::X509Certificate null issuer distinguish name issuerdn null contain distinguish name rfc 2253 format issuerdn distinguish name rfc 2253 format null
X509CertSelector::setSubject denigr use instead reli fail match certif loss encod rfc 2253 String::String form distinguish name set subject criterion specifi distinguish name match subject distinguish name X509Certificate::X509Certificate null subject distinguish name subjectdn null contain distinguish name rfc 2253 format subjectdn distinguish name rfc 2253 format null
X509CertSelector::setAuthorityKeyIdentifier set authoritykeyidentifi criterion X509Certificate::X509Certificate contain authoritykeyidentifi extens content extens valu match specifi criterion valu criterion valu null authoritykeyidentifi check authoritykeyid null contain singl der encod valu correspond content extens valu includ object identifi critic set encapsul octet string authoritykeyidentifi extens asn notat structur follow author key identifi pars X509CertSelector::X509CertSelector instead valu compar use byte byte comparison keyidentifi field authoritykeyidentifi popul valu taken subjectkeyidentifi extens issuer certif note result x509certif getextensionvalu issuer certif input X509CertSelector::setAuthorityKeyIdentifier subjectkeyidentifi contain keyidentifi octet string sequenc keyidentifi generalnam certificateserialnumb order use extens valu issuer certif subjectkeyidentifi extens necessari extract valu embed keyidentifi octet string der encod octet string sequenc detail subjectkeyidentifi see note byte array suppli clone protect subsequ modif authoritykeyid author key identifi null
X509CertSelector::setCertificateValid set certificatevalid criterion specifi date fall certif valid period X509Certificate::X509Certificate null certificatevalid check note Date::Date suppli clone protect subsequ modif certvalid Date::Date check null
X509CertSelector::setPrivateKeyValid set privatekeyvalid criterion specifi date fall privat key valid period X509Certificate::X509Certificate null privatekeyvalid check note Date::Date suppli clone protect subsequ modif privatekeyvalid Date::Date check null
X509CertSelector::setExtendedKeyUsage set extendedkeyusag criterion X509Certificate::X509Certificate allow specifi key purpos extend key usag extens keypurposeset empti null extendedkeyusag check note X509Certificate::X509Certificate extendedkeyusag extens implicit allow key purpos note Set::Set clone protect subsequ modif keypurposeset Set::Set key purpos oid string format null oid repres set nonneg integ separ period
X509CertSelector::setSubjectAlternativeNames set subjectalternativenam criterion X509Certificate::X509Certificate contain specifi subjectalternativenam depend valu matchallnam flag see allow caller specifi singl call complet set subject altern name subjectalternativenam criterion specifi valu replac previous valu subjectalternativenam criterion name paramet null Collection::Collection entri name includ subject altern name criterion entri List::List first entri Integer::Integer name type entri String::String byte array name string asn der encod form respect multipl name type null suppli valu argument subjectalternativenam check perform subject altern name Collection::Collection specifi String::String asn encod byte array detail format see note distinguish name specifi byte array form instead String::String form see note note name paramet contain duplic name name name type remov Collection::Collection name return note deep copi perform Collection::Collection protect subsequ modif name Collection::Collection name null
X509CertSelector::addSubjectAlternativeName add name subjectalternativenam criterion X509Certificate::X509Certificate contain specifi subjectalternativenam depend valu matchallnam flag see allow caller add name set subject altern name specifi name ad previous valu subjectalternativenam criterion specifi name duplic ignor name string format dns uri name use establish string format type subject restrict includ rfc 3280 ipv4 address name suppli use dot quad notat oid address name repres seri nonneg integ separ period directori name distinguish name suppli rfc 2253 format standard string format defin othernam 400 name edi parti name ipv6 address name type name specifi use note distinguish name use instead reli fail match certif loss encod rfc 2253 String::String form distinguish name type name type specifi rfc 3280 section name name string form null
X509CertSelector::addSubjectAlternativeNameInternal privat add name String::String byte array subjectalternativenam criterion X509Certificate::X509Certificate contain specifi subjectalternativenam type name type specifi rfc 3280 section name name string byte array form
X509CertSelector::parseNames pars argument form pass X509CertSelector::setSubjectAlternativeNames return Collection::Collection generalnameinterfac throw IllegalArgumentException::IllegalArgumentException ClassCastException::ClassCastException argument malform name Collection::Collection entri name entri List::List first entri Integer::Integer name type entri String::String byte array name string asn der encod form respect multipl name type null accept valu Set::Set generalnameinterfac
X509CertSelector::makeGeneralNameInterface make generalnameinterfac name type Object::Object byte array hold asn der encod name String::String form name 509 distinguish name String::String form name result call tostr exist generalnameinterfac implement output tostr compat String::String constructor name distinguish name type name type name name asn der encod byte array String::String generalnameinterfac name
X509CertSelector::setPolicy set polici constraint X509Certificate::X509Certificate includ specifi polici certif polici extens certpolicyset empti X509Certificate::X509Certificate includ specifi polici certif polici extens certpolicyset null polici check perform note Set::Set clone protect subsequ modif certpolicyset Set::Set certif polici oid string format null oid repres set nonneg integ separ period
X509CertSelector::setPathToNames set pathtonam criterion X509Certificate::X509Certificate includ name constraint prohibit build path specifi name allow caller specifi singl call complet set name x509certif name constraint permit specifi valu replac previous valu pathtonam criterion constraint use build certif path forward target trust anchor partial path built candid certif includ name constraint prohibit build path name partial path name paramet null Collection::Collection entri name includ pathtonam criterion entri List::List first entri Integer::Integer name type entri String::String byte array name string asn der encod form respect multipl name type null suppli valu argument pathtonam check perform name Collection::Collection specifi String::String asn encod byte array detail format see note distinguish name specifi byte array form instead String::String form see note note name paramet contain duplic name name name type remov Collection::Collection name return note deep copi perform Collection::Collection protect subsequ modif name Collection::Collection entri name null
X509CertSelector::addPathToName add name pathtonam criterion X509Certificate::X509Certificate includ name constraint prohibit build path specifi name allow caller add name set name x509certif name constraint permit specifi name ad previous valu pathtonam criterion name duplic ignor name string format rfc 822 dns uri name use establish string format type subject restrict includ rfc 3280 ipv4 address name suppli use dot quad notat oid address name repres seri nonneg integ separ period directori name distinguish name suppli rfc 2253 format standard string format defin othernam 400 name edi parti name ipv6 address name type name specifi use note distinguish name use instead reli fail match certif loss encod rfc 2253 String::String form distinguish name type name type specifi rfc 3280 section name name string form
X509CertSelector::addPathToNameInternal privat add name String::String byte array pathtonam criterion X509Certificate::X509Certificate contain specifi pathtonam type name type specifi rfc 3280 section name name string byte array form
X509CertSelector::getIssuerAsString denigr use instead reli fail match certif loss encod rfc 2253 String::String form distinguish name return issuer criterion String::String distinguish name match issuer distinguish name X509Certificate::X509Certificate null issuer criterion disabl issuer distinguish name valu return null distinguish name rfc 2253 format requir issuer distinguish name rfc 2253 format null
X509CertSelector::getSubjectAsString denigr use instead reli fail match certif loss encod rfc 2253 String::String form distinguish name return subject criterion String::String distinguish name match subject distinguish name X509Certificate::X509Certificate null subject criterion disabl subject distinguish name valu return null distinguish name rfc 2253 format requir subject distinguish name rfc 2253 format null
X509CertSelector::getCertificateValid return certificatevalid criterion specifi date fall certif valid period X509Certificate::X509Certificate null certificatevalid check note Date::Date return clone protect subsequ modif Date::Date check null
X509CertSelector::getPrivateKeyValid return privatekeyvalid criterion specifi date fall privat key valid period X509Certificate::X509Certificate null privatekeyvalid check note Date::Date return clone protect subsequ modif Date::Date check null
X509CertSelector::getExtendedKeyUsage return extendedkeyusag criterion X509Certificate::X509Certificate allow specifi key purpos extend key usag extens keypurposeset return empti null extendedkeyusag check note X509Certificate::X509Certificate extendedkeyusag extens implicit allow key purpos immut Set::Set key purpos oid string format null
X509CertSelector::getSubjectAlternativeNames return copi subjectalternativenam criterion X509Certificate::X509Certificate contain specifi subjectalternativenam depend valu matchallnam flag see valu return null subjectalternativenam check perform valu return null Collection::Collection entri name includ subject altern name criterion entri List::List first entri Integer::Integer name type entri String::String byte array name string asn der encod form respect multipl name type note Collection::Collection return contain duplic name name name type subject altern name Collection::Collection specifi String::String asn encod byte array detail format see note deep copi perform Collection::Collection protect subsequ modif Collection::Collection name null
X509CertSelector::cloneNames clone object form pass X509CertSelector::setSubjectAlternativeNames setpathtonam throw RuntimeException::RuntimeException argument malform wrap X509CertSelector::cloneAndCheckNames chang ioexcept RuntimeException::RuntimeException object clone check name Collection::Collection entri name entri List::List first entri Integer::Integer name type entri String::String byte array name string asn der encod form respect multipl name type null accept valu deep copi specifi Collection::Collection
X509CertSelector::cloneAndCheckNames clone check argument form pass X509CertSelector::setSubjectAlternativeNames setpathtonam throw ioexcept argument malform name Collection::Collection entri name entri List::List first entri Integer::Integer name type entri String::String byte array name string asn der encod form respect multipl name type null accept valu deep copi specifi Collection::Collection
X509CertSelector::getPolicy return polici criterion X509Certificate::X509Certificate includ specifi polici certif polici extens Set::Set return empti X509Certificate::X509Certificate includ specifi polici certif polici extens Set::Set return null polici check perform immut Set::Set certif polici oid string format null
X509CertSelector::getPathToNames return copi pathtonam criterion X509Certificate::X509Certificate includ name constraint prohibit build path specifi name valu return null pathtonam check perform valu return null Collection::Collection entri name includ pathtonam criterion entri List::List first entri Integer::Integer name type entri String::String byte array name string asn der encod form respect multipl name type note Collection::Collection return contain duplic name name name type name Collection::Collection specifi String::String asn encod byte array detail format see note deep copi perform Collection::Collection protect subsequ modif Collection::Collection name null
X509CertSelector::toString return printabl represent CertSelector::CertSelector String::String describ content CertSelector::CertSelector
CertPathValidatorException::CertPathValidatorException creat CertPathValidatorException::CertPathValidatorException given detail messag detail messag String::String describ particular msg detail messag
CertPathBuilderException::CertPathBuilderException creat CertPathBuilderException::CertPathBuilderException given detail messag detail messag String::String describ particular detail msg detail messag
X509Certificate::X509Certificate Constructor::Constructor 509 certif
X509Certificate::checkValidity check given date certif valid period word determin certif valid given date time date Date::Date check see certif valid date time
X509Certificate::getExtendedKeyUsage get unmodifi list string repres object identifi extkeyusagesyntax field extend key usag extens oid 29 37 indic purpos certifi key addit place basic purpos indic key usag extens field asn definit Key::Key purpos defin organ Object::Object identifi identifi key purpos assign accord iana itu rec 660 iso iec itu 9834 ad version platform standard edit order maintain backward compat exist servic provid abstract provid default implement subclass overrid correct implement extendedkeyusag extens certif unmodifi list object identifi repres string return null certif contain extendedkeyusag extens
X509Certificate::getSubjectAlternativeNames get immut collect subject altern name subjectaltnam extens oid 29 17 asn definit subjectaltnam extens certif contain subjectaltnam extens null return Collection::Collection return entri repres generalnam includ extens entri List::List first entri Integer::Integer name type entri String::String byte array name string asn der encod form respect dns uri name return String::String use establish string format type subject restrict includ rfc 3280 ipv4 address name return use dot quad notat ipv6 address name return form a1a2 a8 where a1 a8 hexadecim valu repres eight 16 bit piec address oid name return String::String repres seri nonneg integ separ period directori name distinguish name return string format standard string format defin othernam 400 name edi parti name type name return byte array contain asn der encod form name note Collection::Collection return contain name type note return Collection::Collection immut entri contain byte array clone protect subsequ modif ad version platform standard edit order maintain backward compat exist servic provid abstract provid default implement subclass overrid correct implement immut Collection::Collection subject altern name null
X509Certificate::getIssuerAlternativeNames get immut collect issuer altern name issueraltnam extens oid 29 18 asn definit issueraltnam extens asn definit generalnam defin certif contain issueraltnam extens null return Collection::Collection return entri repres generalnam includ extens entri List::List first entri Integer::Integer name type entri String::String byte array name string asn der encod form respect detail format name type see getsubjectalternativenam note Collection::Collection return contain name type note return Collection::Collection immut entri contain byte array clone protect subsequ modif ad version platform standard edit order maintain backward compat exist servic provid abstract provid default implement subclass overrid correct implement immut Collection::Collection issuer altern name null
X509Certificate::verify verifi certif sign use privat key correspond specifi key use signatur verif engin suppli specifi provid note specifi Provider::Provider object regist provid list ad version platform standard edit order maintain backward compat exist servic provid abstract provid default implement key PublicKey::PublicKey carri verif sigprovid signatur provid
CertPathBuilder::getInstance return CertPathBuilder::CertPathBuilder object implement specifi algorithm travers list regist secur provid start prefer Provider::Provider CertPathBuilder::CertPathBuilder object encapsul CertPathBuilderSpi::CertPathBuilderSpi implement first Provider::Provider support specifi algorithm return note list regist provid retriev algorithm name request CertPathBuilder::CertPathBuilder algorithm see CertPathBuilder::CertPathBuilder section standard algorithm name CertPathBuilder::CertPathBuilder object implement specifi algorithm
CertPathBuilder::getInstance return CertPathBuilder::CertPathBuilder object implement specifi algorithm CertPathBuilder::CertPathBuilder object encapsul CertPathBuilderSpi::CertPathBuilderSpi implement specifi Provider::Provider object return note specifi Provider::Provider object regist provid list algorithm name request CertPathBuilder::CertPathBuilder algorithm see CertPathBuilder::CertPathBuilder section standard algorithm name provid provid CertPathBuilder::CertPathBuilder object implement specifi algorithm
CertificateFactorySpi::CertificateFactorySpi defin servic Provider::Provider interfac spi CertificateFactory::CertificateFactory abstract implement cryptograph servic provid wish suppli implement certif factori particular certif type 509 certif factori generat certif certif path CertPath::CertPath certif revoc list crl object encod certif factori 509 return certif instanc secur cert x509certif crls instanc secur cert x509crl
CertificateFactorySpi::engineGenerateCertPath generat CertPath::CertPath object initi data read InputStream::InputStream instream data assum default encod ad version platform standard edit order maintain backward compat exist servic provid abstract default throw UnsupportedOperationException::UnsupportedOperationException instream InputStream::InputStream contain data CertPath::CertPath initi data InputStream::InputStream
CertificateFactorySpi::engineGenerateCertPath generat CertPath::CertPath object initi data read InputStream::InputStream instream data assum specifi encod ad version platform standard edit order maintain backward compat exist servic provid abstract default throw UnsupportedOperationException::UnsupportedOperationException instream InputStream::InputStream contain data encod encod data CertPath::CertPath initi data InputStream::InputStream
CertificateFactorySpi::engineGenerateCertPath generat CertPath::CertPath object initi List::List Certificate::Certificate certif suppli type support CertificateFactory::CertificateFactory copi suppli List::List object ad version platform standard edit order maintain backward compat exist servic provid abstract default throw UnsupportedOperationException::UnsupportedOperationException certif List::List Certificate::Certificate CertPath::CertPath initi suppli list certif
CertificateFactorySpi::engineGetCertPathEncodings return iter CertPath::CertPath encod support certif factori default encod first see CertPath::CertPath encod section standard encod name attempt modifi return Iterator::Iterator remov result UnsupportedOperationException::UnsupportedOperationException ad version platform standard edit order maintain backward compat exist servic provid abstract default throw UnsupportedOperationException::UnsupportedOperationException Iterator::Iterator name support CertPath::CertPath encod String::String
PKIXBuilderParameters::PKIXBuilderParameters paramet input pkix CertPathBuilder::CertPathBuilder algorithm pkix CertPathBuilder::CertPathBuilder use paramet CertPath::CertPath valid accord pkix certif path valid algorithm instanti pkixbuilderparamet object specifi trust cas defin pkix certif path valid algorithm trust ca specifi use constructor call specifi Set::Set TrustAnchor::TrustAnchor object identifi trust ca altern call specifi KeyStore::KeyStore instanc contain trust certif entri consid trust ca addit specifi constraint target certif CertPathBuilder::CertPathBuilder attempt build path constraint specifi CertSelector::CertSelector object constraint provid CertPathBuilder::CertPathBuilder search criteria find target certif minim criteria X509Certificate::X509Certificate includ subject name subject altern name criteria specifi CertPathBuilder::CertPathBuilder throw CertPathBuilderException::CertPathBuilderException concurr access specifi defin thread safe multipl thread access singl object concurr synchron provid necessari lock multipl thread manipul separ object synchron
PKIXBuilderParameters::PKIXBuilderParameters creat instanc pkixbuilderparamet specifi Set::Set trust cas element set note Set::Set copi protect subsequ modif trustanchor Set::Set TrustAnchor::TrustAnchor targetconstraint CertSelector::CertSelector specifi constraint target certif
CertPath::CertPath immut sequenc certif certif path abstract defin common CertPath::CertPath subclass handl kind certif 509 pgp CertPath::CertPath object type list Certificate::Certificate support encod CertPath::CertPath immut CertPath::CertPath chang extern visibl construct stipul appli field ad overridden subclass type String::String identifi type Certificate::Certificate certif path certif cert certif path certpath cert gettyp equal certpath gettyp list Certificate::Certificate order List::List zero Certificate::Certificate List::List Certificate::Certificate contain immut CertPath::CertPath object support encod object translat byte array storag transmiss parti prefer encod document standard pkcs encod support CertPath::CertPath consid default encod encod encod explicit request instanc CertPath::CertPath object Serializable::Serializable CertPath::CertPath object resolv altern object serial allow CertPath::CertPath object serial equival represent regardless implement CertPath::CertPath object creat CertificateFactory::CertificateFactory return CertPathBuilder::CertPathBuilder convent 509 CertPath::CertPath consist X509Certificate::X509Certificate order start target certif end certif issu trust anchor issuer certif subject certif repres includ certif path unvalid 509 CertPath::CertPath follow convent pkix CertPathValidator::CertPathValidator detect departur convent caus certif path invalid throw CertPathValidatorException::CertPathValidatorException implement platform requir support standard CertPath::CertPath encod pkcs7 pkipath encod describ cryptographi architectur standard algorithm Attributes::Name document consult releas document implement see encod support concurr access CertPath::CertPath object thread safe multipl thread concurr invok defin singl CertPath::CertPath object effect List::List return certpath getcertif requir CertPath::CertPath object immut thread safe allow pass various piec worri coordin access thread safeti general difficult CertPath::CertPath List::List object question immut
CertPath::getEncodings return iter encod support certif path default encod first attempt modifi return Iterator::Iterator remov result UnsupportedOperationException::UnsupportedOperationException Iterator::Iterator name support encod string
CertPath::equals compar certif path equal specifi object CertPath::CertPath equal type equal certif List::List implic Certificate::Certificate List::List equal CertPath::CertPath equal object CertPath::CertPath algorithm implement overridden behavior specifi maintain object test equal certif path specifi object equal certif path fals
CertPath::getCertificates return list certif certif path List::List return immut thread safe immut List::List Certificate::Certificate empti null
X509CRLEntry::X509CRLEntry abstract revok certif crl Certificate::Certificate revoc List::List asn definit revokedcertif
CertificateRevokedException::CertificateRevokedException construct CertificateRevokedException::CertificateRevokedException specifi revoc date reason author name map extens revocationd date certif revok date copi protect subsequ modif reason revoc reason extens map 509 extens key oid String::String map correspond Extension::Extension map copi prevent subsequ modif author x500princip repres name author sign certif revoc status
CertificateRevokedException::getInvalidityDate return invalid date specifi invalid Date::Date extens CertificateRevokedException::CertificateRevokedException invalid date date known suspect privat key compromis certif becam invalid implement call CertificateRevokedException::getExtensions check return map entri invalid Date::Date extens oid 29 24 found return invalid date extens null Date::Date object return time invok protect subsequ modif invalid date null specifi
CertificateRevokedException::getExtensions return map 509 extens contain addit revok certif invalid Date::Date Extension::Extension key oid String::String map correspond Extension::Extension unmodifi map 509 extens empti map extens
CertificateRevokedException::writeObject serial CertificateRevokedException::CertificateRevokedException instanc size extens map int follow extens map particular order extens data emit oid String::String Object::Object critic flag boolean length encod extens valu byte array int encod extens valu byte
CertPathValidatorSpi::CertPathValidatorSpi servic Provider::Provider interfac spi CertPathValidator::CertPathValidator implement includ spi extend CertPathValidatorSpi::CertPathValidatorSpi implement general instanc access CertPathValidator::CertPathValidator detail see cryptographi architectur concurr access instanc protect concurr access multipl thread thread access singl CertPathValidatorSpi::CertPathValidatorSpi instanc concurr synchron provid necessari lock call wrap CertPathValidator::CertPathValidator object implement CertPathValidatorSpi::CertPathValidatorSpi encount concurr issu multipl thread manipul CertPathValidatorSpi::CertPathValidatorSpi instanc synchron
PKIXCertPathValidatorResult::toString return printabl represent pkixcertpathvalidatorresult String::String describ content pkixcertpathvalidatorresult
PKIXParameters::PKIXParameters paramet input pkix CertPathValidator::CertPathValidator algorithm pkix CertPathValidator::CertPathValidator use paramet valid CertPath::CertPath accord pkix certif path valid algorithm instanti pkixparamet object specifi trust cas defin pkix certif path valid algorithm trust cas specifi use constructor call specifi Set::Set TrustAnchor::TrustAnchor object identifi trust ca altern call specifi KeyStore::KeyStore instanc contain trust certif entri consid trust ca pkixparamet object creat paramet specifi call instanc pkixparamet pass CertPath::CertPath valid paramet set set null set default valu paramet default valu date paramet null indic current time path valid default remain paramet constrain concurr access specifi defin thread safe multipl thread access singl object concurr synchron provid necessari lock multipl thread manipul separ object synchron
PKIXParameters::PKIXParameters creat instanc pkixparamet specifi Set::Set trust cas element set note Set::Set copi protect subsequ modif trustanchor Set::Set TrustAnchor::TrustAnchor
PKIXParameters::getTrustAnchors return immut Set::Set trust cas immut Set::Set TrustAnchor::TrustAnchor null
PKIXParameters::setTrustAnchors set Set::Set trust cas note Set::Set copi protect subsequ modif trustanchor Set::Set TrustAnchor::TrustAnchor
PKIXParameters::getInitialPolicies return immut Set::Set initi polici identifi oid string indic polici accept certif user purpos certif path process default return valu empti Set::Set interpret mean polici accept immut Set::Set initi polici oid String::String format empti Set::Set impli polici accept return null
PKIXParameters::setInitialPolicies set Set::Set initi polici identifi oid string indic polici accept certif user purpos certif path process default polici accept polici user want allow polici accept call call empti Set::Set null note Set::Set copi protect subsequ modif initialpolici Set::Set initi polici oid String::String format null
PKIXParameters::setCertStores set list CertStore::CertStore find certif crls null case CertStore::CertStore first CertStore::CertStore list prefer appear note List::List copi protect subsequ modif store List::List CertStore::CertStore null
PKIXParameters::getCertStores return immut List::List CertStore::CertStore find certif crls immut List::List CertStore::CertStore empti null
PKIXParameters::getDate return time valid certif path determin null current time note Date::Date return copi protect subsequ modif Date::Date null set
PKIXParameters::setDate set time valid certif path determin null current time note Date::Date suppli copi protect subsequ modif date Date::Date null current time
PKIXParameters::setCertPathCheckers set List::List addit certif path checker specifi List::List contain object pkixcertpathcheck ignor pkixcertpathcheck specifi implement addit check certif typic check process verifi privat extens contain certif pkixcertpathcheck instanti initi paramet execut check allow sophist applic extend pkix CertPathValidator::CertPathValidator CertPathBuilder::CertPathBuilder specifi pkixcertpathcheck call turn pkix CertPathValidator::CertPathValidator CertPathBuilder::CertPathBuilder certif process valid regardless addit pkixcertpathcheck set pkix CertPathValidator::CertPathValidator CertPathBuilder::CertPathBuilder perform requir pkix check certif rule revocationen flag set fals see note List::List suppli copi pkixcertpathcheck list clone protect subsequ modif checker List::List pkixcertpathcheck null case addit checker
PKIXParameters::getCertPathCheckers return List::List certif path checker return List::List immut pkixcertpathcheck List::List clone protect subsequ modif immut List::List pkixcertpathcheck empti null
Certificate::verify verifi certif sign use privat key correspond specifi key key PublicKey::PublicKey carri verif
Certificate::verify verifi certif sign use privat key correspond specifi key use signatur verif engin suppli specifi provid key PublicKey::PublicKey carri verif sigprovid name signatur provid
Certificate::verify verifi certif sign use privat key correspond specifi key use signatur verif engin suppli specifi provid note specifi Provider::Provider object regist provid list ad version platform standard edit order maintain backward compat exist servic provid abstract default throw UnsupportedOperationException::UnsupportedOperationException key PublicKey::PublicKey carri verif sigprovid signatur provid
Certificate::readResolve resolv Certificate::Certificate Object::Object resolv Certificate::Certificate Object::Object
CertificateEncodingException::CertificateEncodingException Certificate::Certificate encod Exception::Exception thrown error occur attempt encod certif
CertificateEncodingException::CertificateEncodingException construct CertificateEncodingException::CertificateEncodingException detail messag detail messag String::String describ particular
CertificateEncodingException::CertificateEncodingException construct CertificateEncodingException::CertificateEncodingException specifi detail messag detail messag String::String describ particular messag detail messag
TrustAnchor::TrustAnchor creat instanc TrustAnchor::TrustAnchor where trust ca specifi distinguish name key Attributes::Name constraint option paramet intend addit constraint valid 509 certif path name constraint specifi byte array byte array contain der encod form name constraint appear nameconstraint structur defin rfc 3280 509 asn notat structur suppli document note name constraint byte array suppli clone protect subsequ modif canam 500 distinguish name trust ca String::String format pubkey key trust ca nameconstraint byte array contain asn der encod nameconstraint extens check name constraint valu extens includ oid critic flag specifi null omit paramet
TrustAnchor::getCAName return name trust ca rfc 2253 String::String format 500 distinguish name trust ca null trust anchor specifi trust key name x500princip pair
PKIXCertPathBuilderResult::toString return printabl represent pkixcertpathbuilderresult String::String describ content pkixcertpathbuilderresult
X509CRLSelector::setIssuerNames note use instead specifi byte array form distinguish name use see set issuernam criterion issuer distinguish name x509crl match specifi distinguish name null issuer distinguish name allow caller specifi singl call complet set issuer name x509crls contain specifi valu replac previous valu issuernam criterion name paramet null Collection::Collection name name String::String byte array repres distinguish name asn der encod form respect null suppli valu argument issuernam check perform note name paramet contain duplic distinguish name remov Collection::Collection name return name specifi byte array contain singl der encod distinguish name defin 501 asn notat structur follow note deep copi perform Collection::Collection protect subsequ modif name Collection::Collection name null
X509CRLSelector::addIssuerName denigr use instead reli fail match crls loss encod rfc 2253 String::String form distinguish name add name issuernam criterion issuer distinguish name x509crl match specifi distinguish name allow caller add name set issuer name x509crls contain specifi name ad previous valu issuernam criterion specifi name duplic ignor name name rfc 2253 form
X509CRLSelector::addIssuerNameInternal privat add name String::String byte array issuernam criterion issuer distinguish name x509crl match specifi distinguish name name name string byte array form princip name x500princip form
X509CRLSelector::cloneAndCheckIssuerNames clone check argument form pass X509CRLSelector::setIssuerNames throw ioexcept argument malform name Collection::Collection name entri String::String byte array name string asn der encod form respect null accept valu deep copi specifi Collection::Collection
X509CRLSelector::cloneIssuerNames clone argument form pass X509CRLSelector::setIssuerNames throw RuntimeException::RuntimeException argument malform wrap X509CRLSelector::cloneAndCheckIssuerNames chang ioexcept RuntimeException::RuntimeException object clone check name Collection::Collection name entri String::String byte array name string asn der encod form respect null accept valu deep copi specifi Collection::Collection
X509CRLSelector::parseIssuerNames pars argument form pass X509CRLSelector::setIssuerNames return Collection::Collection issuerx500princip throw ioexcept argument malform name Collection::Collection name entri String::String byte array name string asn der encod form respect null accept valu HashSet::HashSet issuerx500princip
X509CRLSelector::setDateAndTime set dateandtim criterion specifi date equal valu thisupd compon x509crl earlier valu nextupd compon match x509crl contain nextupd compon null dateandtim check note Date::Date suppli clone protect subsequ modif dateandtim Date::Date match null
X509CRLSelector::getIssuerNames return copi issuernam criterion issuer distinguish name x509crl match specifi distinguish name valu return null issuer distinguish name valu return null Collection::Collection name name String::String byte array repres distinguish name rfc 2253 asn der encod form respect note Collection::Collection return contain duplic name name specifi byte array contain singl der encod distinguish name defin 501 asn notat structur given document note deep copi perform Collection::Collection protect subsequ modif Collection::Collection name null
X509CRLSelector::getDateAndTime return dateandtim criterion specifi date equal valu thisupd compon x509crl earlier valu nextupd compon match x509crl contain nextupd compon null dateandtim check note Date::Date return clone protect subsequ modif Date::Date match null
X509CRLSelector::toString return printabl represent x509crlselector String::String describ content x509crlselector
CRLException::CRLException crl Certificate::Certificate revoc List::List Exception::Exception
CRLException::CRLException construct crlexcept detail messag detail messag String::String describ particular
CRLException::CRLException construct crlexcept specifi detail messag detail messag String::String describ particular messag detail messag
InvalidAlgorithmParameterException::InvalidAlgorithmParameterException construct InvalidAlgorithmParameterException::InvalidAlgorithmParameterException detail messag detail messag String::String describ particular
InvalidAlgorithmParameterException::InvalidAlgorithmParameterException construct InvalidAlgorithmParameterException::InvalidAlgorithmParameterException specifi detail messag detail messag String::String describ particular msg detail messag
ProviderException::ProviderException runtim Provider::Provider misconfigur error unrecover intern error subclass provid throw provid specif runtim error
ProviderException::ProviderException construct ProviderException::ProviderException detail messag detail messag String::String describ particular
ProviderException::ProviderException construct ProviderException::ProviderException specifi detail messag detail messag String::String describ particular detail messag
AuthProvider::setCallbackHandler Set::Set callbackhandl provid use handler pass login provid use handler invok login behalf caller case handler set provid queri auth login defaultcallbackhandl secur properti fulli qualifi name default handler implement secur properti set provid assum altern mean obtain authent handler callbackhandl obtain authent null
MessageDigest::MessageDigest MessageDigest::MessageDigest provid applic function messag digest algorithm sha sha 256 messag digest secur hash function take arbitrari size data output fix length hash valu MessageDigest::MessageDigest object start initi data process use point call reset digest data updat updat call complet hash comput digest call given number updat digest call MessageDigest::MessageDigest object reset initi state implement free implement Cloneable::Cloneable interfac client applic test cloneabl attempt clone catch clonenotsupportedexcept note given implement cloneabl comput intermedi digest instanti instanc number digest known advanc note abstract extend MessageDigestSpi::MessageDigestSpi histor reason develop take notic defin MessageDigest::MessageDigest superclass intend cryptograph servic provid wish suppli implement messag digest algorithm implement platform requir support standard MessageDigest::MessageDigest algorithm md5 sha sha 256 algorithm describ cryptographi architectur standard algorithm Attributes::Name document consult releas document implement see algorithm support
MessageDigest::MessageDigest creat messag digest specifi algorithm name algorithm standard name digest algorithm see MessageDigest::MessageDigest section standard algorithm name
MessageDigest::getInstance return MessageDigest::MessageDigest object implement specifi digest algorithm travers list regist secur provid start prefer Provider::Provider MessageDigest::MessageDigest object encapsul MessageDigestSpi::MessageDigestSpi implement first Provider::Provider support specifi algorithm return note list regist provid retriev algorithm name algorithm request see MessageDigest::MessageDigest section standard algorithm name messag digest object implement specifi algorithm
MessageDigest::getInstance return MessageDigest::MessageDigest object implement specifi digest algorithm MessageDigest::MessageDigest object encapsul MessageDigestSpi::MessageDigestSpi implement specifi provid return specifi provid regist secur provid list note list regist provid retriev algorithm name algorithm request see MessageDigest::MessageDigest section standard algorithm name provid name provid MessageDigest::MessageDigest object implement specifi algorithm
MessageDigest::getInstance return MessageDigest::MessageDigest object implement specifi digest algorithm MessageDigest::MessageDigest object encapsul MessageDigestSpi::MessageDigestSpi implement specifi Provider::Provider object return note specifi Provider::Provider object regist provid list algorithm name algorithm request see MessageDigest::MessageDigest section standard algorithm name provid provid MessageDigest::MessageDigest object implement specifi algorithm
MessageDigest::update updat digest use specifi byte input byte updat digest
MessageDigest::update updat digest use specifi array byte start specifi offset input array byte offset offset start array byte len number byte use start offset
MessageDigest::update updat digest use specifi array byte input array byte
MessageDigest::update updat digest use specifi bytebuff digest updat use input remain byte start input posit return buffer posit equal limit limit chang input bytebuff
MessageDigest::digest complet hash comput perform final oper pad digest reset call made array byte result hash valu
MessageDigest::digest complet hash comput perform final oper pad digest reset call made buf output buffer comput digest offset offset output buffer begin store digest len number byte buf allot digest number byte place buf
MessageDigest::digest perform final updat digest use specifi array byte complet digest comput first call pass input array updat call input input updat digest complet array byte result hash valu
MessageDigest::reset reset digest further use
MessageDigest::getAlgorithm return string identifi algorithm independ implement detail name standard Security::Security name sha md5 see MessageDigest::MessageDigest section standard algorithm name name algorithm
KeyStoreException::KeyStoreException construct KeyStoreException::KeyStoreException detail messag detail messag String::String describ particular
KeyStoreException::KeyStoreException construct KeyStoreException::KeyStoreException specifi detail messag detail messag String::String describ particular msg detail messag
AlgorithmParameterGeneratorSpi::AlgorithmParameterGeneratorSpi defin servic Provider::Provider interfac spi AlgorithmParameterGenerator::AlgorithmParameterGenerator generat set paramet algorithm abstract implement cryptograph servic provid wish suppli implement paramet generat particular algorithm case client explicit initi AlgorithmParameterGenerator::AlgorithmParameterGenerator call engineinit provid suppli document default initi exampl sun provid use default modulus prime size 1024 bit generat dsa paramet
ProtectionDomain::ProtectionDomain creat ProtectionDomain::ProtectionDomain qualifi given CodeSource::CodeSource Permissions::Permissions ClassLoader::ClassLoader array princip permiss object null setreadon call pass Permissions::Permissions object permiss grant domain dynam includ static permiss pass constructor permiss grant domain current Policy::Policy time permiss check constructor typic deleg Policy::Policy activ associ permiss grant domain constructor afford Policy::Policy provid opportun augment suppli PermissionCollection::PermissionCollection reflect polici chang codesourc CodeSource::CodeSource associ domain permiss permiss grant domain classload ClassLoader::ClassLoader associ domain princip array princip associ domain content array copi protect subsequ modif
ProtectionDomain::getClassLoader return ClassLoader::ClassLoader domain ClassLoader::ClassLoader domain null
ProtectionDomain::toString convert ProtectionDomain::ProtectionDomain String::String
Policy::getInstance return Policy::Policy object specifi type travers list regist secur provid start prefer Provider::Provider Policy::Policy object encapsul PolicySpi::PolicySpi implement first Provider::Provider support specifi type return note list regist provid retriev type specifi Policy::Policy type see Policy::Policy section list standard Policy::Policy type param paramet Policy::Policy null Policy::Policy object
Policy::getInstance return Policy::Policy object specifi type Policy::Policy object encapsul PolicySpi::PolicySpi implement specifi Provider::Provider object return note specifi Provider::Provider object regist provid list type specifi Policy::Policy type see Policy::Policy section list standard Policy::Policy type param paramet Policy::Policy null provid Provider::Provider Policy::Policy object
Policy::getProvider return Provider::Provider Policy::Policy Policy::Policy instanc Provider::Provider obtain call polici getinst return null Provider::Provider Policy::Policy null
UnresolvedPermissionCollection::getUnresolvedPermissions get unresolv permiss type return List::List contain
AlgorithmParameters::getInstance return paramet object specifi algorithm travers list regist secur provid start prefer Provider::Provider AlgorithmParameters::AlgorithmParameters object encapsul AlgorithmParametersSpi::AlgorithmParametersSpi implement first Provider::Provider support specifi algorithm return note list regist provid retriev return paramet object initi call init use appropri paramet specif paramet encod algorithm name algorithm request see AlgorithmParameters::AlgorithmParameters section standard algorithm name paramet object
AlgorithmParameters::getInstance return paramet object specifi algorithm AlgorithmParameters::AlgorithmParameters object encapsul AlgorithmParametersSpi::AlgorithmParametersSpi implement specifi Provider::Provider object return note specifi Provider::Provider object regist provid list return paramet object initi call init use appropri paramet specif paramet encod algorithm name algorithm request see AlgorithmParameters::AlgorithmParameters section standard algorithm name provid name provid paramet object
AccessControlContext::AccessControlContext Constructor::Constructor javasecurityaccess dointersectionprivileg
DomainCombiner::DomainCombiner DomainCombiner::DomainCombiner provid mean dynam updat protectiondomain associ current AccessControlContext::AccessControlContext DomainCombiner::DomainCombiner pass paramet appropri constructor AccessControlContext::AccessControlContext newli construct context pass accesscontrol doprivileg context bind context associ DomainCombiner::DomainCombiner current execut Thread::Thread subsequ call accesscontrol getcontext accesscontrol checkpermiss caus domaincombin combin get invok combin take argument first argument repres array protectiondomain current execut Thread::Thread recent call accesscontrol doprivileg call AccessController::doPrivileged made first argument contain protectiondomain current execut Thread::Thread argument repres array inherit protectiondomain null protectiondomain inherit parent Thread::Thread privileg context call AccessController::doPrivileged made argument contain protectiondomain inherit parent Thread::Thread call AccessController::doPrivileged made recent call doprivileg action context argument contain protectiondomain privileg context recent call doprivileg action privileg context argument null combin investig input array protectiondomain return singl array contain updat protectiondomain simplest case combin merg stack complex case combin return modifi stack protectiondomain modif ad protectiondomain remov protectiondomain simpli updat exist protectiondomain order optim protectiondomain permit typic combin base updat encapsul DomainCombiner::DomainCombiner accesscontrol getcontext receiv combin stack protectiondomain DomainCombiner::DomainCombiner return AccessControlContext::AccessControlContext combin protectiondomain DomainCombiner::DomainCombiner
DomainCombiner::combine modifi updat protectiondomain protectiondomain ad remov given protectiondomain protectiondomain order individu protectiondomain modifi set Permissions::Permissions exampl currentdomain protectiondomain associ current execut Thread::Thread recent privileg ProtectionDomain::ProtectionDomain protectiondomain list order execut recent execut ProtectionDomain::ProtectionDomain resid begin array paramet null current execut Thread::Thread associ protectiondomain assigneddomain array inherit protectiondomain protectiondomain inherit parent Thread::Thread privileg AccessControlContext::AccessControlContext paramet null inherit protectiondomain array consist updat protectiondomain null
KeyPairGeneratorSpi::KeyPairGeneratorSpi defin servic Provider::Provider interfac spi KeyPairGenerator::KeyPairGenerator generat pair privat key abstract implement cryptograph servic provid wish suppli implement key pair generat particular algorithm case client explicit initi KeyPairGenerator::KeyPairGenerator call initi provid suppli document default initi exampl sun provid use default modulus size keysiz 1024 bit
KeyPairGeneratorSpi::generateKeyPair generat key pair initi call use KeyPairGenerator::KeyPairGenerator interfac algorithm specif default generat key pair time call newli generat KeyPair::KeyPair
AlgorithmParametersSpi::AlgorithmParametersSpi defin servic Provider::Provider interfac spi AlgorithmParameters::AlgorithmParameters manag algorithm paramet abstract implement cryptograph servic provid wish suppli paramet manag particular algorithm
SecureClassLoader::SecureClassLoader extend ClassLoader::ClassLoader addit support defin associ sourc permiss retriev system polici default
SecureClassLoader::SecureClassLoader creat SecureClassLoader::SecureClassLoader use specifi parent loader deleg secur manag first call secur manag SecurityManager::checkCreateClassLoader ensur creation loader allow parent parent ClassLoader::ClassLoader
SecureClassLoader::defineClass convert array byte instanc Class::Class option CodeSource::CodeSource resolv non null CodeSource::CodeSource suppli ProtectionDomain::ProtectionDomain construct associ defin name expect name null known use separ trail suffix byte make data byte posit len format valid file defin trade virtual machin specif start offset data len length data cs associ CodeSource::CodeSource null Class::Class object creat data option CodeSource::CodeSource
SecureClassLoader::defineClass convert instanc Class::Class option CodeSource::CodeSource resolv non null CodeSource::CodeSource suppli ProtectionDomain::ProtectionDomain construct associ defin name expect name null known use separ trail suffix byte make data byte posit posit posit limit format valid file defin trade virtual machin specif cs associ CodeSource::CodeSource null Class::Class object creat data option CodeSource::CodeSource
DSAKey::DSAKey interfac dsa privat key dsa digit Signature::Signature algorithm defin nist fip 186
DSAKeyPairGenerator::DSAKeyPairGenerator interfac object capabl generat dsa key pair initi call number time initi call dsakeypairgener default generat 1024 bit key use precomput paramet instanc SecureRandom::SecureRandom random bit sourc user wish indic dsa specif paramet generat key pair suitabl use dsa algorithm typic get key pair generat dsa algorithm call KeyPairGenerator::KeyPairGenerator getinst dsa argument initi generat cast result dsakeypairgener call initi dsakeypairgener interfac generat key pair call generatekeypair KeyPairGenerator::KeyPairGenerator note necessari algorithm specif initi dsa key pair generat necessari call initi interfac algorithm independ initi use initi KeyPairGenerator::KeyPairGenerator interfac accept default algorithm specif paramet note earlier implement interfac support larger size dsa paramet 2048 3072 bit
DSAKeyPairGenerator::initialize initi key pair generat use dsa famili paramet option SecureRandom::SecureRandom bit sourc SecureRandom::SecureRandom bit sourc suppli null default SecureRandom::SecureRandom instanc param paramet use generat key random random bit sourc use generat key bit null
DSAKeyPairGenerator::initialize initi key pair generat given modulus length instead paramet option SecureRandom::SecureRandom bit sourc SecureRandom::SecureRandom bit sourc suppli null default SecureRandom::SecureRandom instanc genparam generat paramet fals use precomput paramet modulus length request precomput paramet modulus length thrown guarante default paramet modulus length 512 1024 bit modlen modulus length bit valid valu multipl 64 512 1024 inclus 2048 3072 random random bit sourc use generat key bit null genparam generat paramet modulus length request
DSAPublicKey::DSAPublicKey interfac dsa key dsa digit Signature::Signature algorithm defin nist fip 186
DSAParams::DSAParams interfac dsa specif set key paramet defin dsa key famili dsa digit Signature::Signature algorithm defin nist fip 186
DSAPrivateKey::DSAPrivateKey standard interfac dsa privat key dsa digit Signature::Signature algorithm defin nist fip 186
AlgorithmParameterGenerator::getInstance return AlgorithmParameterGenerator::AlgorithmParameterGenerator object generat set paramet specifi algorithm travers list regist secur provid start prefer Provider::Provider AlgorithmParameterGenerator::AlgorithmParameterGenerator object encapsul AlgorithmParameterGeneratorSpi::AlgorithmParameterGeneratorSpi implement first Provider::Provider support specifi algorithm return note list regist provid retriev algorithm name algorithm paramet generat associ see AlgorithmParameterGenerator::AlgorithmParameterGenerator section standard algorithm name AlgorithmParameterGenerator::AlgorithmParameterGenerator object
AlgorithmParameterGenerator::getInstance return AlgorithmParameterGenerator::AlgorithmParameterGenerator object generat set paramet specifi algorithm AlgorithmParameterGenerator::AlgorithmParameterGenerator object encapsul AlgorithmParameterGeneratorSpi::AlgorithmParameterGeneratorSpi implement specifi provid return specifi provid regist secur provid list note list regist provid retriev algorithm name algorithm paramet generat associ see AlgorithmParameterGenerator::AlgorithmParameterGenerator section standard algorithm name provid string name Provider::Provider AlgorithmParameterGenerator::AlgorithmParameterGenerator object
AlgorithmParameterGenerator::getInstance return AlgorithmParameterGenerator::AlgorithmParameterGenerator object generat set paramet specifi algorithm AlgorithmParameterGenerator::AlgorithmParameterGenerator object encapsul AlgorithmParameterGeneratorSpi::AlgorithmParameterGeneratorSpi implement specifi Provider::Provider object return note specifi Provider::Provider object regist provid list algorithm string name algorithm paramet generat associ see AlgorithmParameterGenerator::AlgorithmParameterGenerator section standard algorithm name provid Provider::Provider object AlgorithmParameterGenerator::AlgorithmParameterGenerator object
AlgorithmParameterGenerator::init initi paramet generat size creat paramet SecureRandom::SecureRandom implement highest prioriti instal provid sourc random instal provid suppli implement SecureRandom::SecureRandom system sourc random size size number bit
AlgorithmParameterGenerator::init initi paramet generat set algorithm specif paramet generat valu generat paramet SecureRandom::SecureRandom implement highest prioriti instal provid sourc random instal provid suppli implement SecureRandom::SecureRandom system sourc random genparamspec set algorithm specif paramet generat valu
MessageDigestSpi::MessageDigestSpi defin servic Provider::Provider interfac spi MessageDigest::MessageDigest provid function messag digest algorithm md5 sha messag digest secur hash function take arbitrari size data output fix length hash valu abstract implement cryptograph servic provid wish suppli implement particular messag digest algorithm implement free implement Cloneable::Cloneable interfac
KeyPairGenerator::KeyPairGenerator KeyPairGenerator::KeyPairGenerator generat pair privat key Key::Key pair generat construct use getinst factori static return instanc given Key::Key pair generat particular algorithm creat privat key pair algorithm associ algorithm specif paramet generat key generat key pair algorithm independ manner algorithm specif manner differ initi object algorithm independ initi key pair generat share concept keysiz sourc random keysiz interpret differ algorithm case dsa algorithm keysiz correspond length modulus KeyPairGenerator::KeyPairGenerator take univers share type argument take keysiz argument use SecureRandom::SecureRandom implement highest prioriti instal provid sourc random instal provid suppli implement SecureRandom::SecureRandom system sourc random paramet specifi call algorithm independ initi provid algorithm specif paramet associ key algorithm dsa algorithm keysiz modulus size 512 768 1024 sun provid use set precomput valu paramet modulus size valu sun provid creat set paramet provid precomput paramet set modulus size mention list precomput paramet instead creat paramet set algorithm specif initi situat where set algorithm specif paramet exist call communiti paramet dsa AlgorithmParameterSpec::AlgorithmParameterSpec argument SecureRandom::SecureRandom argument use SecureRandom::SecureRandom implement highest prioriti instal provid sourc random instal provid suppli implement SecureRandom::SecureRandom system sourc random case client explicit initi KeyPairGenerator::KeyPairGenerator call initi provid suppli document default initi exampl sun provid use default modulus size keysiz 1024 bit note abstract extend KeyPairGeneratorSpi::KeyPairGeneratorSpi histor reason develop take notic defin KeyPairGenerator::KeyPairGenerator superclass intend cryptograph servic provid wish suppli implement key pair generat implement platform requir support standard KeyPairGenerator::KeyPairGenerator algorithm keysiz parenthes diffiehellman 1024 dsa 1024 rsa 1024 2048 algorithm describ cryptographi architectur standard algorithm Attributes::Name document consult releas document implement see algorithm support
KeyPairGenerator::KeyPairGenerator creat KeyPairGenerator::KeyPairGenerator object specifi algorithm algorithm standard string name algorithm see KeyPairGenerator::KeyPairGenerator section standard algorithm name
KeyPairGenerator::getAlgorithm return standard name algorithm key pair generat see KeyPairGenerator::KeyPairGenerator section standard algorithm name standard string name algorithm
KeyPairGenerator::getInstance return KeyPairGenerator::KeyPairGenerator object generat privat key pair specifi algorithm travers list regist secur provid start prefer Provider::Provider KeyPairGenerator::KeyPairGenerator object encapsul KeyPairGeneratorSpi::KeyPairGeneratorSpi implement first Provider::Provider support specifi algorithm return note list regist provid retriev algorithm standard string name algorithm see KeyPairGenerator::KeyPairGenerator section standard algorithm name KeyPairGenerator::KeyPairGenerator object
KeyPairGenerator::getInstance return KeyPairGenerator::KeyPairGenerator object generat privat key pair specifi algorithm KeyPairGenerator::KeyPairGenerator object encapsul KeyPairGeneratorSpi::KeyPairGeneratorSpi implement specifi provid return specifi provid regist secur provid list note list regist provid retriev algorithm standard string name algorithm see KeyPairGenerator::KeyPairGenerator section standard algorithm name provid string name provid KeyPairGenerator::KeyPairGenerator object
KeyPairGenerator::getInstance return KeyPairGenerator::KeyPairGenerator object generat privat key pair specifi algorithm KeyPairGenerator::KeyPairGenerator object encapsul KeyPairGeneratorSpi::KeyPairGeneratorSpi implement specifi Provider::Provider object return note specifi Provider::Provider object regist provid list algorithm standard string name algorithm see KeyPairGenerator::KeyPairGenerator section standard algorithm name provid provid KeyPairGenerator::KeyPairGenerator object
KeyPairGenerator::initialize initi key pair generat keysiz use default paramet set SecureRandom::SecureRandom implement highest prioriti instal provid sourc random instal provid suppli implement SecureRandom::SecureRandom system sourc random keysiz keysiz algorithm specif metric modulus length specifi number bit
KeyPairGenerator::initialize initi key pair generat keysiz given sourc random default paramet set keysiz keysiz algorithm specif metric modulus length specifi number bit random sourc random
KeyPairGenerator::initialize initi key pair generat use specifi paramet set SecureRandom::SecureRandom implement highest prioriti instal provid sourc random instal provid suppli implement SecureRandom::SecureRandom system sourc random concret ad previous defin abstract call KeyPairGeneratorSpi::KeyPairGeneratorSpi pass param sourc random obtain highest prioriti instal provid system instal provid suppli initi throw UnsupportedOperationException::UnsupportedOperationException overridden provid param paramet set generat key
KeyPairGenerator::initialize initi key pair generat given paramet set sourc random concret ad previous defin abstract call KeyPairGeneratorSpi::KeyPairGeneratorSpi pass param random initi throw UnsupportedOperationException::UnsupportedOperationException overridden provid param paramet set generat key random sourc random
KeyPairGenerator::genKeyPair generat key pair KeyPairGenerator::KeyPairGenerator initi explicit provid specif default size algorithm specif valu generat key generat key pair time call function equival generat key pair
KeyPairGenerator::generateKeyPair generat key pair KeyPairGenerator::KeyPairGenerator initi explicit provid specif default size algorithm specif valu generat key generat key pair time call function equival generat key pair
KeyStore::KeyStore repres storag facil cryptograph key certif KeyStore::KeyStore manag type entri type entri implement keystor entri interfac basic keystor entri implement provid keystor privatekeyentri type entri hold cryptograph PrivateKey::PrivateKey option store protect format prevent unauthor access accompani certif chain correspond key privat key certif chain given entiti self authent applic authent includ softwar distribut organ sign jar file part releas licens softwar keystor secretkeyentri type entri hold cryptograph secretkey option store protect format prevent unauthor access keystor trustedcertificateentri type entri contain singl key Certificate::Certificate belong parti call trust certif keystor owner trust key certif inde belong ident identifi subject owner certif type entri authent parti entri keystor identifi alia string case privat key associ certif chain string distinguish entiti authent exampl entiti authent use certif author use key algorithm alias case sensit implement depend order avoid recommend use alias KeyStore::KeyStore differ case keystor persist mechan keystor persist specifi allow use varieti techniqu protect sensit privat secret key smart card integr cryptograph engin safekeyp option simpler mechan file varieti format typic request KeyStore::KeyStore object includ reli default type specif keystor type reli default type system return keystor implement default type provid specif keystor type system return prefer implement specifi keystor type avail environ keystor access creat empti keystor use load pass null InputStream::InputStream argument keystor load read exist entri keystor write entri keystor note password load keystor protect privat key entri protect secret key entri store keystor shown sampl password protect paramet implement platform requir support standard KeyStore::KeyStore type pkcs12 type describ cryptographi architectur standard algorithm Attributes::Name document consult releas document implement see type support
KeyStore::getAttributes retriev attribut associ entri default implement return empti Set::Set unmodifi Set::Set attribut possibl empti
KeyStore::PrivateKeyEntry construct KeyStore::PrivateKeyEntry PrivateKey::PrivateKey correspond certif chain specifi chain clone store KeyStore::PrivateKeyEntry object privatekey PrivateKey::PrivateKey chain array Certificate::Certificate repres certif chain chain order contain Certificate::Certificate index correspond privat key
KeyStore::PrivateKeyEntry construct KeyStore::PrivateKeyEntry PrivateKey::PrivateKey correspond certif chain associ entri attribut specifi chain attribut clone store KeyStore::PrivateKeyEntry object privatekey PrivateKey::PrivateKey chain array Certificate::Certificate repres certif chain chain order contain Certificate::Certificate index correspond privat key attribut attribut
KeyStore::getPrivateKey get PrivateKey::PrivateKey entri PrivateKey::PrivateKey entri
KeyStore::getAttributes retriev attribut associ entri unmodifi Set::Set attribut possibl empti
KeyStore::getAttributes retriev attribut associ entri unmodifi Set::Set attribut possibl empti
KeyStore::getAttributes retriev attribut associ entri unmodifi Set::Set attribut possibl empti
KeyStore::getInstance return keystor object specifi type travers list regist secur provid start prefer Provider::Provider KeyStore::KeyStore object encapsul KeyStoreSpi::KeyStoreSpi implement first Provider::Provider support specifi type return note list regist provid retriev type type keystor see KeyStore::KeyStore section standard keystor type keystor object specifi type
KeyStore::getInstance return keystor object specifi type KeyStore::KeyStore object encapsul KeyStoreSpi::KeyStoreSpi implement specifi Provider::Provider object return note specifi Provider::Provider object regist provid list type type keystor see KeyStore::KeyStore section standard keystor type provid provid keystor object specifi type
KeyStore::newInstance return Locale::Builder object first call return builder creat KeyStore::KeyStore type type call inputstream argument construct file protect KeyStore::PasswordProtection password obtain call getpassword protect KeyStore::CallbackHandlerProtection password obtain invok callbackhandl subsequ call return object initi call initi call fail KeyStoreException::KeyStoreException subsequ call throw KeyStoreException::KeyStoreException KeyStore::KeyStore instanti provid non null instal provid search call return object encapsul password invok load note execut invok Locale::Builder object type type KeyStore::KeyStore construct provid provid KeyStore::KeyStore instanti null file File::File contain KeyStore::KeyStore data protect protectionparamet secur KeyStore::KeyStore data
InvalidParameterException::InvalidParameterException construct InvalidParameterException::InvalidParameterException detail messag detail messag String::String describ particular
InvalidParameterException::InvalidParameterException construct InvalidParameterException::InvalidParameterException specifi detail messag detail messag String::String describ particular msg detail messag
Rectangle::Rectangle Rectangle::Rectangle specifi area coordin space enclos Rectangle::Rectangle object upper point coordin space width height Rectangle::Rectangle object width height field constructor creat Rectangle::Rectangle modifi prevent set negat valu width height affect locat Rectangle::Rectangle oper locat regardless negat zero dimens axi note Rectangle::Rectangle construct default argument constructor dimens 0x0 therefor empti Rectangle::Rectangle locat contribut locat union add oper attempt accumul bound set point therefor initi construct Rectangle::Rectangle specif negat width height use first point set construct Rectangle::Rectangle exampl know point array contain point use 32 bit integ store locat dimens frequent oper produc result exceed rang 32 bit integ calcul result avoid 32 bit overflow intermedi result choos represent store final result 32 bit field hold locat dimens locat result store field clip result nearest 32 bit valu valu store dimens field chosen 32 bit valu encompass largest part result general mean dimens clip independ rang 32 bit integ locat move store pair 32 bit field dimens adjust relat represent locat result negat dimens therefor non exist axe store dimens negat number axe result locat repres rang 32 bit integ zero dimens axe store dimens zero axe
Rectangle::x coordin upper corner Rectangle::Rectangle
Rectangle::y coordin upper corner Rectangle::Rectangle
Rectangle::width width Rectangle::Rectangle
Rectangle::height height Rectangle::Rectangle
Rectangle::Rectangle construct Rectangle::Rectangle upper corner nbsp coordin space width height zero
Rectangle::Rectangle construct Rectangle::Rectangle initi match valu specifi Rectangle::Rectangle Rectangle::Rectangle copi initi valu newli construct Rectangle::Rectangle
Rectangle::Rectangle construct Rectangle::Rectangle upper corner specifi width height specifi argument name specifi coordin specifi coordin width width Rectangle::Rectangle height height Rectangle::Rectangle
Rectangle::Rectangle construct Rectangle::Rectangle upper corner nbsp coordin space width height specifi argument name width width Rectangle::Rectangle height height Rectangle::Rectangle
Rectangle::Rectangle construct Rectangle::Rectangle upper corner specifi argument width height specifi argument Point::Point upper corner Rectangle::Rectangle Dimension::Dimension repres width height Rectangle::Rectangle
Rectangle::Rectangle construct Rectangle::Rectangle upper corner specifi Point::Point width height zero Point::Point top corner Rectangle::Rectangle
Rectangle::Rectangle construct Rectangle::Rectangle top corner nbsp width height specifi Dimension::Dimension argument Dimension::Dimension specifi width height
Rectangle::getX return coordin bound Rectangle::Rectangle doubl precis coordin bound Rectangle::Rectangle
Rectangle::getY return coordin bound Rectangle::Rectangle doubl precis coordin bound Rectangle::Rectangle
Rectangle::getWidth return width bound Rectangle::Rectangle doubl precis width bound Rectangle::Rectangle
Rectangle::getHeight return height bound Rectangle::Rectangle doubl precis height bound Rectangle::Rectangle
Rectangle::getBounds get bound Rectangle::Rectangle Rectangle::Rectangle includ complet parallel getbound Rectangle::Rectangle equal bound Rectangle::Rectangle Rectangle::Rectangle
Rectangle::setBounds set bound Rectangle::Rectangle Rectangle::Rectangle match specifi Rectangle::Rectangle includ complet parallel setbound compon specifi Rectangle::Rectangle
Rectangle::setBounds set bound Rectangle::Rectangle Rectangle::Rectangle specifi width height includ complet parallel setbound compon coordin upper corner Rectangle::Rectangle coordin upper corner Rectangle::Rectangle width width Rectangle::Rectangle height height Rectangle::Rectangle
Rectangle::setRect set bound Rectangle::Rectangle integ bound encompass specifi width height paramet specifi Rectangle::Rectangle exceed maximum rang integ result represent specifi Rectangle::Rectangle intersect maximum integ bound coordin upper corner specifi rectangl coordin upper corner specifi rectangl width width specifi rectangl height height specifi rectangl
Rectangle::reshape set bound Rectangle::Rectangle Rectangle::Rectangle specifi width height coordin upper corner Rectangle::Rectangle coordin upper corner Rectangle::Rectangle width width Rectangle::Rectangle height height Rectangle::Rectangle
Rectangle::getLocation return locat Rectangle::Rectangle includ complet parallel getloc compon Point::Point upper corner Rectangle::Rectangle
Rectangle::setLocation move Rectangle::Rectangle specifi locat includ complet parallel setloc compon Point::Point specifi locat Rectangle::Rectangle
Rectangle::setLocation move Rectangle::Rectangle specifi locat includ complet parallel setloc compon coordin locat coordin locat
Rectangle::move move Rectangle::Rectangle specifi locat coordin locat coordin locat
Rectangle::translate translat Rectangle::Rectangle indic distanc coordin axi downward coordin axi dx distanc move Rectangle::Rectangle axi dy distanc move Rectangle::Rectangle axi
Rectangle::getSize get size Rectangle::Rectangle repres return Dimension::Dimension includ complet parallel getsiz compon Dimension::Dimension repres size Rectangle::Rectangle
Rectangle::setSize set size Rectangle::Rectangle match specifi Dimension::Dimension includ complet parallel setsiz compon size Dimension::Dimension object
Rectangle::setSize set size Rectangle::Rectangle specifi width height includ complet parallel setsiz compon width width Rectangle::Rectangle height height Rectangle::Rectangle
Rectangle::resize set size Rectangle::Rectangle specifi width height width width Rectangle::Rectangle height height Rectangle::Rectangle
Rectangle::contains check Rectangle::Rectangle contain specifi Point::Point Point::Point test specifi Point::Point Rectangle::Rectangle fals
Rectangle::contains check Rectangle::Rectangle contain point specifi locat specifi coordin specifi coordin point Rectangle::Rectangle fals
Rectangle::contains check Rectangle::Rectangle entir contain specifi Rectangle::Rectangle specifi Rectangle::Rectangle Rectangle::Rectangle contain entir Rectangle::Rectangle fals
Rectangle::contains check Rectangle::Rectangle entir contain Rectangle::Rectangle specifi locat specifi dimens specifi coordin specifi coordin width Rectangle::Rectangle height Rectangle::Rectangle Rectangle::Rectangle specifi entir enclos Rectangle::Rectangle fals
Rectangle::inside check Rectangle::Rectangle contain point specifi locat specifi coordin specifi coordin point Rectangle::Rectangle fals
Rectangle::intersects determin Rectangle::Rectangle specifi Rectangle::Rectangle intersect rectangl intersect intersect nonempti specifi Rectangle::Rectangle specifi Rectangle::Rectangle Rectangle::Rectangle intersect fals
Rectangle::intersection comput intersect Rectangle::Rectangle specifi Rectangle::Rectangle return Rectangle::Rectangle repres intersect rectangl rectangl intersect result empti rectangl specifi Rectangle::Rectangle largest Rectangle::Rectangle contain specifi Rectangle::Rectangle Rectangle::Rectangle rectangl intersect empti rectangl
Rectangle::union comput union Rectangle::Rectangle specifi Rectangle::Rectangle return Rectangle::Rectangle repres union rectangl Rectangle::Rectangle dimens zero rule rectangl appli dimens zero result copi Rectangle::Rectangle dimens zero result dimens zero result Rectangle::Rectangle dimens express int result dimens integ max valu dimens specifi Rectangle::Rectangle smallest Rectangle::Rectangle contain specifi Rectangle::Rectangle Rectangle::Rectangle
Rectangle::add add point specifi integ argument newx newi bound Rectangle::Rectangle Rectangle::Rectangle dimens zero rule rectangl appli case bound Rectangle::Rectangle locat equal specifi coordin width height equal zero ad point call contain ad point argument necessarili return contain return point bottom edg Rectangle::Rectangle therefor ad point fall bottom edg enlarg Rectangle::Rectangle contain return fals point specifi point contain Rectangle::Rectangle 1x1 rectangl ad instead newx coordin point newi coordin point
Rectangle::add add specifi Point::Point bound Rectangle::Rectangle Rectangle::Rectangle dimens zero rule rectangl appli case bound Rectangle::Rectangle locat equal coordin specifi Point::Point width height equal zero ad Point::Point call contain ad Point::Point argument necessarili return contain return point bottom edg Rectangle::Rectangle therefor ad Point::Point fall bottom edg enlarg Rectangle::Rectangle contain return fals Point::Point specifi point contain Rectangle::Rectangle 1x1 rectangl ad instead pt Point::Point add Rectangle::Rectangle
Rectangle::add add Rectangle::Rectangle Rectangle::Rectangle result Rectangle::Rectangle union rectangl Rectangle::Rectangle dimens result dimens Rectangle::Rectangle Rectangle::Rectangle dimens result dimens Rectangle::Rectangle dimens equal result axe dimens equival result obtain ad correspond origin coordin result rectangl axi similar oper contribut further dimens result Rectangle::Rectangle dimens express int result dimens integ max valu dimens specifi Rectangle::Rectangle
Rectangle::grow resiz Rectangle::Rectangle horizont vertic modifi Rectangle::Rectangle unit larger side unit larger top bottom Rectangle::Rectangle upper corner width width 2h height height 2v negat valu suppli size Rectangle::Rectangle decreas accord grow check integ overflow underflow check result valu width height grow negat non negat shrink non negat negat horizont expans vertic expans
Rectangle::equals check rectangl equal result argument null Rectangle::Rectangle object upper corner width height Rectangle::Rectangle obj Object::Object compar Rectangle::Rectangle object equal fals
Rectangle::toString return String::String repres Rectangle::Rectangle valu String::String repres Rectangle::Rectangle object coordin size valu
Font::Font Font::Font repres font render text visibl font provid map sequenc charact sequenc glyph render sequenc glyph Graphics::Graphics compon object charact glyph charact symbol repres item letter digit punctuat abstract exampl latin letter charact glyph shape render charact sequenc charact write system latin typic glyph repres charact general charact glyph correspond exampl charact aacut latin letter acut repres glyph acut hand charact string fi repres singl glyph fi ligatur complex write system arab south south east asian write system relationship charact glyph complic involv context depend select glyph glyph reorder font encapsul collect glyph render select set charact tabl map sequenc charact correspond sequenc glyph physic logic font platform distinguish kind font physic font logic font physic font actual font librari contain glyph data tabl map charact sequenc glyph sequenc use font technolog truetyp postscript Window::Type implement platform support truetyp font support font technolog implement depend physic font use name helvetica palatino honmincho number font name typic physic font support limit set write system exampl latin charact japanes basic latin set avail physic font vari configur applic requir specif font bundl instanti use logic font font famili defin platform support runtim environ serif sansserif monospac ModalExclusionType::Dialog dialoginput logic font actual font librari instead logic font name map physic font runtim environ map implement local depend look metric vari typic logic font name map physic font order cover rang charact peer awt compon use logic font discuss relat advantag disadvantag use physic logic font see document font face name Font::Font face heavi medium obliqu gothic regular face similar typograph design name get Font::Font object logic font name simpli name construct font font face name font name name particular font face helvetica bold famili name name font famili determin typograph design face helvetica Font::Font repres instanc font face collect font face system resourc host system exampl arial bold courier bold ital font face Font::Font object associ font face differ size style transform font featur GraphicsEnvironment::GraphicsEnvironment return array font face avail system font face return Font::Font object size ident transform default font featur base font deriv Font::Font object vari size style transform font featur Font::deriveFont font textattribut Font::Font support TextAttribute::TextAttribute make oper render underlin text conveni necessari explicit construct TextLayout::TextLayout object Attributes::Attributes set Font::Font construct deriv use Map::Map TextAttribute::TextAttribute valu valu textattribut serializ therefor attempt serial instanc Font::Font valu serial mean Font::Font deseri stream compar equal origin Font::Font contain non serializ attribut rare pose attribut typic circumst unlik serial TextAttribute::FOREGROUND background use Paint::Paint valu subclass Color::Color serializ GradientPaint::GradientPaint TexturePaint::TexturePaint TextAttribute::CHAR replac use GraphicAttribute::GraphicAttribute valu subclass ShapeGraphicAttribute::ShapeGraphicAttribute ImageGraphicAttribute::ImageGraphicAttribute serializ TextAttribute::INPUT highlight use InputMethodHighlight::InputMethodHighlight valu serializ see client creat custom subclass Paint::Paint GraphicAttribute::GraphicAttribute make serializ avoid client use input highlight convert platform specif attribut highlight current platform set Font::Font workaround Map::Map constructor Font::deriveFont ignor font attribut retain Font::Font static font attribut see attribut caus addit render overhead potenti invok layout Font::Font attribut return note Font::Font rotat caus text baselin rotat order account rare possibl font specifi return metric take paramet baselin relat coordin map coordin advanc baselin posit forward baselin coordin distanc perpendicular baselin posit 90 degre clockwis baselin vector especi call baselin relat coordin
Font::DIALOG String::String constant canon famili name logic font ModalExclusionType::Dialog use Font::Font construct provid compil time verif name
Font::DIALOG input String::String constant canon famili name logic font dialoginput use Font::Font construct provid compil time verif name
Font::SANS serif String::String constant canon famili name logic font sansserif use Font::Font construct provid compil time verif name
Font::SERIF String::String constant canon famili name logic font serif use Font::Font construct provid compil time verif name
Font::MONOSPACED String::String constant canon famili name logic font monospac use Font::Font construct provid compil time verif name
Font::getPeer get peer Font::Font peer Font::Font
Font::Font creat Font::Font specifi name style point size font name font face name font famili name style find appropri font face font famili name specifi style argument select appropri face famili font face name specifi face style style argument merg locat match font famili exampl face name arial bold specifi style font ital font system look face arial famili bold ital associ font instanc physic font face arial bold ital style argument merg specifi face style ad subtract mean specifi bold face bold style doubl embolden font specifi bold face plain style lighten font face request style found font system appli algorithm style achiev desir style exampl Font::ITALIC request ital face avail glyph plain face algorithm obliqu slant Font::Font name lookup case insensit use case fold rule local name paramet repres logic font interpret physic font face famili map implement physic font compat altern font system map Font::Font instanc ModalExclusionType::Dialog exampl famili report ModalExclusionType::Dialog name font name font face name font famili name repres logic font physic font found GraphicsEnvironment::GraphicsEnvironment famili name logic font ModalExclusionType::Dialog dialoginput monospac serif sansserif pre defin String::String constant exist name exampl dialog name null logic font name Font::Font return getnam set name default style style constant Font::Font style argument integ bitmask plain bitwis union bold ital exampl ital bold ital style argument conform expect integ bitmask style set plain size point size Font::Font
Font::Font creat Font::Font specifi attribut key defin recogn addit font attribut recogn constructor see attribut valu valid type affect Font::Font attribut null Font::Font initi default valu attribut attribut assign Font::Font null
Font::Font creat Font::Font specifi font constructor intend use subclass font creat Font::Font
Font::initFromValues initi standard Font::Font field valu object
Font::getFont return Font::Font appropri attribut attribut TextAttribute::FONT attribut valid Font::Font valu merg remain attribut see attribut attribut assign Font::Font Font::Font creat specifi attribut
Font::createFont return Font::Font use specifi font type input data Font::Font creat point size style base font Font::deriveFont deriv Font::Font object vari size style transform font featur close make Font::Font avail Font::Font constructor return Font::Font regist graphicsenviro call fontformat type Font::Font truetyp resourc specifi Window::Type resourc specifi fontstream InputStream::InputStream object repres input data font Font::Font creat specifi font type
Font::createFont return Font::Font use specifi font type specifi font file Font::Font creat point size style base font Font::deriveFont deriv Font::Font object vari size style transform font featur fontformat type Font::Font truetyp resourc specifi Window::Type resourc specifi return font deriv font referenc implement continu access fontfil retriev font data thus result undefin file chang becom inaccess make Font::Font avail Font::Font constructor return Font::Font regist graphicsenviro call fontfil file object repres input data font Font::Font creat specifi font type
Font::getTransform return copi transform associ Font::Font transform necessarili construct font font algorithm superscript width adjust incorpor return AffineTransform::AffineTransform typic font transform client general call first call istransform return object repres transform attribut Font::Font object
Font::getFamily return famili name Font::Font famili name font font specif font helvetica ital helvetica bold famili name helvetica font face name helvetica bold helvetica ital list avail famili name obtain use use getnam get logic name font use Font::getFontName get font face name font String::String famili name Font::Font
Font::getFamily return famili name Font::Font local specifi local famili name font font specif font helvetica ital helvetica bold famili name helvetica font face name helvetica bold helvetica ital list avail famili name obtain use use Font::getFontName get font face name font local get famili name String::String repres famili name font local specifi local
Font::getPSName return postscript name Font::Font use Font::getFamily get famili name font use Font::getFontName get font face name font String::String repres postscript name Font::Font
Font::getName return logic name Font::Font use Font::getFamily get famili name font use Font::getFontName get font face name font String::String repres logic name Font::Font
Font::getFontName return font face name Font::Font exampl helvetica bold return font face name use Font::getFamily get famili name font use getnam get logic name font String::String repres font face name Font::Font
Font::getFontName return font face name Font::Font local specifi local exampl helvetica fett return font face name use Font::getFamily get famili name font local get font face name String::String repres font face name local specifi local
Font::getStyle return style Font::Font style plain bold ital bold ital style Font::Font
Font::getSize return point size Font::Font integ user familiar use point size specifi size glyph font point size defin measur baselin line baselin line singl space text document point size base typograph point approxim 72 inch tm 2d adopt convent point equival unit user coordin use normal transform convert user space coordin devic space coordin 72 user space unit equal inch devic space case point 72 inch point size Font::Font 72 inch unit
Font::getSize2D return point size Font::Font float valu point size Font::Font float valu
Font::isPlain indic Font::Font object style plain Font::Font plain style fals
Font::isBold indic Font::Font object style bold Font::Font object style bold fals
Font::isItalic indic Font::Font object style ital Font::Font object style ital fals
Font::isTransformed indic Font::Font object transform affect size addit size attribut Font::Font object non ident AffineTransform::AffineTransform attribut fals
Font::hasLayoutAttributes return Font::Font contain attribut requir extra layout process font layout attribut
Font::getFont return Font::Font object system properti list nm treat name system properti obtain String::String valu properti interpret Font::Font object accord specif font decod string specifi properti found execut permiss read properti null return instead nm properti name Font::Font object properti name describ null properti exist
Font::decode return Font::Font str argument describ ensur return desir Font::Font format str paramet fontnam style pointsiz fontnam pointsiz fontnam style fontnam fontnam style pointsiz fontnam pointsiz fontnam style fontnam style case insensit string plain bold boldital ital pointsiz posit decim integ represent point size exampl want font arial bold point size 18 call arial bold 18 equival call Font::Font constructor font arial font bold 18 valu interpret specifi constructor valid trail decim field interpret pointsiz therefor fontnam contain trail decim valu fontnam form style name field valid style string interpret part font name default style separ field input identifi separ closest end string separ valid pointsiz valid style name rest string null empti pointsiz style field treat valid field default valu field font name includ separ charact str form compon style pointsiz field str fontnam contain charact determin separ charact charact where appear intend part fontnam instead interpret separ font name proper recognis default size 12 default style plain str specifi valid size return Font::Font size 12 str specifi valid style return Font::Font style plain specifi valid font name str argument return font famili name ModalExclusionType::Dialog determin font famili name avail system use str null Font::Font return famili name ModalExclusionType::Dialog size 12 plain style str name font null Font::Font object str describ default Font::Font str null
Font::getFont get specifi Font::Font system properti list getproperti System::System first argument treat name system properti obtain String::String valu properti interpret Font::Font object properti valu form accept font decod string specifi properti found execut permiss read properti font argument return instead nm case insensit properti name font default Font::Font return properti nm defin Font::Font valu properti
Font::hashCode return hashcod Font::Font hashcod valu Font::Font
Font::equals compar Font::Font object specifi Object::Object obj Object::Object compar object argument Font::Font object describ font object fals
Font::toString convert Font::Font object String::String represent String::String represent Font::Font object
Font::readObject read ObjectInputStream::ObjectInputStream unrecogn key valu ignor ObjectInputStream::ObjectInputStream read
Font::getNumGlyphs return number glyph Font::Font glyph Font::Font rang getnumglyph number glyph Font::Font
Font::getMissingGlyphCode return glyphcod Font::Font glyph specifi unicod point glyphcod Font::Font
Font::getAttributes return map font attribut avail Font::Font Attributes::Attributes includ ligatur glyph substitut attribut map Font::Font
Font::getAvailableAttributes return key attribut support Font::Font attribut deriv font array contain key attribut support Font::Font
Font::deriveFont creat Font::Font object replic Font::Font object appli style size style style Font::Font size size Font::Font Font::Font object
Font::deriveFont creat Font::Font object replic Font::Font object appli style transform style style Font::Font tran AffineTransform::AffineTransform associ Font::Font Font::Font object
Font::deriveFont creat Font::Font object replic current Font::Font object appli size size size Font::Font Font::Font object
Font::deriveFont creat Font::Font object replic current Font::Font object appli transform tran AffineTransform::AffineTransform associ Font::Font Font::Font object
Font::deriveFont creat Font::Font object replic current Font::Font object appli style style style Font::Font Font::Font object
Font::deriveFont creat Font::Font object replic current Font::Font object appli set font attribut attribut map attribut enabl Font::Font Font::Font object
Font::canDisplay check Font::Font glyph specifi charact note handl support unicod charact includ supplementari charact use Font::canDisplayUpTo charact glyph Font::Font glyph charact fals
Font::canDisplay check Font::Font glyph specifi charact codepoint charact unicod point glyph Font::Font glyph charact fals
Font::canDisplayUpTo indic Font::Font display specifi String::String string unicod encod know particular font display string return offset String::String str first charact Font::Font display use miss glyph Font::Font display charact return str String::String object offset str point first charact str Font::Font display Font::Font display charact str
Font::canDisplayUpTo indic Font::Font display charact specifi text start start end limit conveni overload text specifi array char valu start specifi start offset char specifi array char valu limit specifi end offset char specifi array char valu offset text point first charact text Font::Font display Font::Font display charact text
Font::canDisplayUpTo indic Font::Font display text specifi iter start start end limit iter object start specifi start offset specifi CharacterIterator::CharacterIterator limit specifi end offset specifi CharacterIterator::CharacterIterator offset iter point first charact iter Font::Font display Font::Font display charact iter
Font::getItalicAngle return ital angl Font::Font ital angl invers slope caret match postur Font::Font angl ital style Font::Font
Font::hasUniformLineMetrics check Font::Font uniform line metric logic Font::Font composit font mean compos physic font cover rang font LineMetrics::LineMetrics logic Font::Font singl font metric uniform Font::Font uniform line metric fals
Font::getLineMetrics return object creat specifi String::String str specifi String::String frc specifi FontRenderContext::FontRenderContext LineMetrics::LineMetrics object creat specifi String::String
Font::getLineMetrics return LineMetrics::LineMetrics object creat specifi argument str specifi String::String beginindex initi offset str limit end offset str frc specifi FontRenderContext::FontRenderContext LineMetrics::LineMetrics object creat specifi argument
Font::getLineMetrics return LineMetrics::LineMetrics object creat specifi argument ci specifi CharacterIterator::CharacterIterator beginindex initi offset ci limit end offset ci frc specifi FontRenderContext::FontRenderContext LineMetrics::LineMetrics object creat specifi argument
Font::getStringBounds return logic bound specifi String::String specifi FontRenderContext::FontRenderContext logic bound contain origin ascent advanc height includ lead logic bound enclos text exampl languag font accent mark posit ascent descent obtain visual bound box enclos text use TextLayout::TextLayout note return bound baselin relat coordin see str specifi String::String frc specifi FontRenderContext::FontRenderContext bound box specifi String::String specifi FontRenderContext::FontRenderContext
Font::getStringBounds return logic bound specifi String::String specifi FontRenderContext::FontRenderContext logic bound contain origin ascent advanc height includ lead logic bound enclos text exampl languag font accent mark posit ascent descent obtain visual bound box enclos text use TextLayout::TextLayout note return bound baselin relat coordin see str specifi String::String beginindex initi offset str limit end offset str frc specifi FontRenderContext::FontRenderContext Rectangle2D::Rectangle2D bound box specifi String::String specifi FontRenderContext::FontRenderContext
Font::getStringBounds return logic bound charact index specifi specifi FontRenderContext::FontRenderContext logic bound contain origin ascent advanc height includ lead logic bound enclos text exampl languag font accent mark posit ascent descent obtain visual bound box enclos text use TextLayout::TextLayout note return bound baselin relat coordin see ci specifi CharacterIterator::CharacterIterator beginindex initi offset ci limit end offset ci frc specifi FontRenderContext::FontRenderContext Rectangle2D::Rectangle2D bound box charact index specifi CharacterIterator::CharacterIterator specifi FontRenderContext::FontRenderContext
Font::createGlyphVector creat map charact glyph base unicod cmap Font::Font process map glyph charact mean use script arab hebrew thai indic requir reorder shape ligatur substitut frc specifi FontRenderContext::FontRenderContext str specifi String::String GlyphVector::GlyphVector creat specifi String::String specifi FontRenderContext::FontRenderContext
Font::createGlyphVector creat map charact glyph base unicod cmap Font::Font process map glyph charact mean use script arab hebrew thai indic requir reorder shape ligatur substitut frc specifi FontRenderContext::FontRenderContext char specifi array charact GlyphVector::GlyphVector creat specifi array charact specifi FontRenderContext::FontRenderContext
Font::createGlyphVector creat map specifi charact glyph base unicod cmap Font::Font process map glyph charact mean use script arab hebrew thai indic requir reorder shape ligatur substitut frc specifi FontRenderContext::FontRenderContext ci specifi CharacterIterator::CharacterIterator GlyphVector::GlyphVector creat specifi CharacterIterator::CharacterIterator specifi FontRenderContext::FontRenderContext
Font::createGlyphVector creat map charact glyph base unicod cmap Font::Font process map glyph charact mean use script arab hebrew thai indic requir reorder shape ligatur substitut frc specifi FontRenderContext::FontRenderContext glyphcod specifi integ array GlyphVector::GlyphVector creat specifi integ array specifi FontRenderContext::FontRenderContext
Image::flush flush reconstruct resourc Image::Image object includ pixel data cach render screen system resourc store data pixel imag recreat imag reset state similar first creat render imag data recreat fetch sourc exampl affect specif type Image::Image object BufferedImage::BufferedImage object leav primari Raster::Raster store pixel untouch flush cach pixel copi upload display hardwar acceler blit Image::Image object creat Component::Component take width height leav primari buffer pixel untouch cach releas BufferedImage::BufferedImage object VolatileImage::VolatileImage object releas pixel resourc includ primari copi typic store display hardwar where resourc scarc object restor use Image::Image object creat Toolkit::Toolkit Component::Component load file url produc unload local resourc releas object reload origin sourc render first creat
Image::getCapabilities return ImageCapabilities::ImageCapabilities object inquir capabl Image::Image specifi GraphicsConfiguration::GraphicsConfiguration allow programm find runtim specif Image::Image object creat exampl user creat BufferedImage::BufferedImage system video memori creat imag size given GraphicsConfiguration::GraphicsConfiguration object accelerat general capabl GraphicsConfiguration::GraphicsConfiguration gc GraphicsConfiguration::GraphicsConfiguration object valu null paramet result get imag capabl default GraphicsConfiguration::GraphicsConfiguration ImageCapabilities::ImageCapabilities object contain capabl Image::Image specifi GraphicsConfiguration::GraphicsConfiguration
TexturePaint::TexturePaint TexturePaint::TexturePaint provid fill textur specifi size BufferedImage::BufferedImage object BufferedImage::BufferedImage data copi TexturePaint::TexturePaint object construct time textur anchor upper corner specifi user space textur comput locat devic space conceptu replic specifi Rectangle2D::Rectangle2D infinit direct user space map BufferedImage::BufferedImage replic Rectangle2D::Rectangle2D 48 06 05 07
TexturePaint::TexturePaint construct TexturePaint::TexturePaint object txtr BufferedImage::BufferedImage object textur paint anchor Rectangle2D::Rectangle2D user space anchor replic textur
TexturePaint::getImage return BufferedImage::BufferedImage textur fill shape BufferedImage::BufferedImage
DragSource::writeObject serial DragSource::DragSource first perform default serial write object FlavorMap::FlavorMap serial null written instead write Serializable::Serializable listen regist object listen written null sequenc pair pair consist String::String Object::Object String::String indic type Object::Object follow dragsourcelistenerk indic DragSourceListener::DragSourceListener object dragsourcemotionlistenerk indic DragSourceMotionListener::DragSourceMotionListener object FlavorMap::FlavorMap instanc null follow null sequenc pair pair consist String::String Object::Object String::String indic type Object::Object follow dragsourcelistenerk indic DragSourceListener::DragSourceListener object dragsourcemotionlistenerk indic DragSourceMotionListener::DragSourceMotionListener object
DragSource::readObject deseri DragSource::DragSource first perform default deseri object FlavorMap::FlavorMap deseri use object stream result FlavorMap::FlavorMap null object FlavorMap::FlavorMap set default FlavorMap::FlavorMap thread ClassLoader::ClassLoader object listen deseri read null sequenc key valu pair stream key object String::String equal dragsourcelistenerk DragSourceListener::DragSourceListener deseri use correspond valu object ad DragSource::DragSource key object String::String equal dragsourcemotionlistenerk DragSourceMotionListener::DragSourceMotionListener deseri use correspond valu object ad DragSource::DragSource key valu pair skip
DropTargetDragEvent::getLocation return Point::Point indic Cursor::Cursor current locat compon coordin current cursor locat compon coord
DragSourceEvent::getLocation return Point::Point indic cursor locat screen coordin moment event occur null cursor locat specifi event Point::Point indic cursor locat null cursor locat specifi
DropTargetDropEvent::getLocation return Point::Point indic Cursor::Cursor current locat compon coordin current Cursor::Cursor locat compon coord
Autoscroll::autoscroll notifi compon autoscrol cursorlocn Point::Point indic locat cursor trigger oper
DropTarget::DropTargetAutoScroller construct DropTarget::DropTargetAutoScroller compon Point::Point
DropTarget::updateLocation caus autoscrol occur newlocn Point::Point
DropTarget::createDropTargetAutoScroller creat embed autoscrol compon Point::Point
DropTarget::initializeAutoscrolling initi autoscrol Point::Point
DropTarget::updateAutoscroll updat autoscrol current cursor locat dragcursorlocn Point::Point
DragGestureEvent::DragGestureEvent construct DragGestureEvent::DragGestureEvent object given DragGestureRecognizer::DragGestureRecognizer instanc fire event act paramet repres user prefer action ori paramet indic origin drag List::List event compris gestur ev paramet dgr DragGestureRecognizer::DragGestureRecognizer fire event act user prefer action allow valu see descript ori origin drag ev List::List event compris gestur
DragGestureEvent::getDragOrigin return Point::Point coordin compon drag origin Point::Point where drag origin Component::Component coord
DragGestureEvent::iterator return Iterator::Iterator event compris gestur Iterator::Iterator event compris gestur
DragGestureEvent::toArray return Object::Object array event compris drag gestur array event compris gestur
DragGestureEvent::writeObject serial DragGestureEvent::DragGestureEvent perform default serial write object List::List gestur event List::List serial null written instead case DragGestureEvent::DragGestureEvent creat result deseri stream contain empti List::List gestur event default serializ field alphabet order follow List::List instanc null
DragGestureEvent::readObject deseri DragGestureEvent::DragGestureEvent first perform default deseri transient field attempt made deseri object List::List gestur event first attempt deseri field event releas prior transient field name store List::List gestur event fail object stream instead result List::List null object List::List gestur event set empti List::List
InvalidDnDOperationException::InvalidDnDOperationException creat default Exception::Exception
InvalidDnDOperationException::InvalidDnDOperationException creat Exception::Exception descript messag msg detail messag
KeyboardFocusManager::KeyboardFocusManager KeyboardFocusManager::KeyboardFocusManager respons manag activ focus window current focus owner focus owner defin Component::Component typic receiv keyev generat user focus Window::Window Window::Window contain focus owner Frame::Frame ModalExclusionType::Dialog activ Window::Window nativ window system denot activ Window::Window children decor highlight titl activ Window::Window focus Window::Window first Frame::Frame ModalExclusionType::Dialog owner focus Window::Window KeyboardFocusManager::KeyboardFocusManager central locat client queri focus owner initi focus chang event dispatch focusev windowev relat focus keyev browser partit applet base separ context establish wall context scenario KeyboardFocusManager::KeyboardFocusManager context browser place applet context impli singl global KeyboardFocusManager::KeyboardFocusManager applet behavior implement depend consult browser document matter context focus owner focus Window::Window activ Window::Window ClassLoader::ClassLoader pleas see section tutori
KeyboardFocusManager::setDefaultFocusTraversalKeys set default focus travers key given travers oper travers key Set::Set effect Window::Window Set::Set explicit defin Set::Set inherit recurs child Component::Component window Set::Set explicit defin default valu default focus travers key implement depend sun recommend implement particular nativ platform use default valu recommend window unix list recommend sun awt implement disabl travers key use empti Set::Set collect empti set recommend use awtkeystrok client specifi specif KeyEvent::KeyEvent key press key releas focus travers oper occur regardless KeyEvent::KeyEvent specifi KeyEvent::KeyEvent relat focus travers key includ associ key type event consum dispatch Component::Component runtim error specifi key type event map focus travers oper map event multipl default focus travers oper throw ClassCastException::ClassCastException Object::Object keystrok awtkeystrok keyboardfocusmanag forward travers key keyboardfocusmanag backward travers key keyboardfocusmanag cycl travers key keyboardfocusmanag cycl travers key keystrok Set::Set awtkeystrok specifi oper bound
KeyboardFocusManager::getDefaultFocusTraversalKeys return Set::Set default focus travers key given travers oper travers key Set::Set effect window Set::Set explicit defin Set::Set inherit recurs child Component::Component window Set::Set explicit defin see KeyboardFocusManager::setDefaultFocusTraversalKeys full descript oper keyboardfocusmanag forward travers key keyboardfocusmanag backward travers key keyboardfocusmanag cycl travers key keyboardfocusmanag cycl travers key Set::Set AWTKeyStroke::AWTKeyStroke specifi oper Set::Set unmodifi empti null return
KeyboardFocusManager::addPropertyChangeListener add PropertyChangeListener::PropertyChangeListener listen list listen regist bound properti includ follow KeyboardFocusManager::KeyboardFocusManager current manag focus applet browser context managingfocus focus owner focusown perman focus owner permanentfocusown focus Window::Window focusedwindow activ Window::Window activewindow default focus travers polici defaultfocustraversalpolici Set::Set default forward travers key forwarddefaultfocustraversalkey Set::Set default backward travers key backwarddefaultfocustraversalkey Set::Set default cycl travers key upcycledefaultfocustraversalkey Set::Set default cycl travers key downcycledefaultfocustraversalkey current focus cycl root currentfocuscycleroot listen null thrown action perform listen PropertyChangeListener::PropertyChangeListener ad
KeyboardFocusManager::addPropertyChangeListener add PropertyChangeListener::PropertyChangeListener listen list specif properti specifi properti user defin follow KeyboardFocusManager::KeyboardFocusManager current manag focus applet browser context managingfocus focus owner focusown perman focus owner permanentfocusown focus Window::Window focusedwindow activ Window::Window activewindow default focus travers polici defaultfocustraversalpolici Set::Set default forward travers key forwarddefaultfocustraversalkey Set::Set default backward travers key backwarddefaultfocustraversalkey Set::Set default cycl travers key upcycledefaultfocustraversalkey Set::Set default cycl travers key downcycledefaultfocustraversalkey current focus cycl root currentfocuscycleroot listen null thrown action perform propertynam properti name list listen PropertyChangeListener::PropertyChangeListener ad
KeyboardFocusManager::getKeyEventDispatchers return keyboardfocusmanag KeyEventDispatcher::KeyEventDispatcher chain List::List List::List includ KeyboardFocusManager::KeyboardFocusManager explicit regist call KeyboardFocusManager::addKeyEventDispatcher keyeventdispatch regist implement free return null List::List length client assum behavior assum behavior establish chang possibl null empti List::List keyeventdispatch
KeyboardFocusManager::getKeyEventPostProcessors return keyboardfocusmanag KeyEventPostProcessor::KeyEventPostProcessor chain List::List List::List includ KeyboardFocusManager::KeyboardFocusManager explicit ad call KeyboardFocusManager::addKeyEventPostProcessor keyeventpostprocessor regist implement free return null List::List length client assum behavior assum behavior establish chang possibl null empti List::List keyeventpostprocessor
GraphicsDevice::GraphicsDevice GraphicsDevice::GraphicsDevice describ graphic devic avail particular graphic environ includ screen printer devic note screen printer instanc graphic devic object associ object specifi configur GraphicsDevice::GraphicsDevice multi screen environ GraphicsConfiguration::GraphicsConfiguration object render compon multipl screen sampl demonstr creat jframe object GraphicsConfiguration::GraphicsConfiguration screen devic GraphicsEnvironment::GraphicsEnvironment full screen exclus mode see
GraphicsDevice::GraphicsDevice abstract instanti instanc obtain suitabl factori queri
GraphicsDevice::getType return type GraphicsDevice::GraphicsDevice type GraphicsDevice::GraphicsDevice type raster screen type printer type imag buffer
GraphicsDevice::getIDstring return identif string associ GraphicsDevice::GraphicsDevice particular program use GraphicsDevice::GraphicsDevice GraphicsEnvironment::GraphicsEnvironment return String::String identifi particular GraphicsDevice::GraphicsDevice local GraphicsEnvironment::GraphicsEnvironment set String::String programm use String::String debug purpos vendor trade Runtime::Runtime environ format return valu String::String determin interpret valu String::String contact vendor Runtime::Runtime find vendor program call System::System vendor String::String identif GraphicsDevice::GraphicsDevice
GraphicsDevice::getConfigurations return GraphicsConfiguration::GraphicsConfiguration object associ GraphicsDevice::GraphicsDevice array GraphicsConfiguration::GraphicsConfiguration object associ GraphicsDevice::GraphicsDevice
GraphicsDevice::getDefaultConfiguration return default GraphicsConfiguration::GraphicsConfiguration associ GraphicsDevice::GraphicsDevice default GraphicsConfiguration::GraphicsConfiguration GraphicsDevice::GraphicsDevice
GraphicsDevice::isFullScreenSupported return GraphicsDevice::GraphicsDevice support full screen exclus mode SecurityManager::SecurityManager instal checkpermiss call awtpermiss fullscreenexclus isfullscreensupport return permiss grant full screen exclus mode avail graphic devic
GraphicsDevice::isDisplayChangeSupported return GraphicsDevice::GraphicsDevice support low level display chang platform low level display chang allow full screen exclus mode return enter full screen mode use low level display chang support graphic devic
GraphicsDevice::getDisplayMode return current display mode GraphicsDevice::GraphicsDevice return display mode allow refresh rate indetermin return display mode allow bit depth indetermin multipl bit depth support current display mode graphic devic
GraphicsDevice::getDisplayModes return display mode avail GraphicsDevice::GraphicsDevice return display mode allow refresh rate indetermin return display mode allow bit depth indetermin multipl bit depth support display mode avail graphic devic
GraphicsDevice::getAvailableAcceleratedMemory return number byte avail acceler memori devic imag creat cach acceler memori first come first serv basi oper system memori finit resourc call schedul creation flush imag care enabl applic make effici use finit resourc note number return snapshot memori avail imag alloc memori exampl depend oper system driver memori configur thread situat full extent size report avail given imag further inquiri object associ VolatileImage::VolatileImage determin particular VolatileImage::VolatileImage creat acceler memori number byte avail acceler memori negat return valu indic amount acceler memori GraphicsDevice::GraphicsDevice indetermin
Container::add append specifi compon end contain conveni chang layout relat therefor invalid compon hierarchi contain display hierarchi valid thereaft order display ad compon comp compon ad compon argument
Container::add add specifi compon contain conveni obsolet pleas use add compon object instead chang layout relat therefor invalid compon hierarchi contain display hierarchi valid thereaft order display ad compon
Container::add add specifi compon contain given posit conveni chang layout relat therefor invalid compon hierarchi contain display hierarchi valid thereaft order display ad compon comp compon ad index posit insert compon append compon end compon comp
Container::checkAdding check compon comp ad contain check index bound contain size comp contain parent comp window comp contain GraphicsDevice::GraphicsDevice comp contain sub compon GraphicsDevice::GraphicsDevice
Container::add add specifi compon end contain notifi layout manag add compon contain layout use specifi constraint object conveni chang layout relat therefor invalid compon hierarchi contain display hierarchi valid thereaft order display ad compon comp compon ad constraint object express layout constraint compon
Container::add add specifi compon contain specifi constraint specifi index notifi layout manag add compon contain layout use specifi constraint object conveni chang layout relat therefor invalid compon hierarchi contain display hierarchi valid thereaft order display ad compon comp compon ad constraint object express layout constraint index posit contain list insert compon mean insert end compon
Container::addImpl add specifi compon contain specifi index notifi layout manag add compon contain layout use specifi constraint object addlayoutcompon constraint defin particular layout manag exampl BorderLayout::BorderLayout defin constraint borderlayout north borderlayout south borderlayout east borderlayout west borderlayout center GridBagLayout::GridBagLayout requir GridBagConstraints::GridBagConstraints object failur pass correct type constraint object result IllegalArgumentException::IllegalArgumentException current layout manag implement LayoutManager2::LayoutManager2 invok current layout manag implement LayoutManager2::LayoutManager2 constraint String::String invok compon ancestor contain non null parent remov current parent ad contain overrid program track add request contain add defer overrid includ call superclass version super addimpl comp constraint index chang layout relat therefor invalid compon hierarchi contain display hierarchi valid thereaft order display ad compon comp compon ad constraint object express layout constraint compon index posit contain list insert compon where mean append end
Container::checkGD check compon Container::Container contain GraphicsDevice::GraphicsDevice Container::Container throw IllegalArgumentException::IllegalArgumentException
Container::getPreferredSize return prefer size contain prefer size set explicit Container::Container non null calcul prefer size note implement cach valu return LayoutManager::LayoutManager implement cach invok preferredlayouts LayoutManager::LayoutManager time invok LayoutManager::LayoutManager queri Container::Container becom invalid instanc Dimension::Dimension repres prefer size contain
Container::getMinimumSize return minimum size contain minimum size set explicit Container::Container non null calcul minimum size note implement cach valu return LayoutManager::LayoutManager implement cach invok minimumlayouts LayoutManager::LayoutManager time invok LayoutManager::LayoutManager queri Container::Container becom invalid instanc Dimension::Dimension repres minimum size contain
Container::getMaximumSize return maximum size contain maximum size set explicit instal Container::Container instanc calcul maximum size note implement cach valu return LayoutManager2::LayoutManager2 implement cach invok maximumlayouts LayoutManager2::LayoutManager2 time invok LayoutManager2::LayoutManager2 queri Container::Container becom invalid instanc Dimension::Dimension repres maximum size contain
Container::setFocusTraversalKeys set focus travers key given travers oper Container::Container default valu contain focus travers key implement depend sun recommend implement particular nativ platform use default valu recommend window unix list recommend sun awt implement disabl travers key use empti Set::Set collect empti set recommend use awtkeystrok client specifi specif keyev key press key releas focus travers oper occur regardless KeyEvent::KeyEvent specifi keyev relat focus travers key includ associ key type event consum dispatch Container::Container runtim error specifi key type event map focus travers oper map event multipl default focus travers oper valu null specifi Set::Set Container::Container inherit Set::Set parent ancestor Container::Container null specifi Set::Set current keyboardfocusmanag default Set::Set throw ClassCastException::ClassCastException Object::Object keystrok awtkeystrok keyboardfocusmanag forward travers key keyboardfocusmanag backward travers key keyboardfocusmanag cycl travers key keyboardfocusmanag cycl travers key keystrok Set::Set awtkeystrok specifi oper bound
Container::getFocusTraversalKeys return Set::Set focus travers key given travers oper Container::Container see setfocustraversalkey full descript key Set::Set travers key explicit defin Container::Container contain parent Set::Set return Set::Set explicit defin contain ancestor current keyboardfocusmanag default Set::Set return keyboardfocusmanag forward travers key keyboardfocusmanag backward travers key keyboardfocusmanag cycl travers key keyboardfocusmanag cycl travers key Set::Set awtkeystrok specifi oper Set::Set unmodifi empti null return
Container::areFocusTraversalKeysSet return Set::Set focus travers key given focus travers oper explicit defin Container::Container return fals Container::Container inherit Set::Set ancestor current KeyboardFocusManager::KeyboardFocusManager keyboardfocusmanag forward travers key keyboardfocusmanag backward travers key keyboardfocusmanag cycl travers key keyboardfocusmanag cycl travers key Set::Set focus travers key given focus travers oper explicit defin Component::Component fals
Container::addPropertyChangeListener add PropertyChangeListener::PropertyChangeListener listen list listen regist bound properti includ follow contain font font contain background color background contain foreground color foreground contain focus focus contain focus travers key enabl state focustraversalkeysen contain Set::Set forward travers key forwardfocustraversalkey contain Set::Set backward travers key backwardfocustraversalkey contain Set::Set cycl travers key upcyclefocustraversalkey contain Set::Set cycl travers key downcyclefocustraversalkey contain focus travers polici focustraversalpolici contain focus cycl root state focuscycleroot note Container::Container inherit bound properti event fire respons chang inherit properti listen null thrown action perform listen PropertyChangeListener::PropertyChangeListener ad
Container::addPropertyChangeListener add PropertyChangeListener::PropertyChangeListener listen list specif properti specifi properti user defin default contain font font contain background color background contain foreground color foreground contain focus focus contain focus travers key enabl state focustraversalkeysen contain Set::Set forward travers key forwardfocustraversalkey contain Set::Set backward travers key backwardfocustraversalkey contain Set::Set cycl travers key upcyclefocustraversalkey contain Set::Set cycl travers key downcyclefocustraversalkey contain focus travers polici focustraversalpolici contain focus cycl root state focuscycleroot contain focus travers polici provid state focustraversalpolicyprovid contain focus travers polici provid state focustraversalpolicyprovid note Container::Container inherit bound properti event fire respons chang inherit properti listen null thrown action perform propertynam properti name list listen PropertyChangeListener::PropertyChangeListener ad
Container::writeObject serial Container::Container specifi ObjectOutputStream::ObjectOutputStream write default serializ field stream write list serializ containerlisten option data non serializ containerlistn detect attempt made serial write contain FocusTraversalPolicy::FocusTraversalPolicy Serializable::Serializable null written ObjectOutputStream::ObjectOutputStream write null termin sequenc pair pair consist String::String Object::Object String::String indic type object follow containerlistenerk indic ContainerListener::ContainerListener object Container::Container FocusTraversalPolicy::FocusTraversalPolicy null
Container::readObject deseri Container::Container specifi ObjectInputStream::ObjectInputStream read default serializ field stream read list serializ containerlisten option data list null listen instal read contain FocusTraversalPolicy::FocusTraversalPolicy null option data ObjectInputStream::ObjectInputStream read
Container::getAccessibleAt return access child exist contain local coordin Point::Point point defin top corner access given coordin space object parent access exist specifi locat els null
Container::getAccessibleAt return access child contain local coordin Point::Point exist return null point defin top corner access given coordin space object parent access specifi locat exist null
LightweightDispatcher::LightweightDispatcher Class::Class manag dispatch mouseev lightweight descend sundroptargetev lightweight heavyweight descend contain nativ contain note name appropri anymor chang keep serial compat
TextComponent::writeObject write default serializ field stream write list serializ textlisten option data non serializ textlisten detect attempt made serial null termin sequenc zero pair pair consist String::String Object::Object String::String indic type object textlistenerk indic TextListener::TextListener object
TextComponent::readObject read ObjectInputStream::ObjectInputStream isn null add listen receiv text event fire TextComponent::TextComponent unrecogn key valu ignor
TextComponent::getIndexAtPoint given point local coordin return zero base index charact Point::Point point invalid return Point::Point local coordin zero base index charact Point::Point
TextComponent::getCharacterBounds determin bound box charact given index string bound return local coordin index invalid null rectangl return index String::String gt screen coordin charact bound box
TextComponent::getAtIndex return String::String given index part accessibletext charact accessibletext word accessibletext sentenc retriev index index text gt letter word sentenc null invalid index part
TextComponent::getAfterIndex return String::String given index part accessibletext charact accessibletext word accessibletext sentenc retriev index index text gt letter word sentenc null invalid index part
TextComponent::getBeforeIndex return String::String given index part accessibletext charact accessibletext word accessibletext sentenc retriev index index text gt letter word sentenc null invalid index part
JobAttributes::JobAttributes construct JobAttributes::JobAttributes instanc default valu attribut dialog default dialogtyp nativ min page default max page default integ max valu destin default destinationtyp printer select default defaultselectiontyp Number::Number copi default multipl document handl default multipledocumenthandlingtyp separ document uncol copi side default sidestyp side File::File name default null
JobAttributes::clone creat return copi JobAttributes::JobAttributes newli creat copi safe cast Object::Object JobAttributes::JobAttributes
Insets::set Set::Set top bottom specifi valu top inset top inset bottom inset bottom inset
Desktop::Desktop Desktop::Desktop allow launch associ applic regist nativ desktop handl file support oper includ launch user default browser show specifi uri launch user default mail client option mailto uri launch regist open edit print specifi file provid correspond oper look associ regist current platform launch handl uri file associ associ fail launch thrown regist uri file type exampl sxi file extens typic regist staroffic mechan regist access launch associ platform depend oper action type repres note action invok associ execut execut system launch
Desktop::Action Desktop::Desktop allow launch associ applic regist nativ desktop handl file support oper includ launch user default browser show specifi uri launch user default mail client option mailto uri launch regist open edit print specifi file provid correspond oper look associ regist current platform launch handl uri file associ associ fail launch thrown regist uri file type exampl sxi file extens typic regist staroffic mechan regist access launch associ platform depend oper action type repres note action invok associ execut execut system launch repres action type platform support set action use determin given action support current platform
Desktop::Desktop suppress default constructor noninstanti
Desktop::getDesktop return desktop instanc current browser context platform Desktop::Desktop support use determin current desktop support Desktop::Desktop instanc current browser context
Desktop::open launch associ open file specifi file directori file manag current platform launch open file file open associ
Desktop::edit launch associ editor open file edit file file open edit
Desktop::print print file nativ desktop print facil use associ print command file file print
Desktop::browse launch default browser display uri default browser abl handl specifi uri regist handl uri specifi type invok determin protocol path uri defin uri call thread necessari permiss invok applet appletcontext showdocu similar call necessari permiss invok web start basicservic showdocu uri uri display user default browser
Desktop::mail launch mail compos window user default mail client
Desktop::mail launch mail compos window user default mail client fill messag field specifi mailto uri mailto uri specifi messag field includ cc subject bodi see mailto uri specif detail mailtouri specifi mailto uri
EventQueue::postEvent post event intern Queue::Queue specifi prioriti coalesc appropri theevent instanc awt awtev subclass prioriti desir prioriti event
Queue::Queue Queue::Queue object hold pointer begin end intern queue EventQueue::EventQueue object compos multipl intern queue prioriti support EventQueue::EventQueue event particular intern Queue::Queue ident prioriti
PointerInfo::PointerInfo describ pointer posit provid GraphicsDevice::GraphicsDevice where pointer Point::Point repres coordin pointer instanc obtain PointerInfo::PointerInfo instanc updat dynam mous move get updat locat call
PointerInfo::getDevice return GraphicsDevice::GraphicsDevice where mous pointer moment PointerInfo::PointerInfo creat GraphicsDevice::GraphicsDevice correspond pointer
PointerInfo::getLocation return Point::Point repres coordin pointer screen see coordin calcul multiscreen system coordin mous pointer
MenuComponent::readObject read menu compon object input stream ObjectInputStream::ObjectInputStream read
MenuComponent::getAccessibleName get access name object return awt menucompon getnam general isn local name doesn mean user object fundament text object menu item access name text object save object tooltip tooltip text appropri String::String return local name object null object name
MenuComponent::setBackground set background color object transpar see isopaqu Color::Color background
MenuComponent::setForeground set foreground color object Color::Color foreground
MenuComponent::getFont get Font::Font object Font::Font support object null
MenuComponent::setFont set Font::Font object Font::Font object
MenuComponent::getFontMetrics get FontMetrics::FontMetrics object Font::Font FontMetrics::FontMetrics support object null
MenuComponent::contains check specifi point object bound where point coordin defin relat coordin system object Point::Point relat coordin system object object contain Point::Point fals
MenuComponent::getLocation get locat object relat parent form point specifi object top corner screen coordin space instanc Point::Point repres top corner object bound coordin space screen null object parent screen
MenuComponent::getBounds get bound object form Rectangle::Rectangle object bound specifi object width height locat relat parent rectangl indic compon bound null object screen
MenuComponent::setBounds set bound object form Rectangle::Rectangle object bound specifi object width height locat relat parent rectangl indic compon bound
MenuComponent::getSize return size object form Dimension::Dimension object height field Dimension::Dimension object contain object height width field Dimension::Dimension object contain object width Dimension::Dimension object indic size compon null object screen
MenuComponent::setSize resiz object Dimension::Dimension specifi size object
MenuComponent::getAccessibleAt return access child exist contain local coordin Point::Point access child null return point defin top corner access given coordin space object parent access exist specifi locat els null
GlyphMetrics::GlyphMetrics GlyphMetrics::GlyphMetrics repres singl glyph glyph visual represent charact glyph repres singl charact combin charact GlyphMetrics::GlyphMetrics instanc produc applic specif glyph particular Font::Font glyph standard ligatur combin compon standard glyph common repres singl charact ligatur glyph repres sequenc charact compon glyph correspond particular charact text model instead compon glyph ad typograph reason arab justif combin glyph embellish standard ligatur glyph accent mark caret appear combin glyph metric avail GlyphMetrics::GlyphMetrics compon advanc visual bound side bear glyph rotat font obtain GlyphVector::GlyphVector appli rotat glyph advanc contain compon advanc compon advanc glyph distanc glyph origin origin glyph baselin vertic horizont note GlyphVector::GlyphVector distanc glyph glyph glyph advanc kern posit adjust bound smallest rectangl complet contain outlin glyph bound rectangl relat glyph origin side bear distanc glyph origin bound rectangl side bear negat part glyph drawn origin side bear distanc side bound rectangl glyph origin origin advanc negat part glyph drawn glyph origin note bound necessarili enclos pixel affect render glyph raster pixel adjust effect instanc GlyphMetrics::GlyphMetrics construct obtain GlyphVector::GlyphVector construct GlyphMetrics::GlyphMetrics object immut exampl queri Font::Font glyph
TextLayout::TextLayout TextLayout::TextLayout immut graphic represent style charact data provid capabl implicit bidirect analysi reorder cursor posit movement includ split cursor mix direct text highlight includ logic visual highlight mix direct text multipl baselin roman hang center hit test justif default font substitut metric ascent descent advanc render TextLayout::TextLayout object render use draw TextLayout::TextLayout construct use construct sourc text repres singl paragraph LineBreakMeasurer::LineBreakMeasurer allow style text broken line fit particular width see LineBreakMeasurer::LineBreakMeasurer document TextLayout::TextLayout construct logic proceed follow paragraph attribut extract examin text analyz bidirect reorder reorder comput text segment style run font chosen style run first use font attribut comput default font use attribut defin text multipl baselin run subrun further broken subrun share common baselin glyphvector generat run use chosen font final bidirect reorder perform glyphvector graphic return TextLayout::TextLayout object relat origin TextLayout::TextLayout intersect TextLayout::TextLayout object baselin edg coordin pass TextLayout::TextLayout object assum relat TextLayout::TextLayout object origin client translat TextLayout::TextLayout object coordin system coordin system object object TextLayout::TextLayout object construct style text retain refer sourc text thus chang text previous generat TextLayout::TextLayout affect TextLayout::TextLayout TextLayout::TextLayout object TextLayout::getNextRightHit TextLayout::getNextLeftHit TextLayout::hitTestChar return instanc offset contain TextHitInfo::TextHitInfo object relat start TextLayout::TextLayout text creat TextLayout::TextLayout similar TextLayout::TextLayout accept TextHitInfo::TextHitInfo instanc paramet expect TextHitInfo::TextHitInfo object offset relat TextLayout::TextLayout text storag model exampl construct draw TextLayout::TextLayout bound rectangl hit test TextLayout::TextLayout determin charact particular graphic locat respond arrow key press draw select rang correspond substr sourc text select area visual contigu draw visual contigu select rang select rang correspond substr sourc text rang correspond sourc text substr obtain getlogicalrangesforvisualselect note Font::Font rotat caus text baselin rotat multipl run rotat caus baselin bend zig zag order account rare possibl specifi return metric take paramet baselin relat coordin ascent advanc standard coordin getbound valu baselin relat coordin map coordin distanc baselin posit forward baselin coordin distanc perpendicular baselin posit 90 degre clockwis baselin vector valu standard coordin measur axe origin TextLayout::TextLayout document relev indic valu coordin system general measur relat baselin relat coordin display relat standard coordin
TextLayout::TextLayout construct TextLayout::TextLayout String::String text style use specifi Font::Font String::String specifi singl paragraph text entir paragraph requir bidirect algorithm string text display font Font::Font style text frc contain graphic devic measur text correct text measur vari slight depend devic resolut attribut antialias paramet specifi translat TextLayout::TextLayout user space
TextLayout::TextLayout construct TextLayout::TextLayout String::String attribut set text style use attribut string specifi singl paragraph text entir paragraph requir bidirect algorithm string text display attribut attribut style text frc contain graphic devic measur text correct text measur vari slight depend devic resolut attribut antialias paramet specifi translat TextLayout::TextLayout user space
TextLayout::getBaseline return baselin TextLayout::TextLayout baselin valu defin Font::Font roman center hang ascent descent relat baselin baselineoffset relat baselin baselin TextLayout::TextLayout
TextLayout::getBaselineOffsets return offset array baselin TextLayout::TextLayout array index valu defin Font::Font roman center hang valu relat TextLayout::TextLayout object baselin getbaselineoffset getbaselin offset ad posit TextLayout::TextLayout object baselin get posit baselin offset array contain baselin TextLayout::TextLayout
TextLayout::getPixelBounds return pixel bound TextLayout::TextLayout render graphic given FontRenderContext::FontRenderContext given locat graphic render context FontRenderContext::FontRenderContext creat TextLayout::TextLayout null null FontRenderContext::FontRenderContext TextLayout::TextLayout frc FontRenderContext::FontRenderContext Graphics::Graphics coordin render TextLayout::TextLayout coordin render TextLayout::TextLayout Rectangle::Rectangle bound pixel affect
TextLayout::equals return specifi Object::Object TextLayout::TextLayout object specifi Object::Object equal TextLayout::TextLayout obj Object::Object test equal specifi Object::Object equal TextLayout::TextLayout fals
TextLayout::toString return debug TextLayout::TextLayout textlin TextLayout::TextLayout String::String
FontRenderContext::FontRenderContext construct FontRenderContext::FontRenderContext object option Object::Object valu determin newli construct object anti alias fraction metric tx transform scale typograph point pixel FontRenderContext::FontRenderContext null ident transform aahint text antialias render hint valu defin valu throw IllegalArgumentException::IllegalArgumentException specifi case mode implement depend fmhint text fraction render hint valu defin specifi case mode implement depend valu throw IllegalArgumentException::IllegalArgumentException
NumericShaper::NumericShaper numericshap convert latin european digit unicod decim digit user primarili peopl wish data use nation digit shape find conveni repres data intern use latin european digit interpret deprec numer shape selector charact 206e instanc numericshap typic appli attribut text attribut TextAttribute::TextAttribute exampl snippet caus TextLayout::TextLayout shape european digit arab arab context perform numer shape explicit use instanc numericshap snippet demonstr bit mask enum base unicod rang support program interfac repres unicod rang script specif digit bit mask base enum base multipl rang specifi ore bit mask base constant creat Set::Set constant enum base rang super set bit mask base interfac mix includ serial unicod rang valu map counterpart where map numericshap rang arab numericshap arab unmapp rang valu specifi numericshap rang balines rang ignor decim digit preced unicod rang set decim digit multipl decim digit set specifi unicod rang set take preced follow
NumericShaper::Range numericshap convert latin european digit unicod decim digit user primarili peopl wish data use nation digit shape find conveni repres data intern use latin european digit interpret deprec numer shape selector charact 206e instanc numericshap typic appli attribut text attribut TextAttribute::TextAttribute exampl snippet caus TextLayout::TextLayout shape european digit arab arab context perform numer shape explicit use instanc numericshap snippet demonstr bit mask enum base unicod rang support program interfac repres unicod rang script specif digit bit mask base enum base multipl rang specifi ore bit mask base constant creat Set::Set constant enum base rang super set bit mask base interfac mix includ serial unicod rang valu map counterpart where map numericshap rang arab numericshap arab unmapp rang valu specifi numericshap rang balines rang ignor decim digit preced unicod rang set decim digit multipl decim digit set specifi unicod rang set take preced follow numericshap rang repres unicod rang script decim digit exampl rang thai digit thai digit zero 0e50 thai digit nine 0e59 rang enum replac tradit bit mask base valu support unicod rang bit mask base exampl use bit mask written use enum
NumericShaper::getRangeSet return Set::Set repres unicod rang Range::NumericShaper shape unicod rang shape
NumericShaper::toString return String::String describ shaper debug purpos String::String describ shaper
TextAttribute::TextAttribute TextAttribute::TextAttribute defin attribut key attribut valu text render TextAttribute::TextAttribute instanc attribut key identifi attribut handl text attribut constant defin attribut valu text attribut document provid type valu relev predefin constant default effect attribut absent valid valu limit descript effect valu valu attribut immut where valu limit given valu set reserv futur use valu treat default valu null treat default valu result default behavior valu proper type attribut ignor ident valu matter actual valu exampl textattribut weight bold float indic TextAttribute::WEIGHT attribut valu type Number::Number TextAttribute::WEIGHT width TextAttribute::POSTURE size TextAttribute::JUSTIFICATION TextAttribute::TRACKING vari natur rang restrict predefin constant number floatvalu get actual valu Number::Number valu TextAttribute::WEIGHT width TextAttribute::POSTURE interpol system select nearest avail font use techniqu approxim user request summari attribut
TextAttribute::FAMILY AttributedCharacterIterator::Attribute key font name valu instanc String::String default valu default caus platform default font famili Font::Font defin constant logic font name defin valu pass name Font::Font constructor logic physic font name allow font request name found default font note attribut unfortun misnam specifi face name famili thus valu lucida bold select face exist note request face exist default regular weight bold name part face name separ request font weight bold
TextAttribute::WEIGHT AttributedCharacterIterator::Attribute key weight font valu instanc Number::Number default valu TextAttribute::WEIGHT regular constant valu see valu TextAttribute::WEIGHT bold correspond style valu font bold pass Font::Font constructor valu rough ratio stem width regular weight system interpol valu
TextAttribute::WIDTH AttributedCharacterIterator::Attribute key width font valu instanc Number::Number default valu TextAttribute::WIDTH regular constant valu see valu rough ratio advanc width regular width system interpol valu
TextAttribute::POSTURE AttributedCharacterIterator::Attribute key postur font valu instanc Number::Number default valu TextAttribute::POSTURE regular constant valu valu TextAttribute::POSTURE obliqu correspond style valu font ital pass Font::Font constructor valu rough slope stem font express run rise posit valu lean system interpol valu affect font ital angl return font getitalicangl
TextAttribute::SIZE AttributedCharacterIterator::Attribute key font size valu instanc Number::Number default valu 12pt correspond size paramet Font::Font constructor size impact render perform render system render text size negat size illeg result default size note appear metric 12pt font 2x transform 24 point font transform
TextAttribute::SUPERSCRIPT AttributedCharacterIterator::Attribute key superscript subscript valu instanc Integer::Integer default valu mean superscript subscript constant valu see valu respect valu greater magnitud defin greater level superscript subscript exampl correspond super superscript super super superscript similar negat valu subscript level valu rang reserv behavior platform depend TextAttribute::SUPERSCRIPT impact ascent descent font ascent descent becom negat
TextAttribute::FONT AttributedCharacterIterator::Attribute key provid font use render text valu instanc default valu null indic normal resolut Font::Font attribut perform TextLayout::TextLayout AttributedCharacterIterator::AttributedCharacterIterator work term map textattribut normal attribut examin select configur Font::Font instanc TextAttribute::FONT attribut associ Font::Font provid user overrid resolut font attribut Font::Font forc use particular Font::Font instanc allow user specifi subclass Font::Font case where Font::Font subclass TextAttribute::FONT situat where client Font::Font instanc use Map::Map typic attribut Map::Map TextAttribute::FONT attribut Map::Map common case specifi attribut individu TextAttribute::FONT desir TextAttribute::FONT attribut Map::Map render system merg attribut defin Font::Font addit attribut merg process classifi textattribut group group primari group consid fundament select metric behavior font attribut TextAttribute::FAMILY TextAttribute::WEIGHT width TextAttribute::POSTURE size TextAttribute::TRANSFORM TextAttribute::SUPERSCRIPT TextAttribute::TRACKING group secondari group consist defin attribut TextAttribute::FONT generat Map::Map first Font::Font obtain TextAttribute::FONT attribut attribut extract Map::Map secondari attribut origin Map::Map ad Map::Map thus valu primari attribut come sole Font::Font valu secondari attribut origin Font::Font overridden valu Map::Map font Map::Map constructor Font::deriveFont process TextAttribute::FONT attribut creat Font::Font object instead handl TextAttribute::FONT attribut
TextAttribute::CHAR replac AttributedCharacterIterator::Attribute key user defin glyph display lieu font standard glyph charact valu intanc GraphicAttribute::GraphicAttribute default valu null indic standard glyph font attribut reserv space graphic compon embed line text requir correct posit inlin compon line bidirect reorder see perform charact unicod point render use GraphicAttribute::GraphicAttribute typic charact attribut appli 92 ufffc GraphicAttribute::GraphicAttribute determin logic visual bound text actual Font::Font valu ignor
TextAttribute::UNDERLINE AttributedCharacterIterator::Attribute key underlin valu instanc Integer::Integer default valu mean underlin constant valu underlin affect visual bound outlin text
TextAttribute::STRIKETHROUGH AttributedCharacterIterator::Attribute key strikethrough valu instanc Boolean::Boolean default valu fals mean strikethrough constant valu strikethrough affect visual bound outlin text
TextAttribute::RUN direct AttributedCharacterIterator::Attribute key run direct line valu instanc Boolean::Boolean default valu null indic standard Bidi::Bidi algorithm determin run direct valu constant determin valu pass constructor select primari direct text paragraph note attribut valu text paragraph behavior undetermin
TextAttribute::BIDI embed AttributedCharacterIterator::Attribute key embed level text valu instanc Integer::Integer default valu null indic bidirect algorithm run explicit embed posit valu 61 embed level negat valu 61 overrid level valu mean base line direct level pass embed level array constructor note attribut anywher paragraph unicod bidi control charact rlo lro rle lre pdf paragraph disregard run text where attribut treat valu
TextAttribute::JUSTIFICATION AttributedCharacterIterator::Attribute key justif paragraph valu instanc Number::Number default valu indic justif use full width valu pin rang constant specifi fraction extra space use justif request TextLayout::TextLayout exampl line 50 point wide request justifi 70 point valu 75 pad use quarter remain space 15 point result line 65 point length note valu text paragraph behavior undetermin
TextAttribute::INPUT underlin AttributedCharacterIterator::Attribute key input underlin valu instanc Integer::Integer default valu mean underlin constant valu see conjunct desir primari purpos use input use underlin ornament confus user input underlin affect visual bound outlin text
TextAttribute::SWAP color AttributedCharacterIterator::Attribute key swap foreground background paint valu instanc Boolean::Boolean default valu fals mean swap color constant valu defin attribut set Paint::Paint background Paint::Paint current Graphics::Graphics attribut set Paint::Paint foreground system find contrast color resolv background text visibl
TextAttribute::KERNING AttributedCharacterIterator::Attribute key request kern valu instanc Integer::Integer default valu request kern constant valu default advanc singl charact appropri charact sequenc exampl kern adjac charact appear separ space kern caus select sequenc charact space differ pleas visual appear
TextAttribute::LIGATURES AttributedCharacterIterator::Attribute key enabl option ligatur valu instanc Integer::Integer default valu mean use option ligatur constant valu defin ligatur requir write system enabl
TextAttribute::TRACKING AttributedCharacterIterator::Attribute key control track valu instanc Number::Number default valu mean addit track constant valu track valu multipli font point size pass font transform determin addit amount add advanc glyph cluster posit track valu inhibit format option ligatur track valu typic valu rang general desir
TextLine::fastCreateTextLine creat textlin text Font::Font abl display text attribut null equival use empti Map::Map attribut
TextLine::createLineFromText creat textlin Font::Font charact data rang rang relat StyledParagraph::StyledParagraph charact array
MultipleMaster::deriveMMFont creat instanc multipl master font base detail metric case error null return glyphwidth array float repres desir width glyph font space avgstemwidth averag stem width overal font font space typicalcapheight height typic upper case char typicalxheight height typic lower case char italicangl angl ital lean degre counterclockwis vertic Font::Font object instanc MultipleMaster::MultipleMaster base specifi metric
TextHitInfo::equals return specifi Object::Object TextHitInfo::TextHitInfo equal TextHitInfo::TextHitInfo obj Object::Object test equal specifi Object::Object equal TextHitInfo::TextHitInfo fals
TextHitInfo::toString return String::String repres hit debug use String::String repres TextHitInfo::TextHitInfo
ImageGraphicAttribute::equals compar ImageGraphicAttribute::ImageGraphicAttribute specifi rhs Object::Object compar equal ImageGraphicAttribute::ImageGraphicAttribute equal rhs fals
StyledParagraph::StyledParagraph store Font::Font GraphicAttribute::GraphicAttribute decor interv paragraph style text current optim number interv preferr
StyledParagraph::getRunLimit return index Font::Font GraphicAttribute::GraphicAttribute dcorat given index index valid index paragraph first index where chang attribut index
StyledParagraph::getFontOrGraphicAt return Font::Font GraphicAttribute::GraphicAttribute effect given index client test type return valu determin index valid index paragraph Font::Font GraphicAttribute::GraphicAttribute index
StyledParagraph::addToVector append given Object::Object given Vector::Vector add given index given start array start array room index array creat return
StyledParagraph::addInputMethodAttrs return Map::Map entri oldstyl input entri
StyledParagraph::getGraphicOrFont extract GraphicAttribute::GraphicAttribute Font::Font given attribut attribut contain GraphicAttribute::GraphicAttribute Font::Font Font::Font famili entri return null
OpenType::OpenType OpenType::OpenType interfac repres OpenType::OpenType truetyp font interfac make obtain sfnt tabl font particular Font::Font object implement interfac truetyp OpenType::OpenType font see OpenType::OpenType specif
OpenType::TAG head Font::Font header tabl tag head open Window::Type specif
OpenType::TAG fpgm Font::Font program tabl tag fpgm open Window::Type specif
OpenType::TAG fvar Font::Font variat tabl tag fvar open Window::Type specif
OpenType::TAG fdsc Font::Font descriptor tabl tag fdsc open Window::Type specif
OpenType::TAG fmtx Font::Font metric tabl tag fmtx open Window::Type specif
OpenType::getFontTable return tabl array byte specifi tag tag sfnt tabl includ item cmap name head byte array return copi font data memori strsfnttag charact String::String byte array tabl contain font data correspond specifi tag
OpenType::getFontTable return subset tabl array byte specifi tag tag sfnt tabl includ item cmap name head byte array return copi font data memori strsfnttag charact String::String offset index first byte return tabl count number byte return tabl subset tabl correspond strsfnttag contain byte start offset byte includ count byte
OpenType::getFontTableSize return size tabl specifi tag tag sfnt tabl includ item cmap name head strsfnttag charact String::String size tabl correspond specifi tag
ShapeGraphicAttribute::equals compar ShapeGraphicAttribute::ShapeGraphicAttribute specifi Object::Object rhs Object::Object compar equal ShapeGraphicAttribute::ShapeGraphicAttribute equal rhs fals
GlyphVector::GlyphVector GlyphVector::GlyphVector object collect glyph contain geometr placement glyph transform coordin space correspond devic GlyphVector::GlyphVector ultim display GlyphVector::GlyphVector attempt interpret sequenc glyph contain relationship adjac glyph sequenc sole determin placement glyph visual coordin space instanc GlyphVector::GlyphVector creat text process cach intermedi represent text creation subsequ cach GlyphVector::GlyphVector use render fastest visual represent charact user GlyphVector::GlyphVector associ exact Font::Font provid data use relat Font::Font addit metric obtain GlyphVector::GlyphVector general geometr scaleabl pixel space depend grid fit algorithm Font::Font facilit accur measur GlyphVector::GlyphVector compon glyph specifi scale transform anti alia mode fraction metric mode creat GlyphVector::GlyphVector characterist deriv destin devic glyph GlyphVector::GlyphVector obtain posit glyph transform associ glyph metric glyph context GlyphVector::GlyphVector metric glyph transform specifi render hint specif instanc glyph GlyphVector::GlyphVector alter data creat GlyphVector::GlyphVector alter state GlyphVector::GlyphVector adjust posit glyph GlyphVector::GlyphVector appropri applic perform justif oper glyph transform individu glyph GlyphVector::GlyphVector primarili use effect return visual logic pixel bound entir GlyphVector::GlyphVector individu glyph GlyphVector::GlyphVector return GlyphVector::GlyphVector individu glyph GlyphVector::GlyphVector
GlyphVector::getFont return Font::Font associ GlyphVector::GlyphVector Font::Font creat GlyphVector::GlyphVector
GlyphVector::getGlyphCode return glyphcod specifi glyph return valu meaningless Font::Font object creat GlyphVector::GlyphVector glyphindex index GlyphVector::GlyphVector correspond glyph retriev glyphcod glyphcod glyph specifi glyphindex
GlyphVector::getGlyphCodes return array glyphcod specifi glyph content return valu meaningless Font::Font creat GlyphVector::GlyphVector conveni perform process glyphcod array pass array creat beginglyphindex index GlyphVector::GlyphVector start retriev glyphcod numentri number glyphcod retriev codereturn array receiv glyphcod return array glyphcod specifi glyph
GlyphVector::getPixelBounds return pixel bound GlyphVector::GlyphVector render graphic given FontRenderContext::FontRenderContext given locat renderfrc FontRenderContext::FontRenderContext GlyphVector::GlyphVector null null FontRenderContext::FontRenderContext GlyphVector::GlyphVector default implement return visual bound offset integ valu return integ rectangl enclos visual bound ignor frc subclass overrid renderfrc FontRenderContext::FontRenderContext Graphics::Graphics coordin render GlyphVector::GlyphVector coordin render GlyphVector::GlyphVector Rectangle::Rectangle bound pixel affect
GlyphVector::getGlyphPixelBounds return pixel bound glyph index GlyphVector::GlyphVector render Graphics::Graphics given FontRenderContext::FontRenderContext given locat renderfrc FontRenderContext::FontRenderContext GlyphVector::GlyphVector null null FontRenderContext::FontRenderContext GlyphVector::GlyphVector default implement return visual bound glyph offset integ valu ignor frc subclass overrid index index glyph renderfrc FontRenderContext::FontRenderContext Graphics::Graphics posit render GlyphVector::GlyphVector posit render GlyphVector::GlyphVector Rectangle::Rectangle bound pixel affect
FileDialog::readObject read ObjectInputStream::ObjectInputStream perform backward compat check convert dir file equal empti string null ObjectInputStream::ObjectInputStream read
LinearGradientPaintContext::LinearGradientPaintContext Constructor::Constructor LinearGradientPaintContext::LinearGradientPaintContext paint LinearGradientPaint::LinearGradientPaint context creat cm ColorModel::ColorModel receiv Paint::Paint data hint devicebound devic space bound box graphic primit render userbound user space bound box graphic primit render AffineTransform::AffineTransform user space devic space gradienttransform concaten hint hint context object use choos render altern start gradient start point user space end gradient end point user space fraction fraction specifi gradient distribut color gradient color cyclemethod cycl reflect repeat colorspac colorspac use interpol srgb linear rgb
GradientPaint::GradientPaint GradientPaint::GradientPaint provid fill linear color gradient pattern p1 PageAttributes::C1 Point::Point p2 Color::Color PageAttributes::C2 specifi user space Color::Color p1 p2 connect line proport chang PageAttributes::C1 PageAttributes::C2 point extend p1 p2 connect line color point perpendicular extend p1 p2 connect line point extend line p1 p2 segment color gradient cyclic point extend p1 p2 connect line cycl forth color PageAttributes::C1 PageAttributes::C2 gradient acycl point p1 side segment constant Color::Color PageAttributes::C1 point p2 side constant Color::Color PageAttributes::C2 10 feb 1997
GradientPaint::GradientPaint construct acycl GradientPaint::GradientPaint object x1 coordin first specifi Point::Point user space y1 coordin first specifi Point::Point user space color1 Color::Color first specifi Point::Point x2 coordin specifi Point::Point user space y2 coordin specifi Point::Point user space color2 Color::Color specifi Point::Point
GradientPaint::GradientPaint construct acycl GradientPaint::GradientPaint object pt1 first specifi Point::Point user space color1 Color::Color first specifi Point::Point pt2 specifi Point::Point user space color2 Color::Color specifi Point::Point
GradientPaint::GradientPaint construct cyclic acycl GradientPaint::GradientPaint object depend boolean paramet x1 coordin first specifi Point::Point user space y1 coordin first specifi Point::Point user space color1 Color::Color first specifi Point::Point x2 coordin specifi Point::Point user space y2 coordin specifi Point::Point user space color2 Color::Color specifi Point::Point cyclic gradient pattern cycl repeat color fals
GradientPaint::GradientPaint construct cyclic acycl GradientPaint::GradientPaint object depend boolean paramet pt1 first specifi Point::Point user space color1 Color::Color first specifi Point::Point pt2 specifi Point::Point user space color2 Color::Color specifi Point::Point cyclic gradient pattern cycl repeat color fals
GradientPaint::getColor1 return color PageAttributes::C1 anchor point p1 Color::Color object color anchor p1
GradientPaint::getColor2 return color PageAttributes::C2 anchor point p2 Color::Color object color anchor p2
Polygon::getBounds get bound box Polygon::Polygon bound box smallest side parallel axe coordin space complet contain Polygon::Polygon Rectangle::Rectangle defin bound Polygon::Polygon
Polygon::contains determin specifi Polygon::Polygon specifi Point::Point test Polygon::Polygon contain Point::Point fals
Graphics::setColor set graphic context current color specifi color subsequ graphic oper use graphic context use specifi color render color
Graphics::setClip set current clip area arbitrari clip shape object implement Shape::Shape interfac set clip Shape::Shape object guarante support Shape::Shape object obtain Graphics::getClip Rectangle::Rectangle object set user clip independ clip associ devic bound window visibl clip Shape::Shape use set clip
Graphics::drawRect draw outlin specifi rectangl edg rectangl nbsp nbsp width top bottom edg nbsp nbsp height rectangl drawn use graphic context current color coordin rectangl drawn coordin rectangl drawn width width rectangl drawn height height rectangl drawn
Graphics::drawString draw text given specifi string use graphic context current font color baselin leftmost charact posit nbsp graphic context coordin system str string drawn coordin coordin
Graphics::drawString render text specifi iter appli attribut accord specif baselin leftmost charact posit nbsp graphic context coordin system iter iter text drawn coordin coordin
Graphics::drawImage draw specifi imag current avail imag drawn top corner nbsp graphic context coordin space transpar pixel imag affect pixel return case complet imag load dither convert current output devic imag complet load pixel longer chang drawimag return drawimag return fals imag becom avail time draw frame anim process load imag notifi specifi imag observ img specifi imag drawn img null coordin coordin observ object notifi imag convert fals imag pixel chang
Graphics::drawImage draw specifi imag scale fit specifi rectangl imag drawn specifi rectangl graphic context coordin space scale necessari transpar pixel affect pixel return case entir imag scale dither convert current output devic current output represent complet drawimag return fals imag becom avail process load imag notifi imag observ call imageupd scale version imag necessarili avail unscal version imag construct output devic size imag cach separ generat origin data separ imag product sequenc img specifi imag drawn img null coordin coordin width width rectangl height height rectangl observ object notifi imag convert fals imag pixel chang
Graphics::drawImage draw specifi imag current avail imag drawn top corner nbsp graphic context coordin space transpar pixel drawn specifi background color oper equival fill rectangl width height specifi imag given color draw imag top possibl effici return case complet imag load dither convert current output devic imag complet load pixel longer chang drawimag return drawimag return fals imag becom avail time draw frame anim process load imag notifi specifi imag observ img specifi imag drawn img null coordin coordin bgcolor background color paint non opaqu portion imag observ object notifi imag convert fals imag pixel chang
Graphics::drawImage draw specifi imag scale fit specifi rectangl imag drawn specifi rectangl graphic context coordin space scale necessari transpar pixel drawn specifi background color oper equival fill rectangl width height specifi imag given color draw imag top possibl effici return case entir imag scale dither convert current output devic current output represent complet drawimag return fals imag becom avail process load imag notifi specifi imag observ scale version imag necessarili avail unscal version imag construct output devic size imag cach separ generat origin data separ imag product sequenc img specifi imag drawn img null coordin coordin width width rectangl height height rectangl bgcolor background color paint non opaqu portion imag observ object notifi imag convert fals imag pixel chang
Graphics::drawImage draw specifi area specifi imag current avail scale fli fit specifi area destin drawabl surfac transpar pixel affect pixel return case imag area drawn scale dither convert current output devic current output represent complet drawimag return fals imag becom avail process load imag notifi specifi imag observ use unscal version imag render scale rectangl perform requir scale fli use cach scale version imag oper scale imag sourc destin perform first coordin sourc rectangl map first coordin destin rectangl sourc coordin map destin coordin subimag scale flip preserv map img specifi imag drawn img null dx1 coordin first corner destin rectangl dy1 coordin first corner destin rectangl dx2 coordin corner destin rectangl dy2 coordin corner destin rectangl sx1 coordin first corner sourc rectangl sy1 coordin first corner sourc rectangl sx2 coordin corner sourc rectangl sy2 coordin corner sourc rectangl observ object notifi imag scale convert fals imag pixel chang
Graphics::drawImage draw specifi area specifi imag current avail scale fli fit specifi area destin drawabl surfac transpar pixel drawn specifi background color oper equival fill rectangl width height specifi imag given color draw imag top possibl effici return case imag area drawn scale dither convert current output devic current output represent complet drawimag return fals imag becom avail process load imag notifi specifi imag observ use unscal version imag render scale rectangl perform requir scale fli use cach scale version imag oper scale imag sourc destin perform first coordin sourc rectangl map first coordin destin rectangl sourc coordin map destin coordin subimag scale flip preserv map img specifi imag drawn img null dx1 coordin first corner destin rectangl dy1 coordin first corner destin rectangl dx2 coordin corner destin rectangl dy2 coordin corner destin rectangl sx1 coordin first corner sourc rectangl sy1 coordin first corner sourc rectangl sx2 coordin corner sourc rectangl sy2 coordin corner sourc rectangl bgcolor background color paint non opaqu portion imag observ object notifi imag scale convert fals imag pixel chang
Graphics::toString return String::String object repres Graphics::Graphics object valu string represent graphic context
Graphics::getClipBounds return bound rectangl current clip area coordin rectangl relat coordin system origin graphic context differ exist rectangl instead alloc refer user clip independ clip associ devic bound window visibl clip previous set clip clear use setclip null return specifi Rectangle::Rectangle rectangl where current clip area copi current valu rectangl overwritten bound rectangl current clip area
FontMetrics::FontMetrics FontMetrics::FontMetrics defin font metric object encapsul render particular font particular screen note subclass form close mutual recurs loop take care implement loop prevent infinit recurs subclass particular minim suggest set overrid order ensur correct prevent infinit recurs subset equal feasibl note implement ineffici overridden effici toolkit specif implement ask place charact posit nbsp charact place refer point shown dot accompani imag put posit refer point specifi horizont line call baselin charact normal print baselin charact align addit charact font ascent descent advanc width ascent amount charact ascend baselin descent amount charact descend baselin advanc width indic posit awt place charact array charact string ascent descent advanc width ascent array maximum ascent charact array descent maximum descent charact array advanc width sum advanc width charact charact array advanc String::String distanc baselin String::String distanc width center align String::String note advanc String::String necessarili sum advanc charact measur isol width charact vari depend context exampl arab text shape charact chang order connect charact script charact sequenc repres singl shape call ligatur measur charact individu account transform font metric baselin relat mean general independ rotat appli font modulo grid hint effect see
FontMetrics::FontMetrics creat FontMetrics::FontMetrics object find height width specifi Font::Font specif charact glyph Font::Font font Font::Font
FontMetrics::getFont get Font::Font describ FontMetrics::FontMetrics object Font::Font describ FontMetrics::FontMetrics object
FontMetrics::getLeading determin standard lead Font::Font describ FontMetrics::FontMetrics object standard lead interlin space logic amount space reserv descent line text ascent line height metric calcul includ extra space standard lead Font::Font
FontMetrics::getAscent determin font ascent Font::Font describ FontMetrics::FontMetrics object font ascent distanc font baselin top alphanumer charact charact Font::Font extend font ascent line font ascent Font::Font
FontMetrics::getDescent determin font descent Font::Font describ FontMetrics::FontMetrics object font descent distanc font baselin bottom alphanumer charact descend charact Font::Font extend font descent line font descent Font::Font
FontMetrics::getMaxAscent determin maximum ascent Font::Font describ FontMetrics::FontMetrics object charact extend further font baselin height maximum ascent charact Font::Font
FontMetrics::getMaxDescent determin maximum descent Font::Font describ FontMetrics::FontMetrics object charact extend further font baselin height maximum descent charact Font::Font
FontMetrics::getMaxDecent backward compat maximum descent charact Font::Font
FontMetrics::getMaxAdvance get maximum advanc width charact Font::Font advanc distanc leftmost point rightmost point string baselin advanc String::String necessarili sum advanc charact maximum advanc width charact Font::Font maximum advanc width known
FontMetrics::charWidth return advanc width specifi charact Font::Font advanc distanc leftmost point rightmost point charact baselin note advanc String::String necessarili sum advanc charact doesn valid specifi charact valid unicod point caller valid charact valu use necessari codepoint charact unicod point measur advanc width specifi charact Font::Font describ FontMetrics::FontMetrics object
FontMetrics::charWidth return advanc width specifi charact Font::Font advanc distanc leftmost point rightmost point charact baselin note advanc String::String necessarili sum advanc charact note handl support unicod charact includ supplementari charact use ch charact measur advanc width specifi charact Font::Font describ FontMetrics::FontMetrics object
FontMetrics::stringWidth return total advanc width show specifi String::String Font::Font advanc distanc leftmost point rightmost point string baselin note advanc String::String necessarili sum advanc charact str String::String measur advanc width specifi String::String Font::Font describ FontMetrics::FontMetrics
FontMetrics::charsWidth return total advanc width show specifi array charact Font::Font advanc distanc leftmost point rightmost point string baselin advanc String::String necessarili sum advanc charact equival measur String::String charact specifi rang data array charact measur start offset charact array len number charact measur array advanc width subarray specifi char array font describ FontMetrics::FontMetrics object
FontMetrics::bytesWidth return total advanc width show specifi array byte Font::Font advanc distanc leftmost point rightmost point string baselin advanc String::String necessarili sum advanc charact equival measur String::String charact specifi rang data array byte measur start offset byte array len number byte measur array advanc width subarray specifi byte array Font::Font describ FontMetrics::FontMetrics object
FontMetrics::getWidths get advanc width first 256 charact Font::Font advanc distanc leftmost point rightmost point charact baselin note advanc String::String necessarili sum advanc charact array store advanc width charact Font::Font describ FontMetrics::FontMetrics object
FontMetrics::hasUniformLineMetrics check see Font::Font uniform line metric composit font consist font cover various charact set case fontlinemetr object uniform font ascent descent metric necessari line measur line break font uniform line metric fals
FontMetrics::getLineMetrics return object specifi String::String specifi context str specifi String::String context specifi Graphics::Graphics context LineMetrics::LineMetrics object creat specifi String::String Graphics::Graphics context
FontMetrics::getLineMetrics return object specifi String::String specifi context str specifi String::String beginindex initi offset str limit end offset str context specifi Graphics::Graphics context LineMetrics::LineMetrics object creat specifi String::String Graphics::Graphics context
FontMetrics::getLineMetrics return object specifi specifi context ci specifi CharacterIterator::CharacterIterator beginindex initi offset ci limit end index ci context specifi Graphics::Graphics context LineMetrics::LineMetrics object creat specifi argument
FontMetrics::getStringBounds return bound specifi String::String specifi Graphics::Graphics context bound layout String::String note return bound baselin relat coordin see str specifi String::String context specifi Graphics::Graphics context bound box specifi String::String specifi Graphics::Graphics context
FontMetrics::getStringBounds return bound specifi String::String specifi Graphics::Graphics context bound layout String::String note return bound baselin relat coordin see str specifi String::String beginindex offset begin str limit end offset str context specifi Graphics::Graphics context Rectangle2D::Rectangle2D bound box specifi String::String specifi Graphics::Graphics context
FontMetrics::getStringBounds return bound specifi array charact specifi Graphics::Graphics context bound layout String::String creat specifi array charact beginindex limit note return bound baselin relat coordin see char array charact beginindex initi offset array charact limit end offset array charact context specifi Graphics::Graphics context Rectangle2D::Rectangle2D bound box specifi charact array specifi Graphics::Graphics context
FontMetrics::getStringBounds return bound charact index specifi CharacterIterator::CharacterIterator specifi Graphics::Graphics context note return bound baselin relat coordin see ci specifi CharacterIterator::CharacterIterator beginindex initi offset ci limit end index ci context specifi Graphics::Graphics context Rectangle2D::Rectangle2D bound box charact index specifi CharacterIterator::CharacterIterator specifi Graphics::Graphics context
FontMetrics::toString return represent FontMetrics::FontMetrics object valu String::String String::String represent FontMetrics::FontMetrics object
AWTEvent::setSource retarget event sourc typic retarget event lightweight child Component::Component origin heavyweight sourc intend event target subsystem client defin keyboardfocusmanag general client use newsourc Object::Object event dispatch
AWTEvent::toString return String::String represent object
Component::Component compon object graphic represent display screen interact user exampl compon button checkbox scrollbar typic graphic user interfac compon abstract superclass nonmenu relat abstract Window::Window Toolkit::Toolkit compon Class::Class compon extend creat lightweight compon lightweight compon compon associ nativ window contrari heavyweight compon associ nativ window distinguish kind compon lightweight heavyweight compon mix singl compon hierarchi correct oper mix hierarchi compon hierarchi valid hierarchi get invalid chang bound compon ad remov compon contain hierarchi valid afterward mean invok top invalid contain hierarchi serial note awt listen conform Serializable::Serializable protocol save object store awt object listen aren mark serializ drop writeobject time develop consid implic make object serializ situat watch exampl serial abutton caus myapp refer serial listen serializ coincid design separ decis myapp ActionListener::ActionListener serializ use nest exampl note paint mechan utilit awt swing includ write effici paint see detail focus subsystem see section tutori
Component::BaselineResizeBehavior Enumeration::Enumeration common baselin compon chang size chang baselin resiz behavior primarili layout manag know posit baselin chang compon size chang general baselin resiz behavior valid size greater equal minimum size actual minimum size develop specifi minimum size size smaller minimum size baselin chang baselin resiz behavior indic similar size approach integ max valu max valu baselin chang baselin resiz behavior indic
Component::Component construct compon Class::Class compon extend creat lightweight compon util opaqu nativ window lightweight compon host nativ contain somewher higher compon tree exampl Frame::Frame object
Component::checkGD check compon GraphicsDevice::GraphicsDevice idstr match string argument
Component::getLocation get locat compon form point specifi compon top corner locat relat parent coordin space due asynchron natur nativ event handl return outdat valu instanc call setloc rapid success reason recommend obtain compon posit awt event componentlisten componentmov call oper system finish move compon instanc Point::Point repres top corner compon bound coordin space compon parent
Component::getLocationOnScreen get locat compon form point specifi compon top corner screen coordin space instanc Point::Point repres top corner compon bound coordin space screen
Component::setLocation move compon locat top corner locat specifi point Point::Point given parent coordin space chang layout relat therefor invalid compon hierarchi point defin top corner locat given coordin space compon parent
Component::getSize return size compon form Dimension::Dimension object height field Dimension::Dimension object contain compon height width field Dimension::Dimension object contain compon width Dimension::Dimension object indic size compon
Component::getBounds get bound compon form Rectangle::Rectangle object bound specifi compon width height locat relat parent rectangl indic compon bound
Component::getBounds store bound compon return valu rv return rv rv null Rectangle::Rectangle alloc version getbound use caller want avoid alloc Rectangle::Rectangle object heap rv return valu modifi compon bound rv
Component::getSize store width height compon return valu rv return rv rv null Dimension::Dimension object alloc version getsiz use caller want avoid alloc Dimension::Dimension object heap rv return valu modifi compon size rv
Component::getLocation store origin compon return valu rv return rv rv null Point::Point alloc version getloc use caller want avoid alloc Point::Point object heap rv return valu modifi compon locat rv
Component::isLightweight lightweight compon doesn nativ toolkit peer subclass compon Container::Container defin packag Button::Button Scrollbar::Scrollbar lightweight swing compon lightweight return fals compon display imposs determin weight undisplay compon compon lightweight peer fals nativ peer peer
Component::setMaximumSize set maximum size compon constant valu subsequ call getmaximums return valu set maximum size null restor default behavior maximums Dimension::Dimension contain desir maximum allow size
Component::getFontMetrics get font metric specifi font warn Font::Font metric affect provid return metric default render context match render Component::Component function instead metric obtain render time call text measur font font font metric obtain font metric font
Component::setFocusTraversalKeys set focus travers key given travers oper Component::Component default valu compon focus travers key implement depend sun recommend implement particular nativ platform use default valu recommend window unix list recommend sun awt implement disabl travers key use empti Set::Set collect empti set recommend use awtkeystrok client specifi specif keyev key press key releas focus travers oper occur regardless KeyEvent::KeyEvent specifi keyev relat focus travers key includ associ key type event consum dispatch Component::Component runtim error specifi key type event map focus travers oper map event multipl default focus travers oper valu null specifi Set::Set Component::Component inherit Set::Set parent ancestor Component::Component null specifi Set::Set current keyboardfocusmanag default Set::Set throw ClassCastException::ClassCastException Object::Object keystrok awtkeystrok keyboardfocusmanag forward travers key keyboardfocusmanag backward travers key keyboardfocusmanag cycl travers key keystrok Set::Set awtkeystrok specifi oper bound
Component::getFocusTraversalKeys return Set::Set focus travers key given travers oper Component::Component see setfocustraversalkey full descript key Set::Set travers key explicit defin Component::Component compon parent Set::Set return Set::Set explicit defin compon ancestor current keyboardfocusmanag default Set::Set return keyboardfocusmanag forward travers key keyboardfocusmanag backward travers key keyboardfocusmanag cycl travers key Set::Set awtkeystrok specifi oper Set::Set unmodifi empti null return
Component::areFocusTraversalKeysSet return Set::Set focus travers key given focus travers oper explicit defin Component::Component return fals Component::Component inherit Set::Set ancestor current KeyboardFocusManager::KeyboardFocusManager keyboardfocusmanag forward travers key keyboardfocusmanag backward travers key keyboardfocusmanag cycl travers key Set::Set focus travers key given focus travers oper explicit defin Component::Component fals
Component::addPropertyChangeListener add PropertyChangeListener::PropertyChangeListener listen list listen regist bound properti includ follow compon font font compon background color background compon foreground color foreground compon focus focus compon focus travers key enabl state focustraversalkeysen compon Set::Set forward travers key forwardfocustraversalkey compon Set::Set backward travers key backwardfocustraversalkey compon Set::Set cycl travers key upcyclefocustraversalkey compon prefer size preferreds compon minimum size minimums compon maximum size maximums compon name name note compon inherit bound properti event fire respons chang inherit properti listen null thrown action perform listen properti chang listen ad
Component::addPropertyChangeListener add PropertyChangeListener::PropertyChangeListener listen list specif properti specifi properti user defin follow compon font font compon background color background compon foreground color foreground compon focus focus compon focus travers key enabl state focustraversalkeysen compon Set::Set forward travers key forwardfocustraversalkey compon Set::Set backward travers key backwardfocustraversalkey compon Set::Set cycl travers key upcyclefocustraversalkey note compon inherit bound properti event fire respons chang inherit properti propertynam listen null thrown action taken propertynam properti name list listen properti chang listen ad
Component::firePropertyChange support report bound properti chang Object::Object properti call bound properti chang send appropri PropertyChangeEvent::PropertyChangeEvent regist propertychangelisten propertynam properti valu chang oldvalu properti previous valu newvalu properti valu
Component::writeObject write default serializ field stream write varieti serializ listen option data non serializ listen detect attempt made serial ObjectOutputStream::ObjectOutputStream write null termin sequenc pair pair consist String::String Object::Object String::String indic type object componentlistenerk indic ComponentListener::ComponentListener object focuslistenerk indic FocusListener::FocusListener object keylistenerk indic KeyListener::KeyListener object mouselistenerk indic MouseListener::MouseListener object mousemotionlistenerk indic MouseMotionListener::MouseMotionListener object inputmethodlistenerk indic InputMethodListener::InputMethodListener object hierarchylistenerk indic HierarchyListener::HierarchyListener object hierarchyboundslistenerk indic HierarchyBoundsListener::HierarchyBoundsListener object mousewheellistenerk indic MouseWheelListener::MouseWheelListener object option ComponentOrientation::ComponentOrientation inputmethodlisten
Component::readObject read ObjectInputStream::ObjectInputStream isn null add listen receiv varieti event fire compon unrecogn key valu ignor ObjectInputStream::ObjectInputStream read
Component::getAccessibleName get access name object return awt compon getnam general isn local name doesn mean user object fundament text object menu item access name text object save object tooltip tooltip text appropri String::String return local name object null object name
Component::setBackground set background color object transpar see isopaqu Color::Color background
Component::setForeground set foreground color object Color::Color foreground
Component::getFont get Font::Font object Font::Font support object null
Component::setFont set Font::Font object Font::Font object
Component::getFontMetrics get FontMetrics::FontMetrics object Font::Font FontMetrics::FontMetrics support object null
Component::contains check specifi point object bound where point coordin defin relat coordin system object Point::Point relat coordin system object object contain Point::Point fals
Component::getLocation get locat object relat parent form point specifi object top corner screen coordin space instanc Point::Point repres top corner object bound coordin space screen null object parent screen
Component::getBounds get bound object form Rectangle::Rectangle object bound specifi object width height locat relat parent rectangl indic compon bound null object screen
Component::setBounds set bound object form Rectangle::Rectangle object bound specifi object width height locat relat parent rectangl indic compon bound
Component::getSize return size object form Dimension::Dimension object height field Dimension::Dimension object contain object height width field Dimension::Dimension object contain object width Dimension::Dimension object indic size compon null object screen
Component::getAccessibleAt return access child exist contain local coordin Point::Point return null point defin top corner access given coordin space object parent access exist specifi locat els null
Component::isInstanceOf check given object instanc given obj Object::Object check classnam name fulli qualifi name object instanceof given fals obj classnam null
Dimension::Dimension Dimension::Dimension encapsul width height compon integ precis singl object associ properti compon defin compon LayoutManager::LayoutManager interfac return Dimension::Dimension object normal valu width height non negat integ constructor allow creat dimens prevent set negat valu properti valu width height negat behavior defin object undefin
Dimension::Dimension creat instanc Dimension::Dimension width zero height zero
Dimension::Dimension creat instanc Dimension::Dimension width height specifi dimens specifi dimens width height valu
Dimension::Dimension construct Dimension::Dimension initi specifi width specifi height width specifi width height specifi height
Dimension::setSize set size Dimension::Dimension object specifi width height doubl precis note width height larger integ max valu reset integ max valu width width Dimension::Dimension object height height Dimension::Dimension object
Dimension::getSize get size Dimension::Dimension object includ complet parallel getsiz defin compon size dimens instanc Dimension::Dimension width height
Dimension::setSize set size Dimension::Dimension object specifi size includ complet parallel setsiz defin compon size Dimension::Dimension object
Dimension::setSize set size Dimension::Dimension object specifi width height includ complet parallel setsiz defin compon width width Dimension::Dimension object height height Dimension::Dimension object
Dimension::hashCode return hash Dimension::Dimension hash Dimension::Dimension
Dimension::toString return string represent valu Dimension::Dimension object height width field intend debug purpos content format return string vari implement return string empti null string represent Dimension::Dimension object
icc ColorSpace::ICC colorspac icc colorspac implement abstract ColorSpace::ColorSpace represent devic independ devic depend color space base intern Color::Color consortium specif icc 12001 12 File::File Format::Format Color::Color profil see http www color org typic Color::Color ColorModel::ColorModel associ icc profil input display output profil see icc specif type icc profil abstract profil devic link profil name color profil contain appropri repres color space color imag devic see icc profil attempt creat icc colorspac object inappropri icc profil error icc profil repres transform color space profil monitor profil Connection::Connection space pcs profil interest tag imag color pcs devic independ space ciexyz space cielab space defin icc profil Format::Format specif profil interest invert transform explicit specifi transform go direct icc colorspac object requir convers pcs profil nativ space inadequ data correct perform convers icc colorspac object produc output specifi type color space type rgb type cmyk specif color valu output data undefin detail applet draw default color space manipul display import imag known color space applet get default color space colorspac getinst
icc ColorSpace::getMinValue return minimum normal color compon valu specifi compon type xyz space return minimum valu compon type lab space return 128 compon consist encod xyz lab profil Connection::Connection space icc specif type return compon use icc colorspac profil requir minimum compon valu necessari subclass overrid compon compon index minimum normal compon valu
icc ColorSpace::getMaxValue return maximum normal color compon valu specifi compon type xyz space return maximum valu 32767 32768 compon type lab space return 100 127 compon consist encod xyz lab profil Connection::Connection space icc specif type return compon use icc colorspac profil requir maximum compon valu necessari subclass overrid compon compon index maximum normal compon valu
icc ProfileGray::ICC profilegray subclass icc profil repres profil meet criteria color space type profil type gray profil includ graytrctag mediawhitepointtag tag exampl kind profil monochrom input profil monochrom display profil monochrom output profil getinst icc profil return icc profilegray object condit met advantag provid lookup tabl nativ abl use optim color convers case transform gray devic profil color space ciexyz profil Connection::Connection space devic gray compon transform lookup tone reproduct curv trc result treat achromat compon pcs invers transform convert pcs compon devic gray invers graytrc
icc ProfileRGB::ICC profilergb icc profilergb subclass icc profil repres profil meet criteria profil color space type rgb profil includ redcoloranttag greencoloranttag bluecoloranttag redtrctag greentrctag bluetrctag mediawhitepointtag tag icc Profile::ICC profil getinst return icc ProfileRGB::ICC profilergb object condit met compon matrix base input profil rgb display profil exampl type profil profil provid color transform matric lookup tabl nativ use optim color convers case transform devic profil color space ciexyz profil Connection::Connection space devic color compon first linear lookup correspond tone reproduct curv trc result linear rgb compon convert ciexyz pcs use 3x3 matrix construct rgb color invers transform perform convert pcs xyz compon linear rgb compon invers 3x3 matrix convert linear rgb devic rgb invers trcs
icc Profile::ICC profil represent color profil data devic independ devic depend color space base intern Color::Color consortium specif icc 12001 12 File::File Format::Format Color::Color profil see http www color org icc colorspac object construct appropri icc profil typic icc colorspac associ icc profil input display output profil see icc specif devic link abstract color space convers name color profil use tag color imag use purpos particular devic link profil provid improv perform convert devic color space icc profil repres transform color space profil monitor profil Connection::Connection space pcs profil interest tag imag color pcs specif devic independ space ciexyz space cielab space defin icc profil Format::Format specif profil interest invert transform explicit specifi transform go direct
icc Profile::icSigXYZData icc profil Color::Color space Window::Type signatur xyz
icc Profile::icSigLabData icc profil Color::Color space Window::Type signatur lab
icc Profile::icSigLuvData icc profil Color::Color space Window::Type signatur luv
icc Profile::icSigYCbCrData icc profil Color::Color space Window::Type signatur ycbr
icc Profile::icSigYxyData icc profil Color::Color space Window::Type signatur yxi
icc Profile::icSigRgbData icc profil Color::Color space Window::Type signatur rgb
icc Profile::icSigGrayData icc profil Color::Color space Window::Type signatur gray
icc Profile::icSigHsvData icc profil Color::Color space Window::Type signatur hsv
icc Profile::icSigHlsData icc profil Color::Color space Window::Type signatur hls
icc Profile::icSigCmykData icc profil Color::Color space Window::Type signatur cmyk
icc Profile::icSigCmyData icc profil Color::Color space Window::Type signatur cmi
icc Profile::icSigSpace2CLR icc profil Color::Color space Window::Type signatur 2clr
icc Profile::icSigSpace3CLR icc profil Color::Color space Window::Type signatur 3clr
icc Profile::icSigSpace4CLR icc profil Color::Color space Window::Type signatur 4clr
icc Profile::icSigSpace5CLR icc profil Color::Color space Window::Type signatur 5clr
icc Profile::icSigSpace6CLR icc profil Color::Color space Window::Type signatur 6clr
icc Profile::icSigSpace7CLR icc profil Color::Color space Window::Type signatur 7clr
icc Profile::icSigSpace8CLR icc profil Color::Color space Window::Type signatur 8clr
icc Profile::icSigSpace9CLR icc profil Color::Color space Window::Type signatur 9clr
icc Profile::icSigSpaceACLR icc profil Color::Color space Window::Type signatur aclr
icc Profile::icSigSpaceBCLR icc profil Color::Color space Window::Type signatur bclr
icc Profile::icSigSpaceCCLR icc profil Color::Color space Window::Type signatur cclr
icc Profile::icSigSpaceDCLR icc profil Color::Color space Window::Type signatur dclr
icc Profile::icSigSpaceECLR icc profil Color::Color space Window::Type signatur eclr
icc Profile::icSigSpaceFCLR icc profil Color::Color space Window::Type signatur fclr
icc Profile::icSigInputClass icc profil Class::Class signatur scnr
icc Profile::icSigDisplayClass icc profil Class::Class signatur mntr
icc Profile::icSigOutputClass icc profil Class::Class signatur prtr
icc Profile::icSigLinkClass icc profil Class::Class signatur link
icc Profile::icSigAbstractClass icc profil Class::Class signatur abst
icc Profile::icSigColorSpaceClass icc profil Class::Class signatur spac
icc Profile::icSigNamedColorClass icc profil Class::Class signatur nmcl
icc Profile::getInstance construct icc profil correspond data InputStream::InputStream throw IllegalArgumentException::IllegalArgumentException stream contain valid icc profil data throw ioexcept error occur read stream input stream read profil data icc profil object correspond data specifi InputStream::InputStream
icc Profile::getPCSType return color space type profil Connection::Connection space pcs return color space type constant defin ColorSpace::ColorSpace output color space profil input display output profil use tag color imag type xyz type lab interpret correspond specif color space defin icc specif devic link profil color space type constant color space type constant defin colorspac
icc Profile::writeObject write default serializ field stream write string array byte stream addit data stream serial String::String name cs constant defin profil object profil predefin color space exampl cs srgb string null byte array profil data profil predefin color space null written instead profil data futur version predefin color space ad futur version choos write predefin color space color space name profil data older version deseri object
icc Profile::readObject read default serializ field stream read stream string array byte addit data stream deseri String::String name cs constant defin profil object profil predefin color space exampl cs srgb string null byte array profil data profil null predefin profil string recogn constant name predefin color space object resolv profil obtain getinst int nbsp cspace profil data ignor object resolv profil obtain getinst byte nbsp data
ColorSpace::ColorSpace abstract serv color space tag identifi specif color space Color::Color object ColorModel::ColorModel object Image::Image BufferedImage::BufferedImage GraphicsDevice::GraphicsDevice contain transform color specif color space srgb defin ciexyz color space purpos color repres array color compon repres float normal rang defin ColorSpace::ColorSpace colorspac srgb rang colorspac compon valu rang inquir compon minimum maximum normal valu variabl defin purpos refer color space type type rgb type xyz refer specif color space cs srgb cs ciexyz srgb propos standard rgb color space see http www w3 org pub www graphic color srgb html purpos transform defin ciexyz color space support convers color space reason degre accuraci expect particular implement subclass ColorSpace::ColorSpace icc colorspac support perform convers base platform color manag system cs ciexyz space tociexyz fromciexyz describ follow
ColorSpace::toCIEXYZ transform color valu assum ColorSpace::ColorSpace cs ciexyz convers color space transform color valu use relat colorimetri defin intern Color::Color consortium standard mean xyz valu return repres relat d50 white point cs ciexyz color space represent use step color convers process color transform input color space cs ciexyz output color space represent xyz valu measur given color valu colorimet further transform necessari comput xyz valu measur use current cie recommend practic see icc ColorSpace::ICC colorspac further colorvalu float array length number compon ColorSpace::ColorSpace float array length
ColorSpace::fromCIEXYZ transform color valu assum cs ciexyz convers color space ColorSpace::ColorSpace transform color valu use relat colorimetri defin intern Color::Color consortium standard mean xyz argument valu taken repres relat d50 white point cs ciexyz color space represent use step color convers process color transform input color space cs ciexyz output color space color valu return produc xyz valu pass measur colorimet xyz valu correspond measur made use current cie recommend practic convert d50 relat valu pass see icc ColorSpace::ICC colorspac further colorvalu float array length float array length equal number compon ColorSpace::ColorSpace
MenuBar::readObject read ObjectInputStream::ObjectInputStream unrecogn key valu ignor ObjectInputStream::ObjectInputStream read
MultipleGradientPaintContext::MultipleGradientPaintContext Constructor::Constructor MultipleGradientPaintContext::MultipleGradientPaintContext superclass
PrinterIOException::PrinterIOException PrinterIOException::PrinterIOException subclass indic io error sort occur print releas retrofit conform general purpos chain mechan IOException::IOException termin print job construct time access known caus access aforement legaci
PrinterIOException::PrinterIOException construct PrinterIOException::PrinterIOException string represent specifi specifi IOException::IOException
PrinterIOException::getIOException return IOException::IOException termin print job predat general purpos chain facil prefer mean obtain IOException::IOException termin print job
PrinterIOException::getCause return caus IOException::IOException termin print job caus
SystemColor::SystemColor encapsul symbol color repres color nativ gui object system system support dynam updat system color user chang color actual rgb valu symbol color chang dynam order compar current rgb valu SystemColor::SystemColor object non symbol Color::Color object getrgb equal note system color appli gui object vari slight platform platform gui object render differ platform System::System color valu avail Toolkit::getDesktopProperty awt toolkit
SystemColor::toString return string represent Color::Color valu intend debug purpos content format return string vari implement return string empti null string represent Color::Color
Window::Type Window::Window object top level window border menubar default layout window BorderLayout::BorderLayout window frame dialog window defin owner construct multi screen environ creat Window::Window screen devic construct Window::Window GraphicsConfiguration::GraphicsConfiguration object GraphicsConfiguration::GraphicsConfiguration object target screen devic virtual devic multi screen environ desktop area span multipl physic screen devic bound configur relat virtual devic coordin system origin virtual coordin system upper hand corner primari physic screen depend locat primari screen virtual devic negat coordin shown figur environ call setloc pass virtual coordin similar call getlocationonscreen Window::Window return virtual devic coordin call getbound GraphicsConfiguration::GraphicsConfiguration find origin virtual coordin system set locat Window::Window 10 10 relat origin physic screen correspond GraphicsConfiguration::GraphicsConfiguration bound GraphicsConfiguration::GraphicsConfiguration taken account Window::Window locat set 10 10 relat virtual coordin system appear primari physic screen physic screen specifi GraphicsConfiguration::GraphicsConfiguration note locat size top level window includ Window::Window Frame::Frame ModalExclusionType::Dialog control desktop window manag system call setloc setsiz setbound request direct forward window manag system effort made honor request case window manag system ignor request modifi request geometri order place size Window::Window close match desktop set due asynchron natur nativ event handl result return getbound getloc getlocationonscreen getsiz reflect actual geometri Window::Window screen last request process process subsequ request valu chang accord window manag system fulfil request set size locat invis Window::Window arbitrarili window manag system subsequ chang size locat Window::Window made visibl ComponentEvent::ComponentEvent generat indic geometri window capabl generat windowev windowopen windowclos windowgainedfocus windowlostfocus Enumeration::Enumeration avail window type window type defin generic visual appear behavior top level window exampl type affect kind decor decor Frame::Frame ModalExclusionType::Dialog instanc platform fulli support window type depend level support properti window type disobey
Window::setSize width height valu automat enlarg minimum size specifi previous call setminimums chang geometri relat data therefor nativ window system ignor request modifi request data Window::Window object place size correspond close desktop set
Window::setSize width height valu automat enlarg minimum size specifi previous call setminimums chang geometri relat data therefor nativ window system ignor request modifi request data Window::Window object place size correspond close desktop set
Window::setVisible show hide Window::Window depend valu paramet show window window made focus condit Window::Window meet requir outlin Window::Window autorequestfocus properti valu nativ window system allow Window::Window get focus condit valu autorequestfocus properti properti taken account window modal dialog block current focus window develop assum window focus activ window receiv window gain focus window activ event make Window::Window visibl hide Window::Window Window::Window owner display made display Window::Window valid prior made visibl Window::Window visibl bring Window::Window front fals hide Window::Window subcompon children Window::Window subcompon made visibl call setvis
Window::getLocale get Locale::Locale object associ window local set local set default local return local set window
Window::setCursor Set::Set cursor imag specifi cursor visual effect platform implement nativ system support chang mous cursor shape cursor constant defin Cursor::Cursor paramet null cursor window set type cursor default cursor
Window::addWindowListener add specifi window listen receiv window event window null thrown action perform refer detail awt thread model window listen
Window::addPropertyChangeListener add PropertyChangeListener::PropertyChangeListener listen list listen regist bound properti includ follow window font font window background color background window foreground color foreground window focus focus window focus travers key enabl state focustraversalkeysen window Set::Set forward travers key forwardfocustraversalkey window Set::Set backward travers key backwardfocustraversalkey window Set::Set cycl travers key upcyclefocustraversalkey window Set::Set cycl travers key downcyclefocustraversalkey window focus travers polici focustraversalpolici window focus Window::Window state focusablewindowst window top state alwaysontop note Window::Window inherit bound properti event fire respons chang inherit properti listen null thrown action perform listen PropertyChangeListener::PropertyChangeListener ad
Window::addPropertyChangeListener add PropertyChangeListener::PropertyChangeListener listen list specif properti specifi properti user defin follow window font font window background color background window foreground color foreground window focus focus window focus travers key enabl state focustraversalkeysen window Set::Set forward travers key forwardfocustraversalkey window Set::Set backward travers key backwardfocustraversalkey window Set::Set cycl travers key upcyclefocustraversalkey window Set::Set cycl travers key downcyclefocustraversalkey window focus travers polici focustraversalpolici window focus Window::Window state focusablewindowst window top state alwaysontop note Window::Window inherit bound properti event fire respons chang inherit properti listen null thrown action perform propertynam properti name list listen PropertyChangeListener::PropertyChangeListener ad
Window::writeObject write default serializ field stream write list serializ WindowListener::WindowListener WindowFocusListener::WindowFocusListener option data write list child window option data write list icon imag option data ObjectOutputStream::ObjectOutputStream write null termin sequenc pair pair consist String::String Object::Object String::String indic type object follow windowlistenerk indic WindowListener::WindowListener object windowfocuswindowk indic WindowFocusListener::WindowFocusListener object ownedwindowk indic child Window::Window object
Window::readObject read ObjectInputStream::ObjectInputStream option list listen receiv various event fire compon read list possibl null child window unrecogn key valu ignor ObjectInputStream::ObjectInputStream read
Choice::writeObject write default serializ field stream write list serializ itemlisten option data non serializ itemlisten detect attempt made serial ObjectOutputStream::ObjectOutputStream write null termin sequenc pair pair consist String::String Object::Object String::String indic type object follow itemlistenerk indic ItemListener::ItemListener object
Choice::readObject read ObjectInputStream::ObjectInputStream isn null add listen receiv item event fire Choice::Choice item unrecogn key valu ignor ObjectInputStream::ObjectInputStream read
Choice::getAccessibleActionDescription return descript specifi action object zero base index action String::String descript action
DisplayMode::DisplayMode DisplayMode::DisplayMode encapsul bit depth height width refresh rate GraphicsDevice::GraphicsDevice abil chang graphic devic display mode platform configur depend avail see full screen exclus mode see
DisplayMode::getHeight return height display pixel height display pixel
DisplayMode::getWidth return width display pixel width display pixel
DisplayMode::getBitDepth return bit depth display bit pixel DisplayMode::BIT depth multi multipl bit depth support display mode bit depth display bit pixel
DisplayMode::getRefreshRate return refresh rate display hertz DisplayMode::REFRESH rate unknown avail refresh rate display hertz
AWTException::AWTException construct instanc AWTException::AWTException specifi detail messag detail messag instanc String::String describ particular msg detail messag
Frame::readObject read ObjectInputStream::ObjectInputStream tri read icon Image::Image option data avail icon Image::Image avail eof detect OptionalDataException::OptionalDataException thrown unrecogn key valu ignor ObjectInputStream::ObjectInputStream read
Menu::readObject read ObjectInputStream::ObjectInputStream unrecogn key valu ignor ObjectInputStream::ObjectInputStream read
ComponentOrientation::getOrientation return orient appropri given resourcebundl local approach tri order retriev ComponentOrientation::ComponentOrientation object ResourceBundle::ResourceBundle use string orient key use resourcebundl getlocal determin bundl local return orient local return default local orient
RenderingHints::isCompatibleValue return specifi object valid valu Key::Key val Object::Object test valid val valid fals
RenderingHints::KEY text lcd contrast lcd text contrast render hint key valu Integer::Integer object text contrast adjust conjunct lcd text anti alias hint valu posit integ rang 100 250 lower valu 100 correspond higher contrast text display dark text light background higher valu 200 correspond lower contrast text display dark text light background typic use valu narrow rang 140 180 valu specifi system implement default valu appli default valu expect adequ purpos client rare specifi valu hint concret appropri valu higher valu mean higher contrast fact opposit correct appli similar manner gamma adjust non linear perceptu lumin respons display system indic full correct
RenderingHints::KEY fractionalmetr Font::Font fraction metric hint key fractionalmetr hint control posit individu charact glyph take account sub pixel accuraci scale charact advanc font advanc vector integ number devic pixel hint recommend accuraci posit glyph specifi recommend actual raster pixel bound glyph modifi match render text low resolut devic screen necessarili involv number oper qualiti precis definit shape metric charact glyph match discret devic pixel ideal posit glyph text layout calcul scale design metric font accord point size scale advanc width necessarili integ number pixel glyph posit sub pixel accuraci accord scale design metric raster ideal adjust sub pixel origin unfortun scale glyph custom exact subpixel origin text layout prohibit expens simplifi system base integ devic posit typic lay text raster glyph scale advanc width adjust yield text look devic resolut consist integ pixel distanc glyph glyph look uniform consist space readabl process advanc width raster glyph integ distanc mean charact densiti overal length string text theoret design measur due accumul seri differ adjust width glyph specif differ glyph wider narrow theoret design measur thus overal differ charact densiti length vari number factor includ font specif devic resolut target glyph chosen repres string render result render string multipl devic resolut yield wide vari metric string fractionalmetr enabl font design metric scale point size layout sub pixel accuraci averag densiti glyph total length string charact therefor close match theoret design font readabl affect individu pair charact appear consist distanc apart depend sub pixel accumul glyph origin mesh devic pixel grid enabl hint desir text layout perform consist wide varieti output resolut specif hint desir situat where layout text preview low resolut devic screen output eventu render resolut printer typeset devic disabl scale design metric adjust integ distanc layout distanc specif pair glyph uniform devic densiti total length string longer match theoret intent font design disabl hint typic produc readabl result low resolut devic comput monitor allow valu key
RenderingHints::VALUE fractionalmetr Font::Font fraction metric hint valu charact glyph posit advanc width pixel boundari
RenderingHints::VALUE fractionalmetr Font::Font fraction metric hint valu charact glyph posit sub pixel accuraci
RenderingHints::VALUE fractionalmetr default Font::Font fraction metric hint valu charact glyph posit accuraci chosen implement
RenderingHints::KEY color render Color::Color render hint key color render hint control accuraci approxim convers store color destin imag surfac render imag manipul oper produc color valu store destin first convert color form suitabl store destin imag surfac minim color compon convert bit represent order correct order index color lookup tabl chosen data store destin memori minim convers data destin repres random incorrect possibl unsupport valu algorithm quick convert result render oper color format common destin known fair optim execut simpli perform basic color format convers store color destin potenti ignor differ calibr sourc destin factor linear gamma correct sourc destin ColorSpace::ColorSpace ident correct perform render oper care taken accuraci color repres sourc color convert devic independ ColorSpace::ColorSpace result convert destin ColorSpace::ColorSpace furthermor calcul blend multipl sourc color perform render oper greater visual clariti achiev intermedi devic independ ColorSpace::ColorSpace chosen linear relationship valu calcul percept human eye respons curv output devic allow valu hint
RenderingHints::VALUE color render speed Color::Color render hint valu perform fastest color convers format output devic
RenderingHints::VALUE color render qualiti Color::Color render hint valu perform color convers calcul highest accuraci visual qualiti
RenderingHints::VALUE color render default Color::Color render hint valu perform color convers calcul chosen implement repres avail tradeoff perform accuraci
RenderingHints::RenderingHints construct object key valu initi specifi Map::Map object null init map key valu pair initi hint null object empti
RenderingHints::putAll copi map specifi Map::Map RenderingHints::RenderingHints map replac map RenderingHints::RenderingHints key current specifi Map::Map specifi Map::Map
RenderingHints::keySet return Set::Set view key contain RenderingHints::RenderingHints Set::Set RenderingHints::RenderingHints chang RenderingHints::RenderingHints reflect Set::Set versa RenderingHints::RenderingHints modifi iter Set::Set progress result iter undefin Set::Set support element remov remov correspond map RenderingHints::RenderingHints iter remov set remov removeal retainal clear oper support add addal oper Set::Set view key contain RenderingHints::RenderingHints
RenderingHints::entrySet return Set::Set view map contain RenderingHints::RenderingHints element return Set::Set map entri Set::Set RenderingHints::RenderingHints chang RenderingHints::RenderingHints reflect Set::Set versa RenderingHints::RenderingHints modifi iter Set::Set progress result iter undefin entryset return RenderingHints::RenderingHints object modifi Set::Set view map contain RenderingHints::RenderingHints
RenderingHints::equals compar specifi Object::Object RenderingHints::RenderingHints equal return specifi object Map::Map Map::Map object repres map formal Map::Map object t1 t2 repres map t1 keyset equal t2 keyset key t1 keyset ensur equal work proper implement Map::Map interfac Object::Object compar equal RenderingHints::RenderingHints specifi Object::Object equal RenderingHints::RenderingHints
RenderingHints::hashCode return hash valu RenderingHints::RenderingHints hash RenderingHints::RenderingHints defin sum hashcod entri RenderingHints::RenderingHints object entryset view ensur t1 equal t2 impli t1 hashcod t2 hashcod Map::Map object t1 t2 requir general contract object hashcod hash valu RenderingHints::RenderingHints
Toolkit::createButton creat toolkit implement Button::Button use specifi peer interfac target button implement toolkit implement Button::Button
Toolkit::createList creat toolkit implement List::List use specifi peer interfac target list implement toolkit implement List::List
Toolkit::getFontPeer creat toolkit implement Font::Font use specifi peer interfac name font implement style style font Font::PLAIN Font::BOLD Font::ITALIC combin toolkit implement Font::Font
Toolkit::getScreenSize get size screen system multipl display primari display multi screen awar display dimens avail GraphicsConfiguration::GraphicsConfiguration GraphicsDevice::GraphicsDevice size toolkit screen pixel
Toolkit::getImage return imag get pixel data specifi file format gif jpeg png toolkit attempt resolv multipl request filenam return Image::Image mechan requir facilit share Image::Image object continu hold imag longer use indefinit period time develop encourag implement cach imag use variant wherev avail imag data contain specifi file chang Image::Image object return contain stale load file prior call previous load imag data manual discard call return Image::Image first check secur manag instal call secur manag SecurityManager::checkRead file specifi ensur access imag allow filenam name file contain pixel data recogn file format imag get pixel data specifi file
Toolkit::getPrintJob get PrintJob::PrintJob object result initi print oper toolkit platform actual implement first check secur manag instal call secur manag SecurityManager::checkPrintJobAccess ensur initi print oper allow default implement SecurityManager::checkPrintJobAccess overriden result call secur manag checkpermiss runtimepermiss queueprintjob permiss frame parent print dialog null jobtitl titl PrintJob::PrintJob null titl equival prop Properties::Properties object contain zero properti Properties::Properties standard consist implement printjob requir job page control use version function take JobAttributes::JobAttributes PageAttributes::PageAttributes object object updat reflect user job choic exit null PrintJob::PrintJob object null user cancel print job
Toolkit::beep emit audio beep depend nativ system set hardwar capabl
Toolkit::createCustomCursor creat custom cursor object imag display invalid cursor hidden made complet transpar hotspot set note multi frame imag invalid caus hang cursor imag display cursor activ hotspot cursor hot spot hotspot valu Dimension::Dimension return Toolkit::getBestCursorSize name local descript cursor access use
Graphics2D::Graphics2D Graphics2D::Graphics2D extend provid sophist control geometri coordin transform color manag text layout fundament render dimension shape text imag tm platform coordin space coordin pass Graphics2D::Graphics2D object specifi devic independ coordin system call user space applic Graphics2D::Graphics2D object contain object part render state defin convert coordin user space devic depend coordin devic space coordin devic space refer individu devic pixel align infinit thin gap pixel Graphics2D::Graphics2D object captur render oper storag graphic metafil playback concret devic unknown physic resolut time resolut known render oper captur Graphics2D::Graphics2D transform set transform user coordin virtual devic space approxim expect resolut target devic further transform appli playback time estim incorrect oper perform render attribut object occur devic space Graphics2D::Graphics2D take user space coordin Graphics2D::Graphics2D object associ target defin where render take place object defin characterist render target pixel format resolut render target life Graphics2D::Graphics2D object creat Graphics2D::Graphics2D object GraphicsConfiguration::GraphicsConfiguration specifi target Graphics2D::Graphics2D default transform map user space coordin system screen printer devic coordin origin map upper hand corner target region devic increas coordin extend increas coordin extend downward scale default transform set ident devic close 72 dpi screen devic scale default transform set approxim 72 user space coordin squar inch resolut devic printer imag buffer default transform Identity::Identity transform render process render Process::Process broken phase control Graphics2D::Graphics2D render attribut render optim step cach result futur call collaps multipl virtual step singl oper recogn various attribut common case elimin modifi part oper step render process determin render constrain render oper current clip clip specifi user space control program use various clip manipul Graphics::Graphics Graphics2D::Graphics2D user clip transform devic space current transform combin devic clip defin visibl window devic extent combin user clip devic clip defin composit clip determin final clip region user clip modifi render system reflect result composit clip determin color render appli color destin draw surfac use current attribut Graphics2D::Graphics2D context type render oper detail particular render process oper draw shape oper current attribut Graphics2D::Graphics2D context construct Shape::Shape object contain outlin specifi Shape::Shape Shape::Shape transform user space devic space use current transform Graphics2D::Graphics2D context outlin Shape::Shape extract use Shape::Shape return object iter boundari Shape::Shape Graphics2D::Graphics2D object handl curv segment PathIterator::PathIterator object return call altern Shape::Shape flatten Shape::Shape current Graphics2D::Graphics2D context queri specifi color render devic space step determin set glyph requir render indic String::String argument String::String current Font::Font Graphics2D::Graphics2D context ask convert unicod charact String::String set glyph basic layout shape algorithm font implement argument iter ask convert use embed font attribut TextLayout::TextLayout implement sophist glyph layout algorithm perform unicod bi direct layout adjust automat multipl font differ write direct argument GlyphVector::GlyphVector object contain appropri font specif glyph explicit coordin posit glyph current Font::Font queri obtain outlin indic glyph outlin treat shape user space relat posit glyph determin step charact outlin fill indic current Paint::Paint queri PaintContext::PaintContext specifi color render devic space region interest defin bound box sourc Image::Image bound box specifi Image::Image space Image::Image object local coordin system AffineTransform::AffineTransform pass AffineTransform::AffineTransform transform bound box imag space user space AffineTransform::AffineTransform suppli bound box treat user space bound box sourc Image::Image transform user space devic space use current transform note result transform bound box necessarili result rectangular region devic space Image::Image object determin color render sampl accord sourc destin coordin map specifi current transform option imag transform default render attribut default valu Graphics2D::Graphics2D render attribut Paint::Paint color compon Font::Font Font::Font compon Stroke::Stroke squar pen linewidth dash miter segment join squar end cap transform GraphicsConfiguration::GraphicsConfiguration compon Composite::Composite rule clip render clip output clip compon render compat issu jdk tm render model base pixel model specifi coordin infinit thin lie pixel draw oper perform use pixel wide pen fill pixel anchor point path jdk render model consist capabl exist platform render resolv integ coordin discret pen fall complet specifi number pixel 2d tm tm platform support antialias render pen width pixel fall complet pixel oppos pixel pen fall partial pixel necessari choos bias direct wide pen blend occur pen travers edg make sub pixel posit pen visibl user hand antialias turn set hint key hint valu render appli bias determin pixel modifi pen straddl pixel boundari drawn integ coordin devic space capabl antialias render make longer necessari render model specifi bias pen desir antialias non antialias render perform similar common case draw pixel wide horizont vertic line screen ensur turn antialias set hint key caus line sudden becom twice wide half opaqu desir model specifi path line complet cover particular set pixel increas crisp 2d maintain compat jdk render behavior legaci oper exist render behavior unchang 2d legaci map general draw fill defin clear indic Graphics2D::Graphics2D extend Graphics::Graphics base set Stroke::Stroke transform attribut render hint definit perform ident default attribut set exampl default Stroke::Stroke BasicStroke::BasicStroke width dash default transform screen draw Identity::Identity transform rule provid predict render behavior alias antialias devic coordin defin devic pixel avoid inconsist result alias antialias render coordin defin pixel center pixel cover shape rectangl half cover alias render half cover pixel render shape shape anti alias render pixel entir edg shape half cover hand coordin defin pixel shape rectangl half cover pixel render use antialias line path stroke use BasicStroke::BasicStroke object normal provid consist render outlin posit various point drawabl drawn alias antialias render normal process control hint exact normal algorithm specifi goal normal ensur line render consist visual appear regardless fall pixel grid promot solid horizont vertic line antialias mode resembl non antialias counterpart close typic normal step promot antialias line endpoint pixel center reduc amount blend adjust subpixel posit non antialias line float point line width odd pixel count equal likelihood process move endpoint half pixel posit infin axe promot consist result definit general legaci perform ident previous specifi behavior default attribut set fill oper includ Graphics::fillRect Graphics::fillRoundRect Graphics::fillOval Graphics::fillArc Graphics::fillPolygon Graphics::clearRect call desir Shape::Shape exampl fill rectangl call similar draw oper includ Graphics::drawLine Graphics::drawRect Graphics::drawRoundRect Graphics::drawOval Graphics::drawArc Graphics::drawPolyline Graphics::drawPolygon call desir Shape::Shape exampl draw rectangl call draw3drect fill3drect implement term Graphics::drawLine Graphics::fillRect Graphics::Graphics predic behavior current Stroke::Stroke Paint::Paint object Graphics2D::Graphics2D context overrid implement version use current Color::Color exclus overrid current Paint::Paint use Graphics::fillRect describ exact behavior preexist regardless set current Stroke::Stroke Graphics::Graphics defin setcolor control color paint 2d extend Color::Color object implement Paint::Paint interfac exist setcolor conveni set current Paint::Paint attribut Color::Color object setcolor equival setpaint Graphics::Graphics defin control color appli destin Graphics::setPaintMode implement conveni set default Composite::Composite equival setcomposit alphacomposit srcover setxormod color xorcolor implement conveni set Composite::Composite object ignor alpha compon sourc color set destin color valu
Graphics2D::draw3DRect draw highlight outlin specifi rectangl edg rectangl highlight appear bevel lit upper corner color highlight effect determin base current color result rectangl cover area width nbsp nbsp pixel wide height nbsp nbsp pixel tall use current Color::Color exclus ignor current Paint::Paint coordin rectangl drawn coordin rectangl drawn width width rectangl drawn height height rectangl drawn rais boolean determin rectangl appear rais surfac sunk surfac
Graphics2D::fill3DRect paint highlight rectangl fill current color edg rectangl highlight appear edg bevel lit upper corner color highlight effect fill determin current Color::Color use current Color::Color exclus ignor current Paint::Paint coordin rectangl fill coordin rectangl fill width width rectangl fill height height rectangl fill rais boolean valu determin rectangl appear rais surfac etch surfac
Graphics2D::drawImage render BufferedImage::BufferedImage filter render attribut appli includ clip transform Composite::Composite attribut equival op filter appli imag render img specifi BufferedImage::BufferedImage render img null coordin locat user space where upper corner imag render coordin locat user space where upper corner imag render
Graphics2D::drawString render text specifi String::String use current text attribut state Graphics2D::Graphics2D context baselin first charact posit nbsp user space render attribut appli includ clip transform Paint::Paint Font::Font Composite::Composite attribut charact script system hebrew arab glyph render case coordin suppli locat leftmost charact baselin str string render coordin locat where String::String render coordin locat where String::String render
Graphics2D::drawString render text specifi specifi String::String use current text attribut state Graphics2D::Graphics2D context baselin first charact posit nbsp user space render attribut appli includ clip transform Paint::Paint Font::Font Composite::Composite attribut charact script system hebrew arab glyph render case coordin suppli locat leftmost charact baselin str String::String render coordin locat where String::String render coordin locat where String::String render
Graphics2D::hit check specifi Shape::Shape intersect specifi devic space onstrok fals check interior specifi Shape::Shape intersect specifi Rectangle::Rectangle onstrok check Stroke::Stroke specifi Shape::Shape outlin intersect specifi Rectangle::Rectangle render attribut taken account includ clip transform Stroke::Stroke attribut rect area devic space check hit Shape::Shape check hit onstrok flag choos test stroke fill shape flag Stroke::Stroke outlin test flag fals fill Shape::Shape test hit fals
Graphics2D::addRenderingHints set valu arbitrari number prefer render algorithm valu render hint specifi Map::Map object modifi prefer specifi object unmodifi hint categori includ control render qualiti overal time qualiti trade render process refer RenderingHints::RenderingHints definit common key valu hint render hint set
Graphics2D::getBackground return background color clear region current Graphics2D::Graphics2D Color::Color defin background color
Graphics2D::getFontRenderContext get render context Font::Font Graphics2D::Graphics2D context encapsul hint anti alias fraction metric target devic specif dot inch use object perform typograph format Font::Font TextLayout::TextLayout applic perform layout accur measur various characterist glyph advanc line height various render hint appli text render refer instanc FontRenderContext::FontRenderContext
StringSelection::StringSelection Transferable::Transferable implement capabl requir transfer String::String Transferable::Transferable proper support dataflavor stringflavor equival flavor support dataflavor plaintextflavor equival flavor deprec DataFlavor::DataFlavor support
StringSelection::StringSelection creat Transferable::Transferable capabl transfer specifi String::String
StringSelection::getTransferData return Transferable::Transferable data request DataFlavor::DataFlavor desir flavor dataflavor stringflavor equival flavor String::String repres select return desir flavor dataflavor plaintextflavor equival flavor Reader::Reader return note behavior dataflavor plaintextflavor equival DataFlavor::DataFlavor inconsist definit dataflavor plaintextflavor flavor request flavor data data request flavor outlin
FlavorMap::FlavorMap Map::Map nativ string correspond platform specif data format flavor dataflavor correspond platform independ mime type flavormap symmetr typic
FlavorMap::getNativesForFlavors return Map::Map specifi DataFlavor::DataFlavor correspond String::String nativ return Map::Map modifi copi FlavorMap::FlavorMap intern data client free modifi Map::Map affect object flavor array DataFlavor::DataFlavor key set return Map::Map null specifi map DataFlavor::DataFlavor current known FlavorMap::FlavorMap correspond String::String nativ return util map DataFlavor::DataFlavor String::String nativ
FlavorMap::getFlavorsForNatives return Map::Map specifi String::String nativ correspond DataFlavor::DataFlavor return Map::Map modifi copi FlavorMap::FlavorMap intern data client free modifi Map::Map affect object nativ array String::String key set return Map::Map null specifi map String::String nativ current known FlavorMap::FlavorMap correspond DataFlavor::DataFlavor return util map String::String nativ DataFlavor::DataFlavor
DataFlavor::stringFlavor DataFlavor::DataFlavor repres unicod String::String where
DataFlavor::plainTextFlavor DataFlavor::DataFlavor repres plain text unicod encod where DataFlavor::DataFlavor deprec represent InputStream::InputStream bit base represent unicod 16 bit charact set charset unicod defin unicod impli particular platform implement unicod cross platform implement
DataFlavor::javaJVMLocalObjectMimeType transfer refer arbitrari object refer associ mime content type Transferable::Transferable interfac jvm DataFlavor::DataFlavor type subtyp representationclass equal type interfac pass Transferable::Transferable object refer return transfer gettransferdata DataFlavor::DataFlavor mime content type requir instanc represent Class::Class DataFlavor::DataFlavor
DataFlavor::selectionHtmlFlavor repres html markup markup consist part select sourc side therefor tag markup unpair flavor repres data instanc addit chang made DataFlavor::DataFlavor instanc repres html markup DataFlavor::DataFlavor instanc content mime type contain document paramet represent String::String
DataFlavor::toString String::String represent DataFlavor::DataFlavor paramet result String::String contain name DataFlavor::DataFlavor flavor mime type represent flavor primari mime type text support charset paramet encod represent flavor charset includ see DataFlavor::selectBestTextFlavor list text flavor support charset paramet string represent DataFlavor::DataFlavor
DataFlavor::getRepresentationClass return Class::Class object support DataFlavor::DataFlavor return DataFlavor::DataFlavor request Class::Class object support DataFlavor::DataFlavor return DataFlavor::DataFlavor request
DataFlavor::equals equal comparison DataFlavor::DataFlavor implement follow DataFlavor::DataFlavor consid equal mime primari type subtyp represent equal addit primari type text subtyp denot text flavor support charset paramet represent io reader lang string nio charbuff charset coder ::charset paramet equal charset explicit specifi DataFlavor::DataFlavor platform default encod assum see DataFlavor::selectBestTextFlavor list text flavor support charset paramet Object::Object compar equival DataFlavor::DataFlavor fals
DataFlavor::equals compar mimetyp pass String::String representationclass consid comparison representationclass compar equal dataflavor mimetyp compar String::String MimeType::MimeType equal fals null
DataFlavor::hashCode return hash DataFlavor::DataFlavor equal DataFlavor::DataFlavor hash equal String::String match dataflavor equal string guarante DataFlavor::DataFlavor hash equal hash String::String hash DataFlavor::DataFlavor
DataFlavor::isFlavorSerializedObjectType return DataFlavor::DataFlavor specifi repres serial object DataFlavor::DataFlavor specifi repres serial Object::Object
DataFlavor::isFlavorRemoteObjectType return DataFlavor::DataFlavor specifi repres remot object DataFlavor::DataFlavor specifi repres Remote::Remote Object::Object
DataFlavor::isFlavorJavaFileListType return DataFlavor::DataFlavor specifi repres list file object DataFlavor::DataFlavor specifi repres List::List File::File object
Clipboard::getContents return transfer object repres current content clipboard clipboard current content return null paramet Object::Object requestor current throw IllegalStateException::IllegalStateException clipboard current unavail exampl platform system clipboard unavail access requestor object request clip data current transfer object clipboard
MimeTypeParameterList::parse routin pars paramet list String::String
MimeTypeParameterList::set Set::Set valu associ given name replac previous associ
FlavorTable::FlavorTable FlavorMap::FlavorMap relax tradit restrict Map::Map flavor permit map number nativ nativ permit map number flavor flavort symmetr typic
FlavorTable::getNativesForFlavor return List::List String::String nativ specifi DataFlavor::DataFlavor correspond List::List sort nativ worst first nativ reflect data specifi flavor nativ platform return List::List modifi copi FlavorTable::FlavorTable intern data client free modifi List::List affect object flav DataFlavor::DataFlavor correspond nativ return null specifi nativ current known FlavorTable::FlavorTable return non determinist order util list lang string object platform specif represent platform specif data format
FlavorTable::getFlavorsForNative return List::List DataFlavor::DataFlavor specifi String::String correspond List::List sort DataFlavor::DataFlavor worst first DataFlavor::DataFlavor reflect data specifi nativ return List::List modifi copi FlavorTable::FlavorTable intern data client free modifi List::List affect object nat nativ correspond DataFlavor::DataFlavor return null specifi DataFlavor::DataFlavor current known FlavorTable::FlavorTable return non determinist order util list DataFlavor::DataFlavor object platform specif data specifi platform specif nativ translat
MimeType::MimeType Constructor::Constructor extern constructor call result uniniti immut MimeType::MimeType object
MimeType::MimeType build MimeType::MimeType String::String rawdata text initi MimeType::MimeType
MimeType::parse routin pars mime type String::String
MimeType::setParameter Set::Set valu associ given name replac previous associ IllegalArgumentException::IllegalArgumentException paramet valu illeg
MimeType::toString return String::String represent object
MimeType::getBaseType return String::String represent object paramet list
SystemFlavorMap::getDefaultFlavorMap return default FlavorMap::FlavorMap thread ClassLoader::ClassLoader
SystemFlavorMap::store store list object specifi hash key map standard map list object replac object appropri Map::Map locat append List::List store locat
SystemFlavorMap::flavorToNativeLookup semant equival flavorton get flav handl case where flav found flavorton depend valu pass synthes paramet synthes synthes found nativ synthes store return encod dataflavor mime type empti List::List return flavorton remain unaffect
SystemFlavorMap::getNativesForFlavor return List::List String::String nativ specifi DataFlavor::DataFlavor translat data transfer subsystem List::List sort nativ worst first nativ reflect data specifi flavor nativ platform specifi DataFlavor::DataFlavor previous unknown data transfer subsystem data transfer subsystem unabl translat DataFlavor::DataFlavor exist nativ invok establish map direct specifi DataFlavor::DataFlavor encod version mime type nativ flav DataFlavor::DataFlavor correspond nativ return null specifi nativ current known data transfer subsystem return non determinist order util list lang string object platform specif represent platform specif data format
SystemFlavorMap::getFlavorsForNative return List::List DataFlavor::DataFlavor specifi String::String nativ translat data transfer subsystem List::List sort DataFlavor::DataFlavor worst first DataFlavor::DataFlavor reflect data specifi nativ specifi nativ previous unknown data transfer subsystem nativ proper encod invok establish map direct specifi nativ DataFlavor::DataFlavor mime type decod version nativ specifi nativ proper encod nativ map nativ alter SystemFlavorMap::setFlavorsForNative content List::List platform depend null return nat nativ correspond DataFlavor::DataFlavor return null specifi DataFlavor::DataFlavor current known data transfer subsystem return non determinist order util list DataFlavor::DataFlavor object platform specif data specifi platform specif nativ translat
SystemFlavorMap::getNativesForFlavors return Map::Map specifi DataFlavor::DataFlavor prefer String::String nativ nativ valu first nativ List::List return getnativesforflavor specifi flavor specifi DataFlavor::DataFlavor previous unknown data transfer subsystem invok establish map direct specifi DataFlavor::DataFlavor encod version mime type nativ flavor array DataFlavor::DataFlavor key set return Map::Map null specifi map DataFlavor::DataFlavor known data transfer subsystem prefer String::String nativ return util map DataFlavor::DataFlavor String::String nativ
SystemFlavorMap::getFlavorsForNatives return Map::Map specifi String::String nativ prefer DataFlavor::DataFlavor DataFlavor::DataFlavor valu first DataFlavor::DataFlavor List::List return getflavorsforn specifi nativ specifi nativ previous unknown data transfer subsystem nativ proper encod invok establish map direct specifi nativ DataFlavor::DataFlavor mime type decod version nativ nativ array String::String key set return Map::Map null specifi map support String::String nativ prefer DataFlavor::DataFlavor return util map String::String nativ DataFlavor::DataFlavor
SystemFlavorMap::addUnencodedNativeForFlavor add map specifi DataFlavor::DataFlavor DataFlavor::DataFlavor equal specifi DataFlavor::DataFlavor specifi String::String nativ getnativesforflavor map establish direct nativ encod establish map call SystemFlavorMap::addFlavorForUnencodedNative map lower prioriti exist map effect map specifi equal DataFlavor::DataFlavor specifi String::String nativ exist flav DataFlavor::DataFlavor key map nat String::String nativ valu map
SystemFlavorMap::setNativesForFlavor discard current map specifi DataFlavor::DataFlavor DataFlavor::DataFlavor equal specifi DataFlavor::DataFlavor creat map specifi String::String nativ getnativesforflavor map establish direct nativ encod establish map call SystemFlavorMap::setFlavorsForNative first nativ array repres highest prioriti map subsequ nativ repres map decreas prioriti array contain element refer equal String::String nativ establish map first element ignor rest recommend client reset map establish data transfer subsystem level map flav DataFlavor::DataFlavor key map nativ String::String nativ valu map
SystemFlavorMap::addFlavorForUnencodedNative add map singl String::String nativ singl DataFlavor::DataFlavor getflavorsforn map establish direct nativ encod establish map call SystemFlavorMap::addUnencodedNativeForFlavor map lower prioriti exist map effect map specifi String::String nativ specifi equal DataFlavor::DataFlavor exist nat String::String nativ key map flav DataFlavor::DataFlavor valu map
SystemFlavorMap::setFlavorsForNative discard current map specifi String::String nativ creat map specifi DataFlavor::DataFlavor getflavorsforn map establish direct nativ encod establish map call SystemFlavorMap::setNativesForFlavor first DataFlavor::DataFlavor array repres highest prioriti map subsequ DataFlavor::DataFlavor repres map decreas prioriti array contain element refer equal DataFlavor::DataFlavor establish map first element ignor rest recommend client reset map establish data transfer subsystem level map nat String::String nativ key map flavor DataFlavor::DataFlavor valu map
SystemFlavorMap::encodeJavaMIMEType encod mime type use String::String nativ format encod represent mime type implement depend restrict encod represent null mime type String::String null encod represent null mime type String::String equal String::String equal accord string equal object refer implement return specifi mime type String::String prefix dataflavor mimetyp mime type encod encod String::String null mimetyp null
SystemFlavorMap::encodeDataFlavor encod DataFlavor::DataFlavor use String::String nativ format encod DataFlavor::DataFlavor implement depend restrict encod represent null specifi DataFlavor::DataFlavor null mime type String::String null encod represent null DataFlavor::DataFlavor null mime type String::String equal mime type String::String DataFlavor::DataFlavor equal accord string equal object refer implement return mime type String::String specifi DataFlavor::DataFlavor prefix dataflavor flav DataFlavor::DataFlavor encod encod String::String null flav null null mime type
SystemFlavorMap::isJavaMIMEType return specifi String::String encod mime type str String::String test String::String encod fals
SystemFlavorMap::decodeJavaMIMEType decod String::String nativ use mime type nat String::String decod decod mime type null nat encod String::String nativ
SystemFlavorMap::decodeDataFlavor decod String::String nativ use DataFlavor::DataFlavor nat String::String decod decod DataFlavor::DataFlavor null nat encod String::String nativ
Stroke::Stroke Stroke::Stroke interfac allow object obtain decor outlin stylist represent outlin specifi Shape::Shape stroke Shape::Shape trace outlin mark pen appropri size shape area where pen place ink area enclos outlin Shape::Shape Graphics2D::Graphics2D interfac use outlin Shape::Shape return Stroke::Stroke object includ draw implement term Graphics::drawLine Graphics::drawRect Graphics::drawRoundRect Graphics::drawOval Graphics::drawArc Graphics::drawPolyline Graphics::drawPolygon object implement Stroke::Stroke read Graphics2D::Graphics2D clone object set attribut Graphics2D::setStroke Graphics2D::Graphics2D object clone Stroke::Stroke object modifi set Graphics2D::Graphics2D context behavior subsequ render undefin
MouseInfo::getPointerInfo return PointerInfo::PointerInfo instanc repres current locat mous pointer GraphicsDevice::GraphicsDevice store PointerInfo::PointerInfo contain mous pointer coordin system mous posit depend GraphicsDevice::GraphicsDevice part virtual screen devic virtual screen devic coordin given virtual coordin system return coordin system GraphicsDevice::GraphicsDevice see virtual screen devic system mous return null secur manag checkpermiss call awtpermiss watchmousepoint permiss creat return PointerInfo::PointerInfo object result SecurityException::SecurityException locat mous pointer
MouseInfo::getNumberOfButtons return number button mous system mous return number button mous
GraphicsConfigTemplate::REQUIRED valu Enum::Enum Integer::Integer type state featur requir GraphicsConfiguration::GraphicsConfiguration object featur avail select GraphicsConfiguration::GraphicsConfiguration object
GraphicsConfigTemplate::PREFERRED valu Enum::Enum Integer::Integer type state featur desir GraphicsConfiguration::GraphicsConfiguration object select featur prefer select includ featur select consid valid match
GraphicsConfigTemplate::UNNECESSARY valu Enum::Enum Integer::Integer type state featur necessari select GraphicsConfiguration::GraphicsConfiguration object select featur prefer select includ featur
GraphicsConfiguration::getDevice return associ GraphicsConfiguration::GraphicsConfiguration GraphicsDevice::GraphicsDevice object associ GraphicsConfiguration::GraphicsConfiguration
GraphicsConfiguration::createCompatibleImage return data layout color model compat GraphicsConfiguration::GraphicsConfiguration memori map devic return BufferedImage::BufferedImage layout color model closest nativ devic configur therefor optim blit devic width width return BufferedImage::BufferedImage height height return BufferedImage::BufferedImage BufferedImage::BufferedImage data layout color model compat GraphicsConfiguration::GraphicsConfiguration
GraphicsConfiguration::createCompatibleImage return BufferedImage::BufferedImage support specifi transpar data layout color model compat GraphicsConfiguration::GraphicsConfiguration memori map devic return BufferedImage::BufferedImage layout color model optim blit devic GraphicsConfiguration::GraphicsConfiguration width width return BufferedImage::BufferedImage height height return BufferedImage::BufferedImage transpar specifi transpar mode BufferedImage::BufferedImage data layout color model compat GraphicsConfiguration::GraphicsConfiguration support specifi transpar
AWTEventListenerProxy::AWTEventListenerProxy Constructor::Constructor bind awteventlisten specif event mask eventmask bitmap event type receiv listen listen object
ComponentEvent::ComponentEvent low level event indic compon move chang size chang visibl root compon level event Component::Component event notif purpos awt automat handl compon move resiz intern gui layout work proper regardless program receiv event addit serv base compon relat event InputEvent::InputEvent FocusEvent::FocusEvent WindowEvent::WindowEvent ContainerEvent::ContainerEvent defin event indic chang compon size posit visibl low level event generat compon object List::List compon move resiz render invis made visibl event pass ComponentListener::ComponentListener ComponentAdapter::ComponentAdapter object regist receiv event use compon addcomponentlisten ComponentAdapter::ComponentAdapter object implement ComponentListener::ComponentListener interfac listen object get ComponentEvent::ComponentEvent event occur unspecifi behavior caus paramet particular ComponentEvent::ComponentEvent instanc rang compon first compon last
MouseEvent::getLocationOnScreen return absolut posit event virtual devic multi screen environ desktop area span multipl physic screen devic coordin relat virtual coordin system coordin relat coordin system associ compon GraphicsConfiguration::GraphicsConfiguration Point::Point object contain absolut coordin
MouseEvent::getPoint return posit event relat sourc compon Point::Point object contain coordin relat sourc compon
MouseEvent::getButton return mous button chang state return valu rang valu return valu includ constant nobutton button1 button2 button3 allow use constant compar return button number exampl particular mous button return valu nobutton button1 button2 button3 Button::Button number greater button3 constant identifi mous button instal return valu nobutton button1 button2 button3 note support extend mous button awt event subsystem produc mous event extend mous button expect return nobutton button1 button2 button3 valu support extend mous button rang includ nobutton button1 button2 button3 nobutton button1 button2 button3 support extend mous button
MouseEvent::getMouseModifiersText return String::String instanc describ modifi key mous button event shift ctrl shift string local chang awt properti file note inputev alt mask inputev button2 mask equal valu alt string return modifi inputev meta mask inputev button3 mask equal valu meta string return modifi note pass negat paramet incorrect caus return unspecifi string zero paramet mean modifi pass caus return empti string modifi modifi mask describ modifi key mous button event string string text descript combin modifi key mous button event
KeyEvent::setKeyCode Set::Set keycod valu indic physic key keycod integ correspond actual key keyboard
KeyEvent::setKeyChar Set::Set keychar valu indic logic charact keychar char correspond combin keystrok make event
KeyEvent::setModifiers Set::Set modifi indic addit key held shift ctrl alt meta defin part InputEvent::InputEvent note use recommend awt implement recogn modifi chang especi KeyEvent::KEY type event where shift modifi chang modifi integ combin modifi constant
KeyEvent::getKeyText return String::String describ keycod Event::F1 string local chang awt properti file string contain text descript physic key identifi keycod
KeyEvent::getKeyModifiersText return String::String describ modifi key shift ctrl shift string local chang awt properti file note inputev alt mask inputev button2 mask valu string alt return modifi inputev meta mask inputev button3 mask valu string meta return modifi string text descript combin modifi key held event
ItemEvent::ItemEvent semant event indic item select deselect level event generat ItemSelectable::ItemSelectable object List::List item select deselect user event pass ItemListener::ItemListener object regist receiv event use compon additemlisten object implement ItemListener::ItemListener interfac get ItemEvent::ItemEvent event occur listen spare detail process individu mous movement mous click instead process meaning semant event item select item deselect unspecifi behavior caus paramet particular ItemEvent::ItemEvent instanc rang item first item last statechang ItemEvent::ItemEvent instanc take valu itemev select itemev deselect assign valu list caus unspecifi behavior
InvocationEvent::InvocationEvent construct InvocationEvent::InvocationEvent specifi sourc execut runnabl run dispatch conveni constructor invoc form invocationev sourc runnabl behav exact invoc sourc runnabl null fals throw IllegalArgumentException::IllegalArgumentException sourc null sourc Object::Object origin event runnabl Runnable::Runnable run execut
InvocationEvent::InvocationEvent construct InvocationEvent::InvocationEvent specifi sourc execut runnabl run dispatch notifi null notifyal call run return thrown invoc form invocationev sourc runnabl notifi catchthrow behav exact invoc sourc invocationev invoc default runnabl notifi catchthrow throw IllegalArgumentException::IllegalArgumentException sourc null sourc Object::Object origin event runnabl Runnable::Runnable run execut notifi Object::Object Object::notifyAll call runnabl run return thrown event dispos catchthrow specifi dispatch catch Throwable::Throwable execut Runnable::Runnable run instead propag throwabl eventdispatchthread dispatch loop
InvocationEvent::InvocationEvent construct InvocationEvent::InvocationEvent specifi sourc execut runnabl run dispatch listen null listen run call run return thrown event dispos throw IllegalArgumentException::IllegalArgumentException sourc null sourc Object::Object origin event runnabl Runnable::Runnable run execut listen Runnable::Runnable run call InvocationEvent::InvocationEvent dispatch dispos catchthrow specifi dispatch catch Throwable::Throwable execut Runnable::Runnable run instead propag throwabl eventdispatchthread dispatch loop
InvocationEvent::InvocationEvent construct InvocationEvent::InvocationEvent specifi sourc execut runnabl run dispatch notifi null Object::notifyAll call run return thrown throw IllegalArgumentException::IllegalArgumentException sourc null sourc Object::Object origin event integ indic type event allow valu see descript runnabl Runnable::Runnable run execut notifi Object::Object Object::notifyAll call runnabl run return thrown event dispos catchthrow specifi dispatch catch Throwable::Throwable execut Runnable::Runnable run instead propag throwabl eventdispatchthread dispatch loop
InvocationEvent::getException return Exception::Exception caught execut runnabl run refer Exception::Exception thrown null Exception::Exception thrown InvocationEvent::InvocationEvent catch
ActionEvent::ActionEvent semant event indic compon defin action occur level event generat compon Button::Button compon specif action occur press event pass ActionListener::ActionListener object regist receiv event use compon addactionlisten note invok ActionEvent::ActionEvent Button::Button use keyboard use space object implement ActionListener::ActionListener interfac get ActionEvent::ActionEvent event occur listen therefor spare detail process individu mous movement mous click instead process meaning semant event button press unspecifi behavior caus paramet particular ActionEvent::ActionEvent instanc rang action first action last
InputEvent::InputEvent root event compon level input event input event deliv listen process normal sourc where origin allow listen compon subclass consum event sourc process default manner exampl consum mousepress event Button::Button compon prevent Button::Button activ
InputEvent::getModifiersExText return String::String describ extend modifi key mous button shift button1 ctrl shift string local chang awt properti file note pass negat paramet incorrect caus return unspecifi string zero paramet mean modifi pass caus return empti string modifi modifi mask describ extend modifi key mous button event text descript combin extend modifi key mous button held event
Robot::Robot generat nativ system input event purpos test autom self run demo applic where control mous keyboard primari purpos Robot::Robot facilit autom test platform implement use generat input event differ post event awt event queue awt compon event generat platform nativ input queue exampl robot mousemov actual move mous cursor instead generat mous move event note platform requir privileg extens access low level input control current platform configur allow input control AWTException::AWTException thrown tri construct Robot::Robot object exampl window system throw xtest standard extens support enabl server applic use Robot::Robot purpos self test handl error condit grace
Robot::Robot construct Robot::Robot object coordin system primari screen
Robot::Robot creat Robot::Robot given screen devic coordin pass Robot::Robot call mousemov Robot::createScreenCapture interpret coordin system specifi screen note depend platform configur multipl screen share coordin system form combin virtual screen use coordin system act independ screen constructor meant latter case screen devic reconfigur coordin system affect behavior exist Robot::Robot object undefin screen screen GraphicsDevice::GraphicsDevice indic coordin system Robot::Robot oper
Robot::mouseMove move mous pointer given screen coordin posit posit
Robot::mousePress press mous button mous button releas use button Button::Button mask combin mous button mask allow use combin valid valu button paramet valid combin consist inputev button1 mask inputev button2 mask inputev button3 mask valu return valid combin depend valu follow support extend mous button allow use standard button mask inputev button1 mask inputev button2 mask inputev button3 mask support extend mous button allow use standard button mask mask exist extend mous button mous button allow use button mask correspond button rang recommend use obtain mask mous button number standard button mask accept inputev button1 mask inputev button2 mask inputev button3 mask recommend use inputev button1 mask inputev button2 mask inputev button3 mask instead extend mask old mask valu model mix
Robot::mouseRelease releas mous button button Button::Button mask combin mous button mask allow use combin valid valu button paramet valid combin consist inputev button1 mask inputev button2 mask inputev button3 mask valu return valid combin depend valu follow support extend mous button allow use standard button mask inputev button1 mask inputev button2 mask inputev button3 mask support extend mous button allow use standard button mask mask exist extend mous button mous button allow use button mask correspond button rang recommend use obtain mask mous button number standard button mask accept inputev button1 mask inputev button2 mask inputev button3 mask recommend use inputev button1 mask inputev button2 mask inputev button3 mask instead extend mask old mask valu model mix
Robot::mouseWheel rotat scroll wheel wheel equip mice wheelamt number notch move mous wheel negat valu indic movement user posit valu indic movement user
Robot::getPixelColor return color pixel given screen coordin posit pixel posit pixel Color::Color pixel
Robot::createScreenCapture creat imag contain pixel read screen imag includ mous cursor screenrect rect captur screen coordin captur imag
Robot::isAutoWaitForIdle return Robot::Robot automat invok Robot::waitForIdle generat event Robot::waitForIdle automat call
Robot::setAutoWaitForIdle set Robot::Robot automat invok Robot::waitForIdle generat event ison Robot::waitForIdle automat invok
Robot::getAutoDelay return number millisecond Robot::Robot sleep generat event
Robot::setAutoDelay set number millisecond Robot::Robot sleep generat event
Robot::toString return string represent Robot::Robot string represent
SystemTray::firePropertyChange support report bound properti chang Object::Object properti call bound properti chang send appropri PropertyChangeEvent::PropertyChangeEvent regist propertychangelisten propertynam properti valu chang oldvalu properti previous valu newvalu properti valu
SystemTray::getCurrentChangeSupport return current PropertyChangeSupport::PropertyChangeSupport instanc call thread context thread context PropertyChangeSupport::PropertyChangeSupport
GridBagLayout::GridBagLayout GridBagLayout::GridBagLayout flexibl layout manag align compon vertic horizont baselin requir compon size GridBagLayout::GridBagLayout object maintain dynam rectangular grid cell compon occupi cell call display area compon manag GridBagLayout::GridBagLayout associ instanc constraint object specifi where compon display area locat grid compon posit display area addit constraint object GridBagLayout::GridBagLayout consid compon minimum prefer size order determin compon size overal orient grid depend contain properti horizont orient grid coordin upper corner contain increas increas downward horizont orient grid coordin upper corner contain increas increas downward use grid bag layout effect custom GridBagConstraints::GridBagConstraints object associ compon custom GridBagConstraints::GridBagConstraints object set instanc variabl specifi cell contain lead corner compon display area where cell origin grid address gridx nbsp nbsp gridi nbsp nbsp horizont layout compon lead corner upper horizont layout compon lead corner upper use gridbagconstraint relat default valu specifi compon place axi GridBagConstraints::gridx axi GridBagConstraints::gridy compon ad contain compon ad specifi number cell row GridBagConstraints::gridwidth column GridBagConstraints::gridheight compon display area default valu use gridbagconstraint remaind specifi compon display area GridBagConstraints::gridx last cell row GridBagConstraints::gridwidth GridBagConstraints::gridy last cell column GridBagConstraints::gridheight use gridbagconstraint relat specifi compon display area GridBagConstraints::gridx last cell row GridBagConstraints::gridwidth GridBagConstraints::gridy last cell column GridBagConstraints::gridheight compon display area larger compon request size determin resiz compon valu gridbagconstraint default gridbagconstraint horizont make compon wide fill display area horizont don chang height gridbagconstraint vertic make compon tall fill display area vertic don chang width gridbagconstraint make compon fill display area entir specifi compon intern pad layout add minimum size compon width compon minimum width GridBagConstraints::ipadx pixel similar height compon minimum height GridBagConstraints::ipady pixel specifi compon extern pad minimum amount space compon edg display area specifi where compon posit display area kind valu absolut orient relat baselin relat orient relat valu interpret relat contain ComponentOrientation::ComponentOrientation properti absolut valu baselin relat valu calcul relat baselin valid valu determin distribut space specifi resiz behavior specifi weight compon row GridBagConstraints::weightx column GridBagConstraints::weighty compon clump center contain weight zero default GridBagLayout::GridBagLayout object put extra space grid cell edg contain row baselin baselin determin compon row valid baselin align baselin compon anchor valu GridBagConstraints::BASELINE baselin lead baselin trail compon row valid baselin row baselin compon span row align baselin start row baselin resiz behavior constant ascent end row baselin resiz behavior constant descent row compon align call prevail row figur show baselin layout includ compon span row layout consist compon panel start row end row panel baselin resiz behavior constant descent anchor GridBagConstraints::BASELINE baselin resiz behavior constant descent prevail row panel row button baselin resiz behavior center offset anchor GridBagConstraints::BASELINE button panel share prevail row align baselin compon posit use baselin relat valu resiz differ posit use absolut orient relat valu compon chang dictat baselin prevail row chang baselin anchor bottom display area compon prevail row baselin resiz behavior constant descent baselin anchor top display area rule dictat resiz behavior resiz compon posit baselin grow tall baselin exampl baselin 100 anchor top resiz compon posit baselin grow 100 unit similar resiz compon posit baselin grow differ display height baselin resiz compon posit baselin baselin resiz behavior resiz baselin resiz size fit display area baselin fit display area compon resiz compon posit baselin baselin resiz behavior grow tall display height baselin baselin compon posit compon baselin compon valid baselin vertic center space similar posit compon relat baselin compon row valid baselin compon vertic center figur show ten compon button manag grid bag layout figur show layout horizont contain figur show layout horizont contain ten compon fill field associ GridBagConstraints::GridBagConstraints object set gridbagconstraint addit compon non default constraint button1 button2 button3 weightx nbsp nbsp button4 weightx nbsp nbsp gridwidth nbsp nbsp gridbagconstraint remaind button5 gridwidth nbsp nbsp gridbagconstraint remaind button6 gridwidth nbsp nbsp gridbagconstraint relat button7 gridwidth nbsp nbsp gridbagconstraint remaind button8 gridheight nbsp nbsp weighti nbsp nbsp button9 Button::Button 10 gridwidth nbsp nbsp gridbagconstraint remaind implement exampl shown abov
GridBagLayout::adjustForGravity adjust width height field correct valu depend constraint geometri pad intern GridBagLayout::GridBagLayout constraint constraint appli Rectangle::Rectangle adjust
GridBagLayout::getMinSize figur minimum size master base GridBagLayout::getLayoutInfo intern GridBagLayout::GridBagLayout parent layout contain info layout info parent Dimension::Dimension object contain minimum size
AlphaComposite::AlphaComposite AlphaComposite::AlphaComposite implement basic alpha composit rule combin sourc destin color achiev blend transpar effect graphic imag specif rule implement basic set 12 rule describ porter duff composit digit imag siggraph 84 253 259 rest document assum familiar definit concept outlin paper extend standard equat defin porter duff includ addit factor instanc AlphaComposite::AlphaComposite contain alpha valu modifi opac coverag sourc pixel blend equat note equat defin porter duff paper defin oper color compon premultipli correspond alpha compon ColorModel::ColorModel Raster::Raster allow storag pixel data premultipli non premultipli form input data normal premultipli form appli equat result adjust form requir destin pixel valu store note defin equat combin color alpha valu pure mathemat sens accur equat depend data retriev sourc store destin see further factor descript blend equat porter duff paper use factor porter duff defin 12 choos blend factor produc 12 desir visual effect equat determin given descript 12 static field specifi visual effect exampl descript specifi set equat determin blend factor known appli pixel produc result use set equat factor discuss extens blend equat porter duff paper prepar input AlphaComposite::AlphaComposite defin addit alpha valu appli sourc alpha valu appli implicit src rule first appli sourc pixel pixel indic alpha multipli raw sourc alpha raw sourc color alpha AlphaComposite::AlphaComposite lead equat produc alpha porter duff blend equat raw sourc color compon multipli alpha AlphaComposite::AlphaComposite instanc addit sourc premultipli form color compon multipli sourc alpha thus equat produc sourc color compon porter duff equat depend sourc pixel premultipli adjust made destin alpha destin color compon adjust premultipli form appli blend equat adjust standard porter duff equat calcul blend factor result premultipli compon prepar result result adjust store destin buffer hold data premultipli use equat note divis undefin result alpha zero divis case omit avoid divid zero color compon zero perform consider perform reason prefer Raster::Raster object pass compos object creat AlphaComposite::AlphaComposite premultipli data sourc Raster::Raster destin Raster::Raster premultipli appropri convers perform composit oper sourc opaqu imag type list BufferedImage::BufferedImage store alpha valu pixel sourc suppli alpha pixel destin place store alpha valu result blend calcul perform destin thus implicit discard result alpha valu produc recommend destin treat store color valu non premultipli divid result color valu result alpha valu store color valu discard alpha valu accuraci result depend manner pixel store destin imag format provid bit storag color alpha compon adequ use destin sequenc dozen composit oper imag format fewer bit storag compon limit use composit oper error domin result imag format separ store color compon candid type transluc blend exampl bufferedimag type byte index destin blend oper oper introduc error due choos pixel limit palett match result blend equat format store pixel discret integ float point valu refer equat implement scale integ pixel valu float point valu rang use slight modifi version equat oper entir integ domain produc analog result refer equat typic integ valu relat float point valu integ equat float point valu integ where number bit represent equat bit represent mean 0x00 repres 0xff repres intern implement approxim equat elimin step avoid unnecessari oper exampl consid discret integ imag non premultipli alpha valu use bit compon storag store valu transpar darken red integ math valu composit mode extra alpha math indic result integ format note intermedi valu premultipli form allow integ red compon 0x00 0x01 store result destin premultipli divid alpha give choic non premultipli red valu case implement perform math integ space shortcut end final pixel valu note 0x01 divid 0x01 give equival valu 0xff bit storag format altern implement use float point math produc accur result end return origin pixel valu roundoff error implement use integ math decid equat boil virtual nop color valu perform float point space transfer pixel untouch destin avoid math entir implement attempt honor equat use tradeoff integ float point math reduc full equat account differ expect premultipli form result match implement imag format case answer express premultipli form equat thus match techniqu simplifi equat calcul effici implement perform differ encount result alpha valu non premultipli destin note simplif remov divid alpha case src rule technic valid denomin alpha result expect accur view premultipli form result alpha essenti render result color compon irrelev exact behavior case expect
AlphaComposite::equals determin specifi object equal AlphaComposite::AlphaComposite result argument null AlphaComposite::AlphaComposite object composit rule alpha valu object obj Object::Object test equal obj equal AlphaComposite::AlphaComposite fals
TextField::writeObject write default serializ field stream write list serializ actionlisten option data non serializ actionlisten detect attempt made serial null termin sequenc zero pair pair consist String::String Object::Object String::String indic type object actionlistenerk indic ActionListener::ActionListener object
TextField::readObject read ObjectInputStream::ObjectInputStream isn null add listen receiv action event fire TextField::TextField unrecogn key valu ignor
EventDispatchThread::EventDispatchThread EventDispatchThread::EventDispatchThread packag privat awt take event EventQueue::EventQueue dispatch appropri awt compon Thread::Thread start perman event pump call pumpev condit run Event::Event handler choos block event pump time start pump EventDispatchThread::EventDispatchThread call pumpev condit secondari event pump exit automat condtion evalu fals addit Event::Event pump dispatch
MenuShortcut::equals return MenuShortcut::MenuShortcut anoth equal defin mean menushortcut use key use don use shift key obj Object::Object compar MenuShortcut::MenuShortcut fals
Point::Point point repres locat coordin space specifi integ precis
Point::x coordin Point::Point coordin set default
Point::y coordin Point::Point coordin set default
Point::Point construct initi point origin nbsp coordin space
Point::Point construct initi point locat specifi Point::Point object point
Point::Point construct initi point specifi locat coordin space coordin newli construct Point::Point coordin newli construct Point::Point
Point::getLocation return locat point includ complet parallel getloc compon copi point locat
MenuItem::setShortcut Set::Set MenuShortcut::MenuShortcut object associ menu item menu shortcut associ menu item replac menu shortcut associ menu item
MenuItem::writeObject write default serializ field stream write list serializ actionlisten option data non serializ listen detect attempt made serial ObjectOutputStream::ObjectOutputStream write null termin sequenc pair pair consist String::String Object::Object String::String indic type object follow actionlistenerk indic ActionListener::ActionListener object
MenuItem::readObject read ObjectInputStream::ObjectInputStream isn null add listen receiv action event fire Menu::Menu item unrecogn key valu ignor ObjectInputStream::ObjectInputStream read
MenuItem::getCurrentAccessibleValue get valu object Number::Number Integer::Integer isn select Integer::Integer select
MenuItem::setCurrentAccessibleValue Set::Set valu object Number::Number valu set
MenuItem::getMinimumAccessibleValue get minimum valu object Number::Number Integer::Integer
MenuItem::getMaximumAccessibleValue get maximum valu object Number::Number Integer::Integer
Area::getBounds return bound complet enclos Area::Area Area::Area attempt return tightest bound box Shape::Shape bound box pad includ control point curv outlin Shape::Shape tight fit actual geometri outlin return object repres bound box integ bound box tight nearest integ coordin encompass geometri Shape::Shape bound Rectangle::Rectangle Area::Area
Ellipse2D::equals determin specifi Object::Object equal Ellipse2D::Ellipse2D specifi Object::Object equal Ellipse2D::Ellipse2D instanc Ellipse2D::Ellipse2D locat size Ellipse2D::Ellipse2D obj Object::Object compar Ellipse2D::Ellipse2D obj instanc Ellipse2D::Ellipse2D valu fals
QuadCurve2D::getP2 return end point Point::Point object end point Point2D::Point2D
RoundRectangle2D::equals determin specifi Object::Object equal RoundRectangle2D::RoundRectangle2D specifi Object::Object equal RoundRectangle2D::RoundRectangle2D instanc RoundRectangle2D::RoundRectangle2D locat size corner arc dimens RoundRectangle2D::RoundRectangle2D obj Object::Object compar RoundRectangle2D::RoundRectangle2D obj instanc RoundRectangle2D::RoundRectangle2D valu fals
Arc2D::readObject read default serializ field ObjectInputStream::ObjectInputStream follow byte indic arc type Arc2D::Arc2D instanc default serializ field follow byte indic arc type
Arc2D::readObject read default serializ field ObjectInputStream::ObjectInputStream follow byte indic arc type Arc2D::Arc2D instanc default serializ field follow byte indic arc type
Arc2D::equals determin specifi Object::Object equal Arc2D::Arc2D specifi Object::Object equal Arc2D::Arc2D instanc Arc2D::Arc2D locat size arc extent type Arc2D::Arc2D obj Object::Object compar Arc2D::Arc2D obj instanc Arc2D::Arc2D valu fals
Path2D::readObject read default serializ field ObjectInputStream::ObjectInputStream follow explicit serial path segment store path default serializ field serial data object describ writeobject
Path2D::readObject read default serializ field ObjectInputStream::ObjectInputStream follow explicit serial path segment store path default serializ field serial data object describ writeobject
Point2D::toString return String::String repres valu Point2D::Point2D string represent Point2D::Point2D
Point2D::toString return String::String repres valu Point2D::Point2D string represent Point2D::Point2D
Rectangle2D::toString return String::String represent Rectangle2D::Rectangle2D String::String repres Rectangle2D::Rectangle2D
Rectangle2D::toString return String::String represent Rectangle2D::Rectangle2D String::String repres Rectangle2D::Rectangle2D
Rectangle2D::equals determin specifi Object::Object equal Rectangle2D::Rectangle2D specifi Object::Object equal Rectangle2D::Rectangle2D instanc Rectangle2D::Rectangle2D locat size Rectangle2D::Rectangle2D obj Object::Object compar Rectangle2D::Rectangle2D obj instanc Rectangle2D::Rectangle2D valu fals
Dimension2D::getWidth return width Dimension::Dimension doubl precis width Dimension::Dimension
Dimension2D::getHeight return height Dimension::Dimension doubl precis height Dimension::Dimension
Dimension2D::setSize set size Dimension::Dimension object specifi width height includ complet parallel width width Dimension::Dimension object height height Dimension::Dimension object
AffineTransform::toString return String::String repres valu String::String repres valu Object::Object
AffineTransform::clone return copi AffineTransform::AffineTransform object Object::Object copi AffineTransform::AffineTransform object
AffineTransform::equals return AffineTransform::AffineTransform repres affin coordin transform specifi argument obj Object::Object test equal AffineTransform::AffineTransform obj equal AffineTransform::AffineTransform object fals
TextArea::readObject read ObjectInputStream::ObjectInputStream
BorderLayout::BorderLayout border layout lay contain arrang resiz compon fit region north south east west center region contain compon identifi correspond constant north south east west center ad compon contain border layout use constant exampl conveni BorderLayout::BorderLayout interpret absenc string specif constant center addit BorderLayout::BorderLayout support relat posit constant page start page end line start line end contain ComponentOrientation::ComponentOrientation set componentorient constant map north south west east respect compat previous releas BorderLayout::BorderLayout includ relat posit constant BorderLayout::BEFORE first line BorderLayout::AFTER last line BorderLayout::BEFORE line begin BorderLayout::AFTER line end equival page start page end line start line end respect consist relat posit constant compon latter constant prefer mix absolut relat posit constant lead unpredict result use type relat constant take preced exampl add compon use north page start constant contain orient ComponentOrientation::LEFT page start lay note current platform v1 BorderLayout::BorderLayout support vertic orient TextLayout::isVertical set contain ComponentOrientation::ComponentOrientation respect compon laid accord prefer size constraint contain size north south compon stretch horizont east west compon stretch vertic center compon stretch horizont vertic fill space exampl button applet laid use BorderLayout::BorderLayout layout manag applet follow
RadialGradientPaintContext::RadialGradientPaintContext Constructor::Constructor RadialGradientPaintContext::RadialGradientPaintContext paint RadialGradientPaint::RadialGradientPaint context creat cm ColorModel::ColorModel receiv Paint::Paint data hint devicebound devic space bound box graphic primit render userbound user space bound box graphic primit render AffineTransform::AffineTransform user space devic space gradienttransform concaten hint hint context object use choos render altern cx center coordin user space circl defin gradient last color gradient map perimet circl cy center coordin user space circl defin gradient last color gradient map perimet circl radius circl defin extent color gradient fx coordin user space first color map fy coordin user space first color map fraction fraction specifi gradient distribut color gradient color cyclemethod cycl reflect repeat colorspac colorspac use interpol srgb linear rgb
List::List List::List compon user scroll list text item list set user choos item multipl item exampl nbsp nbsp nbsp where cnt contain produc scroll list List::List allow multipl select click item select deselect preced exampl item scroll list select time argument creat scroll list fals List::List allow multipl select select item caus select item deselect note list exampl shown creat visibl row list creat number visibl row chang default List::List creat row lst list equival list list fals begin nbsp abstract Window::Window Toolkit::Toolkit send List::List object mous keyboard focus event occur old awt event model maintain backward compat use discourag item select deselect user awt send instanc ItemEvent::ItemEvent list user doubl click item scroll list awt send instanc ActionEvent::ActionEvent list item event awt generat action event user press return key item list select want perform action base item list select activ user implement ItemListener::ItemListener ActionListener::ActionListener appropri regist listen receiv event list multipl select scroll list consid user interfac use extern gestur click button trigger action
List::List creat scroll list default visibl line multipl select allow note conveni list fals note number visibl line list chang creat
List::List creat scroll list initi specifi number visibl line default multipl select allow note conveni list row fals note number visibl row list chang creat row number item show
List::List creat scroll list initi display specifi number row note zero row specifi list creat default row note number visibl row list chang creat valu multiplemod user select multipl item list fals item time select row number item show multiplemod multipl select allow item select time
List::add add specifi item end scroll list item item ad
List::add add specifi item scroll list posit indic index index zero base valu index zero valu index greater equal number item list item ad end list item item ad paramet null item treat empti string index posit add item
List::remove remov first occurr item list specifi item select select item list list set select item item remov list
List::remove remov item specifi posit scroll list item specifi posit select select item list list set select posit index item delet
List::getSelectedObjects get select item scroll list array Objects::Objects array Object::Object repres select item scroll list item select zero length array return
List::getRows get number visibl line list note List::List creat number chang number visibl line scroll list
List::getListeners return array object current regist foo listen List::List foo listen regist use add foo listen specifi listenertyp argument liter foo listen exampl queri List::List item listen listen exist return empti array listenertyp type listen request paramet specifi interfac descend util eventlisten array object regist foo listen list empti array listen ad
List::writeObject write default serializ field stream write list serializ itemlisten actionlisten option data non serializ listen detect attempt made serial null termin sequenc pair pair consist String::String Object::Object String::String indic type object follow itemlistenerk indic ItemListener::ItemListener object actionlistenerk indic ActionListener::ActionListener object ObjectOutputStream::ObjectOutputStream write
List::readObject read ObjectInputStream::ObjectInputStream isn null add listen receiv item event action event specifi key store stream fire List::List unrecogn key valu ignor ObjectInputStream::ObjectInputStream write
List::getAccessibleContext get accessiblecontext associ List::List list accessiblecontext take form accessibleawtlist accessibleawtlist instanc creat necessari accessibleawtlist serv accessiblecontext List::List
List::getAccessibleAt return access child contain local coordin Point::Point exist access specifi locat exist
List::setBackground Set::Set background color object Color::Color background
List::setForeground Set::Set foreground color object Color::Color foreground
List::setCursor Set::Set Cursor::Cursor object visual effect platform implement nativ system support chang mous cursor shape cursor Cursor::Cursor object
List::getFont get Font::Font object font support object null
List::setFont Set::Set Font::Font object Font::Font object
List::getFontMetrics get FontMetrics::FontMetrics object Font::Font FontMetrics::FontMetrics support object null
List::setEnabled Set::Set enabl state object enabl object disabl
List::setVisible Set::Set visibl state object show object hide
List::contains check specifi point object bound where point coordin defin relat coordin system object Point::Point relat coordin system object object contain Point::Point fals
List::getLocation get locat object relat parent form point specifi object top corner screen coordin space instanc Point::Point repres top corner object bound coordin space screen null object parent screen
List::getBounds get bound object form Rectangle::Rectangle object bound specifi object width height locat relat parent rectangl indic compon bound null object screen
List::setBounds set bound object form Rectangle::Rectangle object bound specifi object width height locat relat parent rectangl indic compon bound
List::getSize return size object form Dimension::Dimension object height field Dimension::Dimension object contain object height width field Dimension::Dimension object contain object width Dimension::Dimension object indic size compon null object screen
List::getAccessibleAt return access child exist contain local coordin Point::Point point relat coordin system object access exist specifi locat null
GraphicsEnvironment::GraphicsEnvironment GraphicsEnvironment::GraphicsEnvironment describ collect object object avail tm particular platform resourc GraphicsEnvironment::GraphicsEnvironment local remot machin GraphicsDevice::GraphicsDevice object screen printer imag buffer destin draw GraphicsDevice::GraphicsDevice number object associ object specifi configur GraphicsDevice::GraphicsDevice
GraphicsEnvironment::GraphicsEnvironment abstract instanti instanc obtain suitabl factori queri
GraphicsEnvironment::getLocalGraphicsEnvironment return local GraphicsEnvironment::GraphicsEnvironment local GraphicsEnvironment::GraphicsEnvironment
GraphicsEnvironment::createGE creat return GraphicsEnvironment::GraphicsEnvironment accord system properti awt graphicsenv graphic environ
GraphicsEnvironment::isHeadless test display keyboard mous support environ return HeadlessException::HeadlessException thrown area Toolkit::Toolkit GraphicsEnvironment::GraphicsEnvironment depend display keyboard mous environ support display keyboard mous fals
GraphicsEnvironment::getScreenDevices return array screen GraphicsDevice::GraphicsDevice object array contain GraphicsDevice::GraphicsDevice object repres screen devic
GraphicsEnvironment::getDefaultScreenDevice return default screen GraphicsDevice::GraphicsDevice GraphicsDevice::GraphicsDevice repres default screen devic
GraphicsEnvironment::createGraphics return Graphics2D::Graphics2D object render specifi img specifi BufferedImage::BufferedImage Graphics2D::Graphics2D render specifi BufferedImage::BufferedImage
GraphicsEnvironment::getAllFonts return array contain point size instanc font avail GraphicsEnvironment::GraphicsEnvironment typic usag allow user select particular font size font set various font attribut call Font::deriveFont chosen instanc provid precis control Font::Font instanc render text font GraphicsEnvironment::GraphicsEnvironment multipl programm variat instanc Font::Font return array variat deriv font environ multipl programm variat MultipleMaster::MultipleMaster font instanc font return Font::Font array variat deriv array Font::Font object
GraphicsEnvironment::getAvailableFontFamilyNames return array contain name font famili GraphicsEnvironment::GraphicsEnvironment local default local return local getdefault typic usag user select particular famili name specifi name creat font conjunct style bold ital give font system flexibl choos match multipl font font famili array String::String contain font famili name local default local suitabl altern name name exist local
GraphicsEnvironment::getAvailableFontFamilyNames return array contain name font famili GraphicsEnvironment::GraphicsEnvironment local specifi local typic usag user select particular famili name specifi name creat font conjunct style bold ital give font system flexibl choos match multipl font font famili object repres particular geograph polit cultur region specifi null equival specifi local getdefault array String::String contain font famili name local specifi Locale::Locale suitabl altern name name exist specifi local
GraphicsEnvironment::registerFont regist creat Font::Font GraphicsEnvironment::GraphicsEnvironment creat font return call deriv creat font call call font avail construct Font::Font name famili name enumer execut context applet mean applet regist font visibl applet reason regist font therefor return fals font creat Font::Font font conflict non creat Font::Font GraphicsEnvironment::GraphicsEnvironment exampl name system font logic font describ document implement depend font conflict famili name system font notic supersed registr earlier creat font font success regist GraphicsEnvironment::GraphicsEnvironment
GraphicsEnvironment::getCenterPoint return Point::Point where window center recommend center window check ensur fit avail display area use GraphicsEnvironment::getMaximumWindowBounds point where window center
Checkbox::writeObject write default serializ field stream write list serializ itemlisten option data non serializ itemlisten detect attempt made serial ObjectOutputStream::ObjectOutputStream write null termin sequenc pair pair consist String::String Object::Object String::String indic type object follow itemlistenerk indic ItemListener::ItemListener object
Checkbox::readObject read ObjectInputStream::ObjectInputStream isn null add listen receiv item event fire Checkbox::Checkbox unrecogn key valu ignor ObjectInputStream::ObjectInputStream read
Checkbox::getCurrentAccessibleValue get valu object Number::Number valu set return valu null valu object
Checkbox::setCurrentAccessibleValue Set::Set valu object Number::Number valu set els fals
Checkbox::getMinimumAccessibleValue get minimum valu object Number::Number minimum valu object null object minimum valu
Checkbox::getMaximumAccessibleValue get maximum valu object Number::Number maximum valu object null object maximum valu
IllegalComponentStateException::IllegalComponentStateException construct IllegalComponentStateException::IllegalComponentStateException detail messag detail messag String::String describ particular
IllegalComponentStateException::IllegalComponentStateException construct IllegalComponentStateException::IllegalComponentStateException specifi detail messag detail messag String::String describ particular String::String contain detail messag
Color::Color Color::Color encapsul color default srgb color space color arbitrari color space identifi color implicit alpha valu explicit constructor alpha valu defin transpar color repres float valu rang nbsp nbsp nbsp nbsp 255 alpha valu 255 mean color complet opaqu alpha valu mean color complet transpar construct Color::Color explicit alpha get color alpha compon Color::Color color compon premultipli alpha compon default color space 2d tm srgb propos standard rgb color space further srgb see http www w3 org pub www graphic color srgb html 10 feb 1997
Color::black color black default srgb space
Color::BLACK color black default srgb space
Color::YELLOW color yellow default srgb space
Color::GREEN color green default srgb space
Color::BLUE color blue default srgb space
Color::Color creat opaqu srgb color specifi red green blue valu rang 255 actual color render depend find match given color space avail given output devic alpha default 255 red compon green compon blue compon
Color::Color creat srgb color specifi red green blue alpha valu rang 255 red compon green compon blue compon alpha compon
Color::Color creat opaqu srgb color specifi combin rgb valu consist red compon bit 16 23 green compon bit 15 blue compon bit actual color render depend find match given color space avail particular output devic alpha default 255 rgb combin rgb compon
Color::Color creat srgb color specifi combin rgba valu consist alpha compon bit 24 31 red compon bit 16 23 green compon bit 15 blue compon bit hasalpha argument fals alpha default 255 rgba combin rgba compon hasalpha alpha bit valid fals
Color::Color creat opaqu srgb color specifi red green blue valu rang alpha default actual color render depend find match given color space avail particular output devic red compon green compon blue compon
Color::Color creat srgb color specifi red green blue alpha valu rang actual color render depend find match given color space avail particular output devic red compon green compon blue compon alpha compon
Color::Color creat color specifi ColorSpace::ColorSpace color compon specifi float array specifi alpha number compon determin type ColorSpace::ColorSpace exampl rgb requir compon cmyk requir compon cspace ColorSpace::ColorSpace interpret compon compon arbitrari number color compon compat ColorSpace::ColorSpace alpha alpha valu
Color::getRed return red compon rang 255 default srgb space red compon
Color::getGreen return green compon rang 255 default srgb space green compon
Color::getBlue return blue compon rang 255 default srgb space blue compon
Color::brighter creat Color::Color brighter version Color::Color appli arbitrari scale factor rgb compon Color::Color creat brighter version Color::Color alpha valu preserv Color::brighter Color::darker invers oper result seri invoc inconsist error Color::Color object brighter version Color::Color alpha valu
Color::darker creat Color::Color darker version Color::Color appli arbitrari scale factor rgb compon Color::Color creat darker version Color::Color alpha valu preserv Color::brighter Color::darker invers oper result seri invoc inconsist error Color::Color object darker version Color::Color alpha valu
Color::hashCode comput hash Color::Color hash valu object
Color::equals determin object equal Color::Color result argument null Color::Color object red green blue alpha valu object obj object test equal Color::Color object fals
Color::toString return string represent Color::Color intend debug purpos content format return string vari implement return string empti null string represent Color::Color
Color::decode convert String::String integ return specifi opaqu Color::Color handl string format repres octal hexadecim number nm String::String repres opaqu color 24 bit integ Color::Color object
Color::getColor find color system properti argument treat name system properti obtain string valu properti interpret integ convert Color::Color object specifi properti found pars integ null return nm name color properti Color::Color convert system properti
Color::getColor find color system properti first argument treat name system properti obtain string valu properti interpret integ convert Color::Color object specifi properti found pars integ Color::Color specifi argument return instead nm name color properti default Color::Color Color::Color convert system properti specifi Color::Color
Color::getColor find color system properti first argument treat name system properti obtain string valu properti interpret integ convert Color::Color object specifi properti found pars integ integ valu instead convert Color::Color object nm name color properti default color valu integ Color::Color convert system properti Color::Color convert specifi integ
Color::HSBtoRGB convert compon color specifi hsb model equival set valu default rgb model satur bright compon float point valu zero number rang hue compon float point number floor number subtract creat fraction fraction number multipli 360 produc hue angl hsb color model integ return Color::HSBtoRGB encod valu color bit 23 integ valu format integ suppli argument Color::Color constructor take singl integ argument hue hue compon color satur satur color bright bright color rgb valu color indic hue satur bright
Color::getHSBColor creat Color::Color object base specifi valu hsb color model compon float point valu zero number rang compon float point number floor number subtract creat fraction fraction number multipli 360 produc hue angl hsb color model hue compon satur color bright color Color::Color object specifi hue satur bright
Color::getRGBComponents return float array contain color alpha compon Color::Color repres default srgb color space comparray null array length creat return valu comparray length greater fill compon return comparray array fill color alpha compon return rgba compon float array
Color::getRGBColorComponents return float array contain color compon Color::Color default srgb color space comparray null array length creat return valu comparray length greater fill compon return comparray array fill color compon return rgb compon float array
Color::getComponents return float array contain color alpha compon Color::Color ColorSpace::ColorSpace Color::Color comparray null array length equal number compon associ ColorSpace::ColorSpace creat return valu comparray length fill compon return comparray array fill color alpha compon Color::Color ColorSpace::ColorSpace return color alpha compon float array
Color::getColorComponents return float array contain color compon Color::Color ColorSpace::ColorSpace Color::Color comparray null array length equal number compon associ ColorSpace::ColorSpace creat return valu comparray length fill compon return comparray array fill color compon Color::Color ColorSpace::ColorSpace return color compon float array
Color::getComponents return float array contain color alpha compon Color::Color ColorSpace::ColorSpace specifi cspace paramet comparray null array length equal number compon cspace creat return valu comparray length fill compon return cspace specifi ColorSpace::ColorSpace comparray array fill color alpha compon Color::Color specifi ColorSpace::ColorSpace return color alpha compon float array
Color::getColorComponents return float array contain color compon Color::Color ColorSpace::ColorSpace specifi cspace paramet comparray null array length equal number compon cspace creat return valu comparray length fill compon return cspace specifi ColorSpace::ColorSpace comparray array fill color compon Color::Color specifi ColorSpace::ColorSpace color compon float array
Color::getColorSpace return ColorSpace::ColorSpace Color::Color Color::Color object ColorSpace::ColorSpace
Color::getTransparency return transpar mode Color::Color requir implement Paint::Paint interfac Color::Color object transpar mode
PageAttributes::ISO design mediatyp instanc iso design Long::Long 110 220 mm
PageAttributes::clone creat return copi PageAttributes::PageAttributes newli creat copi safe cast Object::Object PageAttributes::PageAttributes
AWTKeyStroke::registerSubclass regist factori AWTKeyStroke::AWTKeyStroke use generat instanc AWTKeyStroke::AWTKeyStroke invok factori return instanc specifi Class::Class specifi Class::Class AWTKeyStroke::AWTKeyStroke deriv AWTKeyStroke::AWTKeyStroke arg constructor constructor access includ privat oper flush current AWTKeyStroke::AWTKeyStroke cach subclass Class::Class factori creat instanc
AWTKeyStroke::getAWTKeyStroke pars string return AWTKeyStroke::AWTKeyStroke string syntax type press releas specifi press assum exampl String::String format describ AWTKeyStroke::AWTKeyStroke object String::String
AWTKeyStroke::equals return object ident specifi object anobject Object::Object compar object object ident
AWTKeyStroke::toString return string display identifi object properti String::String return pass paramet getawtkeystrok string produc key stroke equal key stroke String::String represent object
EventFilter::FilterAction Enumeration::Enumeration valu acceptev awtev ev
Shape::getBounds return integ complet enclos Shape::Shape note guarante return Rectangle::Rectangle smallest bound box enclos Shape::Shape Shape::Shape lie entir indic Rectangle::Rectangle return Rectangle::Rectangle fail complet enclos Shape::Shape Shape::Shape overflow limit rang integ data type getbounds2d general return tighter bound box due greater flexibl represent note lead situat where point defin outlin shape consid contain return bound object case where point consid contain origin shape point shape accord return Rectangle::Rectangle bound object accord bound specif shape contain requir bound contain point shape contain bound object bound contain impli shape contain integ Rectangle::Rectangle complet enclos Shape::Shape
ScrollPane::setScrollPosition scroll specifi posit child compon call valid scroll pane contain child specifi posit legal scroll bound child specifi posit legal scroll bound child scroll closest legal posit legal bound defin rectangl width child width view port width height child height view port height conveni interfac Adjustable::Adjustable object repres state scrollbar Point::Point repres posit scroll
ScrollPane::processMouseWheelEvent Process::Process mous wheel event deliv ScrollPane::ScrollPane scroll appropri amount note event paramet null behavior unspecifi result mous wheel event
SplashScreen::getBounds return bound splash screen window use exampl want replac splash screen window locat control size posit splash screen splash screen size adjust automat imag chang imag contain transpar area thus report bound larger visibl splash screen imag screen Rectangle::Rectangle contain splash screen bound
CheckboxMenuItem::writeObject write default serializ field stream write list serializ itemlisten option data non serializ itemlisten detect attempt made serial ObjectOutputStream::ObjectOutputStream write null termin sequenc pair pair consist String::String Object::Object String::String indic type object follow itemlistenerk indic ItemListener::ItemListener object
CheckboxMenuItem::getCurrentAccessibleValue get valu object Number::Number valu set return valu null valu object
CheckboxMenuItem::setCurrentAccessibleValue Set::Set valu object Number::Number valu set fals
CheckboxMenuItem::getMinimumAccessibleValue get minimum valu object Number::Number minimum valu object null object minimum valu
CheckboxMenuItem::getMaximumAccessibleValue get maximum valu object Number::Number maximum valu object null object maximum valu
FontFormatException::FontFormatException thrown Font::createFont Font::Font indic specifi font bad
FontFormatException::FontFormatException report FontFormatException::FontFormatException reason specifi reason String::String messag indic whi font accept
MultiPixelPackedSampleModel::getDataElements return data singl pixel primit array type transfertyp MultiPixelPackedSampleModel::MultiPixelPackedSampleModel array element type smallest databuff type byte databuff type ushort databuff type int hold singl pixel general obj pass null Object::Object creat automat correct primit data type illustr transfer data pixel DataBuffer::DataBuffer db1 storag layout describ MultiPixelPackedSampleModel::MultiPixelPackedSampleModel mppsm1 DataBuffer::DataBuffer db2 storag layout describ MultiPixelPackedSampleModel::MultiPixelPackedSampleModel mppsm2 transfer general effici use getpixel setpixel use getdatael setdatael transfer databuff samplemodel pair legitim samplemodel number band correspond band number bit sampl transfertyp obj null primit array type transfertyp ClassCastException::ClassCastException thrown ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown coordin bound obj null hold pixel data coordin specifi pixel coordin specifi pixel obj primit array return pixel data null data DataBuffer::DataBuffer contain imag data Object::Object contain data specifi pixel
VolatileImage::getSnapshot return static snapshot imag object BufferedImage::BufferedImage return current VolatileImage::VolatileImage time request updat futur chang VolatileImage::VolatileImage represent VolatileImage::VolatileImage
VolatileImage::getSource return ImageProducer::ImageProducer VolatileImage::VolatileImage note VolatileImage::VolatileImage object optim render oper blit screen VolatileImage::VolatileImage object oppos read pixel imag therefor oper getsourc perform fast oper reli read pixel note pixel valu read imag current imag time retriev take snapshot imag time request made ImageProducer::ImageProducer object return work static snapshot imag origin VolatileImage::VolatileImage call getsourc equival call getsnapshot getsourc produc pixel BufferedImage::BufferedImage represent Image::Image
WritableRaster::WritableRaster construct WritableRaster::WritableRaster given SampleModel::SampleModel writablerast upper corner origin size SampleModel::SampleModel DataBuffer::DataBuffer describ WritableRaster::WritableRaster automat creat samplemodel SampleModel::SampleModel specifi layout origin Point::Point specifi origin
WritableRaster::WritableRaster construct WritableRaster::WritableRaster given SampleModel::SampleModel DataBuffer::DataBuffer writablerast upper corner origin size SampleModel::SampleModel DataBuffer::DataBuffer initi compat SampleModel::SampleModel samplemodel SampleModel::SampleModel specifi layout databuff DataBuffer::DataBuffer contain imag data origin Point::Point specifi origin
WritableRaster::WritableRaster construct WritableRaster::WritableRaster given SampleModel::SampleModel DataBuffer::DataBuffer parent aregion specifi bound rectangl Raster::Raster translat base raster coordin system aregion contain base Raster::Raster base Raster::Raster raster ancestor parent samplemodeltransl specifi samplemodeltranslatex samplemodeltranslatey valu Raster::Raster note constructor general call constructor creat samplemodel SampleModel::SampleModel specifi layout databuff DataBuffer::DataBuffer contain imag data aregion Rectangle::Rectangle specifi imag area samplemodeltransl Point::Point specifi translat SampleModel::SampleModel Raster::Raster coordin parent parent raster
WritableRaster::createWritableChild return WritableRaster::WritableRaster share part writablerast DataBuffer::DataBuffer WritableRaster::WritableRaster possess refer current WritableRaster::WritableRaster access getpar WritableRaster::getWritableParent parentx parenti width height paramet form Rectangle::Rectangle writablerast coordin space indic area pixel share error thrown Rectangle::Rectangle contain bound current WritableRaster::WritableRaster WritableRaster::WritableRaster addit translat coordin system plane current WritableRaster::WritableRaster childminx childmini paramet give coordin upper pixel return WritableRaster::WritableRaster coordin childminx childmini WritableRaster::WritableRaster map pixel coordin parentx parenti current WritableRaster::WritableRaster WritableRaster::WritableRaster defin contain subset band current WritableRaster::WritableRaster possibl reorder mean bandlist paramet bandlist null taken includ band current WritableRaster::WritableRaster current order creat WritableRaster::WritableRaster contain subregion current WritableRaster::WritableRaster share coordin system band call childminx equal parentx childmini equal parenti bandlist equal null parentx coordin upper corner writablerast coordin parenti coordin upper corner writablerast coordin width region start parentx parenti height region start parentx parenti childminx coordin upper corner return WritableRaster::WritableRaster childmini coordin upper corner return WritableRaster::WritableRaster bandlist Array::Array band indic null use band WritableRaster::WritableRaster share part DataBuffer::DataBuffer WritableRaster::WritableRaster
PackedColorModel::PackedColorModel PackedColorModel::PackedColorModel abstract work pixel valu repres color alpha separ sampl pack sampl singl pixel singl int byte quantiti arbitrari number color sampl pixel valu number color compon ColorSpace::ColorSpace singl alpha sampl array length use primit array pixel represent type transfertyp transfer type support databuff type byte databuff type ushort databuff type int Color::Color alpha sampl store singl element array bit indic bit mask bit mask contigu mask overlap mask appli singl int pixel represent correspond mask color alpha sampl follow mask identifi indic run nbsp nbsp first indic refer color sampl alpha sampl correspond last index order color indic specifi ColorSpace::ColorSpace typic reflect name color space type exampl type rgb index correspond red index green index blue translat pixel valu color alpha compon display process purpos correspond sampl compon PackedColorModel::PackedColorModel typic imag data use mask defin pack sampl exampl PackedColorModel::PackedColorModel conjunct construct normal mask ColorModel::ColorModel color interpret pixel data accord mask ColorModel::ColorModel singl int pixel represent valid object repres pixel valu singl int therefor use represent throw IllegalArgumentException::IllegalArgumentException due invalid pixel valu subclass PackedColorModel::PackedColorModel similar x11 truecolor visual
PackedColorModel::PackedColorModel construct PackedColorModel::PackedColorModel color mask array specifi bit int pixel represent contain color sampl alpha mask Color::Color compon specifi ColorSpace::ColorSpace length colormaskarray number compon ColorSpace::ColorSpace bit mask contigu fit specifi number signific bit int pixel represent alphamask alpha alpha boolean isalphapremultipli specifi interpret color alpha sampl pixel valu boolean color sampl assum multipli alpha sampl transpar tran specifi alpha valu repres color model transfer type type primit array repres pixel valu space specifi ColorSpace::ColorSpace bit number bit pixel valu colormaskarray array specifi mask repres bit pixel valu repres color compon alphamask specifi mask repres bit pixel valu repres alpha compon isalphapremultipli color sampl premultipli alpha sampl fals tran specifi alpha valu repres color model transfertyp type array repres pixel valu
PackedColorModel::PackedColorModel construct PackedColorModel::PackedColorModel specifi mask indic bit int pixel represent contain alpha red green blue color sampl Color::Color compon specifi ColorSpace::ColorSpace type colorspac type rgb bit mask contigu fit specifi number signific bit int pixel represent amask alpha alpha boolean isalphapremultipli specifi interpret color alpha sampl pixel valu boolean color sampl assum multipli alpha sampl transpar tran specifi alpha valu repres color model transfer type type primit array repres pixel valu space specifi ColorSpace::ColorSpace bit number bit pixel valu rmask specifi mask repres bit pixel valu repres red color compon gmask specifi mask repres bit pixel valu repres green color compon bmask specifi mask repres bit pixel valu repres blue color compon amask specifi mask repres bit pixel valu repres alpha compon isalphapremultipli color sampl premultipli alpha sampl fals tran specifi alpha valu repres color model transfertyp type array repres pixel valu
PackedColorModel::equals test specifi Object::Object instanc PackedColorModel::PackedColorModel equal PackedColorModel::PackedColorModel obj Object::Object test equal specifi Object::Object instanc PackedColorModel::PackedColorModel equal PackedColorModel::PackedColorModel fals
DirectColorModel::DirectColorModel DirectColorModel::DirectColorModel ColorModel::ColorModel work pixel valu repres rgb color alpha separ sampl pack sampl singl pixel singl int byte quantiti colorspac type colorspac type rgb addit compon ColorSpace::ColorSpace minimum normal compon valu obtain getminvalu ColorSpace::ColorSpace maximum valu obtain getmaxvalu min max valu typic rgb space color sampl pixel valu singl alpha sampl use primit array pixel represent type transfertyp array length transfer type support databuff type byte databuff type ushort databuff type int Color::Color alpha sampl store singl element array bit indic bit mask bit mask contigu mask overlap mask appli singl int pixel represent correspond mask color alpha sampl follow mask identifi indic run alpha alpha first indic refer color sampl index correspond red index green index blue ConcurrentSkipListMap::Index correspond alpha sampl translat pixel valu color alpha compon display process purpos correspond sampl compon DirectColorModel::DirectColorModel typic imag data use mask defin pack sampl exampl DirectColorModel::DirectColorModel conjunct SinglePixelPackedSampleModel::SinglePixelPackedSampleModel construct normal mask ColorModel::ColorModel color interpret pixel data accord mask ColorModel::ColorModel singl int pixel represent valid object repres pixel valu singl int therefor use represent throw IllegalArgumentException::IllegalArgumentException due invalid pixel valu color model similar x11 truecolor visual default rgb ColorModel::ColorModel specifi DirectColorModel::DirectColorModel paramet final nativ graphic make assumpt layout oper assumpt reflect implement mark final subclass reason overrid modifi behavior
DirectColorModel::DirectColorModel construct DirectColorModel::DirectColorModel specifi paramet Color::Color compon specifi ColorSpace::ColorSpace type colorspac type rgb minimum normal compon valu maximum valu mask specifi bit int pixel represent contain red green blue color sampl alpha sampl amask pixel valu contain alpha pixel treat opaqu mean alpha nbsp nbsp bit mask contigu fit specifi number signific bit int pixel represent alpha boolean isalphapremultipli specifi interpret color alpha sampl pixel valu boolean color sampl assum multipli alpha sampl transpar valu transpar opaqu alpha transpar transluc transfer type type primit array repres pixel valu databuff type byte databuff type ushort databuff type int space specifi ColorSpace::ColorSpace bit number bit pixel valu exampl sum number bit mask rmask specifi mask indic bit integ pixel contain red compon gmask specifi mask indic bit integ pixel contain green compon bmask specifi mask indic bit integ pixel contain blue compon amask specifi mask indic bit integ pixel contain alpha compon isalphapremultipli color sampl premultipli alpha sampl fals transfertyp type array repres pixel valu
DirectColorModel::getDataElements return data element array represent pixel ColorModel::ColorModel given array unnorm color alpha compon array pass setdatael WritableRaster::WritableRaster object ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown compon array hold color alpha compon start offset obj variabl null array alloc obj null primit array type transfertyp ClassCastException::ClassCastException thrown ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown obj hold pixel valu ColorModel::ColorModel DirectColorModel::DirectColorModel subclass subclass inherit implement don overrid throw use unsupport transfertyp compon array unnorm color alpha compon offset index compon begin retriev color alpha compon obj Object::Object repres array color alpha compon Object::Object repres array color alpha compon
DirectColorModel::toString return String::String repres DirectColorModel::DirectColorModel String::String repres DirectColorModel::DirectColorModel
CropImageFilter::CropImageFilter ImageFilter::ImageFilter crop imag extend basic ImageFilter::ImageFilter Class::Class extract given rectangular region exist Image::Image provid sourc imag contain extract region meant conjunct FilteredImageSource::FilteredImageSource object produc crop version exist imag
ConvolveOp::ConvolveOp implement convolut sourc destin convolut use convolut kernel spatial oper comput output pixel input pixel multipli kernel surround input pixel allow output pixel affect immedi neighborhood mathemat specifi kernel oper BufferedImage::BufferedImage data color compon premultipli alpha compon sourc BufferedImage::BufferedImage alpha compon color compon premultipli alpha compon data premultipli convolv destin color compon premultipli alpha divid store destin alpha color compon set destin alpha compon result alpha discard first divid color compon raster treat alpha channel treatment alpha channel bufferedimag desir avoid get Raster::Raster sourc BufferedImage::BufferedImage use filter work raster RenderingHints::RenderingHints object specifi constructor color render hint dither hint color convers requir note sourc destin object
ConvolveOp::filter perform convolut bufferedimag compon sourc imag convolv includ alpha compon color model sourc imag destin imag pixel convert destin destin imag null BufferedImage::BufferedImage creat sourc ColorModel::ColorModel IllegalArgumentException::IllegalArgumentException thrown sourc destin src sourc BufferedImage::BufferedImage filter dst destin BufferedImage::BufferedImage filter src filter BufferedImage::BufferedImage
ConvolveOp::createCompatibleDestImage creat zero destin imag correct size number band destcm null appropri ColorModel::ColorModel src sourc imag filter oper destcm ColorModel::ColorModel destin null destin BufferedImage::BufferedImage correct size number band
RenderedImage::getSources return vector renderedimag immedi sourc imag data RenderedImage::RenderedImage return null RenderedImage::RenderedImage object immedi sourc return empti Vector::Vector RenderedImage::RenderedImage object immedi sourc Vector::Vector RenderedImage::RenderedImage object
RenderedImage::getPropertyNames return array name recogn null properti name recogn String::String array contain properti name getproperti string recogn null properti name recogn
RenderedImage::getData comput return arbitrari region RenderedImage::RenderedImage Raster::Raster return copi imag data updat imag chang rect region RenderedImage::RenderedImage return region RenderedImage::RenderedImage indic specifi Rectangle::Rectangle
ComponentColorModel::ComponentColorModel colormodel work pixel valu repres color alpha separ sampl store sampl separ data element arbitrari colorspac number color sampl pixel valu number color compon colorspac singl alpha sampl use primit array pixel represent type transfertyp array length number color alpha sampl Color::Color sampl store first array follow alpha sampl order color sampl specifi colorspac typic order reflect name color space type exampl type rgb index correspond red index green index blue translat pixel sampl valu color alpha compon display process purpos base correspond sampl compon depend transfer type creat instanc ComponentColorModel::ComponentColorModel pixel sampl valu repres instanc sign unsign integr type float doubl see detail translat sampl valu normal color alpha compon follow rule float doubl sampl translat ident normal compon valu equal correspond sampl valu integr sampl translat scale offset where scale offset constant compon result appli scale offset constant set color alpha compon valu guarante fall rang typic rang color compon rang defin getminvalu getmaxvalu ColorSpace::ColorSpace rang alpha compon instanc ComponentColorModel::ComponentColorModel creat transfer type databuff type byte databuff type ushort databuff type int pixel sampl valu treat unsign integr valu number bit color alpha sampl pixel valu number bit correspond color alpha sampl pass componentcolormodel colorspac int boolean boolean int int constructor case assum signific bit sampl valu hold compon valu where number signific bit compon pass constructor assum higher order bit sampl valu zero thus sampl valu rang map sampl valu normal color compon valu map valu obtain colorspac getminvalu compon map valu obtain getmaxvalu creat ComponentColorModel::ComponentColorModel color sampl map requir subclass overrid getnormalizedcompon object float int map alpha sampl map instanc unsign sampl valu unnorm color alpha compon represent support condit hold first sampl valu valu map normal compon valu sampl valu min max rang color compon ColorSpace::ColorSpace case compon represent signific bit correspond sampl thus compon unsign integr valu where number signific bit particular compon condit met take unnorm compon argument throw IllegalArgumentException::IllegalArgumentException instanc ComponentColorModel::ComponentColorModel creat transfer type databuff type databuff type float databuff type doubl pixel sampl valu treat sign float doubl valu instanc support unnorm color alpha compon represent take represent argument throw IllegalArgumentException::IllegalArgumentException call instanc normal compon valu instanc rang depend transfer type follow float sampl full rang float data type doubl sampl full rang float data type result cast doubl float sampl approxim maxval maxval where maxval compon maximum valu ColorSpace::ColorSpace 32767 map maxval map 32767 map maxval subclass overrid scale sampl valu normal compon valu overrid getnormalizedcompon object float int float doubl sampl normal compon valu taken equal correspond sampl valu subclass attempt add non ident scale transfer type instanc ComponentColorModel::ComponentColorModel creat transfer type databuff type databuff type float databuff type doubl use bit sampl valu thus color alpha compon 16 bit use databuff type 32 bit use databuff type float 64 bit use databuff type doubl componentcolormodel colorspac int boolean boolean int int form constructor transfer type bit array argument ignor color alpha sampl valu reason interpret compon valu render happen ComponentColorModel::ComponentColorModel subclass overrid map unsign sampl valu normal color compon valu sign sampl valu rang exampl specifi alpha compon sign valu rang 32767 normal rang lead unexpect result respons applic appropri scale pixel data render color compon fall normal rang ColorSpace::ColorSpace obtain use getminvalu getmaxvalu ColorSpace::ColorSpace alpha compon color alpha compon valu fall rang render result indetermin use singl int pixel represent throw illegalargumentexcept number compon componentcolormodel compon valu unsign word singl color compon use transfer type databuff type byte databuff type ushort databuff type int alpha componentcolormodel conjunct componentsamplemodel bandedsamplemodel pixelinterleavedsamplemodel construct bufferedimag
ComponentColorModel::ComponentColorModel construct componentcolormodel specifi paramet Color::Color compon specifi colorspac support transfer type databuff type byte databuff type ushort databuff type int databuff type databuff type float databuff type doubl null bit array specifi number signific bit color alpha compon length number compon colorspac alpha pixel valu number alpha transfertyp databuff type databuff type float databuff type doubl bit array argument ignor hasalpha indic alpha hasalpha boolean isalphapremultipli specifi interpret color alpha sampl pixel valu boolean color sampl assum multipli alpha sampl transpar specifi alpha valu repres color model accept transpar valu opaqu bitmask transluc transfertyp type primit array repres pixel valu colorspac colorspac associ color model bit number signific bit compon null case bit compon sampl signific ignor transfertyp databuff type databuff type float databuff type doubl case bit compon sampl signific ColorModel::hasAlpha color model support alpha isalphapremultipli alpha premultipli transpar specifi alpha valu repres color model transfertyp specifi type primit array repres pixel valu
ComponentColorModel::ComponentColorModel construct componentcolormodel specifi paramet Color::Color compon specifi colorspac support transfer type databuff type byte databuff type ushort databuff type int databuff type databuff type float databuff type doubl number signific bit color alpha compon 16 32 16 32 64 respect number color compon number compon colorspac alpha compon hasalpha hasalpha boolean isalphapremultipli specifi interpret color alpha sampl pixel valu boolean color sampl assum multipli alpha sampl transpar specifi alpha valu repres color model accept transpar valu opaqu bitmask transluc transfertyp type primit array repres pixel valu colorspac colorspac associ color model ColorModel::hasAlpha color model support alpha isalphapremultipli alpha premultipli transpar specifi alpha valu repres color model transfertyp specifi type primit array repres pixel valu
ComponentColorModel::getDataElements return data element array represent pixel ColorModel::ColorModel given array normal color alpha compon array pass setdatael WritableRaster::WritableRaster object ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown normcompon array hold color alpha compon start normoffset obj variabl null array alloc obj null primit array type transfertyp ClassCastException::ClassCastException thrown ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown obj hold pixel valu ColorModel::ColorModel normcompon array normal color alpha compon normoffset index normcompon begin retriev color alpha compon obj primit data array hold return pixel Object::Object primit data array represent pixel
AffineTransformOp::filter transform sourc bufferedimag store result destin bufferedimag color model imag match color convers destin color model perform destin imag null bufferedimag creat sourc colormodel coordin rectangl return getbounds2d bufferedimag necessarili coordin BufferedImage::BufferedImage return upper corner coordin rectangl negat part rectangl drawn upper corner coordin rectangl posit filter imag drawn posit destin BufferedImage::BufferedImage illegalargumentexcept thrown sourc destin src bufferedimag transform dst bufferedimag store result transform filter bufferedimag
ComponentSampleModel::getDataElements return data singl pixel primit array type transfertyp ComponentSampleModel::ComponentSampleModel data type sampl return array element general obj pass null Object::Object creat automat primit data type illustr transfer data pixel DataBuffer::DataBuffer db1 storag layout describ ComponentSampleModel::ComponentSampleModel csm1 DataBuffer::DataBuffer db2 storag layout describ ComponentSampleModel::ComponentSampleModel csm2 transfer effici use getpixel setpixel use getdatael setdatael transfer databuff samplemodel pair legitim SampleModel::SampleModel object number band correspond band number bit sampl transfertyp obj null primit array type transfertyp ClassCastException::ClassCastException thrown ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown coordin bound obj null hold pixel data coordin pixel locat coordin pixel locat obj null primit array return pixel data data DataBuffer::DataBuffer contain imag data data specifi pixel
Raster::Raster construct Raster::Raster given SampleModel::SampleModel raster upper corner origin size SampleModel::SampleModel DataBuffer::DataBuffer describ Raster::Raster automat creat samplemodel SampleModel::SampleModel specifi layout origin Point::Point specifi origin
Raster::Raster construct Raster::Raster given SampleModel::SampleModel DataBuffer::DataBuffer raster upper corner origin size SampleModel::SampleModel DataBuffer::DataBuffer initi compat SampleModel::SampleModel samplemodel SampleModel::SampleModel specifi layout databuff DataBuffer::DataBuffer contain imag data origin Point::Point specifi origin
Raster::Raster construct Raster::Raster given SampleModel::SampleModel DataBuffer::DataBuffer parent aregion specifi bound rectangl Raster::Raster translat base raster coordin system aregion contain base Raster::Raster base Raster::Raster raster ancestor parent samplemodeltransl specifi samplemodeltranslatex samplemodeltranslatey valu Raster::Raster note constructor general call constructor creat samplemodel SampleModel::SampleModel specifi layout databuff DataBuffer::DataBuffer contain imag data aregion Rectangle::Rectangle specifi imag area samplemodeltransl Point::Point specifi translat SampleModel::SampleModel Raster::Raster coordin parent parent raster
Raster::createCompatibleWritableRaster creat compat WritableRaster::WritableRaster locat minx mini size width height specifi rect SampleModel::SampleModel initi DataBuffer::DataBuffer rect Rectangle::Rectangle specifi size locat WritableRaster::WritableRaster compat WritableRaster::WritableRaster specifi size locat sampl model data buffer
Raster::createChild return Raster::Raster share part raster DataBuffer::DataBuffer Raster::Raster possess refer current Raster::Raster access getpar parentx parenti width height paramet form Rectangle::Rectangle raster coordin space indic area pixel share error thrown Rectangle::Rectangle contain bound current Raster::Raster Raster::Raster addit translat coordin system plane current Raster::Raster childminx childmini paramet give coordin upper pixel return Raster::Raster coordin childminx childmini Raster::Raster map pixel coordin parentx parenti current Raster::Raster Raster::Raster defin contain subset band current Raster::Raster possibl reorder mean bandlist paramet bandlist null taken includ band current Raster::Raster current order creat Raster::Raster contain subregion current Raster::Raster share coordin system band call childminx equal parentx childmini equal parenti bandlist equal null parentx coordin upper corner raster coordin parenti coordin upper corner raster coordin width width region start parentx parenti height height region start parentx parenti childminx coordin upper corner return Raster::Raster childmini coordin upper corner return Raster::Raster bandlist Array::Array band indic null use band Raster::Raster
Raster::getBounds return bound Rectangle::Rectangle Raster::Raster function return getminx mini width height bound box Raster::Raster
RescaleOp::RescaleOp perform pixel pixel rescal data sourc imag multipli sampl valu pixel scale factor ad offset scale sampl valu clip minimum maximum represent destin imag pseudo rescal oper follow raster rescal oper band number set scale constant case constant appli band equal number sourc Raster::Raster band bufferedimag rescal oper color alpha compon number set scale constant case constant appli color alpha compon number set scale constant equal number sourc color compon case rescal alpha compon perform case appli number set scale constant equal number sourc color compon alpha compon case color alpha compon rescal BufferedImage::BufferedImage sourc premultipli alpha data treat manner non premultipli imag purpos rescal rescal band raw data BufferedImage::BufferedImage sourc regard data premultipli color convers requir destin ColorModel::ColorModel premultipli state sourc destin taken account step imag IndexColorModel::IndexColorModel rescal RenderingHints::RenderingHints object specifi constructor color render hint dither hint color convers requir note place oper allow sourc destin object
RescaleOp::RescaleOp construct RescaleOp::RescaleOp desir scale factor offset scalefactor offset appli band sourc Raster::Raster color alpha compon BufferedImage::BufferedImage RenderingHints::RenderingHints argument null scalefactor specifi scale factor offset specifi offset hint specifi RenderingHints::RenderingHints null
RescaleOp::createByteLut creat ByteLookupTable::ByteLookupTable implement rescal tabl byte input nelem Number::Number element tabl general 256 byte 65536
RescaleOp::createShortLut creat ShortLookupTable::ShortLookupTable implement rescal tabl byte input nelem Number::Number element tabl general 256 byte 65536
RescaleOp::filter rescal sourc BufferedImage::BufferedImage color model sourc imag destin imag pixel convert destin destin imag null BufferedImage::BufferedImage creat sourc ColorModel::ColorModel IllegalArgumentException::IllegalArgumentException thrown number scale factor offset object meet restrict state comment sourc imag IndexColorModel::IndexColorModel src BufferedImage::BufferedImage filter dst destin filter oper null filter BufferedImage::BufferedImage
SampleModel::getDataElements return data singl pixel primit array type transfertyp imag data support 2d databuff type byte databuff type ushort databuff type int databuff type databuff type float databuff type doubl data return pack format thus increas effici data transfer general obj pass null Object::Object creat automat primit data type illustr transfer data pixel DataBuffer::DataBuffer db1 storag layout describ SampleModel::SampleModel sm1 DataBuffer::DataBuffer db2 storag layout describ SampleModel::SampleModel sm2 transfer general effici use getpixel setpixel use getdatael setdatael transfer databuff samplemodel pair legitim samplemodel number band correspond band number bit sampl transfertyp obj non null primit array type transfertyp ClassCastException::ClassCastException thrown ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown coordin bound obj non null hold pixel data coordin pixel locat coordin pixel locat obj non null primit array return pixel data data DataBuffer::DataBuffer contain imag data data element specifi pixel
SampleModel::getDataElements return pixel data specifi rectangl pixel primit array type transfertyp imag data support 2d databuff type byte databuff type ushort databuff type int databuff type databuff type float databuff type doubl data return pack format thus increas effici data transfer general obj pass null Object::Object creat automat primit data type illustr transfer data rectangular region pixel DataBuffer::DataBuffer db1 storag layout describ SampleModel::SampleModel sm1 DataBuffer::DataBuffer db2 storag layout describ SampleModel::SampleModel sm2 transfer general effici use getpixel setpixel use getdatael setdatael transfer databuff samplemodel pair legitim samplemodel number band correspond band number bit sampl transfertyp obj non null primit array type transfertyp ClassCastException::ClassCastException thrown ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown coordin bound obj non null hold pixel data minimum coordin pixel rectangl minimum coordin pixel rectangl width pixel rectangl height pixel rectangl obj non null primit array return pixel data data DataBuffer::DataBuffer contain imag data data element specifi region pixel
AreaAveragingScaleFilter::AreaAveragingScaleFilter ImageFilter::ImageFilter scale imag use area averag algorithm produc smoother result nearest neighbor algorithm extend basic ImageFilter::ImageFilter Class::Class scale exist imag provid sourc imag contain resampl imag pixel sourc imag blend produc pixel imag specifi size blend process analog scale sourc imag multipl destin size use pixel replic scale destin size simpli averag pixel supers imag fall given pixel destin imag data sourc deliv topdownleftright order filter pixel replic behavior util requesttopdownleftrightresend refilt pixel end meant conjunct FilteredImageSource::FilteredImageSource object produc scale version exist imag due implement depend differ pixel valu imag filter platform
BufferedImageFilter::BufferedImageFilter BufferedImageFilter::BufferedImageFilter subclass ImageFilter::ImageFilter provid mean use singl sourc singl destin imag oper filter BufferedImage::BufferedImage Image::Image produc consum observ paradigm exampl imag oper
BufferedImageFilter::BufferedImageFilter construct BufferedImageFilter::BufferedImageFilter specifi singl sourc singl destin oper op specifi BufferedImageOp::BufferedImageOp use filter BufferedImage::BufferedImage
BandedSampleModel::getDataElements return data singl pixel primit array type transfertyp BandedSampleModel::BandedSampleModel data type sampl return array element general obj pass null Object::Object creat automat primit data type illustr transfer data pixel DataBuffer::DataBuffer db1 storag layout describ BandedSampleModel::BandedSampleModel bsm1 DataBuffer::DataBuffer db2 storag layout describ BandedSampleModel::BandedSampleModel bsm2 transfer general effici use getpixel setpixel use getdatael setdatael transfer databuff samplemodel pair legitim samplemodel number band correspond band number bit sampl transfertyp obj non null primit array type transfertyp ClassCastException::ClassCastException thrown ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown coordin bound obj non null hold pixel data coordin pixel locat coordin pixel locat obj non null primit array return pixel data data DataBuffer::DataBuffer contain imag data data specifi pixel
ColorModel::ColorModel ColorModel::ColorModel abstract encapsul translat pixel valu color compon exampl red green blue alpha compon order render imag screen printer imag pixel valu convert color alpha compon argument return valu pixel repres 32 bit int array primit type number order interpret color compon ColorModel::ColorModel specifi ColorSpace::ColorSpace ColorModel::ColorModel pixel data includ alpha treat pixel opaqu alpha valu ColorModel::ColorModel support represent pixel valu pixel valu singl 32 bit int array primit type tm platform repres pixel singl byte singl int valu purpos ColorModel::ColorModel pixel valu argument pass int tm platform introduc addit repres imag object base pixel valu conveni represent singl int consequ ColorModel::ColorModel accept pixel valu repres array primit type primit type particular ColorModel::ColorModel object call transfer type ColorModel::ColorModel object imag pixel valu conveni represent singl int throw take singl int pixel argument call subclass ColorModel::ColorModel specifi condit occur occur object current transfer type support 2d tm databuff type byte databuff type ushort databuff type int databuff type databuff type float databuff type doubl render oper perform faster use colormodel imag base first type addit imag filter oper support colormodel imag base latter type transfer type particular ColorModel::ColorModel object specifi object creat explicit default subclass ColorModel::ColorModel specifi transfer type number element primit array repres pixel determin bufferedimag transfer type Raster::Raster Raster::Raster object SampleModel::SampleModel avail gettransfertyp match ColorModel::ColorModel number element array repres pixel Raster::Raster SampleModel::SampleModel avail getnumdatael match ColorModel::ColorModel algorithm convert pixel valu color alpha compon vari subclass exampl necessarili correspond sampl obtain SampleModel::SampleModel BufferedImage::BufferedImage object Raster::Raster color alpha compon correspond number bit sampl necessarili number bit correspond color alpha compon subclass specifi translat pixel valu color alpha compon ColorModel::ColorModel use represent color alpha compon normal form unnorm form normal form compon float valu minimum maximum valu alpha compon minimum maximum color compon minimum maximum valu compon obtain ColorSpace::ColorSpace object valu normal compon valu default srgb color space rang color space compon valu upper lower limit limit obtain use getminvalu getmaxvalu ColorSpace::ColorSpace normal color compon valu premultipli colormodel support normal form unnorm form compon unsign integr valu where number signific bit particular compon pixel valu particular ColorModel::ColorModel repres color sampl premultipli alpha sampl unnorm color compon valu premultipli unnorm form instanc ColorModel::ColorModel ColorSpace::ColorSpace minimum compon valu compon maximum valu compon unnorm form color alpha compon conveni represent colormodel normal compon valu lie case integr valu map valu map case normal compon valu negat posit unnorm form conveni ColorModel::ColorModel object throw involv unnorm argument call subclass ColorModel::ColorModel specifi condit occur
ColorModel::getRGBdefault return DirectColorModel::DirectColorModel describ default format integ rgb valu awt imag interfac conveni programm color space default srgb format rgb valu integ bit alpha red green blue color compon order correspond signific byte signific byte 0xaarrggbb Color::Color compon premultipli alpha compon format necessarili repres nativ effici ColorModel::ColorModel particular devic imag mere common color model format DirectColorModel::DirectColorModel describ default rgb valu
ColorModel::ColorModel construct ColorModel::ColorModel translat pixel valu color alpha compon Color::Color compon specifi ColorSpace::ColorSpace pixel bit number bit pixel valu bit array specifi number signific bit color alpha compon length number compon ColorSpace::ColorSpace alpha pixel valu number alpha hasalpha indic alpha boolean isalphapremultipli specifi interpret pixel valu color alpha repres separ spatial band boolean color sampl assum multipli alpha sampl transpar specifi alpha valu repres color model transfer type type primit array repres pixel valu note bit array contain number signific bit color alpha compon translat pixel valu exampl IndexColorModel::IndexColorModel pixel bit equal 16 bit array element element set pixel bit number bit pixel valu bit array specifi number signific bit color alpha compon cspace specifi ColorSpace::ColorSpace ColorModel::hasAlpha alpha fals isalphapremultipli color sampl assum premultipli alpha sampl fals transpar alpha valu repres color model transfertyp type array repres pixel valu
ColorModel::getComponentSize return number bit specifi color alpha compon Color::Color compon index order specifi ColorSpace::ColorSpace typic order reflect name color space type exampl type rgb index correspond red index green index blue ColorModel::ColorModel support alpha alpha compon correspond index last color compon componentidx index color alpha compon number bit color alpha compon specifi index
ColorModel::getDataElements return data element array represent pixel ColorModel::ColorModel given array unnorm color alpha compon array pass setdatael WritableRaster::WritableRaster object throw IllegalArgumentException::IllegalArgumentException color compon valu ColorModel::ColorModel conveni represent unnorm form ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown compon array hold color alpha compon start offset obj variabl null array alloc obj null primit array type transfertyp ClassCastException::ClassCastException thrown ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown obj hold pixel valu ColorModel::ColorModel ColorModel::ColorModel abstract instanc instanc subclass subclass overrid implement abstract throw UnsupportedOperationException::UnsupportedOperationException compon array unnorm color alpha compon offset index compon begin retriev color alpha compon obj Object::Object repres array color alpha compon Object::Object repres array color alpha compon
ColorModel::getDataElements return data element array represent pixel ColorModel::ColorModel given array normal color alpha compon array pass setdatael WritableRaster::WritableRaster object ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown normcompon array hold color alpha compon start normoffset obj variabl null array alloc obj null primit array type transfertyp ClassCastException::ClassCastException thrown ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown obj hold pixel valu ColorModel::ColorModel ColorModel::ColorModel abstract instanc instanc subclass default implement abstract first convert normal form unnorm form call getdatael int int object subclass instanc support unnorm form overrid normcompon array normal color alpha compon normoffset index normcompon begin retriev color alpha compon obj primit data array hold return pixel Object::Object primit data array represent pixel
ColorModel::equals test specifi Object::Object instanc ColorModel::ColorModel equal ColorModel::ColorModel obj Object::Object test equal specifi Object::Object instanc ColorModel::ColorModel equal ColorModel::ColorModel fals
ColorModel::toString return String::String represent content ColorModel::ColorModel String::String repres content ColorModel::ColorModel object
BufferedImage::BufferedImage BufferedImage::BufferedImage subclass describ access buffer imag data BufferedImage::BufferedImage compris imag data number type band Raster::Raster match number type requir ColorModel::ColorModel repres color alpha compon BufferedImage::BufferedImage object upper corner coordin nbsp Raster::Raster construct BufferedImage::BufferedImage therefor minx mini reli data fetch set Raster::Raster color character ColorModel::ColorModel
BufferedImage::TYPE int argb repres imag bit rgba color compon pack integ pixel imag DirectColorModel::DirectColorModel alpha color data imag consid premultipli alpha type imagetyp argument BufferedImage::BufferedImage constructor creat imag consist imag creat jdk1 earlier releas
BufferedImage::TYPE byte binari repres opaqu byte pack bit imag imag alpha type imagetyp argument BufferedImage::BufferedImage constructor take imagetyp argument ColorModel::ColorModel argument bit imag creat IndexColorModel::IndexColorModel color default srgb ColorSpace::ColorSpace nbsp nbsp 255 nbsp 255 nbsp 255 imag bit pixel construct BufferedImage::BufferedImage constructor take ColorModel::ColorModel argument suppli ColorModel::ColorModel appropri map size imag bit pixel use imag type BufferedImage::TYPE byte index BufferedImage::TYPE byte gray depend ColorModel::ColorModel color data store imag type closest color colormap determin IndexColorModel::IndexColorModel result index store approxim loss alpha color compon result depend color IndexColorModel::IndexColorModel colormap
BufferedImage::TYPE byte index repres index byte imag type imagetyp argument BufferedImage::BufferedImage constructor take imagetyp argument ColorModel::ColorModel argument IndexColorModel::IndexColorModel creat 256 color color cube palett rest color 216 255 popul grayscal valu default srgb ColorSpace::ColorSpace color data store imag type closest color colormap determin IndexColorModel::IndexColorModel result index store approxim loss alpha color compon result depend color IndexColorModel::IndexColorModel colormap
BufferedImage::BufferedImage construct BufferedImage::BufferedImage predefin imag type ColorSpace::ColorSpace imag default srgb space width width creat imag height height creat imag imagetyp type creat imag
BufferedImage::BufferedImage construct BufferedImage::BufferedImage predefin imag type type byte binari type byte index imag type type byte binari number entri color model determin imag bit pixel color model entri imag bit pixel entri imag bit pixel 16 entri imag bit pixel IllegalArgumentException::IllegalArgumentException thrown width width creat imag height height creat imag imagetyp type creat imag cm IndexColorModel::IndexColorModel creat imag
BufferedImage::BufferedImage construct BufferedImage::BufferedImage specifi ColorModel::ColorModel Raster::Raster number type band SampleModel::SampleModel Raster::Raster match number type requir ColorModel::ColorModel repres color alpha compon thrown multipli divid color Raster::Raster data alpha match alphapremultipli state ColorModel::ColorModel Properties::Properties BufferedImage::BufferedImage establish pass Object::Object pair cm ColorModel::ColorModel imag raster Raster::Raster imag data israsterpremultipli data raster premultipli alpha properti Hashtable::Hashtable Object::Object pair
BufferedImage::getType return imag type known type type custom return imag type BufferedImage::BufferedImage
BufferedImage::getColorModel return ColorModel::ColorModel ColorModel::ColorModel BufferedImage::BufferedImage
BufferedImage::getRaster return writeablerast BufferedImage::BufferedImage
BufferedImage::getAlphaRaster return WritableRaster::WritableRaster repres alpha channel BufferedImage::BufferedImage object ColorModel::ColorModel object support separ spatial alpha channel ComponentColorModel::ComponentColorModel DirectColorModel::DirectColorModel return null alpha channel associ ColorModel::ColorModel imag assum ColorModel::ColorModel object IndexColorModel::IndexColorModel ColorModel::ColorModel support alpha separ alpha channel store last band imag data imag use IndexColorModel::IndexColorModel alpha lookup tabl return null spatial discret alpha channel creat WritableRaster::WritableRaster share data array WritableRaster::WritableRaster null BufferedImage::BufferedImage alpha channel associ ColorModel::ColorModel
BufferedImage::getRGB return integ pixel default rgb color model type int argb default srgb colorspac Color::Color convers take place default model match imag ColorModel::ColorModel bit precis color compon return data use arrayoutofboundsexcept thrown coordin bound explicit bound check guarante coordin pixel get pixel default rgb color model srgb color space coordin pixel get pixel default rgb color model srgb color space integ pixel default rgb color model default srgb colorspac
BufferedImage::getRGB return array integ pixel default rgb color model type int argb default srgb color space portion imag data Color::Color convers take place default model match imag ColorModel::ColorModel bit precis color compon return data use specifi coordin nbsp imag argb pixel access arrayoutofboundsexcept thrown region bound explicit bound check guarante startx start coordin starti start coordin width region height region rgbarray null rgb pixel written offset offset rgbarray scansiz scanlin stride rgbarray array rgb pixel
BufferedImage::setRGB set pixel BufferedImage::BufferedImage specifi rgb valu pixel assum default rgb color model type int argb default srgb color space imag IndexColorModel::IndexColorModel index nearest color chosen arrayoutofboundsexcept thrown coordin bound explicit bound check guarante coordin pixel set coordin pixel set rgb rgb valu
BufferedImage::setRGB set array integ pixel default rgb color model type int argb default srgb color space portion imag data Color::Color convers take place default model match imag ColorModel::ColorModel bit precis color compon return data use specifi coordin nbsp imag argb pixel access warn dither take place arrayoutofboundsexcept thrown region bound explicit bound check guarante startx start coordin starti start coordin width region height region rgbarray rgb pixel offset offset rgbarray scansiz scanlin stride rgbarray
BufferedImage::getWidth return width BufferedImage::BufferedImage width BufferedImage::BufferedImage
BufferedImage::getHeight return height BufferedImage::BufferedImage height BufferedImage::BufferedImage
BufferedImage::getWidth return width BufferedImage::BufferedImage observ ignor width BufferedImage::BufferedImage
BufferedImage::getHeight return height BufferedImage::BufferedImage observ ignor height BufferedImage::BufferedImage
BufferedImage::getProperty return properti imag name name properti name Object::Object properti refer specifi name
BufferedImage::createGraphics creat Graphics2D::Graphics2D draw BufferedImage::BufferedImage Graphics2D::Graphics2D draw imag
BufferedImage::getSubimage return subimag defin specifi rectangular region return BufferedImage::BufferedImage share data array origin imag coordin upper corner specifi rectangular region coordin upper corner specifi rectangular region width specifi rectangular region height specifi rectangular region BufferedImage::BufferedImage subimag BufferedImage::BufferedImage
BufferedImage::toString return String::String represent BufferedImage::BufferedImage object valu String::String repres BufferedImage::BufferedImage
BufferedImage::getSources return object immedi sourc sourc immedi sourc imag data BufferedImage::BufferedImage return null BufferedImage::BufferedImage immedi sourc return empti Vector::Vector BufferedImage::BufferedImage immedi sourc Vector::Vector contain immedi sourc BufferedImage::BufferedImage object imag date null BufferedImage::BufferedImage immedi sourc empti Vector::Vector BufferedImage::BufferedImage immedi sourc
BufferedImage::getPropertyNames return array name recogn null properti name recogn String::String array contain properti name getproperti string recogn null properti name recogn
BufferedImage::getMinX return minimum coordin BufferedImage::BufferedImage zero minimum coordin BufferedImage::BufferedImage
BufferedImage::getMinY return minimum coordin BufferedImage::BufferedImage zero minimum coordin BufferedImage::BufferedImage
BufferedImage::getSampleModel return SampleModel::SampleModel associ BufferedImage::BufferedImage SampleModel::SampleModel BufferedImage::BufferedImage
BufferedImage::getData comput return arbitrari region BufferedImage::BufferedImage Raster::Raster return copi imag data updat imag chang rect region BufferedImage::BufferedImage return Raster::Raster copi imag data specifi region BufferedImage::BufferedImage
BufferedImage::copyData comput arbitrari rectangular region BufferedImage::BufferedImage copi specifi WritableRaster::WritableRaster region comput determin bound specifi WritableRaster::WritableRaster specifi WritableRaster::WritableRaster SampleModel::SampleModel compat imag outrast null appropri WritableRaster::WritableRaster creat outrast WritableRaster::WritableRaster hold return part imag null refer suppli creat WritableRaster::WritableRaster
BufferedImage::setData set rectangular region imag content specifi Raster::Raster assum coordin space BufferedImage::BufferedImage oper clip bound BufferedImage::BufferedImage specifi Raster::Raster
BufferedImage::getWritableTileIndices return array object indic tile check write return null check Point::Point array indic tile check write null tile check write
BufferedImage::getTransparency return transpar return opaqu bitmask transluc transpar BufferedImage::BufferedImage
SinglePixelPackedSampleModel::getDataElements return data singl pixel primit array type transfertyp SinglePixelPackedSampleModel::SinglePixelPackedSampleModel array element type storag data type general obj pass null Object::Object creat automat primit data type illustr transfer data pixel DataBuffer::DataBuffer db1 storag layout describ SinglePixelPackedSampleModel::SinglePixelPackedSampleModel sppsm1 DataBuffer::DataBuffer db2 storag layout describ SinglePixelPackedSampleModel::SinglePixelPackedSampleModel sppsm2 transfer general effici use getpixel setpixel use getdatael setdatael transfer databuff samplemodel pair legitim samplemodel number band correspond band number bit sampl transfertyp obj non null primit array type transfertyp ClassCastException::ClassCastException thrown ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown coordin bound obj non null hold pixel data coordin pixel locat coordin pixel locat obj non null primit array return pixel data data DataBuffer::DataBuffer contain imag data data specifi pixel
ColorConvertOp::ColorConvertOp perform pixel pixel color convers data sourc imag result color valu scale precis destin imag Color::Color convers specifi array ColorSpace::ColorSpace object array icc profil object sourc BufferedImage::BufferedImage premultipli alpha color compon divid alpha compon color convers destin BufferedImage::BufferedImage premultipli alpha color compon multipli alpha compon convers raster treat alpha channel band color band RenderingHints::RenderingHints object specifi constructor color render hint dither hint control color convers note sourc destin object
ColorConvertOp::ColorConvertOp construct ColorConvertOp::ColorConvertOp array icc profil RenderingHints::RenderingHints argument null sequenc profil includ profil repres color space profil repres effect sequenc repres defin color convers thrown bufferedimag ColorSpace::ColorSpace sourc BufferedImage::BufferedImage match requir first profil array first convers appropri ColorSpace::ColorSpace requir last profil array met ColorSpace::ColorSpace destin BufferedImage::BufferedImage last convers destin ColorSpace::ColorSpace raster number band sourc Raster::Raster match requir first profil array number band destin Raster::Raster match requir last profil array array element call filter raster throw IllegalArgumentException::IllegalArgumentException profil array icc Profile::ICC profil object hint RenderingHints::RenderingHints object control color convers null
ColorConvertOp::filter colorconvert sourc BufferedImage::BufferedImage destin imag null BufferedImage::BufferedImage creat appropri ColorModel::ColorModel src sourc BufferedImage::BufferedImage convert dest destin BufferedImage::BufferedImage null dest color convert src convert BufferedImage::BufferedImage dest null
ColorConvertOp::getBounds2D return bound box destin given sourc note bound box sourc src sourc BufferedImage::BufferedImage Rectangle2D::Rectangle2D bound box destin given specifi src
ColorConvertOp::createCompatibleDestImage creat zero destin imag correct size number band given sourc src sourc imag filter oper destcm ColorModel::ColorModel destin null appropri ColorModel::ColorModel BufferedImage::BufferedImage correct size number band specifi src
ReplicateScaleFilter::ReplicateScaleFilter ImageFilter::ImageFilter scale imag use simplest algorithm extend basic ImageFilter::ImageFilter Class::Class scale exist imag provid sourc imag contain resampl imag pixel sourc imag sampl produc pixel imag specifi size replic row column pixel scale omit row column pixel scale meant conjunct FilteredImageSource::FilteredImageSource object produc scale version exist imag due implement depend differ pixel valu imag filter platform
RenderedImageFactory::create creat RenderedImage::RenderedImage repres result imag oper chain oper given ParameterBlock::ParameterBlock RenderingHints::RenderingHints rif queri sourc imag referenc ParameterBlock::ParameterBlock dimens samplemodel properti necessari creat return null RenderedImageFactory::RenderedImageFactory capabl produc output given set sourc imag paramet exampl RenderedImageFactory::RenderedImageFactory capabl perform 3x3 convolut singl band imag data sourc imag multipl band convolut Kernel::Kernel 5x5 null return hint taken account ignor creat RenderedImage::RenderedImage properti identifi String::String hint observ indic RenderingHints::RenderingHints creat imag addit renderedimag obtain getsourc creat RenderedImage::RenderedImage properti paramblock ParameterBlock::ParameterBlock contain sourc paramet RenderedImage::RenderedImage creat hint RenderingHints::RenderingHints object contain hint RenderedImage::RenderedImage contain desir output
RenderableImageOp::getSources return vector renderableimag sourc imag data RenderableImage::RenderableImage note return empti vector indic imag sourc null indic avail possibl empti Vector::Vector renderableimag null
RenderableImageOp::getProperty get properti properti set imag properti name recogn awt imag undefinedproperti return name name properti get String::String refer properti Object::Object valu awt imag undefinedproperti
RenderableImageOp::createScaledRendering creat RenderedImage::RenderedImage instanc imag width height pixel RenderContext::RenderContext built automat appropri usr2dev transform area interest full imag render hint come hint pass taken equal math getwidth getheight similar taken equal math getheight getwidth non zero els IllegalArgumentException::IllegalArgumentException thrown creat RenderedImage::RenderedImage properti identifi String::String hint observ indic RenderingHints::RenderingHints creat imag addit renderedimag obtain getsourc creat RenderedImage::RenderedImage properti width render imag pixel height render imag pixel hint RenderingHints::RenderingHints object contain hint RenderedImage::RenderedImage contain render data
RenderableImageOp::createRendering creat RenderedImage::RenderedImage repres RenderableImageOp::RenderableImageOp includ render sourc render accord given RenderContext::RenderContext support chain render RenderedImage::RenderedImage oper sourc ParameterBlock::ParameterBlock construct RenderableImageOp::RenderableImageOp renderableimag step process follow ContextualRenderedImageFactory::mapRenderContext call associ crif RenderableImage::RenderableImage sourc createrend call RenderableImage::RenderableImage sourc use backward map rendercontext obtain step result render sourc contextualrenderedimagefactori creat call ParameterBlock::ParameterBlock contain paramet RenderableImageOp::RenderableImageOp renderedimag creat createrend call element sourc Vector::Vector ParameterBlock::ParameterBlock construct RenderableImageOp::RenderableImageOp instanc RenderedImage::RenderedImage crif creat call use origin ParameterBlock::ParameterBlock provid basi case recurs creat RenderedImage::RenderedImage properti identifi String::String hint observ indic RenderingHints::RenderingHints RenderContext::RenderContext creat imag addit renderedimag obtain getsourc creat RenderedImage::RenderedImage properti rendercontext RenderContext::RenderContext use perform render RenderedImage::RenderedImage contain desir output imag
ParameterBlock::ParameterBlock ParameterBlock::ParameterBlock encapsul sourc paramet Objects::Objects requir RenderableImageOp::RenderableImageOp process imag place arbitrari object sourc Vector::Vector user impos semant constraint requir sourc renderedimag RenderableImage::RenderableImage ParameterBlock::ParameterBlock mere contain perform check sourc paramet type paramet ParameterBlock::ParameterBlock object conveni add set avail take argument base type construct appropri subclass Number::Number Integer::Integer Float::Float correspond get perform downward cast return valu base type thrown store valu correct type distinguish result add add note get set oper refer therefor care share refer ParameterBlock::ParameterBlock inappropri exampl creat ParameterBlock::ParameterBlock equal old ad sourc tempt write side effect alter origin ParameterBlock::ParameterBlock getsourc oper return refer sourc Vector::Vector pb pb1 share sourc Vector::Vector chang visibl correct write ParameterBlock::addSource function clone sourc vector clone ParameterBlock::ParameterBlock defin perform clone sourc paramet vector reason standard shallow clone avail ParameterBlock::shallowClone ParameterBlock::addSource setsourc add set defin return ad argument allow use syntax
ParameterBlock::ParameterBlock construct ParameterBlock::ParameterBlock given Vector::Vector sourc sourc Vector::Vector sourc imag
ParameterBlock::ParameterBlock construct ParameterBlock::ParameterBlock given Vector::Vector sourc Vector::Vector paramet sourc Vector::Vector sourc imag paramet Vector::Vector paramet render oper
ParameterBlock::shallowClone creat shallow copi ParameterBlock::ParameterBlock sourc paramet vector copi refer addit chang visibl version Object::Object clone ParameterBlock::ParameterBlock
ParameterBlock::clone creat copi ParameterBlock::ParameterBlock sourc paramet vector clone actual sourc paramet copi refer allow modif order number sourc paramet clone invis origin ParameterBlock::ParameterBlock chang share sourc paramet visibl Object::Object clone ParameterBlock::ParameterBlock
ParameterBlock::getSource return sourc general Object::Object caller cast appropri type index index sourc return Object::Object repres sourc locat specifi index sourc Vector::Vector
ParameterBlock::setSource replac entri list sourc sourc index lie current sourc list list extend null sourc specifi sourc imag index index sourc Vector::Vector insert specifi sourc ParameterBlock::ParameterBlock contain specifi sourc specifi index
ParameterBlock::getRenderedSource return sourc RenderedImage::RenderedImage conveni thrown sourc RenderedImage::RenderedImage index index sourc return RenderedImage::RenderedImage repres sourc imag specifi index sourc Vector::Vector
ParameterBlock::getRenderableSource return sourc RenderableImage::RenderableImage conveni thrown sourc RenderableImage::RenderableImage index index sourc return RenderableImage::RenderableImage repres sourc imag specifi index sourc Vector::Vector
ParameterBlock::getNumSources return number sourc imag number sourc imag sourc Vector::Vector
ParameterBlock::getSources return entir Vector::Vector sourc sourc Vector::Vector
ParameterBlock::setSources set entir Vector::Vector sourc given Vector::Vector sourc Vector::Vector sourc imag
ParameterBlock::getNumParameters return number paramet includ sourc imag number paramet paramet Vector::Vector
ParameterBlock::getParameters return entir Vector::Vector paramet paramet Vector::Vector
ParameterBlock::setParameters set entir Vector::Vector paramet given Vector::Vector paramet specifi Vector::Vector paramet
ParameterBlock::add add object list paramet obj Object::Object add paramet Vector::Vector ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::add add Byte::Byte list paramet byte add paramet Vector::Vector ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::add add Character::Character list paramet char add paramet Vector::Vector ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::add add Short::Short list paramet add paramet Vector::Vector ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::add add Integer::Integer list paramet int add paramet Vector::Vector ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::add add Long::Long list paramet add paramet Vector::Vector ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::add add Float::Float list paramet float add paramet Vector::Vector ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::add add Point2D::Double list paramet doubl add paramet Vector::Vector ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::set replac Object::Object list paramet index lie current sourc list list extend null obj paramet replac paramet specifi index paramet Vector::Vector index index paramet replac specifi paramet ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::set replac Object::Object list paramet Byte::Byte index lie current sourc list list extend null paramet replac paramet specifi index paramet Vector::Vector index index paramet replac specifi paramet ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::set replac Object::Object list paramet Character::Character index lie current sourc list list extend null paramet replac paramet specifi index paramet Vector::Vector index index paramet replac specifi paramet ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::set replac Object::Object list paramet Short::Short index lie current sourc list list extend null paramet replac paramet specifi index paramet Vector::Vector index index paramet replac specifi paramet ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::set replac Object::Object list paramet Integer::Integer index lie current sourc list list extend null paramet replac paramet specifi index paramet Vector::Vector index index paramet replac specifi paramet ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::set replac Object::Object list paramet Long::Long index lie current sourc list list extend null paramet replac paramet specifi index paramet Vector::Vector index index paramet replac specifi paramet ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::set replac Object::Object list paramet Float::Float index lie current sourc list list extend null paramet replac paramet specifi index paramet Vector::Vector index index paramet replac specifi paramet ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::set replac Object::Object list paramet Point2D::Double index lie current sourc list list extend null paramet replac paramet specifi index paramet Vector::Vector index index paramet replac specifi paramet ParameterBlock::ParameterBlock contain specifi paramet
ParameterBlock::getObjectParameter get paramet object index index paramet get Object::Object repres paramet specifi index paramet Vector::Vector
ParameterBlock::getIntParameter conveni return paramet int thrown paramet null Integer::Integer index index paramet return paramet specifi index int valu
ParameterBlock::getLongParameter conveni return paramet thrown paramet null Long::Long index index paramet return paramet specifi index valu
ParameterBlock::getParamClasses return array Class::Class object describ type paramet array Class::Class object
ContextualRenderedImageFactory::mapRenderContext map oper output RenderContext::RenderContext RenderContext::RenderContext oper sourc use oper express part simpli alter RenderContext::RenderContext affin map oper wish obtain lower qualiti render sourc order save process effort transmiss bandwith oper blur use mechan avoid obtain sourc higher qualiti necessari index sourc imag rendercontext RenderContext::RenderContext appli oper paramblock ParameterBlock::ParameterBlock contain oper sourc paramet imag RenderableImage::RenderableImage render RenderContext::RenderContext sourc specifi index paramet Vector::Vector contain specifi ParameterBlock::ParameterBlock
ContextualRenderedImageFactory::getProperty get appropri instanc properti specifi name paramet determin instanc properti return multipl sourc specifi properti paramblock ParameterBlock::ParameterBlock contain oper sourc paramet name String::String name desir properti object refer valu properti request
RenderableImage::getSources return vector renderableimag sourc imag data RenderableImage::RenderableImage note return empti vector indic imag sourc null indic avail possibl empti Vector::Vector renderableimag null
RenderableImage::getProperty get properti properti set imag properti name recogn awt imag undefinedproperti return name name properti get String::String refer properti Object::Object valu awt imag undefinedproperti
RenderableImage::createScaledRendering creat RenderedImage::RenderedImage instanc imag width height pixel RenderContext::RenderContext built automat appropri usr2dev transform area interest full imag render hint come hint pass taken equal math getwidth getheight similar taken equal math getheight getwidth non zero els IllegalArgumentException::IllegalArgumentException thrown creat RenderedImage::RenderedImage properti identifi String::String hint observ indic RenderingHints::RenderingHints creat imag addit renderedimag obtain getsourc creat RenderedImage::RenderedImage properti width render imag pixel height render imag pixel hint RenderingHints::RenderingHints object contain hint RenderedImage::RenderedImage contain render data
RenderableImage::createRendering creat RenderedImage::RenderedImage repres render imag use given RenderContext::RenderContext general obtain render RenderableImage::RenderableImage creat RenderedImage::RenderedImage properti identifi String::String hint observ indic RenderingHints::RenderingHints RenderContext::RenderContext creat imag addit renderedimag obtain getsourc creat RenderedImage::RenderedImage properti rendercontext RenderContext::RenderContext use produc render RenderedImage::RenderedImage contain render data
IndexColorModel::IndexColorModel IndexColorModel::IndexColorModel ColorModel::ColorModel work pixel valu consist singl sampl index fix colormap default srgb color space colormap specifi red green blue option alpha compon correspond index compon repres colormap bit unsign integr valu constructor allow caller specifi hole colormap indic colormap entri valid repres unus color bit set BigInteger::BigInteger object color model similar x11 pseudocolor visual constructor provid mean specifi alpha compon pixel colormap provid mean case flag indic colormap data contain alpha valu alpha suppli constructor opaqu alpha compon alpha assum entri option transpar pixel valu suppli indic pixel made complet transpar regardless alpha compon suppli assum pixel valu note color compon colormap IndexColorModel::IndexColorModel object pre multipli alpha compon IndexColorModel::IndexColorModel object transpar valu transpar opaqu ColorModel::hasAlpha getnumcompon inherit ColorModel::ColorModel return fals respect transpar valu ColorModel::hasAlpha return getnumcompon return use primit array pixel represent type transfertyp array length transfer type support databuff type byte databuff type ushort singl int pixel represent valid object repres pixel valu singl int therefor use represent throw IllegalArgumentException::IllegalArgumentException due invalid pixel valu final reason nativ graphic make assumpt layout oper assumpt reflect implement mark final subclass reason overrid modifi behaviour
IndexColorModel::IndexColorModel construct IndexColorModel::IndexColorModel int array where int compris red green blue alpha compon default rgb color model format array valu fill compon array specifi size ColorSpace::ColorSpace default srgb space transpar valu transpar opaqu transpar bitmask transpar transluc depend argument specifi transfer type databuff type byte databuff type ushort BigInteger::BigInteger object specifi valid invalid pixel cmap array pixel valid BigInteger::BigInteger valu index set invalid BigInteger::BigInteger bit index set bit number bit pixel occupi size size color compon array cmap array color compon start start offset first color compon transfertyp specifi data type validbit BigInteger::BigInteger object bit set BigInteger::BigInteger pixel index valid bit set pixel index consid invalid null pixel valid bit map size consid
IndexColorModel::getDataElements return data element array represent pixel ColorModel::ColorModel given array unnorm color alpha compon array pass setdatael WritableRaster::WritableRaster object ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown compon array hold color alpha compon start offset pixel variabl null array alloc pixel null primit array type transfertyp ClassCastException::ClassCastException thrown ArrayIndexOutOfBoundsException::ArrayIndexOutOfBoundsException thrown pixel hold pixel valu ColorModel::ColorModel IndexColorModel::IndexColorModel subclass subclass inherit implement don overrid throw use unsupport transfertyp compon array unnorm color alpha compon offset index compon begin retriev color alpha compon pixel Object::Object repres array color alpha compon Object::Object repres array color alpha compon
IndexColorModel::convertToIntDiscrete return BufferedImage::BufferedImage type int argb type int rgb Raster::Raster pixel data comput expand indic sourc Raster::Raster use color alpha compon array ColorModel::ColorModel lower bit index valu sourc Raster::Raster specifi comput color alpha valu return imag forceargb type int argb imag return regardless ColorModel::ColorModel alpha compon array transpar pixel raster specifi Raster::Raster forceargb return BufferedImage::BufferedImage type int argb type int rgb BufferedImage::BufferedImage creat specifi Raster::Raster
IndexColorModel::getValidPixels return BigInteger::BigInteger indic valid invalid pixel colormap bit valid BigInteger::BigInteger valu index set invalid BigInteger::BigInteger valu index set valid rang queri BigInteger::BigInteger map size BigInteger::BigInteger indic valid invalid pixel
IndexColorModel::toString return String::String represent content ColorModel::ColorModel String::String repres content ColorModel::ColorModel object
LookupOp::LookupOp implement lookup oper sourc destin LookupTable::LookupTable object contain singl array multipl array subject restrict raster lookup oper band number lookup array case array appli band equal number sourc Raster::Raster band bufferedimag lookup oper color alpha compon number lookup array case array appli color alpha compon number lookup array equal number sourc color compon case lookup alpha compon perform case appli number lookup array equal number sourc color compon alpha compon case lookup perform color alpha compon allow non uniform rescal multi band bufferedimag BufferedImage::BufferedImage sourc premultipli alpha data treat manner non premultipli imag purpos lookup lookup band raw data BufferedImage::BufferedImage sourc regard data premultipli color convers requir destin ColorModel::ColorModel premultipli state sourc destin taken account step imag IndexColorModel::IndexColorModel RenderingHints::RenderingHints object specifi constructor color render hint dither hint color convers requir allow sourc destin
LookupOp::filter perform lookup oper BufferedImage::BufferedImage color model sourc imag destin imag pixel convert destin destin imag null BufferedImage::BufferedImage creat appropri ColorModel::ColorModel IllegalArgumentException::IllegalArgumentException thrown number array LookupTable::LookupTable meet restrict state comment sourc imag IndexColorModel::IndexColorModel src BufferedImage::BufferedImage filter dst BufferedImage::BufferedImage store result filter oper filter BufferedImage::BufferedImage
LookupOp::getBounds2D return bound box filter destin imag geometr oper bound box chang src BufferedImage::BufferedImage filter bound filter definit imag
LookupOp::createCompatibleDestImage creat zero destin imag correct size number band destcm null appropri ColorModel::ColorModel src sourc imag filter oper destcm destin ColorModel::ColorModel null filter destin BufferedImage::BufferedImage
WritableRenderedImage::WritableRenderedImage writeablerenderedimag common interfac object contain produc imag data form raster modifi written imag data store produc singl tile regular array tile WritableRenderedImage::WritableRenderedImage provid notif interest object tile check write getwritabletil last writer particular tile relinquish access call releasewritabletil addit allow caller determin tile current check hastilewrit obtain list tile getwritabletileindic form Vector::Vector Point::Point object Objects::Objects wish notifi chang tile writabl implement TileObserver::TileObserver interfac ad call addtileobserv multipl call addtileobserv object result multipl notif exist observ reduc notif call removetileobserv observ notif oper op necessari WritableRenderedImage::WritableRenderedImage ensur notif occur first writer acquir tile last writer releas
WritableRenderedImage::getWritableTileIndices return array Point::Point object indic tile check write return null check array contain locat tile check write
Scrollbar::writeObject write default serializ field stream write list serializ adjustmentlisten option data non serializ listen detect attempt made serial ObjectOutputStream::ObjectOutputStream write null termin sequenc pair pair consist String::String Object::Object String::String indic type object follow adjustmentlistenerk indic AdjustmentListener::AdjustmentListener object
Scrollbar::readObject read ObjectInputStream::ObjectInputStream isn null add listen receiv adjust event fire Scrollbar::Scrollbar unrecogn key valu ignor ObjectInputStream::ObjectInputStream read
Scrollbar::setCurrentAccessibleValue Set::Set valu object Number::Number valu set
Button::Button creat label button caus action happen button push imag depict view quit button appear solari oper system first view show button appear normal view show button input focus outlin darken let user know activ object third view show button user click mous button thus request action perform gestur click button mous associ instanc ActionEvent::ActionEvent sent mous press releas button interest know button press releas separ gestur processmouseev regist listen mous event call addmouselisten defin compon abstract superclass compon button press releas awt send instanc ActionEvent::ActionEvent button call processev button button processev receiv event button pass action event call processactionev latter pass action event action listen regist interest action event generat button want perform action base button press releas implement ActionListener::ActionListener regist listen receiv event button call button addactionlisten make use button action command messag protocol
Button::Button construct button empti string label
Button::Button construct button specifi label label string label button null label
Button::getListeners return array object current regist foo listen Button::Button foo listen regist use add foo listen specifi listenertyp argument liter foo listen exampl queri Button::Button action listen listen exist return empti array listenertyp type listen request paramet specifi interfac descend util eventlisten array object regist foo listen button empti array listen ad
Button::paramString return string repres state Button::Button intend debug purpos content format return string vari implement return string empti null paramet string button
Button::writeObject write default serializ field stream write list serializ actionlisten option data non serializ actionlisten detect attempt made serial null termin sequenc pair pair consist String::String Object::Object String::String indic type object follow actionlistenerk indic ActionListener::ActionListener object ObjectOutputStream::ObjectOutputStream write
Button::readObject read ObjectInputStream::ObjectInputStream isn null add listen receiv action event fire button unrecogn key valu ignor ObjectInputStream::ObjectInputStream read
Button::getAccessibleContext get accessiblecontext associ Button::Button button accessiblecontext take form accessibleawtbutton accessibleawtbutton instanc creat necessari accessibleawtbutton serv accessiblecontext Button::Button expert descript accessiblecontext associ Button::Button
Button::getCurrentAccessibleValue get valu object Number::Number Integer::Integer isn select Integer::Integer select
Button::setCurrentAccessibleValue Set::Set valu object Number::Number valu set
Button::getMinimumAccessibleValue get minimum valu object Number::Number Integer::Integer
Button::getMaximumAccessibleValue get maximum valu object Number::Number Integer::Integer
Applet::showStatus request argument string display status window browser applet viewer provid window where inform user current state msg string display status window
Applet::getAppletInfo return applet applet overrid return String::String contain author version copyright applet implement Applet::Applet return null string contain author version copyright applet
AppletContext::showDocument request browser applet viewer show web page indic url argument target argument indic html frame document display target argument interpret follow applet viewer browser free ignor AppletContext::showDocument url absolut url give locat document target String::String indic where display page
AppletContext::getStreamKeys find key stream applet context secur reason map stream key exist codebas word applet codebas access stream creat applet codebas Iterator::Iterator name stream applet context
AsynchronousSocketChannel::AsynchronousSocketChannel asynchron channel stream orient connect socket asynchron socket channel creat newli creat AsynchronousSocketChannel::AsynchronousSocketChannel creat invok defin newli creat channel open connect connect AsynchronousSocketChannel::AsynchronousSocketChannel creat connect made socket creat asynchron socket channel arbitrari pre exist newli creat channel connect invok connect channel remain connect close socket channel connect determin invok attempt invok oper unconnect channel caus thrown Channels::Channels type safe use multipl concurr thread support concurr read write read oper write oper outstand time thread initi read oper previous read oper complet thrown similar attempt initi write oper previous write complet throw Socket::Socket option configur use asynchron socket channel support option addit implement specif option support timeout defin allow timeout specifi initi read write oper timeout elaps oper complet oper complet timeout leav channel connect inconsist state where implement guarante byte read channel put channel implement specif error state subsequ attempt initi read oper caus unspecifi runtim thrown similar write oper time implement guarante byte written channel further attempt write channel caus unspecifi runtim thrown timeout elaps state sequenc buffer oper defin buffer discard care taken ensur buffer access channel remain open accept timeout paramet treat valu equal zero mean oper timeout
DatagramChannel::DatagramChannel select channel datagram orient socket datagram channel creat invok creat channel arbitrari pre exist datagram socket newli creat datagram channel open connect datagram channel connect order datagram channel connect invok order avoid overhead secur check perform part send receiv oper datagram channel connect order use accept return socket address connect datagram channel remain connect disconnect close datagram channel connect determin invok Socket::Socket option configur use datagram channel internet protocol socket support option addit implement specif option support datagram channel safe use multipl concurr thread support concurr read write thread read thread write given time
AbstractInterruptibleChannel::close close channel channel close return mark channel close invok order complet close oper
ServerSocketChannel::ServerSocketChannel select channel stream orient listen socket server socket channel creat invok creat channel arbitrari pre exist newli creat server socket channel open bound attempt invok unbound server socket channel caus thrown server socket channel bound invok defin Socket::Socket option configur use server socket channel support option addit implement specif option support server socket channel safe use multipl concurr thread
FileChannel::FileChannel channel read write map manipul file file channel connect file current posit file file contain variabl length sequenc byte read written current queri size file increas byte written current size size file decreas file associ metadata access permiss content type last modif time defin metadata access addit familiar read write close oper byte channel defin file specif oper byte absolut posit file affect channel current posit region file memori file effici invok usual read write updat made file storag devic ensur data lost event system crash byte transfer file optim oper system fast transfer filesystem cach region file access program File::File channel safe use multipl concurr thread invok time specifi interfac oper involv channel posit chang file size progress given time attempt initi oper first progress block first oper complet oper particular take explicit posit proceed concurr fact depend implement therefor unspecifi view file instanc guarante consist view file instanc program view instanc consist view seen concurr run program due cach perform oper system delay induc network filesystem protocol regardless languag program written run machin machin exact natur inconsist system depend therefor unspecifi file channel creat invok defin file channel obtain exist object invok object getchannel return file channel connect file where file channel obtain exist stream random access file state file channel intim connect object getchannel return channel chang channel posit explicit read write byte chang file posit origin object versa chang file length file channel chang length seen origin object versa chang file content write byte chang content seen origin object versa various point specifi instanc open read open write open read write requir channel obtain instanc open read channel obtain instanc open write final channel obtain instanc open read instanc creat mode open read write instanc creat mode rw file channel open write append mode exampl obtain file output stream creat invok constructor pass paramet mode invoc relat write oper first advanc posit end file write request data advanc posit write data singl atom oper system depend therefor unspecifi
FileChannel::FileChannel initi instanc
FileChannel::open open creat file return file channel access file option paramet determin file open option determin file open read write option option contain array file open read default read write commenc begin file addit read write option implement support addit option attr paramet option array file set atom creat file channel creat invok provid creat Path::Path path path file open creat option option specifi file open attr option list file attribut set atom creat file file channel
FileChannel::read read sequenc byte channel given buffer byte read start channel current file posit file posit updat number byte actual read behav exact specifi interfac
FileChannel::read read sequenc byte channel subsequ given buffer byte read start channel current file posit file posit updat number byte actual read behav exact specifi interfac
FileChannel::read read sequenc byte channel given buffer byte read start channel current file posit file posit updat number byte actual read behav exact specifi interfac
FileChannel::write write sequenc byte channel given buffer byte written start channel current file posit channel append mode case posit first advanc end file file grown necessari accommod written byte file posit updat number byte actual written behav exact specifi interfac
FileChannel::write write sequenc byte channel subsequ given buffer byte written start channel current file posit channel append mode case posit first advanc end file file grown necessari accommod written byte file posit updat number byte actual written behav exact specifi interfac
FileChannel::write write sequenc byte channel given buffer byte written start channel current file posit channel append mode case posit first advanc end file file grown necessari accommod written byte file posit updat number byte actual written behav exact specifi interfac
FileChannel::read read sequenc byte channel given buffer start given file posit work manner byte read start given file posit channel current posit modifi channel posit given posit greater file current size byte read dst buffer byte transfer posit file posit transfer begin non negat number byte read possibl zero given posit greater equal file current size
FileChannel::write write sequenc byte channel given buffer start given file posit work manner byte written start given file posit channel current posit modifi channel posit given posit greater file current size file grown accommod byte valu byte previous end file newli written byte unspecifi src buffer byte transfer posit file posit transfer begin non negat number byte written possibl zero
FileChannel::lock acquir lock given region channel file invoc block region lock channel close invok thread interrupt come first channel close thread invoc thrown invok thread interrupt wait acquir lock interrupt status set thrown invok interrupt status set invok thrown thread interrupt status chang region specifi posit size paramet contain overlap actual file Lock::Lock region fix size lock region initi contain end file file grow region portion file cover lock file expect grow size lock entir file requir region start zero smaller expect maximum size file lock zero argument simpli lock region size oper system support share lock case request share lock automat convert request exclus lock newli acquir lock share exclus test invok result lock object File::File lock held behalf entir virtual machin suitabl control access file multipl thread virtual machin posit posit lock region start non negat size size lock region non negat sum posit nbsp nbsp size non negat share request share lock case channel open read possibl write fals request exclus lock case channel open write possibl read lock object repres newli acquir lock
FileChannel::tryLock attempt acquir lock given region channel file block invoc return acquir lock request region fail fail acquir lock overlap lock held program return null fail acquir lock reason appropri thrown region specifi posit size paramet contain overlap actual file Lock::Lock region fix size lock region initi contain end file file grow region portion file cover lock file expect grow size lock entir file requir region start zero smaller expect maximum size file lock zero argument simpli lock region size oper system support share lock case request share lock automat convert request exclus lock newli acquir lock share exclus test invok result lock object File::File lock held behalf entir virtual machin suitabl control access file multipl thread virtual machin posit posit lock region start non negat size size lock region non negat sum posit nbsp nbsp size non negat share request share lock fals request exclus lock lock object repres newli acquir lock null lock acquir program hold overlap lock
FileLock::FileLock token repres lock region file file lock object creat time lock acquir file file lock object initi valid remain valid lock releas invok close channel acquir termin virtual machin come first valid lock test invok file lock exclus share share lock prevent concurr run program acquir overlap exclus lock allow acquir overlap share lock exclus lock prevent program acquir overlap lock type releas lock further effect lock acquir program lock exclus share determin invok platform support share lock case request share lock automat convert request exclus lock lock held particular file singl virtual machin overlap test candid lock rang overlap exist lock file lock object record file channel file lock held type valid lock posit size lock region valid lock subject chang time aspect lock state immut File::File lock held behalf entir virtual machin suitabl control access file multipl thread virtual machin file lock object safe use multipl concurr thread platform depend file lock intend map nativ lock facil oper system thus lock held file visibl program access file regardless languag program written lock actual prevent program access content lock region system depend therefor unspecifi nativ file lock facil system mere advisori mean program cooper observ known lock protocol order guarante data integr system nativ file lock mandatori mean program lock region file program actual prevent access region violat lock system nativ file lock advisori mandatori configur file basi ensur consist correct behavior platform strong recommend lock advisori lock system acquir mandatori lock region file prevent region versa program combin lock map prepar combin fail system close channel releas lock held virtual machin file regardless lock acquir channel channel open file strong recommend program uniqu channel acquir lock given file network filesystem permit file lock memori map file lock region page align multipl hardwar page size network filesystem implement file lock region extend posit 30 31 general great care taken lock file resid network filesystem
AsynchronousFileChannel::open open creat file read write return asynchron file channel access file option paramet determin file open option determin file open read write option contain array exist file open read addit read write option implement support addit option executor paramet task submit handl event dispatch complet result oper initi result channel natur task implement specif care taken configur Executor::Executor minim support unbound work queue run task caller thread shut executor servic channel open result unspecifi behavior attr paramet option array file set atom creat file channel creat invok provid creat Path::Path file path file open creat option option specifi file open executor thread pool null associ channel default thread pool attr option list file attribut set atom creat file asynchron file channel
AsynchronousFileChannel::open open creat file read write return asynchron file channel access file invoc behav exact invoc where opt Set::Set contain option specifi result channel associ default thread pool task submit handl event dispatch complet handler consum result asynchron oper perform result channel file path file open creat option option specifi file open asynchron file channel
AsynchronousFileChannel::lock acquir lock given region channel file initi oper acquir lock given region channel file handler paramet complet handler invok lock acquir oper fail result pass complet handler result FileLock::FileLock region specifi posit size paramet contain overlap actual file Lock::Lock region fix size lock region initi contain end file file grow region portion file cover lock file expect grow size lock entir file requir region start zero smaller expect maximum size file lock argument simpli lock region size lock overlap request region held virtual machin invok lock overlap region oper complet throw oper system support mechan acquir file lock asynchron manner consequ implement acquir file lock background thread task execut thread associ thread pool lock oper outstand consum thread virtual machin indefinit period oper system support share lock case request share lock automat convert request exclus lock newli acquir lock share exclus test invok result lock object File::File lock held behalf entir virtual machin suitabl control access file multipl thread virtual machin type attach posit posit lock region start non negat size size lock region non negat sum posit nbsp nbsp size non negat share request share lock case channel open read possibl write fals request exclus lock case channel open write possibl read attach object attach oper null handler handler consum result
AsynchronousServerSocketChannel::AsynchronousServerSocketChannel asynchron channel stream orient listen socket asynchron server socket channel creat invok newli creat asynchron server socket channel open bound bound local address configur listen connect invok bound initi accept connect channel socket attempt invok accept unbound channel caus thrown Channels::Channels type safe use multipl concurr thread accept oper outstand time thread initi accept oper previous accept oper complet thrown Socket::Socket option configur use Channels::Channels type support option addit implement specif option support usag exampl
AsynchronousServerSocketChannel::accept accept connect initi asynchron oper accept connect made channel socket handler paramet complet handler invok connect accept oper fail result pass complet handler connect connect accept result AsynchronousSocketChannel::AsynchronousSocketChannel bound channel group connect accept connect close oper complet IOException::IOException caus allow concurr handl connect complet handler invok initi thread connect accept see secur manag instal verifi address port number connect remot endpoint permit secur manag permiss check perform privileg restrict call context permiss check fail connect close oper complet type attach attach object attach oper null handler handler consum result
SocketChannel::SocketChannel select channel stream orient connect socket socket channel creat invok creat channel arbitrari pre exist socket newli creat socket channel open connect attempt invok oper unconnect channel caus thrown socket channel connect invok connect socket channel remain connect close socket channel connect determin invok Socket::Socket channel support non block connect nbsp socket channel creat process establish link remot socket initi complet connect oper progress determin invok Socket::Socket channel support asynchron shutdown similar asynchron close oper specifi input side socket shut thread thread block read oper socket channel read oper block thread complet read byte return output side socket shut thread thread block write oper socket channel block thread receiv Socket::Socket option configur use Socket::Socket channel support option addit implement specif option support Socket::Socket channel safe use multipl concurr thread support concurr read write thread read thread write given time mutual synchron attempt initi read write oper invoc progress block invoc complet
SocketChannel::validOps return oper set identifi channel support oper Socket::Socket channel support connect read write return nbsp nbsp valid oper set
FileStore::getFileStoreAttributeView return FileStoreAttributeView::FileStoreAttributeView given type intend where file store attribut view defin type safe read updat file store attribut type paramet type attribut view requir return instanc type support FileStoreAttributeView::FileStoreAttributeView type type Class::Class object correspond attribut view file store attribut view specifi type null attribut view avail
Files::newDirectoryStream open directori return iter entri directori element return directori stream type Path::Path repres entri directori Path::Path object obtain name directori entri dir use resourc construct directori stream close invok iter complet free resourc held open directori implement support oper entri directori execut race free manner return directori stream dir path directori open DirectoryStream::DirectoryStream object
Files::newDirectoryStream open directori return iter entri directori element return directori stream type Path::Path repres entri directori Path::Path object obtain name directori entri dir entri return iter filter given use resourc construct directori stream close invok iter complet free resourc held open directori where filter termin due uncaught error runtim propag where IOException::IOException thrown result hasnext throw ioexcept caus implement support oper entri directori execut race free manner return directori stream usag exampl suppos want iter file directori larger 8k dir path directori filter directori stream filter open DirectoryStream::DirectoryStream object
Files::createTempFile creat empti file specifi directori use given prefix suffix string generat name result Path::Path associ FileSystem::FileSystem given directori detail name file construct implement depend therefor specifi where prefix suffix construct candid name manner file createtempfil part temporari file facil where work file result file open use option file delet appropri close invok altern mechan delet file automat attr paramet option set atom creat file attribut identifi attribut name includ array last occurr ignor file attribut specifi result file restrict access permiss file creat dir path directori creat file prefix prefix string generat file name null suffix suffix string generat file name null case tmp attr option list file attribut set atom creat file path newli creat file exist invok
Files::createTempFile creat empti file default temporari file directori use given prefix suffix generat name result Path::Path associ default FileSystem::FileSystem work exact manner specifi case dir paramet temporari file directori prefix prefix string generat file name null suffix suffix string generat file name null case tmp attr option list file attribut set atom creat file path newli creat file exist invok
Files::createTempDirectory creat directori specifi directori use given prefix generat name result Path::Path associ FileSystem::FileSystem given directori detail name directori construct implement depend therefor specifi where prefix construct candid name createtempfil part temporari file facil mechan delet directori automat attr paramet option set atom creat directori attribut identifi attribut name includ array last occurr ignor dir path directori creat directori prefix prefix string generat directori name null attr option list file attribut set atom creat directori path newli creat directori exist invok
Files::createTempDirectory creat directori default temporari file directori use given prefix generat name result Path::Path associ default FileSystem::FileSystem work exact manner specifi case dir paramet temporari file directori prefix prefix string generat directori name null attr option list file attribut set atom creat directori path newli creat directori exist invok
Files::copy copi file target file copi file target file option paramet specifi copi perform default copi fail target file exist symbol link sourc target file case complet copi file File::File attribut requir copi target file symbol link support file symbol link final target link copi file directori creat empti directori target locat entri directori copi copi directori entri directori entir file tree where requir option paramet includ follow implement interfac support addit implement specif option copi file atom oper thrown target file incomplet file attribut copi sourc file replac exist option specifi target file exist target file replac check exist file creation file atom respect file system activ usag exampl suppos want copi file directori give file name sourc file sourc path file copi target path target file associ provid sourc path option option specifi copi path target file
Files::move move renam file target file default attempt move file target file target file exist sourc target file case effect file symbol link symbol link target link move invok move empti directori implement directori entri file link creat directori creat implement directori consid empti entri exist invok move directori empti directori move requir move entri directori exampl renam directori requir move entri directori move directori requir entri move fail throw IOException::IOException move file tree involv copi move directori use conjunct util option paramet includ follow implement interfac support addit implement specif option move file copi target file support sourc target file store copi file timestamp result precis loss implement attempt copi file attribut requir fail file attribut copi move perform non atom oper ioexcept thrown state file defin origin file target file exist target file incomplet file attribut copi origin file usag exampl suppos want renam file newnam keep file directori altern suppos want move file directori keep file name replac exist file name directori sourc path file move target path target file associ provid sourc path option option specifi move path target file
Files::readSymbolicLink read target symbol link option oper file system support read target link file symbol link target link exist return Path::Path object associ file system link link path symbol link Path::Path object repres target link
Files::isSameFile test path locat file Path::Path object return check file exist Path::Path object associ provid return fals check Path::Path object locat file depend implement requir open access file file system file remain static implement equival relat non null Paths::Paths reflex Path::Path issamefil return symmetr Paths::Paths issamefil equal issamefil transit Paths::Paths issamefil return issamefil return issamefil return return path path file path2 path path locat file
Files::probeContentType probe content type file use instal implement probe given file determin content type file type detector invok turn probe file type file recogn content type return file recogn instal file type detector system default file type detector invok guess content type given invoc virtual machin maintain system wide list file type detector instal file type detector load use servic provid load facil defin instal file type detector load use system loader system loader found extens loader extens loader found bootstrap loader File::File type detector typic instal place jar file path extens directori jar file contain provid configur file name nio file spi filetypedetector resourc directori meta inf servic file list fulli qualifi name concret subclass FileTypeDetector::FileTypeDetector zero argument constructor process locat instanti instal file type detector fail unspecifi error thrown order instal provid locat implement specif return valu string form valu multipurpos internet mail Extension::Extension mime content type defin string guarante parsabl accord grammar rfc path path file probe content type file null content type determin
Files::getFileAttributeView return file attribut view given type file attribut view provid read updat view set file attribut intend where file attribut view defin type safe read updat file attribut type paramet type attribut view requir return instanc type support type support access basic attribut file invok select file attribut view type return instanc option array indic symbol link handl result file attribut view case file symbol link default symbol link follow option symbol link follow option ignor implement support symbol link usag exampl suppos want read set file acl support FileAttributeView::FileAttributeView type path path file type Class::Class object correspond file attribut view option option indic symbol link handl file attribut view specifi type null attribut view type avail
Files::readAttributes read file attribut bulk oper type paramet type attribut requir return instanc type support implement support basic set file attribut invok type paramet basicfileattribut throw UnsupportedOperationException::UnsupportedOperationException option array indic symbol link handl case file symbol link default symbol link follow file attribut final target link read option symbol link follow implement specif file attribut read atom oper respect file system oper usag exampl suppos want read file attribut bulk altern suppos want read file posix attribut symbol link BasicFileAttributes::BasicFileAttributes type path path file type Class::Class file attribut requir read option option indic symbol link handl file attribut
Files::walkFileTree walk file tree walk file tree root given start file file tree travers depth first given invok file encount File::File tree travers complet access file tree visit visit return result where visit termin due ioexcept uncaught error runtim travers termin error propag caller file encount attempt read file directori invok file attribut file attribut read due invok where file directori directori open visitfilefail invok file tree walk continu default sibl directori where directori open success entri directori descend visit entri visit error occur iter directori directori close visitor invok file tree walk continu default sibl directori default symbol link automat follow option paramet contain option symbol link follow link attribut target read attempt get BasicFileAttributes::BasicFileAttributes link read visitfil invok attribut link visitfilefail invok specifi option paramet contain option keep track directori visit cycl detect cycl aris entri directori ancestor directori cycl detect record directori file key avail invok test directori file ancestor cycl detect treat error invok instanc maxdepth paramet maximum number level directori visit valu mean start file visit deni secur manag valu indic level visit visitfil invok file includ directori encount maxdepth basic file attribut read case visitfilefail invok visitor return result null NullPointerException::NullPointerException thrown secur manag instal deni access file directori ignor visitor invok file directori start start file option option configur travers maxdepth maximum number directori level visit visitor file visitor invok file start file
Files::newBufferedReader open file read return BufferedReader::BufferedReader read text file effici manner byte file decod charact use specifi charset read commenc begin file Reader::Reader read file throw IOException::IOException malform unmapp byte sequenc read path path file cs charset use decod buffer reader default buffer size read text file
Files::newBufferedReader open file read return BufferedReader::BufferedReader read text file effici manner byte file decod charact use work invok equival evalu express path path file buffer reader default buffer size read text file
Files::newBufferedWriter open creat file write return BufferedWriter::BufferedWriter write text file effici manner option paramet specifi file creat open option work option word open file write creat file doesn exist initi truncat exist size exist Writer::Writer write text throw ioexcept text encod use specifi charset path path file cs charset use encod option option specifi file open buffer writer default buffer size write text file
Files::newBufferedWriter open creat file write return BufferedWriter::BufferedWriter write text file effici manner text encod byte write use work invok equival evalu express path path file option option specifi file open buffer writer default buffer size write text file
Files::readAllBytes read byte file ensur file close byte read error runtim thrown note intend case where conveni read byte byte array intend read file path path file byte array contain byte read file
Files::readAllLines read line file ensur file close byte read error runtim thrown byte file decod charact use specifi charset recogn line termin 92 u000d follow 92 u000a carriag return follow line feed 92 u000a line feed 92 u000d carriag return addit unicod line termin recogn futur releas note intend case where conveni read line singl oper intend read file path path file cs charset use decod line file List::List List::List modifi implement depend therefor specifi
Files::readAllLines read line file byte file decod charact use work invok equival evalu express path path file line file List::List List::List modifi implement depend therefor specifi
Files::write write byte file option paramet specifi file creat open option work option word open file write creat file doesn exist initi truncat exist size byte byte array written file ensur file close byte written error runtim thrown error occur file creat truncat byte written file usag exampl default creat file overwrit exist file suppos instead want append byte exist file path path file byte byte array byte write option option specifi file open path
Files::write write line text file line char sequenc written file sequenc line termin platform line separ defin system properti line separ charact encod byte use specifi charset option paramet specifi file creat open option work option word open file write creat file doesn exist initi truncat exist size ensur file close line written error runtim thrown error occur file creat truncat byte written file path path file line object iter char sequenc cs charset use encod option option specifi file open path
Files::write write line text file charact encod byte use work invok equival evalu express path path file line object iter char sequenc option option specifi file open path
Files::walk return Stream::Stream lazili popul Path::Path walk file tree root given start file file tree travers depth first element stream object obtain relat path start stream walk file tree element consum Stream::Stream return guarante element start file file visit stream attempt read file directori open success entri directori descend follow directori stream encount entri visit directori close file tree walk continu sibl directori stream weak consist freez file tree iter reflect updat file tree occur return default symbol link automat follow option paramet contain option symbol link follow link attribut target read attempt get BasicFileAttributes::BasicFileAttributes link option paramet contain option stream keep track directori visit cycl detect cycl aris entri directori ancestor directori cycl detect record directori file key avail invok test directori file ancestor cycl detect treat error instanc maxdepth paramet maximum number level directori visit valu mean start file visit deni secur manag valu indic level visit secur manag instal deni access file directori ignor includ stream return stream encapsul time dispos file system resourc requir resourc construct ensur stream invok stream oper complet oper close stream result thrown access directori return wrap thrown caus access take place start start file maxdepth maximum number directori level visit option option configur travers
Files::walk return Stream::Stream lazili popul Path::Path walk file tree root given start file file tree travers depth first element stream object obtain relat path start work invok equival evalu express word visit level file tree return stream encapsul time dispos file system resourc requir resourc construct ensur stream invok stream oper complet oper close stream result start start file option option configur travers
Files::find return Stream::Stream lazili popul Path::Path search file file tree root given start file walk file tree exact manner specifi file encount given invok Path::Path object obtain relat path start includ return BiPredicate::BiPredicate return compar call Stream::Stream return walk effici avoid redund retriev BasicFileAttributes::BasicFileAttributes return stream encapsul time dispos file system resourc requir resourc construct ensur stream invok stream oper complet oper close stream result thrown access directori return wrap thrown caus access take place start start file maxdepth maximum number directori level search matcher function decid file includ return stream option option configur travers
Files::lines read line file Stream::Stream read line List::List instead popul lazili stream consum byte file decod charact use specifi charset line termin specifi Files::readAllLines support return subsequ occur read file malform unmapp byte sequenc read wrap thrown caus read take place case ioexcept thrown close file wrap uncheckedioexcept return stream encapsul time dispos file system resourc requir resourc construct ensur stream invok stream oper complet path path file cs charset use decod line file Stream::Stream
FileSystem::FileSystem provid interfac file system factori object access file object file system default file system obtain invok provid access file system access virtual machin defin creat file system provid access type custom file system file system factori type object convert system depend path string return object locat access file creat perform match oper path return iter return lookup user group name creat watch object chang event File::File system vari great case file system singl hierarchi file top level root directori case distinct file hierarchi top level root directori iter root directori file system file system typic compos provid storag file file store vari featur support file attribut meta data associ file file system open creation close invok close further attempt access object file system caus thrown File::File system creat default close FileSystem::FileSystem provid read read write access file system file system provid read access establish FileSystem::FileSystem creat test invok attempt write file store mean object associ read file system throw File::File system safe use multipl concurr thread invok time close file system file system asynchron closeabl provid specif therefor unspecifi word thread access object file system thread invok close requir block first oper complet close file system caus open channel watch servic object associ file system close
FileSystem::isOpen tell file system open File::File system creat default provid open file system open
FileSystem::getPath convert path string sequenc string join form path string Path::Path specifi element valu first paramet path string convert specifi element non empti string includ first consid sequenc name element see join form path string detail string join provid specif typic join use separ exampl name separ getpath foo gus invok path string foo gus convert Path::Path Path::Path repres empti path return first empti string contain non empti string pars convers path object inher implement depend simplest case path string reject thrown path string contain charact convert charact legal file store exampl unix system nul 92 u0000 charact allow path implement choos reject path string contain name longer allow file store where implement support complex path syntax choos reject path string bad form case default provid path string pars base definit path platform virtual file system level exampl oper system allow specif charact file name specif file store impos addit restrict set legal charact throw path string convert path where where applic creat valu indic first posit path paramet caus path string reject first path string initi part path string addit string join form path string result Path::Path
FileSystem::getPathMatcher return PathMatcher::PathMatcher perform match oper String::String represent object interpret given pattern syntaxandpattern paramet identifi syntax pattern take form where stand FileSystem::FileSystem implement support glob regex syntax support valu syntax compon compar regard case syntax glob String::String represent path match use limit pattern languag resembl regular express simpler syntax exampl rule interpret glob pattern charact match zero compon cross directori boundari charact match zero cross directori boundari charact match exact charact name compon backslash charact escap charact interpret charact express match singl backslash match brace exampl charact bracket express match singl charact name compon set charact exampl abc match hyphen specifi rang specifi rang match inclus form mix abc match charact negat match charact bracket express charact match charact match first charact bracket first charact negat charact group subpattern where group match subpattern group match charact separ subpattern group nest lead period 47 dot charact file name treat regular charact match oper exampl glob pattern match file name login test file consid hidden charact match implement depend manner includ charact repres match compon implement depend specifi syntax regex pattern compon regular express defin glob regex syntax match detail match case sensit implement depend therefor specifi syntaxandpattern syntax pattern path matcher match path pattern
FileSystemProvider::getFileSystem return exist FileSystem::FileSystem creat provid return refer FileSystem::FileSystem creat invok File::File system creat return file system identifi uri exact form provid depend case default provid uri path compon author queri fragment compon undefin undefin compon repres null file system creat provid provid depend return refer close file system throw provid allow file system creat uri file system previous creat throw invok file system close instanc creat secur manag instal provid implement requir check permiss return refer exist file system case file system permiss check requir uri uri refer file system
FileSystemProvider::getPath return Path::Path object convert given result Path::Path associ exist construct automat exact form uri file system provid depend case default provid uri scheme file given uri non empti path compon undefin queri fragment compon result Path::Path associ default FileSystem::FileSystem secur manag instal provid implement requir check permiss case file system permiss check requir uri uri convert result Path::Path
FileSystemProvider::getFileAttributeView return file attribut view given type work exact manner specifi FileAttributeView::FileAttributeView type path path file type Class::Class object correspond file attribut view option option indic symbol link handl file attribut view specifi type null attribut view type avail
FileSystemProvider::readAttributes read file attribut bulk oper work exact manner specifi BasicFileAttributes::BasicFileAttributes type path path file type Class::Class file attribut requir read option option indic symbol link handl file attribut
DirectoryStream::DirectoryStream object iter entri directori directori stream allow conveni use construct iter directori DirectoryStream::DirectoryStream extend Iterable::Iterable general purpos Iterable::Iterable support singl Iterator::Iterator invok obtain subsequ iter throw IllegalStateException::IllegalStateException properti directori stream Iterator::Iterator guarante read ahead element hasnext return follow call guarante throw due error stream Iterator::Iterator support oper DirectoryStream::DirectoryStream open creation close invok close close directori stream releas resourc associ stream failur close stream result resourc leak resourc statement provid use construct ensur stream close directori stream close further access directori use Iterator::Iterator behav end stream reach due read ahead Iterator::Iterator return element directori stream close buffer element read subsequ call hasnext return fals subsequ call throw NoSuchElementException::NoSuchElementException directori stream requir asynchron closeabl thread block directori stream iter read directori thread invok close thread block read oper complet error encount access directori caus Iterator::Iterator hasnext throw caus state hasnext guarante read ahead element mean hasnext return follow call guarante fail DirectoryIteratorException::DirectoryIteratorException element return iter specif order file system maintain link directori directori parent directori entri repres link return iter iter weak consist thread safe freez directori iter reflect updat directori occur DirectoryStream::DirectoryStream creat usag exampl suppos want list sourc file directori exampl use resourc construct type element return iter
WatchKey::pollEvents retriev remov event watch key return List::List event retriev note wait event list event retriev empti
WatchService::WatchService watch servic watch regist object chang event exampl file manag use watch servic monitor directori chang updat display list file file creat delet object regist watch servic invok return repres registr event object detect key signal current signal queu watch servic retriev consum invok retriev key process event event process consum invok key reset key allow key signal queu further event registr watch servic cancel invok key key queu time cancel remain queue retriev depend object key cancel automat exampl suppos directori watch watch servic detect delet file system longer access key cancel manner signal queu current signal ensur consum notifi return valu reset indic key valid watch servic safe use multipl concurr consum ensur consum process event particular object time care taken ensur key reset invok event process invok time close servic caus thread wait retriev key throw ClosedWatchServiceException::ClosedWatchServiceException File::File system report event faster retriev process implement impos unspecifi limit number event accumul where implement know discard event arrang key return element event type event consum trigger examin state object event report indic file watch directori modifi guarante program program modifi file complet care taken coordin access program updat file defin lock region file access program platform depend implement observ event file system intend map nativ file event notif facil where avail use primit mechan poll nativ facil avail consequ detail event detect timeli order preserv implement specif exampl file watch directori modifi result singl event implement event implement live file mean file delet quick creat detect primit implement period poll file system detect chang watch file locat local storag devic implement specif chang file detect particular requir chang file carri remot system detect
StandardOpenOption::WRITE open write access
WatchEvent::context return context event case event context Path::Path path directori regist watch servic entri creat delet modifi event context null
SecureDirectoryStream::getFileAttributeView return file attribut view access file attribut directori result file attribut view read updat attribut open directori type paramet specifi type attribut view return instanc type support invok obtain return instanc bound open directori state result file attribut view intim connect directori stream directori stream read updat attribut throw FileAttributeView::FileAttributeView type type Class::Class object correspond file attribut view file attribut view specifi type bound directori stream null attribut view type avail
SecureDirectoryStream::getFileAttributeView return file attribut view access file attribut file directori result file attribut view read updat attribut file directori type paramet specifi type attribut view return instanc type support invok obtain return instanc bound file directori state result file attribut view intim connect directori stream directori stream read updat attribut throw file requir exist time file attribut view creat read updat attribut file fail invok file exist FileAttributeView::FileAttributeView type path path file type Class::Class object correspond file attribut view option option indic symbol link handl file attribut view specifi type bound directori stream null attribut view type avail
BasicFileAttributes::fileKey return object uniqu identifi given file null file key avail platform file system use identifi combin identifi uniqu identifi file identifi oper file tree travers file system support file system allow file entri directori unix file system exampl devic inod common purpos file key return guarante uniqu file system file remain static file system use identifi file delet implement depend therefor unspecifi File::File key return compar equal suitabl use collect file system file remain static file non null file key file key equal object uniqu identifi given file null
DosFileAttributeView::DosFileAttributeView file attribut view provid view legaci dos file attribut attribut support file system File::File alloc tabl fat format common consum devic DosFileAttributeView::DosFileAttributeView addit support access set dos attribut flag indic file read hidden system file archiv where dynam access file attribut requir attribut support attribut view defin BasicFileAttributeView::BasicFileAttributeView addit attribut support read attribut attribut defin invok updat file last modifi time last access time creat time attribut defin updat dos attribut invok respect
PosixFileAttributes::PosixFileAttributes File::File attribut associ file file system oper system implement portabl oper System::System interfac posix famili standard posix attribut file retriev use invok
FileTime::from return FileTime::FileTime repres point time valu time line Instant::Instant object instant instant convert FileTime::FileTime repres point time line instant
FileTime::toInstant convert FileTime::FileTime object Instant::Instant convers creat Instant::Instant repres point time line FileTime::FileTime FileTime::FileTime store point time line further futur further Instant::Instant convers further time point satur earlier instant min instant max instant repres point time line FileTime::FileTime object
UserDefinedFileAttributeView::UserDefinedFileAttributeView file attribut view provid view file user defin attribut known extend attribut user defin file attribut store metadata file meaning file system primarili intend file system implement support capabl emul detail emul implement specif therefor specifi FileAttributeView::FileAttributeView provid view file user defin attribut set name valu pair where attribut name repres String::String implement requir encod decod platform file system represent access attribut valu opaqu content attribut view defin read valu write FileAttributeView::FileAttributeView intend use where size attribut valu larger user defin attribut implement store secur relat attribut consequ case default provid access user defin attribut requir runtimepermiss accessuserdefinedattribut permiss secur manag instal test specif support storag user defin attribut where dynam access file attribut requir read attribut valu attribut valu return byte array byte write valu user defin attribut buffer invok byte array byte
PosixFilePermissions::toString return String::String represent set permiss guarante return String::String pars set contain null element type PosixFilePermission::PosixFilePermission element ignor perm set permiss string represent permiss set
PosixFilePermissions::fromString return set permiss correspond given String::String represent perm paramet String::String repres permiss charact interpret set first set refer owner permiss group permiss last set first charact indic permiss read charact indic permiss write third charact execut permiss where permiss set correspond charact set usag exampl suppos requir set permiss indic owner read write execut permiss group read execut permiss perm string repres set permiss result set permiss
DosFileAttributes::DosFileAttributes File::File attribut associ file file system support legaci dos attribut usag exampl
DosFileAttributes::isReadOnly return valu read attribut attribut access control mechan prevent file delet updat file system platform enforc prevent read file updat implement specif valu read attribut
DosFileAttributes::isHidden return valu hidden attribut attribut indic file visibl user valu hidden attribut
DosFileAttributes::isArchive return valu archiv attribut attribut typic backup program valu archiv attribut
DosFileAttributes::isSystem return valu system attribut attribut indic file compon oper system valu system attribut
Path::Path object locat file file system typic repres system depend file path Path::Path repres path hierarch compos sequenc directori file name element separ separ delimit root compon identifi file system hierarchi name element farthest root directori hierarchi name file directori name element directori name Path::Path repres root root sequenc name simpli name element Path::Path consid empti path consist sole name element empti access file use empti path equival access default directori file system Path::Path defin access path compon subsequ name element addit access compon path Path::Path defin combin path construct relat path path Paths::Paths test use interfac extend interfac directori locat path entri directori watch warn interfac intend implement develop custom file system implement ad interfac futur releas access file Paths::Paths oper file directori type file exampl suppos want read text file access log file locat directori log relat current work directori utf encod interoper Paths::Paths associ default general interoper Paths::Paths creat provid unlik interoper abstract path name repres io file obtain Path::Path abstract path name repres io file object result Path::Path oper file io file object addit use construct File::File String::String represent Path::Path concurr implement interfac immut safe use multipl concurr thread
Path::getRoot return root compon path Path::Path object null path root compon path repres root compon path null
Path::getFileName return name file directori denot path Path::Path object file name farthest element root directori hierarchi path repres name file directori null path zero element
Path::getName return name element path Path::Path object index paramet index name element return element closest root directori hierarchi index element farthest root index index index element name element
Path::subpath return relat Path::Path subsequ name element path beginindex endindex paramet specifi subsequ name element name closest root directori hierarchi index name farthest root index return Path::Path object name element begin beginindex extend element index endindex beginindex index first element inclus endindex index last element exclus Path::Path object subsequ name element Path::Path
Path::startsWith test path start Path::Path construct convert given path string exact manner specifi unix exampl path foo start foo foo start fo given path string path start given path fals
Path::endsWith test path end Path::Path construct convert given path string exact manner specifi unix exampl path foo end foo end note trail separ taken account invok Path::Path foo String::String return given path string path end given path fals
Path::normalize return path path redund name element elimin precis definit implement depend general deriv path path contain redund name element file system name indic current directori parent directori file system occurr consid redund preced non name name consid redund process identifi name repeat longer applic access file system path locat file exist elimin preced name path result path locat file origin path aris preced name symbol link result path path contain redund name element empti path return path root compon name element redund
Path::resolve convert given path string Path::Path resolv Path::Path exact manner specifi exampl suppos name separ path repres foo invok path string gus result Path::Path foo gus path string resolv path result path
Path::resolveSibling resolv given path path path use where file name replac file name exampl suppos name separ path repres dir1 dir2 foo invok Path::Path result Path::Path dir1 dir2 path parent path return empti path return path parent where path doesn parent empti path path resolv path parent result path
Path::resolveSibling convert given path string Path::Path resolv path path exact manner specifi path string resolv path parent result path
Path::toUri return uri repres path construct absolut equal uri scheme identifi provid exact form scheme specif part provid depend case default provid uri hierarch compon absolut queri fragment compon undefin author compon defin implement depend guarante uri construct particular path repres univers Naming::Naming convent unc path unc server name encod author compon result uri case default provid file exist determin file directori result uri end slash default provid provid similar trip guarante given Path::Path guarante touri equal origin Path::Path uri Path::Path creat possibl invoc virtual machin provid make guarante provid specif therefor unspecifi file system construct access content file file system implement specif return uri repres given path file system repres compound uri encod uri enclos file system format compound uri defin releas scheme ad futur releas uri repres path
Path::toAbsolutePath return Path::Path object repres absolut path path path simpli return path resolv path implement depend manner typic resolv path file system default directori depend implement throw error file system access Path::Path object repres absolut path
Path::toFile return object repres path where Path::Path associ default provid equival return File::File object construct String::String represent path path creat invok File::File guarante File::File object return origin File::File File::File object repres path
Path::equals test path equal given object given object Path::Path Path::Path associ FileSystem::FileSystem return fals path equal depend file system implement case path compar regard case case sensit access file system file requir exist where requir check path locat file satisfi general contract object object compar given object Path::Path ident Path::Path
Path::toString return string represent path path creat convert path string use path string return differ origin String::String creat path return path string use default name separ name path string represent path
Paths::get convert path string sequenc string join form path string Path::Path specifi element valu first paramet path string convert specifi element non empti string includ first consid sequenc name element see join form path string detail string join provid specif typic join use separ exampl name separ getpath foo gus invok path string foo gus convert Path::Path Path::Path repres empti path return first empti string contain non empti string Path::Path obtain invok note conveni use impli assum refer default FileSystem::FileSystem limit util call henc librari intend flexibl reus flexibl altern use exist Path::Path instanc anchor first path string initi part path string addit string join form path string result Path::Path
Paths::get convert given uri object iter provid locat provid identifi uri given uri uri scheme compar regard case provid found invok convert uri case default provid identifi uri scheme file given uri non empti path compon undefin queri fragment compon author compon platform specif return Path::Path associ file system default provid provid similar trip guarante given Path::Path guarante path get equal origin Path::Path uri Path::Path creat possibl invoc virtual machin provid make guarante provid specif therefor unspecifi uri uri convert result Path::Path
FileVisitResult::CONTINUE continu return entri directori visit
FileTreeIterator::FileTreeIterator Iterator::Iterator iter node file tree
Buffer::Buffer contain data specif primit type buffer linear finit sequenc element specif primit type asid content essenti properti buffer capac limit posit buffer capac number element contain capac buffer negat chang buffer limit index first element read written buffer limit negat greater capac buffer posit index element read written buffer posit negat greater limit subclass non boolean primit type transfer data subclass defin categori get put oper relat oper read write element start current posit increment posit number element transfer request transfer exceed limit relat get oper throw relat put oper throw case data transfer absolut oper take explicit element index affect posit absolut get put oper throw index argument exceed limit data cours transfer buffer oper appropri channel relat current posit mark reset buffer mark index posit reset invok mark defin defin negat greater posit mark defin discard posit limit adjust valu smaller mark mark defin invok caus thrown invari invari hold mark posit limit capac valu lt mark lt posit lt limit lt capac newli creat buffer posit zero mark undefin initi limit zero valu depend type buffer manner construct element newli alloc buffer initi zero clear flip rewind addit access posit limit capac valu mark reset defin oper buffer make buffer readi sequenc channel read relat put oper set limit capac posit zero make buffer readi sequenc channel write relat get oper set limit current posit set posit zero make buffer readi read data contain leav limit unchang set posit zero read buffer buffer readabl buffer writabl mutat buffer specifi option oper throw invok read buffer read buffer allow content chang mark posit limit valu mutabl buffer read determin invok Thread::Thread safeti buffer safe use multipl concurr thread buffer thread access buffer control appropri synchron invoc chain valu return specifi return buffer invok allow invoc chain exampl sequenc statement replac singl compact statement
Buffer::capacity return buffer capac capac buffer
Buffer::position return buffer posit posit buffer
Buffer::position set buffer posit mark defin larger posit discard newposit posit valu non negat larger current limit buffer
Buffer::limit return buffer limit limit buffer
Buffer::limit set buffer limit posit larger limit set limit mark defin larger limit discard newlimit limit valu non negat larger buffer capac buffer
Buffer::clear clear buffer posit set zero limit set capac mark discard invok use sequenc channel read put oper fill buffer exampl actual eras data buffer name situat case buffer
Buffer::flip flip buffer limit set current posit posit set zero mark defin discard sequenc channel read put oper invok prepar sequenc channel write relat get oper exampl conjunct transfer data place buffer
Buffer::rewind rewind buffer posit set zero mark discard invok sequenc channel write get oper assum limit set appropri exampl buffer
Buffer::hasRemaining tell element current posit limit element remain buffer
Buffer::array return array buffer nbsp nbsp option oper intend allow array buffer pass nativ effici concret subclass provid strong type return valu modif buffer content caus return array content modifi versa invok invok order ensur buffer access array array buffer
Charset::forName return charset object name charset charsetnam name request charset canon name alia charset object name charset
Charset::newDecoder construct decod charset decod charset
